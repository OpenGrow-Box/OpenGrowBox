[{"id":"87bab898757000a2","type":"tab","label":"FlowerCtrl","disabled":false,"info":"","env":[]},{"id":"0963c29ce537e39b","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["180eab0539ef4f5b","1e5ab4d1f342f560","78de53c8bb55e403","d37ecd3c5f82cdbc","c1e70d8332a5d4e4","da916caa4c612842","a2491093273ea707","d7c32aa823e497df","11736a563bfcb495"],"x":24,"y":1279,"w":802,"h":462},{"id":"4befb05d0b17e374","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["3dc9161dfd6e5534","98e42d2ad5e5912a","5e18db466a3e6872","06e8d2e8f44c934e","22de82672fafd826","e1181ae60d3e758c","fe43d7cf9ec8a24d","c5cca71c144d6253","8c80439016556aa3","a141a10ad2f010bb"],"x":2134,"y":1379,"w":692,"h":242},{"id":"7b4f8e1927d324fc","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["bc1b257f3ef85179","716288056c7fa845","e3b89882bbab368d","9c1bbc9685dc858c","d627c246df74b5d7","ce9c357652d8fb35","aa5773a7762ec6a1","202dcc5ae6d834d0"],"x":2134,"y":1619,"w":642,"h":202},{"id":"570df94b7b8fd3db","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["afeb5423a6f3b5db","bab58a1e055f1530","fb64d5b83ef0f886","718bc098c204f567","1fc52b3283aabd93","cf64ead2f0f9c53f","7856db1b9077bca0","5e2b8fb494e4ebfe","c621846474f32add"],"x":34,"y":2659,"w":712,"h":382},{"id":"6abebfeb172743b0","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["f1b0b6e3183aaeab","2e49f2a877dc0908","80e2dd98aaacafeb","e878287b07f180fd","78d116b1f17e53a9","cb901688be6c0de1","546819f8bcf743d9","7b3614a53b99b56b","e6b2c630db705db7","a7faaa78e3ab3a02"],"x":34,"y":3619,"w":732,"h":422},{"id":"2a37f65b72394049","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["33ec8a5f3c05962b","86b2ec1b10c4c0f3","7365db5b05b0cdad","5621782b9ee9ac2e","7b5ea2872188430d","55da67fef2acad51"],"x":834,"y":1239,"w":452,"h":342},{"id":"1a459c099aab5c42","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["6cabaff09a9fa85a","8ba8b97980f98d4e","24cec488a394f147","cdabbf668a463011","7b1434a24c5c2d0a","6dc8f908895b8048","24a35980a67b1b86","b5fcb9fc8354bcab","ce4696697eb9cc47","fc7309bac2a5580d","3dbeae382f71f092","ea181fad67e4609d","330a5b405ad89acf","4071ade6426af61b","6077fa1071b64972","a057a5f182e73de8","de57249fcd512509","c4d9642cd60ee3b5","34b3481968acc628","5f10e37424012087","7b33e1fa9654de02","194edf344188f8d1","f1ea259d4cd1ad73"],"x":814,"y":399,"w":572,"h":802},{"id":"684260cd34e37219","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["4675a31b7d62a521","e352eb9ec5f51329","fc63cad79428afc6","1d43ba5bea872eea","650d94e8238e269e","b343362282198e73","e26a880fb2d24667","464b23e70cf844c8","fae02ab1f3ce0e63","e9088dc392b5024f","01d5f2b84873c638","eb72ffdb8d671839","da4a10ce600a3a02","97fb7c5e5e3f9dee","c6f9196bc280b4e5","b5a693bcd77d4f80","8a884fe39e4f1e3c","54b1d8a63e1902a7","47249219e55b6920","3d4627f3225a086b","d51dc8176bf8690e","a96ccda7addd1614"],"x":634,"y":19,"w":1252,"h":342},{"id":"952a4bc7dff3f66a","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["90e7d66de4e646ed","dcc4f2b4266ce2c9","75cd81ac71068cbe","f2d5e7c61c28de89","34e2ea1867e751f9","ea836fad7734354a","1f21fdc068ba4fdd"],"x":2274,"y":39,"w":992,"h":202},{"id":"ce767c02a63518b7","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["3731cbf407c0b582","5fb4f622e1888911","db565609719f939d","d86e3407a4f640f9","6ac56048b94fbe2b","ad74f1401fcdda47","c28198e6ee968dbf"],"x":2144,"y":2279,"w":602,"h":142},{"id":"75e4485df1891a48","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["368db6c2f4f4d498","4dc00bfeca4e9f9c","0f18ff02508e83b5","1629a3eede211acb","2905c68663ec85a2","e81dd2a56311b77e","3f8dbd73b5bb9e6c"],"x":2134,"y":2419,"w":582,"h":142},{"id":"e0a33e236acb9fce","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["e19fe2e2cc5cff60","7e84a5229b144751","e6959e18c970d2ee","f1ed96c84b1e46e1","abef1da1656fea02","31111db19484adb6"],"x":2134,"y":1859,"w":632,"h":142},{"id":"061837895c818d51","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["3e45530d280cf155","2f23a6ca2ee4971d","61f9a529b1e29ab0","6eecb00d9bcacb3d","59fa1f2f5f6e1a32","9646a423e2e18b94"],"x":2144,"y":1999,"w":612,"h":142},{"id":"374f076dd54d7035","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["269511b2f57d40dd","75633ac2d9ec29c2","21b676be5c79f43f","b3c3886b83a0ea6f","7841516b38ab2a6b","a0e6583e1313d4c6"],"x":2144,"y":2139,"w":622,"h":142},{"id":"5cb542e9b231668c","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["42e2c72bda596b85","4205dce0f9b43395","9c3fc299c316d9df","b450272b0a6bfb38","4ad596727315ba0c","f2694e0f9513439f","d6d07d605b509b9f","a5f2fd8bd4de83da","2b8aa6fa4287146b","db42c984cfc3c6eb"],"x":794,"y":2199,"w":692,"h":242},{"id":"81987266af5b5d0f","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["c742defbf802bbdb","ce80e74b4f0c3169","c6952828beed3687","06864fcb48ef67bd","bb300e0ced84c184","375d779e0949166d","d7e52f9a26275fcb","00c07247d78e056a"],"x":794,"y":2439,"w":642,"h":202},{"id":"1abfd968b5c48b59","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["47ffae24b00b2672","c5631d44ded643ff","08978e67fee76396","5be20b2b7060736e","ea193e9a809dd292","63f114603d508df6","4b24403b907dc49b"],"x":804,"y":3099,"w":602,"h":142},{"id":"17d639c2d653b0d0","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["0d493677b323115e","625af5ab649384e9","af2f0286e736ba9e","fa3936a3af582bbe","3def191c75fd10fb","5885ac0314c899cd","9dd23f1ec5c1b9af"],"x":814,"y":3259,"w":582,"h":142},{"id":"baea7e0570065c00","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["38063a14958a4bb2","5bcd88519979bcf2","871841fd35ad901a","e38feae8aeb3e604","d8fd91bf4fabc3c5","a2808d700e0c9aec"],"x":794,"y":2659,"w":632,"h":142},{"id":"0d9a6eb3f7c88499","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["cb5dc0c35fcb1d14","1edf2bc707797373","61c54cc3b330ae33","fc9c48027aed9dfd","29c058ed777577ad","c09cffbee09fcb77"],"x":804,"y":2819,"w":612,"h":142},{"id":"c44580117a7fcb7a","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["1ec492ebf534af74","0c161b5cfee11cf3","2aa9227a3c950e0b","0b366bfd2dbe21b8","15a88cdb06cd6786","eb765bd6a74a15c1"],"x":804,"y":2959,"w":622,"h":142},{"id":"34aef9ddeaf4182a","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["94bfb7e91f8b5674","86b38ecb7d5a7f2f","d82a5348498d94b9","17d2dff4e6e6b9d5","e705047b1a410ff1","78ae52d514d16f60","823cc06908fe0581","4b3658d446c38c96","d4df1bd0d38045a5","5dcc5c3453990a99"],"x":814,"y":3439,"w":692,"h":282},{"id":"b0265c6efd223fe2","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["928397ec435b4776","bfbd9b30c217d194","5250abb0abece036","ea36d3f7b30be7af","e4d7bc16f411e836","e8d14de801bad46b","b6d8036882fb0315","70b503d9f70be854"],"x":814,"y":3719,"w":642,"h":202},{"id":"b2941bd36f42936c","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["d5ef25611722e6a9","cef9d65266276d66","8e161a20289c233c","9f9443e6d4c2c609","a6778dbdae56c316","d8109ab529567d6e","749b4d1c28ac4963"],"x":824,"y":4379,"w":602,"h":142},{"id":"12d89e0a67715ef8","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["97e779233af476c5","f46b666e01621da8","64086f50f3158f39","ad5822edfe94c662","bb58b49ed058723c","98d32b41f170df22","eabc5afdc7486d58"],"x":834,"y":4539,"w":582,"h":142},{"id":"924791273d1f0464","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["373403c70d18ed2e","0550e27bc4f11b6f","37cea002b8b4bca6","2a9f9087dc56f131","6e03a74882a0defb","056359bb9ab228ce"],"x":814,"y":3939,"w":632,"h":142},{"id":"07e412f9e1dd538e","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["b64058966bc2b03a","26cedfa8d1203037","623303e267deef2d","398f75acb586fac8","7bf434e4292d2327","c1b24bccf2e7d5a7"],"x":824,"y":4099,"w":612,"h":142},{"id":"bfb1374fcf5b48b9","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["faf00348be972d39","303dad00f2afe923","36903ebd466f326d","3df780562aaccd0e","d2ed257429706836","e6f79e1c57373dcd"],"x":824,"y":4239,"w":622,"h":142},{"id":"709f15e79c3e231e","type":"junction","z":"87bab898757000a2","x":360,"y":800,"wires":[["6f852176198d67b8","0d648d1a287b160d","7b33e1fa9654de02"]]},{"id":"006d6dc52bbe29da","type":"junction","z":"87bab898757000a2","x":360,"y":760,"wires":[["f400654d457ab0af","79bde8bec83cb56a","fc7309bac2a5580d"]]},{"id":"ad366fe75322e5d3","type":"junction","z":"87bab898757000a2","x":360,"y":720,"wires":[["349dcfebcd7877da","9d125ce221658824","ce4696697eb9cc47"]]},{"id":"e6c1ccc1e8bf4243","type":"junction","z":"87bab898757000a2","x":360,"y":680,"wires":[["8d95d41fedb12bda","f76573c680abe051","5f10e37424012087"]]},{"id":"95cfd8479db6cdb6","type":"junction","z":"87bab898757000a2","x":360,"y":640,"wires":[["0a1295920208c384","c4d9642cd60ee3b5"]]},{"id":"72f71ec5f3b106d5","type":"junction","z":"87bab898757000a2","x":360,"y":580,"wires":[["e4b5460d3febe1a2","6dc8f908895b8048"]]},{"id":"dd5b4ad7e458c3f6","type":"junction","z":"87bab898757000a2","x":360,"y":540,"wires":[["18c34d8b20c39f73","24a35980a67b1b86"]]},{"id":"b8d42bdbb97224c9","type":"junction","z":"87bab898757000a2","x":360,"y":480,"wires":[["cee884061f3f2261","a057a5f182e73de8"]]},{"id":"310608ec1d45fcb2","type":"junction","z":"87bab898757000a2","x":360,"y":440,"wires":[["0d29d605591497f4","8ba8b97980f98d4e"]]},{"id":"ae7ddd31bbfb2985","type":"junction","z":"87bab898757000a2","x":360,"y":400,"wires":[["9865254487956201","24cec488a394f147"]]},{"id":"a0aeced795617438","type":"junction","z":"87bab898757000a2","x":360,"y":360,"wires":[["1d22f5d38d2f029b","7b1434a24c5c2d0a"]]},{"id":"7b717655bc69afdc","type":"junction","z":"87bab898757000a2","x":360,"y":320,"wires":[["a46594e2514f068e","b5fcb9fc8354bcab"]]},{"id":"802c582eb02146c9","type":"junction","z":"87bab898757000a2","x":360,"y":280,"wires":[["79fa901ba76691b8","cdabbf668a463011"]]},{"id":"8b78835f54a976ce","type":"junction","z":"87bab898757000a2","x":360,"y":240,"wires":[["9f322326faf32502"]]},{"id":"b769596a4bbc4607","type":"junction","z":"87bab898757000a2","x":360,"y":200,"wires":[["5974b167ebb2f9e4","4675a31b7d62a521"]]},{"id":"ad196bb7c36068ab","type":"junction","z":"87bab898757000a2","x":360,"y":160,"wires":[["4302d5e5f0144f64","4675a31b7d62a521"]]},{"id":"1ded9b8984de496a","type":"junction","z":"87bab898757000a2","x":360,"y":120,"wires":[["dfe1f213a50dabe8"]]},{"id":"69d2bbbaa57da104","type":"link in","z":"87bab898757000a2","name":"FlowerCtrl","links":["43ca19d80e63515d"],"x":55,"y":40,"wires":[["1bb8e9448a5f14de"]]},{"id":"1bb8e9448a5f14de","type":"debug","z":"87bab898757000a2","name":"FlowerTentData","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":180,"y":40,"wires":[]},{"id":"b9dfb243cc1af1b4","type":"link in","z":"87bab898757000a2","name":"FlowerLive","links":["e0e6fce7027c2e26"],"x":55,"y":80,"wires":[["bf6cdb0a0d2077a0","56aa552840d3803d"]]},{"id":"bf6cdb0a0d2077a0","type":"debug","z":"87bab898757000a2","name":"FlowerTentLiveData","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":190,"y":80,"wires":[]},{"id":"4675a31b7d62a521","type":"join","z":"87bab898757000a2","g":"684260cd34e37219","name":"VpdNeeds","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":740,"y":100,"wires":[["da4a10ce600a3a02"]]},{"id":"e352eb9ec5f51329","type":"function","z":"87bab898757000a2","g":"684260cd34e37219","name":"TentModesSetup","func":"// Initialisiert das Array für die Ausgänge mit Nullen\nlet outputs = [null, null, null, null, null ];\n\n// Überprüft den Zustand des eingehenden Payloads und setzt den entsprechenden Ausgang\nif (msg.payload === \"VPD Perfection\") {\n    return [{ payload: msg.payload, topic: \"Perfection\" }, null, null, null,null];\n}\nelse if (msg.payload === \"IN-VPD-Range\") {\n    return [null, { payload: msg.payload, topic: \"IN-VPD-Range\" }, null, null, null];\n}\nelse if (msg.payload === \"Targeted VPD\") {\n    return [null, null, { payload: msg.payload, topic: \"TargetedVPD\" }, null, null];\n}\nelse if (msg.payload === \"CropSteering\") {\n    return [null, null, null, { payload: msg.payload, topic: \"ModeDisabeld\" }, null ];\n}\nelse if (msg.payload === \"Disabled\") {\n    return [null, null, null, null, { payload: msg.payload, topic: \"ModeDisabeld\" }];\n}\n\n// Wenn keine Bedingungen zutreffen, sendet nichts\nreturn [null, null, null, null,null];\n","outputs":5,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1650,"y":220,"wires":[["b343362282198e73"],["e26a880fb2d24667"],["464b23e70cf844c8"],["a96ccda7addd1614"],["fc63cad79428afc6"]]},{"id":"fc63cad79428afc6","type":"function","z":"87bab898757000a2","g":"684260cd34e37219","name":"DISABLED AUTO","func":"msg.payload=\"DISABLED FLOWER\"\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1650,"y":280,"wires":[["1d43ba5bea872eea"]]},{"id":"1d43ba5bea872eea","type":"debug","z":"87bab898757000a2","g":"684260cd34e37219","name":"debug 118","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1630,"y":320,"wires":[]},{"id":"650d94e8238e269e","type":"api-current-state","z":"87bab898757000a2","g":"684260cd34e37219","name":"TentMode","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"select.nodered_966c8337df68a0db","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"TentMode","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1520,"y":120,"wires":[["e352eb9ec5f51329"]]},{"id":"b343362282198e73","type":"link out","z":"87bab898757000a2","g":"684260cd34e37219","name":"VPD-Perfektion","mode":"link","links":["1e5ab4d1f342f560"],"x":1845,"y":140,"wires":[]},{"id":"e26a880fb2d24667","type":"link out","z":"87bab898757000a2","g":"684260cd34e37219","name":"IN-Range-VPD","mode":"link","links":["f904b999069f9166","bab58a1e055f1530"],"x":1845,"y":180,"wires":[]},{"id":"180eab0539ef4f5b","type":"comment","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"VPD-Perfektion","info":"","x":140,"y":1320,"wires":[]},{"id":"1e5ab4d1f342f560","type":"link in","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"VPD-Perfektion","links":["b343362282198e73"],"x":65,"y":1380,"wires":[["d37ecd3c5f82cdbc"]]},{"id":"78de53c8bb55e403","type":"function","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"VPD State Values","func":"const plantStages = {\n    Germination: [0.42, 0.78], // Optimaler VPD-Bereich für Keimung bei 25-30°C\n    Clones: [0.42, 0.78],      // Optimaler VPD-Bereich für Klone bei 25-30°C\n    EarlyVeg: [0.55, 0.85],    // Optimaler VPD-Bereich für frühe Vegetation bei 20-25°C\n    MidVeg: [0.85, 1.1],      // Optimaler VPD-Bereich für mittlere Vegetation bei 20-25°C\n    LateVeg: [0.85, 1.2],     // Optimaler VPD-Bereich für späte Vegetation bei 20-25°C\n    EarlyFlower: [1, 1.25], // Optimaler VPD-Bereich für frühe Blüte bei 20-25°C\n    MidFlower: [1.1, 1.4],   // Optimaler VPD-Bereich für mittlere Blüte bei 20-25°C\n    LateFlower: [1.2, 1.6],  // Optimaler VPD-Bereich für späte Blüte bei 20-25°C\n};\n\n\n// Beispiel, wie msg.payload gesetzt wird\n// msg.payload = \"LateVeg\"; // Kommentieren Sie diese Zeile aus, um den tatsächlichen msg.payload zu verwenden\n\n// Prüfen, ob das Wachstumsstadium im plantStages-Objekt vorhanden ist\nif (plantStages.hasOwnProperty(msg.payload)) {\n    // Setzen des VPD-Wertes aus dem plantStages-Objekt\n    msg.payload = plantStages[msg.payload];\n} else {\n    // Fehlermeldung, wenn das Wachstumsstadium nicht gefunden wurde\n    msg.payload = \"Unbekanntes Wachstumsstadium\";\n\n}\nmsg.perfection = \"VPDStageValue\"\ndelete msg.data;\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":470,"y":1380,"wires":[["c1e70d8332a5d4e4","33ec8a5f3c05962b"]]},{"id":"d37ecd3c5f82cdbc","type":"api-current-state","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"FlowerTentSelection","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"select.flowertent","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"targetVPD","valueType":"str"},{"property":"perfection","propertyType":"msg","value":"targetVPD","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":240,"y":1380,"wires":[["78de53c8bb55e403"]]},{"id":"afeb5423a6f3b5db","type":"comment","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"IN-RANGE-VPD","info":"","x":140,"y":2700,"wires":[]},{"id":"f1b0b6e3183aaeab","type":"comment","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"Targeted-VPD","info":"","x":130,"y":3660,"wires":[]},{"id":"169da9767a08464e","type":"comment","z":"87bab898757000a2","name":"Cropsteering","info":"","x":190,"y":4760,"wires":[]},{"id":"464b23e70cf844c8","type":"link out","z":"87bab898757000a2","g":"684260cd34e37219","name":"TargetedVPD","mode":"link","links":["500730d0af5e7cbf","78d116b1f17e53a9"],"x":1845,"y":220,"wires":[]},{"id":"fae02ab1f3ce0e63","type":"comment","z":"87bab898757000a2","g":"684260cd34e37219","name":"TentModes","info":"","x":1700,"y":160,"wires":[]},{"id":"e9088dc392b5024f","type":"ha-sensor","z":"87bab898757000a2","g":"684260cd34e37219","name":"FlowerAVGHum","entityConfig":"532f3d1e489722da","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1080,"y":240,"wires":[["8a884fe39e4f1e3c"]]},{"id":"01d5f2b84873c638","type":"ha-sensor","z":"87bab898757000a2","g":"684260cd34e37219","name":"FlowerAVGTemp","entityConfig":"edc405a70462ce85","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1090,"y":180,"wires":[["8a884fe39e4f1e3c"]]},{"id":"eb72ffdb8d671839","type":"ha-sensor","z":"87bab898757000a2","g":"684260cd34e37219","name":"currentVPD","entityConfig":"1a9ed93138063774","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1350,"y":140,"wires":[["650d94e8238e269e"]]},{"id":"da4a10ce600a3a02","type":"function","z":"87bab898757000a2","g":"684260cd34e37219","name":"Calc-AVG","func":"// Funktion zur Berechnung des Durchschnitts\nconst AvgTemp = (temps) => {\n    let sum = 0;\n    let count = 0;\n\n    temps.forEach((entry) => {\n        const temp = parseFloat(entry.value);\n        if (!isNaN(temp)) {\n            sum += temp;\n            count++;\n        }\n    });\n\n    if (count === 0) {\n        return \"unavailable\";\n    }\n\n    const avg = sum / count;\n    return avg.toFixed(2);\n};\n\n// Durchschnittstemperatur für jede Temperaturkategorie berechnen\nconst temperatureAvg = AvgTemp(msg.payload.temperature);\nconst humidityAvg = AvgTemp(msg.payload.humidity);\n\n// Objekt mit den Durchschnittswerten erstellen\nconst avgData = {\n    AvgTempData: temperatureAvg,\n    AvgHumData: humidityAvg\n};\n\n// Nachrichten erstellen und zurückgeben\nconst avgDataMsg = { payload: avgData, topic: \"AvgData\" };\nconst tempMsg = { payload: temperatureAvg, topic: \"AvgTemp\" };\nconst humMsg = { payload: humidityAvg, topic: \"AvgHum\" };\n\nreturn [avgDataMsg, tempMsg, humMsg];\n","outputs":3,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":780,"y":180,"wires":[["47249219e55b6920"],["01d5f2b84873c638"],["e9088dc392b5024f"]]},{"id":"97fb7c5e5e3f9dee","type":"function","z":"87bab898757000a2","g":"684260cd34e37219","name":"VPD Calc ","func":"function calculateVPD(luftTemperatur, blattTemperatur, relativeLuftfeuchtigkeit) {\n    // Stellen Sie sicher, dass alle Eingaben Zahlen sind\n    luftTemperatur = parseFloat(luftTemperatur);\n    blattTemperatur = parseFloat(blattTemperatur);\n    relativeLuftfeuchtigkeit = parseFloat(relativeLuftfeuchtigkeit);\n\n    // Überprüfen Sie, ob einer der Werte NaN ist\n    if (isNaN(luftTemperatur) || isNaN(blattTemperatur) || isNaN(relativeLuftfeuchtigkeit)) {\n        return NaN; // Geändert von \"unavailable\" zu NaN für bessere Handhabung in numerischen Berechnungen\n    }\n\n    // Berechnungen ohne Rundung\n    let sdpLuft = 0.6108 * Math.exp((17.27 * luftTemperatur) / (luftTemperatur + 237.3));\n    let sdpBlatt = 0.6108 * Math.exp((17.27 * blattTemperatur) / (blattTemperatur + 237.3));\n    let adp = (relativeLuftfeuchtigkeit / 100) * sdpLuft;\n    let vpd = sdpBlatt - adp;\n\n    // Rückgabe als number, nicht als string\n    return parseFloat(vpd.toFixed(2));\n}\n\n// Beispiel für die Verwendung der Funktion\nlet luftTemperatur = parseFloat(msg.payload.AvgData.AvgTempData); // Stellen Sie sicher, dass dies eine Zahl ist\nlet blattTemperatur = parseFloat(msg.payload.AvgData.AvgTempData) - parseFloat(msg.payload.LeafOffSet); // Keine Rundung, genaue Berechnung\nlet relativeLuftfeuchtigkeit = parseFloat(msg.payload.AvgData.AvgHumData); // Stellen Sie sicher, dass dies eine Zahl ist\n\nlet vpd = calculateVPD(luftTemperatur, blattTemperatur, relativeLuftfeuchtigkeit);\n\nmsg.payload = vpd; // Nun ist msg.payload eine Zahl\nmsg.topic = \"currentVPD\"\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1180,"y":120,"wires":[["eb72ffdb8d671839"]]},{"id":"c6f9196bc280b4e5","type":"comment","z":"87bab898757000a2","g":"684260cd34e37219","name":"VPD-Creation","info":"","x":750,"y":60,"wires":[]},{"id":"c1e70d8332a5d4e4","type":"join","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"VPDWish","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":410,"y":1460,"wires":[["da916caa4c612842"]]},{"id":"da916caa4c612842","type":"function","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"VPD Handler Array Value","func":"const tolerance = 0.00; // Toleranzwert für die VPD-Anpassung\n\n// Der aktuelle VPD-Wert wird aus dem Payload geholt und in eine Zahl umgewandelt.\nconst currentVPD = parseFloat(msg.payload.currentVPD);\n\n// Ziel-VPD-Bereich wird aus dem Payload geholt.\nconst targetVPDRange = msg.payload.targetVPD;\n\n// Logging der aktuellen VPD und Ziel-VPD-Bereich zur Überprüfung und Debugging.\nnode.warn(`Flower-VPD array between: ${targetVPDRange[0]} and ${targetVPDRange[1]}`);\n\n// Berechnung der prozentualen Abweichung vom Ziel-VPD und Rundung auf ganze Zahlen\nconst percentDifference = Math.round(currentVPD < targetVPDRange[0] \n    ? ((currentVPD - targetVPDRange[0]) / targetVPDRange[0]) * 100 \n    : ((currentVPD - targetVPDRange[1]) / targetVPDRange[1]) * 100);\n\n// Funktion zur Berechnung der notwendigen Anpassungen basierend auf der Differenz zum VPD-Zielbereich.\nfunction calculateAdjustment(currentVPD, targetVPDRange) {\n    // Wenn der aktuelle VPD unter dem minimalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu erhöhen.\n    if (currentVPD < targetVPDRange[0] - tolerance) {\n        node.warn(`Flower-VPD:: ${currentVPD} zu gering. Erhöhe Temp oder verringere die Feuchtigkeit`);\n        node.warn(`Flower % VPD Target: ${percentDifference} %`);\n        return {\n            exhaustSpeed: \"increased\",      // Erhöht die Abluftgeschwindigkeit, um feuchte Luft herauszuziehen\n            humidifier: \"reduced\",          // Schaltet den Luftbefeuchter aus, um Feuchtigkeit zu reduzieren\n            dehumidifier: \"increased\",       // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            heaterFan: \"increased\",         // Schaltet den Beheizer an, um die Feuchtigkeit zu reduzieren und Temp zu erhöhen\n            coolerFan: \"reduced\",           // Schaltet den Kühler an, um die Feuchtigkeit zu erhöhen und Temp zu verringern\n            ventsALL: \"increased\",          // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsTopSpeed: \"increased\",     // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsDownSpeed: \"increased\",    // Erhöht die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"increased\"     // Erhöht die Lichtintensität, um die Temperatur zu steigern (wenn das die Temperatur beeinflusst)\n        };\n        \n    }\n    // Wenn der aktuelle VPD über dem maximalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu senken.\n    else if (currentVPD > targetVPDRange[1] + tolerance) {\n        node.warn(`Flower-VPD: ${currentVPD} zu hoch. Verringere Temp oder erhöhe die Feuchtigkeit`);\n        node.warn(`Flower % VPD Target: ${percentDifference} %`);\n        return {\n            exhaustSpeed: \"reduced\",    // Reduziert die Abluftgeschwindigkeit, hält feuchte Luft im Raum\n            humidifier: \"increased\",    // Schaltet den Luftbefeuchter ein, um Feuchtigkeit zu erhöhen\n            dehumidifier: \"reduced\",    // Schaltet den Luftentfeuchter aus, um Feuchtigkeit zu erhöhen\n            heaterFan: \"reduced\",       // Schaltet den Heizer aus, um die Temperatur zu verringern\n            coolerFan: \"increased\",     // Schaltet den Kühler an, um die Temperatur zu verringern\n            ventsALL: \"reduced\",        // Reduziert die Geschwindigkeit der Belüftung, um mehr feuchte Luft zu halten\n            ventsTopSpeed: \"reduced\",   // Reduziert die Geschwindigkeit der oberen Belüftung\n            ventsDownSpeed: \"reduced\",  // Reduziert die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"reduced\"   // Verringert die Lichtintensität, um die Temperatur zu senken (wenn das die Temperatur beeinflusst)\n        };\n    }\n    // Wenn der VPD im Zielbereich liegt, sind keine Anpassungen erforderlich.\n    node.warn(`Flower-VPD: ${currentVPD} im gewünschten Bereich`);\n    return {\n        exhaustSpeed: \"unchanged\",\n        humidifier: \"unchanged\",\n        dehumidifier: \"unchanged\",    \n        heaterFan: \"unchanged\",        \n        coolerFan: \"unchanged\",        \n        ventsALL: \"unchanged\",       \n        ventsTopSpeed: \"unchanged\",\n        ventsDownSpeed: \"unchanged\",\n        lightIntensity: \"unchanged\"\n    };\n}\n\n// Entscheidungslogik zur Steuerung der Umgebungsbedingungen, nutzt die calculateAdjustment Funktion.\nconst adjustments = calculateAdjustment(currentVPD, targetVPDRange);\n\n// Berechnung der prozentualen Abweichung und Hinzufügen zum Payload\nmsg.payload = {\n    exhaustSpeed: adjustments.exhaustSpeed,\n    humidifier: adjustments.humidifier,\n    dehumidifier: adjustments.dehumidifier,\n    heaterFan: adjustments.heaterFan,\n    coolerFan: adjustments.coolerFan,\n    ventsALL: adjustments.ventsALL,\n    ventsTopSpeed: adjustments.ventsTopSpeed,\n    ventsDownSpeed: adjustments.ventsDownSpeed,\n    lightIntensity: adjustments.lightIntensity,\n    percentDifference: percentDifference\n};\n\nmsg.perfektion = \"VPDActions\";\n\n// Rückgabe des modifizierten Payloads für weitere Verwendung im Flow.\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":670,"y":1460,"wires":[["a2491093273ea707","33ec8a5f3c05962b"]]},{"id":"a2491093273ea707","type":"function","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"Check What Do","func":"let outputs = [null, null, null, null, null, null, null, null, null];\n\nvar percentDifference = msg.payload.percentDifference\n\n// Abluft\nif (msg.payload.exhaustSpeed === \"unchanged\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"increased\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"reduced\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n}\n\n// Humidifier\nif (msg.payload.humidifier === \"unchanged\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"increased\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"reduced\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n}\n\n// Dehumidifier\nif (msg.payload.dehumidifier === \"unchanged\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"increased\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"reduced\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n}\n\n// HeaterFan\nif (msg.payload.heaterFan === \"unchanged\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"increased\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"reduced\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n}\n\n// CoolerFan\nif (msg.payload.coolerFan === \"unchanged\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"increased\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"reduced\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n}\n\n// LightIntensity\nif (msg.payload.lightIntensity === \"unchanged\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"increased\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"reduced\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n}\n\n// VentsALL\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"increased\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"reduced\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n}\n\n// VentsTopSpeed\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"increased\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"reduced\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n}\n\n// VentsDownSpeed\nif (msg.payload.ventsDownSpeed === \"unchanged\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"increased\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"reduced\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n}\n\n\n\nreturn outputs;\n","outputs":9,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":700,"y":1560,"wires":[["d7c32aa823e497df","06e8d2e8f44c934e"],["d7c32aa823e497df","716288056c7fa845"],["d7c32aa823e497df","7e84a5229b144751"],["d7c32aa823e497df","2f23a6ca2ee4971d"],["d7c32aa823e497df","269511b2f57d40dd"],["d7c32aa823e497df","3731cbf407c0b582"],["d7c32aa823e497df","4dc00bfeca4e9f9c"],["d7c32aa823e497df","4dc00bfeca4e9f9c"],["4dc00bfeca4e9f9c"]]},{"id":"33ec8a5f3c05962b","type":"join","z":"87bab898757000a2","g":"2a37f65b72394049","name":"perfection","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"perfection","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"3","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":930,"y":1280,"wires":[["5621782b9ee9ac2e","86b2ec1b10c4c0f3"]]},{"id":"86b2ec1b10c4c0f3","type":"function","z":"87bab898757000a2","g":"2a37f65b72394049","name":"Make Perfekt VPD","func":"const tolerance = 0.025; // Toleranzwert für die VPD-Anpassung\nnode.warn(msg.payload.currentVPD);\n// Berechnet den durchschnittlichen Wert aus zwei Zahlen im Array VPDStageValue und begrenzt das Ergebnis auf zwei Dezimalstellen\nconst averageVPD = (msg.payload.VPDStageValue[0] + msg.payload.VPDStageValue[1]) / 2;\nconst perfectVPD = parseFloat(averageVPD.toFixed(3));\n\nconst currentVPD = parseFloat(msg.payload.currentVPD);\n\n// Build increase base of State % diffrence from Current VPD to avarangeVPD\n// Berechnung der prozentualen Abweichung vom Ziel-VPD\nconst percentDifference = ((currentVPD - perfectVPD) / perfectVPD) * 100;\n\n\n\n// IF not in Range Do Nothing\nif (currentVPD < msg.payload.VPDStageValue[0] || currentVPD > msg.payload.VPDStageValue[1]){\n    return\n}\n// Warnung über die prozentuale Abweichung\nnode.warn(`Perfect-VEGGI %  ${percentDifference.toFixed(2)}%`);\nnode.warn(`Perfect-Veggi-Current VPD: ${currentVPD}`);\nnode.warn(`Perfect-Veggi-Target-VPD: ${perfectVPD} with ${tolerance} Tolerance`);\n\n\n\n// Funktion zur Berechnung der notwendigen Anpassungen basierend auf der Differenz zum VPD-Zielbereich.\nfunction calculateAdjustment(currentVPD, perfectVPD) {\n    // Wenn der aktuelle VPD unter dem minimalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu erhöhen.\n    if (currentVPD < perfectVPD - tolerance) {\n        node.warn(`Perfect-Veggi-VPD:: ${currentVPD} zu Gering Erhöe Temp oder veringere die Feuchtikeit`);\n        return {\n            exhaustSpeed: \"increased\",      // Erhöht die Abluftgeschwindigkeit, um feuchte Luft herauszuziehen\n            humidifier: \"reduced\",          // Schaltet den Luftbefeuchter aus, um Feuchtigkeit zu reduzieren\n            dehumidifier: \"increased\",       // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            heaterFan: \"increased\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Reduzieren und Temp zu erhöhen\n            coolerFan: \"reduced\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Erhöhen und Temp zu veringern\n            ventsTopSpeed: \"increased\",     // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsDownSpeed: \"increased\",    // Erhöht die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"increased\"     // Erhöht die Lichtintensität, um die Temperatur zu steigern (wenn das die Temperatur beeinflusst)\n        };\n        \n    }\n    // Wenn der aktuelle VPD über dem maximalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu senken.\n    else if (currentVPD > perfectVPD + tolerance) {\n        node.warn(`Perfect-Veggi-VPD: ${currentVPD} zu hoch verringere Temp oder erhöe die Feuchtikeit`);\n        return {\n            exhaustSpeed: \"reduced\",    // Reduziert die Abluftgeschwindigkeit, hält feuchte Luft im Raum\n            humidifier: \"increased\",           // Schaltet den Luftbefeuchter ein, um Feuchtigkeit zu erhöhen\n            dehumidifier: \"reduced\",       // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            heaterFan: \"reduced\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Reduzieren und Temp zu erhöhen\n            coolerFan: \"increased\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Erhöhen und Temp zu veringern\n            ventsTopSpeed: \"reduced\",   // Reduziert die Geschwindigkeit der oberen Belüftung\n            ventsDownSpeed: \"reduced\",  // Reduziert die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"reduced\"      // Verringert die Lichtintensität, um die Temperatur zu senken (wenn das die Temperatur beeinflusst)\n        };\n    }\n    // Wenn der VPD im Zielbereich liegt, sind keine Anpassungen erforderlich.\n             node.warn(`Perfect-Veggi-VPD: ${currentVPD} im Gewünschten Bereich`);\n    return {\n        exhaustSpeed: \"unchanged\",\n        humidifier: \"unchanged\",\n        dehumidifier: \"unchanged\",       // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n        heaterFan: \"unchanged\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Reduzieren und Temp zu erhöhen\n        coolerFan: \"unchanged\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Erhöhen und Temp zu veringern\n        ventsTopSpeed: \"unchanged\",\n        ventsDownSpeed: \"unchanged\",\n        lightIntensity: \"unchanged\"\n    };\n}\n\n// Entscheidungslogik zur Steuerung der Umgebungsbedingungen, nutzt die calculateAdjustment Funktion.\nconst adjustments = calculateAdjustment(currentVPD, perfectVPD);\nmsg.payload = {\n    exhaustSpeed: adjustments.exhaustSpeed,\n    humidifier: adjustments.humidifier,\n    dehumidifier: adjustments.dehumidifier,\n    heaterFan: adjustments.heaterFan,\n    coolerFan: adjustments.coolerFan,\n    ventsTopSpeed: adjustments.ventsTopSpeed,\n    ventsDownSpeed: adjustments.ventsDownSpeed,\n    lightIntensity: adjustments.lightIntensity,\n    percentDifference: percentDifference.toFixed(2)\n};\nmsg.perfektion = \"VPDActions\"\n\n// Rückgabe des modifizierten Payloads für weitere Verwendung im Flow.\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1130,"y":1360,"wires":[["7365db5b05b0cdad","55da67fef2acad51"]]},{"id":"d7c32aa823e497df","type":"debug","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"debug 137","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":710,"y":1700,"wires":[]},{"id":"7365db5b05b0cdad","type":"function","z":"87bab898757000a2","g":"2a37f65b72394049","name":"Check What Do","func":"let outputs = [null, null, null, null, null, null, null, null, null];\n\nvar percentDifference = msg.payload.percentDifference\n\n// Abluft\nif (msg.payload.exhaustSpeed === \"unchanged\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"increased\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"reduced\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n}\n\n// Humidifier\nif (msg.payload.humidifier === \"unchanged\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"increased\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"reduced\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n}\n\n// Dehumidifier\nif (msg.payload.dehumidifier === \"unchanged\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"increased\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"reduced\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n}\n\n// HeaterFan\nif (msg.payload.heaterFan === \"unchanged\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"increased\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"reduced\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n}\n\n// CoolerFan\nif (msg.payload.coolerFan === \"unchanged\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"increased\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"reduced\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n}\n\n// LightIntensity\nif (msg.payload.lightIntensity === \"unchanged\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"increased\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"reduced\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n}\n\n// VentsALL\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"increased\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"reduced\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n}\n\n// VentsTopSpeed\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"increased\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"reduced\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n}\n\n// VentsDownSpeed\nif (msg.payload.ventsDownSpeed === \"unchanged\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"increased\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"reduced\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n}\n\n\n\nreturn outputs;\n","outputs":9,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1160,"y":1460,"wires":[["06e8d2e8f44c934e","7b5ea2872188430d"],["716288056c7fa845","7b5ea2872188430d"],["7b5ea2872188430d","7e84a5229b144751"],["7b5ea2872188430d","2f23a6ca2ee4971d"],["7b5ea2872188430d","269511b2f57d40dd"],["7b5ea2872188430d","3731cbf407c0b582"],["7b5ea2872188430d","4dc00bfeca4e9f9c"],["7b5ea2872188430d","4dc00bfeca4e9f9c"],["4dc00bfeca4e9f9c","7b5ea2872188430d"]]},{"id":"3dc9161dfd6e5534","type":"function","z":"87bab898757000a2","g":"4befb05d0b17e374","name":"Exhaust Setup","func":"// Hilfsfunktion zur Überprüfung, ob ein Wert numerisch ist\nconst isNumeric = (value) => {\n    return !isNaN(parseFloat(value)) && isFinite(value);\n};\n\n// Funktion zur Bestimmung des dutyCycle-Werts\nconst findDutyCycle = (exhaustArray) => {\n    if (exhaustArray.length === 0) {\n        return null; // Keine Werte zu verarbeiten, wenn das Array leer ist\n    }\n    for (let i = 0; i < exhaustArray.length; i++) {\n        if (isNumeric(exhaustArray[i].value)) {\n            return parseInt(exhaustArray[i].value, 10);\n        }\n    }\n    return null; // Falls kein numerischer Wert gefunden wurde\n};\n\nlet outputs = [null, null, null, null]; // Array für vier Ausgänge\n\n// Zustand der Abluft und Geschwindigkeit aus der Payload extrahieren\nconst exhaustSpeed = msg.payload.exhaustSet.value; // Anpassung hier\nlet exhaustState = 'off'; // Standardwert setzen, falls kein Zustand gefunden wird\nif (msg.payload.Exhaust && msg.payload.Exhaust.length > 0) {\n    const exhaustSwitch = msg.payload.Exhaust.find(e => e.entity_id && e.entity_id.toLowerCase().includes(\"switch\"));\n    if (exhaustSwitch && exhaustSwitch.value) {\n        exhaustState = exhaustSwitch.value;\n    }\n}\n\nconst dutyCycle = findDutyCycle(msg.payload.Exhaust);\n\n// Prüfen, ob ein dutyCycle vorhanden ist\nif (dutyCycle === null) {\n    return outputs; // Kein dutyCycle gefunden, keine Aktion erforderlich\n}\n\nconst percentDifference = parseFloat(msg.payload.exhaustSet.percentDifference);\nlet newDutyCycle = dutyCycle;\n\n// Berechnung des neuen Duty Cycle basierend auf der prozentualen Abweichung\nif (percentDifference !== 0) {\n    if (percentDifference < 0) {\n        // Wenn der Wert negativ ist, erhöhen wir den Duty Cycle\n        newDutyCycle = dutyCycle + Math.abs(percentDifference);\n    } else {\n        // Wenn der Wert positiv ist, verringern wir den Duty Cycle\n        newDutyCycle = dutyCycle - percentDifference;\n    }\n\n    // Stellen Sie sicher, dass der neue Duty Cycle innerhalb der Grenzen liegt\n    newDutyCycle = Math.min(95, Math.max(10, Math.round(newDutyCycle)));\n}\n\n// Abluft starten auf dem ersten Ausgang, wenn sie aus ist und erhöht werden muss\nif (exhaustSpeed === \"increased\" && exhaustState === \"off\") {\n    outputs[0] = { payload: \"Starte Abluft\", topic: \"Start\" };\n    return outputs;\n}\n\n// Abluft-Geschwindigkeit erhöhen, wenn sie bereits eingeschaltet ist\nif (exhaustSpeed === \"increased\" && exhaustState === \"on\") {\n    outputs[2] = { payload: newDutyCycle.toString(), topic: \"Increase\" };\n    return outputs;\n}\n\n// Abluft stoppen auf dem zweiten Ausgang, wenn die Geschwindigkeit reduziert wird und der Duty Cycle sehr niedrig ist\nif (exhaustSpeed === \"reduced\" && exhaustState === \"on\" && newDutyCycle <= 10) {\n    outputs[1] = { payload: \"Stoppe Abluft\", topic: \"Stop\" };\n    return outputs;\n} else if (exhaustSpeed === \"reduced\" && exhaustState === \"on\") {\n    outputs[2] = { payload: newDutyCycle.toString(), topic: \"Decrease\" };\n    return outputs;\n}\n\n// Warnung ausgeben, wenn versucht wird, die Abluftgeschwindigkeit zu reduzieren, obwohl sie bereits aus ist\nif (exhaustSpeed === \"reduced\" && exhaustState === \"off\") {\n    outputs[1] = { payload: \"Abluft bereits gestoppt, kann nicht weiter reduziert werden\", topic: \"AlreadyStopped\" };\n    return outputs;\n}\n\n// Nichts tun, wenn keine Änderung erforderlich ist\nif (exhaustSpeed === \"unchanged\") {\n    outputs[3] = { payload: \"Abluft unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n    return outputs;\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2320,"y":1520,"wires":[["e1181ae60d3e758c","8c80439016556aa3"],["fe43d7cf9ec8a24d","8c80439016556aa3"],["5e18db466a3e6872","8c80439016556aa3"],["8c80439016556aa3"]]},{"id":"98e42d2ad5e5912a","type":"http request","z":"87bab898757000a2","g":"4befb05d0b17e374","name":"DutyPostChange","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.253:5533/air/ctrl","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":2710,"y":1540,"wires":[["c5cca71c144d6253"]]},{"id":"5e18db466a3e6872","type":"function","z":"87bab898757000a2","g":"4befb05d0b17e374","name":"DutyChanger","func":"\nconst NewDuty = msg.payload\n\nmsg.payload = { \"newDuty\": NewDuty}\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":2530,"y":1540,"wires":[["98e42d2ad5e5912a","c5cca71c144d6253"]]},{"id":"06e8d2e8f44c934e","type":"join","z":"87bab898757000a2","g":"4befb05d0b17e374","name":"exhasutData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":2240,"y":1460,"wires":[["3dc9161dfd6e5534","a141a10ad2f010bb"]]},{"id":"9d125ce221658824","type":"link out","z":"87bab898757000a2","name":"ExhaustData","mode":"link","links":["1aeeeda08043bd54","22de82672fafd826","7c5a646f225f4ab1","eb2c9d58dd38f1d2","4ad596727315ba0c","e705047b1a410ff1"],"x":635,"y":720,"wires":[]},{"id":"22de82672fafd826","type":"link in","z":"87bab898757000a2","g":"4befb05d0b17e374","name":"ExhaustData","links":["9d125ce221658824"],"x":2185,"y":1420,"wires":[["06e8d2e8f44c934e"]]},{"id":"79bde8bec83cb56a","type":"link out","z":"87bab898757000a2","name":"HumidifierData","mode":"link","links":["9c7dd5cc1ab3a56f","cd9a328a814e5484","e3b89882bbab368d","f37287fdb9a1391c","c6952828beed3687","5250abb0abece036"],"x":635,"y":760,"wires":[]},{"id":"bc1b257f3ef85179","type":"function","z":"87bab898757000a2","g":"7b4f8e1927d324fc","name":"BefeuchterSetup","func":"let outputs = [null, null]; // Array für zwei Ausgänge\n\nlet humidifierState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.humidifier.length; i++) {\n    if (msg.payload.humidifier[i].entity_id.includes('humidifier')) {\n        humidifierState = msg.payload.humidifier[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.humidifierSet.value === \"increased\" && humidifierState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.humidifierSet.value === \"reduced\" && humidifierState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.humidifierSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Befeuchter unverändert, keine Aktion erforderlich\",data:msg.payload, topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2490,"y":1720,"wires":[["ce9c357652d8fb35"],["aa5773a7762ec6a1"],["d627c246df74b5d7","aa5773a7762ec6a1","202dcc5ae6d834d0"],[]]},{"id":"716288056c7fa845","type":"join","z":"87bab898757000a2","g":"7b4f8e1927d324fc","name":"HumidityData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":2240,"y":1720,"wires":[["bc1b257f3ef85179","9c1bbc9685dc858c"]]},{"id":"e3b89882bbab368d","type":"link in","z":"87bab898757000a2","g":"7b4f8e1927d324fc","name":"HumidifierData","links":["79bde8bec83cb56a"],"x":2175,"y":1680,"wires":[["716288056c7fa845"]]},{"id":"bab58a1e055f1530","type":"link in","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"VPD-Perfektion","links":["e26a880fb2d24667"],"x":85,"y":2760,"wires":[["718bc098c204f567"]]},{"id":"fb64d5b83ef0f886","type":"function","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"VPD State Values","func":"const plantStages = {\n    Germination: [0.42, 0.78], // Optimaler VPD-Bereich für Keimung bei 25-30°C\n    Clones: [0.42, 0.78],      // Optimaler VPD-Bereich für Klone bei 25-30°C\n    EarlyVeg: [0.55, 0.85],    // Optimaler VPD-Bereich für frühe Vegetation bei 20-25°C\n    MidVeg: [0.85, 1.1],      // Optimaler VPD-Bereich für mittlere Vegetation bei 20-25°C\n    LateVeg: [0.85, 1.2],     // Optimaler VPD-Bereich für späte Vegetation bei 20-25°C\n    EarlyFlower: [1, 1.25], // Optimaler VPD-Bereich für frühe Blüte bei 20-25°C\n    MidFlower: [1.1, 1.4],   // Optimaler VPD-Bereich für mittlere Blüte bei 20-25°C\n    LateFlower: [1.2, 1.6],  // Optimaler VPD-Bereich für späte Blüte bei 20-25°C\n};\n\n\n// Beispiel, wie msg.payload gesetzt wird\n// msg.payload = \"LateVeg\"; // Kommentieren Sie diese Zeile aus, um den tatsächlichen msg.payload zu verwenden\n\n// Prüfen, ob das Wachstumsstadium im plantStages-Objekt vorhanden ist\nif (plantStages.hasOwnProperty(msg.payload)) {\n    // Setzen des VPD-Wertes aus dem plantStages-Objekt\n    msg.payload = plantStages[msg.payload];\n} else {\n    // Fehlermeldung, wenn das Wachstumsstadium nicht gefunden wurde\n    msg.payload = \"Unbekanntes Wachstumsstadium\";\n\n}\nmsg.perfektion = \"VPDStageValue\"\ndelete msg.data;\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":450,"y":2760,"wires":[["cf64ead2f0f9c53f"]]},{"id":"718bc098c204f567","type":"api-current-state","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"FlowerTentSelection","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"select.flowertent","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"targetVPD","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":220,"y":2760,"wires":[["fb64d5b83ef0f886"]]},{"id":"1fc52b3283aabd93","type":"poll-state","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"currentVPD","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","updateInterval":"30","updateIntervalType":"num","updateIntervalUnits":"seconds","outputInitially":true,"outputOnChanged":true,"entityId":"sensor.vpdflower","stateType":"num","ifState":"","ifStateType":"num","ifStateOperator":"is","outputs":1,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"currentVPD","valueType":"str"}],"x":230,"y":2900,"wires":[["cf64ead2f0f9c53f"]]},{"id":"cf64ead2f0f9c53f","type":"join","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"VPDWish","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":410,"y":2840,"wires":[["7856db1b9077bca0"]]},{"id":"7856db1b9077bca0","type":"function","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"VPD Handler Array Value","func":"const tolerance = 0.00; // Toleranzwert für die VPD-Anpassung\n\n// Der aktuelle VPD-Wert wird aus dem Payload geholt und in eine Zahl umgewandelt.\nconst currentVPD = parseFloat(msg.payload.currentVPD);\n\n// Ziel-VPD-Bereich wird aus dem Payload geholt.\nconst targetVPDRange = msg.payload.targetVPD;\n\n// Logging der aktuellen VPD und Ziel-VPD-Bereich zur Überprüfung und Debugging.\nnode.warn(`Flower-VPD array between: ${targetVPDRange[0]} and ${targetVPDRange[1]}`);\n\n// Berechnung der prozentualen Abweichung vom Ziel-VPD und Rundung auf ganze Zahlen\nconst percentDifference = Math.round(currentVPD < targetVPDRange[0] \n    ? ((currentVPD - targetVPDRange[0]) / targetVPDRange[0]) * 100 \n    : ((currentVPD - targetVPDRange[1]) / targetVPDRange[1]) * 100);\n\n// Funktion zur Berechnung der notwendigen Anpassungen basierend auf der Differenz zum VPD-Zielbereich.\nfunction calculateAdjustment(currentVPD, targetVPDRange) {\n    // Wenn der aktuelle VPD unter dem minimalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu erhöhen.\n    if (currentVPD < targetVPDRange[0] - tolerance) {\n        node.warn(`Flower-VPD:: ${currentVPD} zu gering. Erhöhe Temp oder verringere die Feuchtigkeit`);\n        node.warn(`Flower % VPD Target: ${percentDifference} %`);\n        return {\n            exhaustSpeed: \"increased\",      // Erhöht die Abluftgeschwindigkeit, um feuchte Luft herauszuziehen\n            humidifier: \"reduced\",          // Schaltet den Luftbefeuchter aus, um Feuchtigkeit zu reduzieren\n            dehumidifier: \"increased\",       // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            heaterFan: \"increased\",         // Schaltet den Beheizer an, um die Feuchtigkeit zu reduzieren und Temp zu erhöhen\n            coolerFan: \"reduced\",           // Schaltet den Kühler an, um die Feuchtigkeit zu erhöhen und Temp zu verringern\n            ventsALL: \"increased\",          // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsTopSpeed: \"increased\",     // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsDownSpeed: \"increased\",    // Erhöht die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"increased\"     // Erhöht die Lichtintensität, um die Temperatur zu steigern (wenn das die Temperatur beeinflusst)\n        };\n        \n    }\n    // Wenn der aktuelle VPD über dem maximalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu senken.\n    else if (currentVPD > targetVPDRange[1] + tolerance) {\n        node.warn(`Flower-VPD: ${currentVPD} zu hoch. Verringere Temp oder erhöhe die Feuchtigkeit`);\n        node.warn(`Flower % VPD Target: ${percentDifference} %`);\n        return {\n            exhaustSpeed: \"reduced\",    // Reduziert die Abluftgeschwindigkeit, hält feuchte Luft im Raum\n            humidifier: \"increased\",    // Schaltet den Luftbefeuchter ein, um Feuchtigkeit zu erhöhen\n            dehumidifier: \"reduced\",    // Schaltet den Luftentfeuchter aus, um Feuchtigkeit zu erhöhen\n            heaterFan: \"reduced\",       // Schaltet den Heizer aus, um die Temperatur zu verringern\n            coolerFan: \"increased\",     // Schaltet den Kühler an, um die Temperatur zu verringern\n            ventsALL: \"reduced\",        // Reduziert die Geschwindigkeit der Belüftung, um mehr feuchte Luft zu halten\n            ventsTopSpeed: \"reduced\",   // Reduziert die Geschwindigkeit der oberen Belüftung\n            ventsDownSpeed: \"reduced\",  // Reduziert die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"reduced\"   // Verringert die Lichtintensität, um die Temperatur zu senken (wenn das die Temperatur beeinflusst)\n        };\n    }\n    // Wenn der VPD im Zielbereich liegt, sind keine Anpassungen erforderlich.\n    node.warn(`Flower-VPD: ${currentVPD} im gewünschten Bereich`);\n    return {\n        exhaustSpeed: \"unchanged\",\n        humidifier: \"unchanged\",\n        dehumidifier: \"unchanged\",    \n        heaterFan: \"unchanged\",        \n        coolerFan: \"unchanged\",        \n        ventsALL: \"unchanged\",       \n        ventsTopSpeed: \"unchanged\",\n        ventsDownSpeed: \"unchanged\",\n        lightIntensity: \"unchanged\"\n    };\n}\n\n// Entscheidungslogik zur Steuerung der Umgebungsbedingungen, nutzt die calculateAdjustment Funktion.\nconst adjustments = calculateAdjustment(currentVPD, targetVPDRange);\n\n// Berechnung der prozentualen Abweichung und Hinzufügen zum Payload\nmsg.payload = {\n    exhaustSpeed: adjustments.exhaustSpeed,\n    humidifier: adjustments.humidifier,\n    dehumidifier: adjustments.dehumidifier,\n    heaterFan: adjustments.heaterFan,\n    coolerFan: adjustments.coolerFan,\n    ventsALL: adjustments.ventsALL,\n    ventsTopSpeed: adjustments.ventsTopSpeed,\n    ventsDownSpeed: adjustments.ventsDownSpeed,\n    lightIntensity: adjustments.lightIntensity,\n    percentDifference: percentDifference\n};\n\nmsg.perfektion = \"VPDActions\";\n\n// Rückgabe des modifizierten Payloads für weitere Verwendung im Flow.\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":610,"y":2800,"wires":[["5e2b8fb494e4ebfe"]]},{"id":"5e2b8fb494e4ebfe","type":"function","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"Check What Do","func":"let outputs = [null, null, null, null, null, null, null, null, null];\n\nvar percentDifference = msg.payload.percentDifference\n\n// Abluft\nif (msg.payload.exhaustSpeed === \"unchanged\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"increased\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"reduced\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n}\n\n// Humidifier\nif (msg.payload.humidifier === \"unchanged\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"increased\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"reduced\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n}\n\n// Dehumidifier\nif (msg.payload.dehumidifier === \"unchanged\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"increased\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"reduced\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n}\n\n// HeaterFan\nif (msg.payload.heaterFan === \"unchanged\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"increased\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"reduced\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n}\n\n// CoolerFan\nif (msg.payload.coolerFan === \"unchanged\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"increased\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"reduced\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n}\n\n// LightIntensity\nif (msg.payload.lightIntensity === \"unchanged\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"increased\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"reduced\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n}\n\n// VentsALL\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"increased\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"reduced\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n}\n\n// VentsTopSpeed\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"increased\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"reduced\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n}\n\n// VentsDownSpeed\nif (msg.payload.ventsDownSpeed === \"unchanged\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"increased\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"reduced\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n}\n\n\n\nreturn outputs;\n","outputs":9,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":580,"y":2900,"wires":[["c621846474f32add","b450272b0a6bfb38"],["c621846474f32add","ce80e74b4f0c3169"],["c621846474f32add","5bcd88519979bcf2"],["c621846474f32add","1edf2bc707797373"],["c621846474f32add","1ec492ebf534af74"],["c621846474f32add","47ffae24b00b2672"],["c621846474f32add","625af5ab649384e9"],["625af5ab649384e9"],["625af5ab649384e9"]]},{"id":"c621846474f32add","type":"debug","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"debug 143","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":620,"y":3000,"wires":[]},{"id":"2e49f2a877dc0908","type":"function","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"Check What Do","func":"let outputs = [null, null, null, null, null, null, null, null, null];\n\nvar percentDifference = msg.payload.percentDifference\n\n// Abluft\nif (msg.payload.exhaustSpeed === \"unchanged\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"increased\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"reduced\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n}\n\n// Humidifier\nif (msg.payload.humidifier === \"unchanged\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"increased\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"reduced\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n}\n\n// Dehumidifier\nif (msg.payload.dehumidifier === \"unchanged\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"increased\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"reduced\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n}\n\n// HeaterFan\nif (msg.payload.heaterFan === \"unchanged\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"increased\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"reduced\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n}\n\n// CoolerFan\nif (msg.payload.coolerFan === \"unchanged\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"increased\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"reduced\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n}\n\n// LightIntensity\nif (msg.payload.lightIntensity === \"unchanged\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"increased\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"reduced\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n}\n\n// VentsALL\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"increased\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"reduced\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n}\n\n// VentsTopSpeed\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"increased\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"reduced\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n}\n\n// VentsDownSpeed\nif (msg.payload.ventsDownSpeed === \"unchanged\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"increased\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"reduced\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n}\n\n\n\nreturn outputs;\n","outputs":9,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":420,"y":3900,"wires":[["80e2dd98aaacafeb","17d2dff4e6e6b9d5"],["80e2dd98aaacafeb","bfbd9b30c217d194"],["80e2dd98aaacafeb","0550e27bc4f11b6f"],["80e2dd98aaacafeb","26cedfa8d1203037"],["80e2dd98aaacafeb","faf00348be972d39"],["80e2dd98aaacafeb","d5ef25611722e6a9"],["80e2dd98aaacafeb","f46b666e01621da8"],["f46b666e01621da8"],["f46b666e01621da8"]]},{"id":"80e2dd98aaacafeb","type":"debug","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"debug 144","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":650,"y":4000,"wires":[]},{"id":"5621782b9ee9ac2e","type":"debug","z":"87bab898757000a2","g":"2a37f65b72394049","name":"debug 148","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":930,"y":1320,"wires":[]},{"id":"b5a693bcd77d4f80","type":"function","z":"87bab898757000a2","g":"684260cd34e37219","name":"Calc-Dewpoint","func":"// Funktion zur Berechnung des Taupunkts\nconst calculateDewPoint = (temperature, humidity) => {\n    const temp = parseFloat(temperature);\n    const hum = parseFloat(humidity);\n\n    if (isNaN(temp) || isNaN(hum)) {\n        return \"unavailable\";\n    }\n\n    const dewPoint = temp - ((100 - hum) / 5);\n    return parseFloat(dewPoint.toFixed(3));\n};\n\n// Beispielinput\nconst inputData = msg.payload;\n\n// Taupunkt berechnen\nconst temperature = parseFloat(inputData.AvgTemp);\nconst humidity = parseFloat(inputData.AvgHum);\nconst dewPoint = calculateDewPoint(temperature, humidity);\n\n// Taupunkt als Zahl zurückgeben\nmsg.payload = dewPoint;\nreturn msg\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1440,"y":200,"wires":[["54b1d8a63e1902a7"]]},{"id":"8a884fe39e4f1e3c","type":"join","z":"87bab898757000a2","g":"684260cd34e37219","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1290,"y":200,"wires":[["b5a693bcd77d4f80"]]},{"id":"54b1d8a63e1902a7","type":"ha-sensor","z":"87bab898757000a2","g":"684260cd34e37219","name":"FlowerAVGDewPoint","entityConfig":"0741c8a3236b491c","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[{"property":"topic","propertyType":"msg","value":"DryTentDewPoint","valueType":"str"}],"x":1380,"y":240,"wires":[[]]},{"id":"47249219e55b6920","type":"join","z":"87bab898757000a2","g":"684260cd34e37219","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1030,"y":140,"wires":[["97fb7c5e5e3f9dee"]]},{"id":"3d4627f3225a086b","type":"link in","z":"87bab898757000a2","g":"684260cd34e37219","name":"link in 9","links":["f0449f704d2f7c8a"],"x":875,"y":60,"wires":[["d51dc8176bf8690e"]]},{"id":"d51dc8176bf8690e","type":"function","z":"87bab898757000a2","g":"684260cd34e37219","name":"Select","func":"let outputs = [null, null];\n\nvar leafMode = msg.payload.GlobalLeafSet;\nvar leafOffSet = msg.payload.LeafOffset;\nvar flowerLeafOffset = msg.payload.FlowerLeafOffset;\nvar veggiLeafOffset = msg.payload.VeggiLeafOffset;\nvar groomLeafOffset = msg.payload.GRoomLeafOffset;\n\n// Logic to set new offset based on leaf mode\nif (leafMode === \"Default\") {\n    outputs[0] = { payload: leafOffSet, topic: \"LeafOffSet\" };\n} else if (leafMode === \"Custom\") {\n    outputs[1] = { payload: veggiLeafOffset, topic: \"LeafOffSet\" };\n}\n\nreturn outputs;  // Return the modified outputs array\n","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":910,"y":120,"wires":[["47249219e55b6920"],["47249219e55b6920"]]},{"id":"a96ccda7addd1614","type":"link out","z":"87bab898757000a2","g":"684260cd34e37219","name":"CropSteering","mode":"link","links":["96ad7357a215e3d7"],"x":1845,"y":260,"wires":[]},{"id":"96ad7357a215e3d7","type":"link in","z":"87bab898757000a2","name":"link in 11","links":["a96ccda7addd1614"],"x":155,"y":4820,"wires":[[]]},{"id":"e1181ae60d3e758c","type":"link out","z":"87bab898757000a2","g":"4befb05d0b17e374","name":"ExhaustFlowerON","mode":"link","links":["55acda8e6f953bc1"],"x":2465,"y":1460,"wires":[]},{"id":"fe43d7cf9ec8a24d","type":"link out","z":"87bab898757000a2","g":"4befb05d0b17e374","name":"ExhaustFlowerOFF","mode":"link","links":["23d01364d3856db1"],"x":2465,"y":1500,"wires":[]},{"id":"7b5ea2872188430d","type":"debug","z":"87bab898757000a2","g":"2a37f65b72394049","name":"debug 174","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1150,"y":1540,"wires":[]},{"id":"e878287b07f180fd","type":"debug","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"debug 177","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":610,"y":3760,"wires":[]},{"id":"11736a563bfcb495","type":"poll-state","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"currentVPD","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","updateInterval":"30","updateIntervalType":"num","updateIntervalUnits":"seconds","outputInitially":true,"outputOnChanged":true,"entityId":"sensor.vpdflower","stateType":"num","ifState":"","ifStateType":"num","ifStateOperator":"is","outputs":1,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"currentVPD","valueType":"str"},{"property":"perfection","propertyType":"msg","value":"currentVPD","valueType":"str"}],"x":250,"y":1580,"wires":[["c1e70d8332a5d4e4","33ec8a5f3c05962b"]]},{"id":"78d116b1f17e53a9","type":"link in","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"VPD-Perfektion","links":["464b23e70cf844c8"],"x":85,"y":3720,"wires":[["e6b2c630db705db7"]]},{"id":"cb901688be6c0de1","type":"poll-state","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"currentVPD","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","updateInterval":"30","updateIntervalType":"num","updateIntervalUnits":"seconds","outputInitially":true,"outputOnChanged":true,"entityId":"sensor.vpdflower","stateType":"num","ifState":"","ifStateType":"num","ifStateOperator":"is","outputs":1,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"currentVPD","valueType":"str"}],"x":170,"y":3860,"wires":[["546819f8bcf743d9"]]},{"id":"546819f8bcf743d9","type":"join","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"VPDWish","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":380,"y":3800,"wires":[["7b3614a53b99b56b","a7faaa78e3ab3a02"]]},{"id":"7b3614a53b99b56b","type":"function","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"VPD Handler Array Value","func":"const tolerance = 0.00; // Toleranzwert für die VPD-Anpassung\n\n// Der aktuelle VPD-Wert wird aus dem Payload geholt und in eine Zahl umgewandelt.\nconst currentVPD = parseFloat(msg.payload.currentVPD);\n\n// Ziel-VPD-Bereich wird aus dem Payload geholt.\nconst targetVPDRange = msg.payload.targetVPD;\n\n// Logging der aktuellen VPD und Ziel-VPD-Bereich zur Überprüfung und Debugging.\nnode.warn(`Flower-VPD-Target: ${targetVPDRange}`);\n\n// Funktion zur Berechnung der notwendigen Anpassungen basierend auf der Differenz zum VPD-Zielbereich.\nfunction calculateAdjustment(currentVPD, targetVPDRange) {\n    // Wenn der aktuelle VPD unter dem minimalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu erhöhen.\n    if (currentVPD < targetVPDRange - tolerance) {\n        node.warn(`Flower-VPD: ${currentVPD} zu gering. Erhöhe Temp oder verringere die Feuchtigkeit.`);\n        return {\n            exhaustSpeed: \"increased\",      // Erhöht die Abluftgeschwindigkeit, um feuchte Luft herauszuziehen\n            humidifier: \"reduced\",          // Schaltet den Luftbefeuchter aus, um Feuchtigkeit zu reduzieren\n            dehumidifier: \"increased\",      // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            heaterFan: \"increased\",         // Schaltet den Beheizer an, um die Feuchtigkeit zu reduzieren und Temp zu erhöhen\n            coolerFan: \"reduced\",           // Schaltet den Beheizer an, um die Feuchtigkeit zu erhöhen und Temp zu verringern\n            ventsALL: \"increased\",          // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsTopSpeed: \"increased\",     // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsDownSpeed: \"increased\",    // Erhöht die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"increased\"     // Erhöht die Lichtintensität, um die Temperatur zu steigern (wenn das die Temperatur beeinflusst)\n        };\n    }\n    // Wenn der aktuelle VPD über dem maximalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu senken.\n    else if (currentVPD > targetVPDRange + tolerance) {\n        node.warn(`Flower-VPD: ${currentVPD} zu hoch. Verringere Temp oder erhöhe die Feuchtigkeit.`);\n        return {\n            exhaustSpeed: \"reduced\",    // Reduziert die Abluftgeschwindigkeit, hält feuchte Luft im Raum\n            humidifier: \"increased\",    // Schaltet den Luftbefeuchter ein, um Feuchtigkeit zu erhöhen\n            dehumidifier: \"reduced\",    // Schaltet den Luftentfeuchter aus, um Feuchtigkeit zu erhöhen\n            heaterFan: \"reduced\",       // Schaltet den Beheizer aus, um die Feuchtigkeit zu erhöhen und Temp zu senken\n            coolerFan: \"increased\",     // Schaltet den Kühler an, um die Feuchtigkeit zu erhöhen und Temp zu verringern\n            ventsALL: \"reduced\",        // Reduziert die Geschwindigkeit der Belüftung, um mehr feuchte Luft zu halten\n            ventsTopSpeed: \"reduced\",   // Reduziert die Geschwindigkeit der oberen Belüftung\n            ventsDownSpeed: \"reduced\",  // Reduziert die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"reduced\"   // Verringert die Lichtintensität, um die Temperatur zu senken (wenn das die Temperatur beeinflusst)\n        };\n    }\n    // Wenn der VPD im Zielbereich liegt, sind keine Anpassungen erforderlich.\n    node.warn(`Flower-VPD: ${currentVPD} im gewünschten Bereich.`);\n    return {\n        exhaustSpeed: \"unchanged\",\n        humidifier: \"unchanged\",\n        dehumidifier: \"unchanged\",\n        heaterFan: \"unchanged\",\n        coolerFan: \"unchanged\",\n        ventsALL: \"unchanged\",\n        ventsTopSpeed: \"unchanged\",\n        ventsDownSpeed: \"unchanged\",\n        lightIntensity: \"unchanged\"\n    };\n}\n\n// Funktion zur Berechnung der prozentualen Abweichung\nfunction calculatePercentDifference(currentVPD, targetVPD) {\n    return ((currentVPD - targetVPD) / targetVPD) * 100;\n}\n\n// Entscheidungslogik zur Steuerung der Umgebungsbedingungen, nutzt die calculateAdjustment Funktion.\nconst adjustments = calculateAdjustment(currentVPD, targetVPDRange);\nconst percentDifference = calculatePercentDifference(currentVPD, targetVPDRange);\n\nmsg.payload = {\n    exhaustSpeed: adjustments.exhaustSpeed,\n    humidifier: adjustments.humidifier,\n    dehumidifier: adjustments.dehumidifier,\n    heaterFan: adjustments.heaterFan,\n    coolerFan: adjustments.coolerFan,\n    ventsALL: adjustments.ventsALL,\n    ventsTopSpeed: adjustments.ventsTopSpeed,\n    ventsDownSpeed: adjustments.ventsDownSpeed,\n    lightIntensity: adjustments.lightIntensity,\n    percentDifference: percentDifference.toFixed(2) // Prozentuale Abweichung auf 2 Dezimalstellen gerundet\n};\n\nmsg.perfektion = \"VPDActions\";\n// Rückgabe des modifizierten Payloads für weitere Verwendung im Flow.\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":600,"y":3800,"wires":[["2e49f2a877dc0908","e878287b07f180fd"]]},{"id":"e6b2c630db705db7","type":"api-current-state","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"TargetVPD","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"number.flowertentwish_vpd","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"targetVPD","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":210,"y":3720,"wires":[["546819f8bcf743d9"]]},{"id":"a7faaa78e3ab3a02","type":"debug","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"debug 176","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":460,"y":3720,"wires":[]},{"id":"c5cca71c144d6253","type":"debug","z":"87bab898757000a2","g":"4befb05d0b17e374","name":"debug 180","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2650,"y":1500,"wires":[]},{"id":"6cabaff09a9fa85a","type":"ha-sensor","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerCO2","entityConfig":"4c5909d829f0f2cf","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1190,"y":680,"wires":[[]]},{"id":"8ba8b97980f98d4e","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"CO2-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Finden des Objekts, das eine der gewünschten Teilzeichenfolgen im entity_id enthält\nconst co2Object = sensors.find(sensor => \n    sensor.entity_id.includes(\"carbon\") || \n    sensor.entity_id.includes(\"carbondioxide\")\n);\n\n// Extrahieren des Wertes, wenn das Objekt gefunden wurde, sonst null setzen\nconst co2Value = co2Object ? co2Object.value : null;\n\n// Ausgabe des CO2-Wertes zur Überprüfung\n// node.warn(`CO2-Wert: ${co2Value}`);\n\n// Optional: Speichern des CO2-Wertes in msg.co2Value oder einem anderen Feld zur weiteren Verwendung\nmsg.payload = co2Value;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":900,"y":680,"wires":[["6cabaff09a9fa85a"]]},{"id":"24cec488a394f147","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"Pressure-Get","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Luftdruck-Wertes\nfunction findPressureValue(sensors) {\n    const pressureObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"pressure\") ||\n        sensor.entity_id.includes(\"barometer\") ||\n        sensor.entity_id.includes(\"luftdruck\")\n    );\n    return pressureObject ? pressureObject.value : null;\n}\n\n// Finden des Luftdruck-Wertes\nconst pressureValue = findPressureValue(sensors);\n\n// Ausgabe des Luftdruck-Wertes zur Überprüfung\n// node.warn(`Luftdruck-Wert: ${pressureValue}`);\n\n// Optional: Speichern des Luftdruck-Wertes in msg zur weiteren Verwendung\nmsg.payload = pressureValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":910,"y":620,"wires":[["3dbeae382f71f092"]]},{"id":"cdabbf668a463011","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"Moisture-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Moisture-Wertes\nfunction findMoistureValue(sensors) {\n    const moistureObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"moisture\") ||\n        sensor.entity_id.includes(\"humidity\") ||\n        sensor.entity_id.includes(\"wetness\")\n    );\n    return moistureObject ? moistureObject.value : null;\n}\n\n// Finden des Moisture-Wertes\nconst moistureValue = findMoistureValue(sensors);\n\n// Ausgabe des Moisture-Wertes zur Überprüfung\n// node.warn(`Moisture-Wert: ${moistureValue}`);\n\n// Optional: Speichern des Moisture-Wertes in msg zur weiteren Verwendung\nmsg.payload = moistureValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":920,"y":440,"wires":[["ea181fad67e4609d"]]},{"id":"7b1434a24c5c2d0a","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"SOIL-EC-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des EC- oder Conductivity-Wertes\nfunction findECValue(sensors) {\n    const ecObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"ec\") ||\n        sensor.entity_id.includes(\"conductivity\")\n    );\n    return ecObject ? ecObject.value : null;\n}\n\n// Finden des EC- oder Conductivity-Wertes\nconst ecValue = findECValue(sensors);\n\n// Ausgabe des EC- oder Conductivity-Wertes zur Überprüfung\n// node.warn(`EC-Wert: ${ecValue}`);\n\n// Optional: Speichern des EC- oder Conductivity-Wertes in msg zur weiteren Verwendung\nmsg.payload = ecValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":920,"y":560,"wires":[["6077fa1071b64972"]]},{"id":"6dc8f908895b8048","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"PowerConsum-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Stromverbrauch-Wertes\nfunction findPowerConsumptionValue(sensors) {\n    const powerConsumptionObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"energy_power\") || \n        sensor.entity_id.includes(\"consumption\") || \n        sensor.entity_id.includes(\"watt\") || \n        sensor.entity_id.includes(\"electricity\")\n    );\n    return powerConsumptionObject ? powerConsumptionObject.value : null;\n}\n\n// Finden des Stromverbrauch-Wertes\nconst powerConsumptionValue = findPowerConsumptionValue(sensors);\n\n// Ausgabe des Stromverbrauch-Wertes zur Überprüfung\n// node.warn(`Stromverbrauch-Wert: ${powerConsumptionValue}`);\n\n// Optional: Speichern des Stromverbrauch-Wertes in msg zur weiteren Verwendung\nmsg.payload = powerConsumptionValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":940,"y":860,"wires":[["34b3481968acc628"]]},{"id":"24a35980a67b1b86","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"Battery-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Batterie-Wertes\nfunction findBatteryValue(sensors) {\n    const batteryObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"battery\") || \n        sensor.entity_id.includes(\"batt\")\n    );\n    return batteryObject ? batteryObject.value : null;\n}\n\n// Finden des Batterie-Wertes\nconst batteryValue = findBatteryValue(sensors);\n\n// Ausgabe des Batterie-Wertes zur Überprüfung\n// node.warn(`Batterie-Wert: ${batteryValue}`);\n\n// Optional: Speichern des Batterie-Wertes in msg zur weiteren Verwendung\nmsg.payload = batteryValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":910,"y":800,"wires":[["330a5b405ad89acf"]]},{"id":"b5fcb9fc8354bcab","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"Root-Temp-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Root-Temperature-Wertes\nfunction findRootTempValue(sensors) {\n    const rootTempObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"root_temp\") || \n        sensor.entity_id.includes(\"roottemperature\") || \n        sensor.entity_id.includes(\"soiltemp\") || \n        sensor.entity_id.includes(\"root_temp\")\n    );\n    return rootTempObject ? rootTempObject.value : null;\n}\n\n// Finden des Root-Temperature-Wertes\nconst rootTempValue = findRootTempValue(sensors);\n\n// Ausgabe des Root-Temperature-Wertes zur Überprüfung\n// node.warn(`Root-Temperature-Wert: ${rootTempValue}`);\n\n// Optional: Speichern des Root-Temperature-Wertes in msg zur weiteren Verwendung\nmsg.payload = rootTempValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":920,"y":500,"wires":[["4071ade6426af61b"]]},{"id":"ce4696697eb9cc47","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"Exhaust-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Abluft-Zustands\nfunction findExhaustState(sensors) {\n    const exhaustStateObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"exhaust\") ||\n        sensor.entity_id.includes(\"abluft\") ||\n        sensor.entity_id.includes(\"ventilation\") ||\n        sensor.entity_id.includes(\"fan\")\n    );\n    return exhaustStateObject ? exhaustStateObject.value : null;\n}\n\n// Funktion zum Finden des Dutycycle-Wertes\nfunction findDutyCycleValue(sensors) {\n    const dutyCycleObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"airctr\") ||\n        sensor.entity_id.includes(\"dutycycle\") ||\n        sensor.entity_id.includes(\"cycle\")\n    );\n    return dutyCycleObject ? dutyCycleObject.value : null;\n}\n\n// Finden des Abluft-Zustands\nconst exhaustState = findExhaustState(sensors);\n\n// Finden des Dutycycle-Wertes\nconst dutyCycleValue = findDutyCycleValue(sensors);\n\n// Ausgabe der Werte zur Überprüfung\n// node.warn(`Abluft-Zustand: ${exhaustState}`);\n// node.warn(`Dutycycle-Wert: ${dutyCycleValue}`);\n\n// Setzen der Outputs\nlet outputs = [\n    { payload: exhaustState }, // Output 1: Zustand (on/off)\n    { payload: dutyCycleValue } // Output 2: Dutycycle\n];\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn outputs;\n","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":910,"y":1040,"wires":[["194edf344188f8d1"],["f1ea259d4cd1ad73"]]},{"id":"fc7309bac2a5580d","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"Humidifier-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Humidifier-Wertes\nfunction findHumidifierValue(sensors) {\n    const humidifierObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"humidifier\") || \n        sensor.entity_id.includes(\"humidity\")\n    );\n    return humidifierObject ? humidifierObject.value : null;\n}\n\n// Finden des Humidifier-Wertes\nconst humidifierValue = findHumidifierValue(sensors);\n\n// Ausgabe des Humidifier-Wertes zur Überprüfung\n// node.warn(`Humidifier-Wert: ${humidifierValue}`);\n\n// Optional: Speichern des Humidifier-Wertes in msg zur weiteren Verwendung\nmsg.payload = humidifierValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":920,"y":1100,"wires":[[]]},{"id":"56aa552840d3803d","type":"function","z":"87bab898757000a2","name":"Sort Sensor Types","func":"let data = msg.payload;\n\n// Arrays für verschiedene Sensortypen initialisieren\nlet wish = [];\nlet temperatures = [];\nlet humidity = [];\nlet dewpoints = [];\nlet moisture = [];\nlet pressures = [];\nlet battery = [];\nlet power = [];\nlet co2 = [];\nlet lumen = [];\nlet conductivity = [];\nlet switches = [];\nlet dutyCycleExhaust = [];\nlet vents = [];\nlet humidifier = [];\nlet dehumidifier = [];\nlet root = [];\n\n// Durchlaufe alle Schlüssel im data-Objekt und sortiere sie nach bestimmten Sensortypen\nfor (let key in data) {\n    if (data.hasOwnProperty(key)) {\n        let entity_id = key.toLowerCase();\n        let entity = { entity_id: key, value: data[key] };\n\n        // Prioritize to ensure it is captured first\n        if (entity_id.includes('wish') || entity_id.includes('avg') || entity_id.includes('target')) {\n            wish.push(entity);\n        } else if (entity_id.includes('root') || entity_id.includes('wurzel') || entity_id.includes('water')) {\n            root.push(entity);\n        }\n        // ENVIORMENT\n        else if (entity_id.includes('temperature') || entity_id.includes('temp')) {\n            temperatures.push(entity);\n        } else if (entity_id.includes('humidity') || entity_id.includes('feuchtigkeit') || entity_id.includes('rh')) {\n            humidity.push(entity);\n        } else if (entity_id.includes('dewpoint') || entity_id.includes('dew')) {\n            dewpoints.push(entity);\n        } else if (entity_id.includes('moisture') || entity_id.includes('mois')) {\n            moisture.push(entity);\n        } else if (entity_id.includes('pressure') || entity_id.includes('press')) {\n            pressures.push(entity);\n        } else if (entity_id.includes('carbondioxide') || entity_id.includes('co2') || entity_id.includes('carbon')) {\n            co2.push(entity);\n        } else if (entity_id.includes('conductivity')) {\n            conductivity.push(entity);\n        } else if (entity_id.includes('illuminance') || entity_id.includes('licht')) {\n            lumen.push(entity);\n        }\n        // Devices\n        else if (entity_id.includes('humidifier') || entity_id.includes('befeuchter')) {\n            humidifier.push(entity);\n        } else if (entity_id.includes('dehumidifier') || entity_id.includes('entfeuchter')) {\n            dehumidifier.push(entity);\n        } else if (entity_id.includes('ruckec') || entity_id.includes('airctr') || entity_id.includes('exhaust') || entity_id.includes('abluft')) {\n            dutyCycleExhaust.push(entity);\n        } else if (entity_id.includes('vent')) {\n            vents.push(entity);\n        } else if (entity_id.includes('switch')) {\n            switches.push(entity);\n        } else if (entity_id.includes('power') || entity_id.includes('energy')) {\n            power.push(entity);\n        }\n\n        // ADDONS\n        else if (entity_id.includes('battery') || entity_id.includes('batt')) {\n            battery.push(entity);\n        }\n    }\n}\n\n// Nachrichtenausgabe auf verschiedenen Outputs\nreturn [\n    // ENVIORMENT\n    { payload: wish, topic: 'Wish' },\n    { payload: temperatures, topic: 'temperature' },\n    { payload: humidity, topic: 'humidity' },\n    { payload: dewpoints, topic: 'dewpoint' },\n    { payload: moisture, topic: 'moisture' },\n    { payload: root, topic: 'roottemp' },\n    { payload: conductivity, topic: 'conductivity' },\n    { payload: pressures, topic: 'pressure' },\n    { payload: co2, topic: 'carbon_dioxide' },\n    { payload: lumen, topic: 'illuminance' },\n    // DEVICEINFO\n    { payload: battery, topic: 'battery' },\n    { payload: power, topic: 'power' },\n    // DEVICES\n    { payload: switches, topic: 'switch' },\n    { payload: vents, topic: 'Vents' },\n    { payload: dutyCycleExhaust, topic: 'Exhaust' },\n    { payload: humidifier, topic: 'humidifier' },\n    { payload: dehumidifier, topic: 'dehumidifier' }\n\n\n];\n","outputs":17,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":210,"y":260,"wires":[["1ded9b8984de496a"],["ad196bb7c36068ab"],["b769596a4bbc4607"],["8b78835f54a976ce"],["802c582eb02146c9"],["7b717655bc69afdc"],["a0aeced795617438"],["ae7ddd31bbfb2985"],["310608ec1d45fcb2"],["b8d42bdbb97224c9"],["dd5b4ad7e458c3f6"],["72f71ec5f3b106d5"],["95cfd8479db6cdb6"],["e6c1ccc1e8bf4243"],["ad366fe75322e5d3"],["006d6dc52bbe29da"],["709f15e79c3e231e"]]},{"id":"4302d5e5f0144f64","type":"debug","z":"87bab898757000a2","name":"Temperatures","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":480,"y":160,"wires":[]},{"id":"5974b167ebb2f9e4","type":"debug","z":"87bab898757000a2","name":"Humidity","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":460,"y":200,"wires":[]},{"id":"9f322326faf32502","type":"debug","z":"87bab898757000a2","name":"Dewpoints","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":240,"wires":[]},{"id":"9865254487956201","type":"debug","z":"87bab898757000a2","name":"Pressures","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":460,"y":400,"wires":[]},{"id":"18c34d8b20c39f73","type":"debug","z":"87bab898757000a2","name":"Battery","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":460,"y":540,"wires":[]},{"id":"e4b5460d3febe1a2","type":"debug","z":"87bab898757000a2","name":"Power","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":450,"y":580,"wires":[]},{"id":"0d29d605591497f4","type":"debug","z":"87bab898757000a2","name":"CO2","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":450,"y":440,"wires":[]},{"id":"cee884061f3f2261","type":"debug","z":"87bab898757000a2","name":"Light","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":480,"wires":[]},{"id":"0a1295920208c384","type":"debug","z":"87bab898757000a2","name":"Switches","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":460,"y":640,"wires":[]},{"id":"1d22f5d38d2f029b","type":"debug","z":"87bab898757000a2","name":"Conductivity","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":360,"wires":[]},{"id":"79fa901ba76691b8","type":"debug","z":"87bab898757000a2","name":"Moisture","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":460,"y":280,"wires":[]},{"id":"349dcfebcd7877da","type":"debug","z":"87bab898757000a2","name":"Exhasut","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":460,"y":720,"wires":[]},{"id":"dfe1f213a50dabe8","type":"debug","z":"87bab898757000a2","name":"WISH","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":120,"wires":[]},{"id":"f400654d457ab0af","type":"debug","z":"87bab898757000a2","name":"Humidifier","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":760,"wires":[]},{"id":"8d95d41fedb12bda","type":"debug","z":"87bab898757000a2","name":"Vents","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":680,"wires":[]},{"id":"a46594e2514f068e","type":"debug","z":"87bab898757000a2","name":"RootTemp","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":320,"wires":[]},{"id":"6f852176198d67b8","type":"debug","z":"87bab898757000a2","name":"Dehumidifier","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":800,"wires":[]},{"id":"3dbeae382f71f092","type":"ha-sensor","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerPressure","entityConfig":"ee6603a7841f90d7","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1200,"y":620,"wires":[[]]},{"id":"ea181fad67e4609d","type":"ha-sensor","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerMoisture","entityConfig":"b48068e2b6382f35","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1200,"y":440,"wires":[[]]},{"id":"330a5b405ad89acf","type":"ha-sensor","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerBatterieDevices","entityConfig":"2150742022321ba4","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1220,"y":800,"wires":[[]]},{"id":"4071ade6426af61b","type":"ha-sensor","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerRootTemp","entityConfig":"6938113c94cc6c5d","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1210,"y":500,"wires":[[]]},{"id":"6077fa1071b64972","type":"ha-sensor","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerEC","entityConfig":"2acab65eb8c7d7db","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1180,"y":560,"wires":[[]]},{"id":"a057a5f182e73de8","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"LightIntense_GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Licht-Wertes (Lumen oder Lux)\nfunction findLightValue(sensors) {\n    const lightObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"lumen\") || \n        sensor.entity_id.includes(\"lux\") || \n        sensor.entity_id.includes(\"light\") ||\n        sensor.entity_id.includes(\"illuminance\")\n    );\n    return lightObject ? lightObject.value : null;\n}\n\n// Finden des Licht-Wertes\nconst lightValue = findLightValue(sensors);\n\n// Ausgabe des Licht-Wertes zur Überprüfung\n// node.warn(`Licht-Wert: ${lightValue}`);\n\n// Optional: Speichern des Licht-Wertes in msg zur weiteren Verwendung\nmsg.payload = lightValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":930,"y":740,"wires":[["de57249fcd512509"]]},{"id":"de57249fcd512509","type":"ha-sensor","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FLowerLightIntense","entityConfig":"6584d61dadd6110e","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1210,"y":740,"wires":[[]]},{"id":"c4d9642cd60ee3b5","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"Switch-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Switch-Wertes\nfunction findSwitchValue(sensors) {\n    const switchObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"switch\") || \n        sensor.entity_id.includes(\"toggle\")\n    );\n    return switchObject ? switchObject.state : null;\n}\n\n// Finden des Switch-Wertes\nconst switchValue = findSwitchValue(sensors);\n\n// Ausgabe des Switch-Wertes zur Überprüfung\n// node.warn(`Switch-Wert: ${switchValue}`);\n\n// Optional: Speichern des Switch-Wertes in msg zur weiteren Verwendung\nmsg.payload = switchValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":910,"y":920,"wires":[[]]},{"id":"34b3481968acc628","type":"ha-sensor","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerPowerConsume","entityConfig":"0628161aa905c63c","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1220,"y":860,"wires":[[]]},{"id":"f76573c680abe051","type":"link out","z":"87bab898757000a2","name":"Vents","mode":"link","links":[],"x":635,"y":680,"wires":[]},{"id":"0d648d1a287b160d","type":"link out","z":"87bab898757000a2","name":"Dehumidifier","mode":"link","links":[],"x":635,"y":800,"wires":[]},{"id":"8c80439016556aa3","type":"debug","z":"87bab898757000a2","g":"4befb05d0b17e374","name":"debug 188","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2290,"y":1580,"wires":[]},{"id":"a141a10ad2f010bb","type":"debug","z":"87bab898757000a2","g":"4befb05d0b17e374","name":"debug 190","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2470,"y":1420,"wires":[]},{"id":"9c1bbc9685dc858c","type":"debug","z":"87bab898757000a2","g":"7b4f8e1927d324fc","name":"debug 191","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2400,"y":1660,"wires":[]},{"id":"55da67fef2acad51","type":"debug","z":"87bab898757000a2","g":"2a37f65b72394049","name":"debug 193","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1170,"y":1320,"wires":[]},{"id":"d627c246df74b5d7","type":"debug","z":"87bab898757000a2","g":"7b4f8e1927d324fc","name":"debug 197","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2390,"y":1780,"wires":[]},{"id":"7e84a5229b144751","type":"join","z":"87bab898757000a2","g":"e0a33e236acb9fce","name":"DehumidifierData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":2250,"y":1940,"wires":[["e19fe2e2cc5cff60"]]},{"id":"e6959e18c970d2ee","type":"link in","z":"87bab898757000a2","g":"e0a33e236acb9fce","name":"Dehumidifier","links":[],"x":2175,"y":1900,"wires":[["7e84a5229b144751"]]},{"id":"e19fe2e2cc5cff60","type":"function","z":"87bab898757000a2","g":"e0a33e236acb9fce","name":"DehumidifierSetup","func":"let outputs = [null, null]; // Array für zwei Ausgänge\n\nlet dehumidifierState = null;\n\n// Schleife, um den Zustand des Dehumidifier zu finden\nfor (let i = 0; i < msg.payload.dehumidifier.length; i++) {\n    if (msg.payload.dehumidifier[i].entity_id.includes('dehumidifier')) {\n        dehumidifierState = msg.payload.dehumidifier[i].value;\n        break;\n    }\n}\n\n// Dehumidifier starten\nif (msg.payload.dehumidifierSet.value === \"increased\" && dehumidifierState === \"off\") {\n    outputs[0] = { payload: \"Starte Dehumidifier\", topic: \"Start\" };\n}\n\n// Dehumidifier stoppen\nif (msg.payload.dehumidifierSet.value === \"reduced\" && dehumidifierState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Dehumidifier\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.dehumidifierSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Dehumidifier unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2470,"y":1940,"wires":[["f1ed96c84b1e46e1"],["abef1da1656fea02"],["31111db19484adb6"],[]]},{"id":"2f23a6ca2ee4971d","type":"join","z":"87bab898757000a2","g":"061837895c818d51","name":"HeaterData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":2250,"y":2080,"wires":[["3e45530d280cf155"]]},{"id":"61f9a529b1e29ab0","type":"link in","z":"87bab898757000a2","g":"061837895c818d51","name":"link in 41","links":[],"x":2185,"y":2040,"wires":[["2f23a6ca2ee4971d"]]},{"id":"3e45530d280cf155","type":"function","z":"87bab898757000a2","g":"061837895c818d51","name":"HeaterSetup","func":"let outputs = [null, null]; // Array für zwei Ausgänge\n\nlet heaterState = null;\n\n// Schleife, um den Zustand des Heater zu finden\nfor (let i = 0; i < msg.payload.heater.length; i++) {\n    if (msg.payload.heater[i].entity_id.includes('heater')) {\n        heaterState = msg.payload.heater[i].value;\n        break;\n    }\n}\n\n// Heater starten\nif (msg.payload.heaterSet.value === \"increased\" && heaterState === \"off\") {\n    outputs[0] = { payload: \"Start Heater\", topic: \"Start\" };\n}\n\n// Heater stoppen\nif (msg.payload.heaterSet.value === \"reduced\" && heaterState === \"on\") {\n    outputs[1] = { payload: \"Stop Heater\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.heaterSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Heater unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2450,"y":2080,"wires":[["6eecb00d9bcacb3d"],["59fa1f2f5f6e1a32"],["9646a423e2e18b94"],[]]},{"id":"269511b2f57d40dd","type":"join","z":"87bab898757000a2","g":"374f076dd54d7035","name":"CoolerData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":2250,"y":2220,"wires":[["21b676be5c79f43f"]]},{"id":"75633ac2d9ec29c2","type":"link in","z":"87bab898757000a2","g":"374f076dd54d7035","name":"link in 42","links":[],"x":2185,"y":2180,"wires":[["269511b2f57d40dd"]]},{"id":"21b676be5c79f43f","type":"function","z":"87bab898757000a2","g":"374f076dd54d7035","name":"CoolerSetup","func":"let outputs = [null, null]; // Array für zwei Ausgänge\n\nlet coolerState = null;\n\n// Schleife, um den Zustand des Cooler zu finden\nfor (let i = 0; i < msg.payload.cooler.length; i++) {\n    if (msg.payload.cooler[i].entity_id.includes('cooler')) {\n        coolerState = msg.payload.cooler[i].value;\n        break;\n    }\n}\n\n// Cooler starten\nif (msg.payload.coolerSet.value === \"increased\" && coolerState === \"off\") {\n    outputs[0] = { payload: \"Start Cooler\", topic: \"Start\" };\n}\n\n// Cooler stoppen\nif (msg.payload.coolerSet.value === \"reduced\" && coolerState === \"on\") {\n    outputs[1] = { payload: \"Stop Cooler\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.coolerSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Cooler unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2450,"y":2220,"wires":[["b3c3886b83a0ea6f"],["7841516b38ab2a6b"],["a0e6583e1313d4c6"],[]]},{"id":"3731cbf407c0b582","type":"join","z":"87bab898757000a2","g":"ce767c02a63518b7","name":"LightData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":2250,"y":2360,"wires":[["db565609719f939d"]]},{"id":"5fb4f622e1888911","type":"link in","z":"87bab898757000a2","g":"ce767c02a63518b7","name":"link in 43","links":[],"x":2185,"y":2320,"wires":[["3731cbf407c0b582"]]},{"id":"db565609719f939d","type":"function","z":"87bab898757000a2","g":"ce767c02a63518b7","name":"LightSetup","func":"let outputs = [null, null]; // Array für zwei Ausgänge\n\nlet lightState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.light.length; i++) {\n    if (msg.payload.light[i].entity_id.includes('light')) {\n        lightState = msg.payload.light[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.lightSet.value === \"increased\" && lightState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.lightSet.value === \"reduced\" && lightState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.lightSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Befeuchter unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2450,"y":2360,"wires":[["d86e3407a4f640f9"],["6ac56048b94fbe2b"],["ad74f1401fcdda47"],[]]},{"id":"4dc00bfeca4e9f9c","type":"join","z":"87bab898757000a2","g":"75e4485df1891a48","name":"VentsData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"4","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"num","reduceFixup":"","x":2230,"y":2500,"wires":[["368db6c2f4f4d498"]]},{"id":"0f18ff02508e83b5","type":"link in","z":"87bab898757000a2","g":"75e4485df1891a48","name":"link in 44","links":[],"x":2175,"y":2460,"wires":[["4dc00bfeca4e9f9c"]]},{"id":"368db6c2f4f4d498","type":"function","z":"87bab898757000a2","g":"75e4485df1891a48","name":"VentsSetup","func":"let outputs = [null, null]; // Array für zwei Ausgänge\n\nlet ventsState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.vents.length; i++) {\n    if (msg.payload.vents[i].entity_id.includes('vents')) {\n        ventsState = msg.payload.vents[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.ventsSet.value === \"increased\" && ventsState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.ventsSet.value === \"reduced\" && ventsState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.ventsSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Befeuchter unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2430,"y":2500,"wires":[["1629a3eede211acb"],["2905c68663ec85a2"],["e81dd2a56311b77e"],[]]},{"id":"f1ed96c84b1e46e1","type":"link out","z":"87bab898757000a2","g":"e0a33e236acb9fce","name":"DehumidiferStart","mode":"link","links":["99832bcde6aaec0d"],"x":2625,"y":1920,"wires":[]},{"id":"abef1da1656fea02","type":"link out","z":"87bab898757000a2","g":"e0a33e236acb9fce","name":"DehumidiferStop","mode":"link","links":["b576fb3aef39185a"],"x":2675,"y":1940,"wires":[]},{"id":"31111db19484adb6","type":"link out","z":"87bab898757000a2","g":"e0a33e236acb9fce","name":"link out 39","mode":"link","links":[],"x":2725,"y":1960,"wires":[]},{"id":"6eecb00d9bcacb3d","type":"link out","z":"87bab898757000a2","g":"061837895c818d51","name":"HeaterStart","mode":"link","links":["958127653d74be3f"],"x":2605,"y":2060,"wires":[]},{"id":"59fa1f2f5f6e1a32","type":"link out","z":"87bab898757000a2","g":"061837895c818d51","name":"HeaterStop","mode":"link","links":["4cbea83396a0f0ac"],"x":2665,"y":2080,"wires":[]},{"id":"9646a423e2e18b94","type":"link out","z":"87bab898757000a2","g":"061837895c818d51","name":"link out 42","mode":"link","links":[],"x":2715,"y":2100,"wires":[]},{"id":"b3c3886b83a0ea6f","type":"link out","z":"87bab898757000a2","g":"374f076dd54d7035","name":"CoolerStart","mode":"link","links":["5a5614359d863721"],"x":2615,"y":2200,"wires":[]},{"id":"7841516b38ab2a6b","type":"link out","z":"87bab898757000a2","g":"374f076dd54d7035","name":"CoolerStop","mode":"link","links":["54ac3c52a83ae28a"],"x":2675,"y":2220,"wires":[]},{"id":"a0e6583e1313d4c6","type":"link out","z":"87bab898757000a2","g":"374f076dd54d7035","name":"link out 45","mode":"link","links":[],"x":2725,"y":2240,"wires":[]},{"id":"d86e3407a4f640f9","type":"link out","z":"87bab898757000a2","g":"ce767c02a63518b7","name":"link out 46","mode":"link","links":[],"x":2585,"y":2340,"wires":[]},{"id":"6ac56048b94fbe2b","type":"link out","z":"87bab898757000a2","g":"ce767c02a63518b7","name":"link out 47","mode":"link","links":[],"x":2645,"y":2360,"wires":[]},{"id":"ad74f1401fcdda47","type":"link out","z":"87bab898757000a2","g":"ce767c02a63518b7","name":"link out 48","mode":"link","links":[],"x":2705,"y":2380,"wires":[]},{"id":"1629a3eede211acb","type":"link out","z":"87bab898757000a2","g":"75e4485df1891a48","name":"link out 49","mode":"link","links":[],"x":2575,"y":2480,"wires":[]},{"id":"2905c68663ec85a2","type":"link out","z":"87bab898757000a2","g":"75e4485df1891a48","name":"link out 50","mode":"link","links":[],"x":2615,"y":2500,"wires":[]},{"id":"e81dd2a56311b77e","type":"link out","z":"87bab898757000a2","g":"75e4485df1891a48","name":"link out 51","mode":"link","links":[],"x":2675,"y":2520,"wires":[]},{"id":"ce9c357652d8fb35","type":"link out","z":"87bab898757000a2","g":"7b4f8e1927d324fc","name":"HumidifierStart","mode":"link","links":["acb0f5addd129adf"],"x":2645,"y":1680,"wires":[]},{"id":"aa5773a7762ec6a1","type":"link out","z":"87bab898757000a2","g":"7b4f8e1927d324fc","name":"HumidifierStop","mode":"link","links":["38a12a509a13d715"],"x":2705,"y":1700,"wires":[]},{"id":"5f10e37424012087","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"Vents-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Ventilation-Wertes\nfunction findVentilationValue(sensors) {\n    const ventilationObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"ventilation\") ||\n        sensor.entity_id.includes(\"fan\") ||\n        sensor.entity_id.includes(\"exhaust\") ||\n        sensor.entity_id.includes(\"airflow\")\n    );\n    return ventilationObject ? ventilationObject.value : null;\n}\n\n// Finden des Ventilation-Wertes\nconst ventilationValue = findVentilationValue(sensors);\n\n// Ausgabe des Ventilation-Wertes zur Überprüfung\n// node.warn(`Ventilation-Wert: ${ventilationValue}`);\n\n// Optional: Speichern des Ventilation-Wertes in msg zur weiteren Verwendung\nmsg.payload = ventilationValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":910,"y":980,"wires":[[]]},{"id":"7b33e1fa9654de02","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"Dehmidifier-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Dehumidifier-Wertes\nfunction findDehumidifierValue(sensors) {\n    const dehumidifierObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"dehumidifier\") || \n        sensor.entity_id.includes(\"humidity\")\n    );\n    return dehumidifierObject ? dehumidifierObject.value : null;\n}\n\n// Finden des Dehumidifier-Wertes\nconst dehumidifierValue = findDehumidifierValue(sensors);\n\n// Ausgabe des Dehumidifier-Wertes zur Überprüfung\n// node.warn(`Dehumidifier-Wert: ${dehumidifierValue}`);\n\n// Optional: Speichern des Dehumidifier-Wertes in msg zur weiteren Verwendung\nmsg.payload = dehumidifierValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":920,"y":1160,"wires":[[]]},{"id":"194edf344188f8d1","type":"ha-sensor","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerExhaustState","entityConfig":"87469d8744ed20ba","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1240,"y":980,"wires":[[]]},{"id":"f1ea259d4cd1ad73","type":"ha-sensor","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerExhaustDutyCycle","entityConfig":"96027b4729ff7383","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1250,"y":1040,"wires":[[]]},{"id":"202dcc5ae6d834d0","type":"link out","z":"87bab898757000a2","g":"7b4f8e1927d324fc","name":"HumidifierMode","mode":"link","links":[],"x":2735,"y":1740,"wires":[]},{"id":"90e7d66de4e646ed","type":"inject","z":"87bab898757000a2","g":"952a4bc7dff3f66a","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"300","crontab":"","once":true,"onceDelay":"15","topic":"","payload":"","payloadType":"date","x":2390,"y":140,"wires":[["ea836fad7734354a"]]},{"id":"dcc4f2b4266ce2c9","type":"ha-sensor","z":"87bab898757000a2","g":"952a4bc7dff3f66a","name":"DLI","entityConfig":"10a55acc5911459b","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":2990,"y":200,"wires":[["f2d5e7c61c28de89"]]},{"id":"75cd81ac71068cbe","type":"ha-sensor","z":"87bab898757000a2","g":"952a4bc7dff3f66a","name":"PPFDFLower","entityConfig":"c58623d735fb8295","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":2990,"y":80,"wires":[["f2d5e7c61c28de89"]]},{"id":"f2d5e7c61c28de89","type":"debug","z":"87bab898757000a2","g":"952a4bc7dff3f66a","name":"debug 39","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":3160,"y":140,"wires":[]},{"id":"34e2ea1867e751f9","type":"function","z":"87bab898757000a2","g":"952a4bc7dff3f66a","name":"Calculate PPFD / DLI Sanlight","func":"// Beispiel für die Eingangsnachricht: { payload: 250 }\n\nconst maxPower = 380;            // Maximale Leistung in Watt\nconst maxPPFD = 1000;            // Maximaler PPFD bei 380 Watt\n\n// PPFD berechnen basierend auf dem aktuellen Wattwert\nconst ppfd = (msg.payload / maxPower) * maxPPFD;\n\n// PPFD auf zwei Nachkommastellen runden\nconst roundedPPFD = parseFloat(ppfd.toFixed(2));\n\n// Berechnung von DLI\nconst secondsPerHour = 3600;\nconst hoursPerDay = 12; // Anzahl der Stunden pro Tag, die das Licht an ist\nlet dli = roundedPPFD * secondsPerHour * hoursPerDay / 1e6;\n\n// DLI auf zwei Nachkommastellen runden\ndli = parseFloat(dli.toFixed(2));\n\n// Erstellen Sie zwei separate Nachrichtenobjekte für die Ausgänge\nconst msg1 = { payload: roundedPPFD }; // für den ersten Output (PPFD), gerundet auf zwei Nachkommastellen\nconst msg2 = { payload: dli };         // für den zweiten Output (DLI), gerundet auf zwei Nachkommastellen\n\n// Rückgabe der Nachrichten in einem Array, wobei jeder Index dem entsprechenden Output entspricht\nreturn [msg1, msg2];","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2790,"y":160,"wires":[["1f21fdc068ba4fdd","75cd81ac71068cbe"],["1f21fdc068ba4fdd","dcc4f2b4266ce2c9"]]},{"id":"ea836fad7734354a","type":"api-current-state","z":"87bab898757000a2","g":"952a4bc7dff3f66a","name":"Flower-LX","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"sensor.flowerlightintense","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":2540,"y":140,"wires":[["34e2ea1867e751f9","1f21fdc068ba4fdd"]]},{"id":"1f21fdc068ba4fdd","type":"debug","z":"87bab898757000a2","g":"952a4bc7dff3f66a","name":"debug 57","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2740,"y":100,"wires":[]},{"id":"c28198e6ee968dbf","type":"comment","z":"87bab898757000a2","g":"ce767c02a63518b7","name":"NOT IMPLEMNTED RIGHT NOW","info":"","x":2390,"y":2360,"wires":[]},{"id":"3f8dbd73b5bb9e6c","type":"comment","z":"87bab898757000a2","g":"75e4485df1891a48","name":"NOT READY","info":"","x":2390,"y":2500,"wires":[]},{"id":"42e2c72bda596b85","type":"function","z":"87bab898757000a2","g":"5cb542e9b231668c","name":"Exhaust Setup","func":"// Hilfsfunktion zur Überprüfung, ob ein Wert numerisch ist\nconst isNumeric = (value) => {\n    return !isNaN(parseFloat(value)) && isFinite(value);\n};\n\n// Funktion zur Bestimmung des dutyCycle-Werts\nconst findDutyCycle = (exhaustArray) => {\n    if (exhaustArray.length === 0) {\n        return null; // Keine Werte zu verarbeiten, wenn das Array leer ist\n    }\n    for (let i = 0; i < exhaustArray.length; i++) {\n        if (isNumeric(exhaustArray[i].value)) {\n            return parseInt(exhaustArray[i].value, 10);\n        }\n    }\n    return null; // Falls kein numerischer Wert gefunden wurde\n};\n\nlet outputs = [null, null, null, null]; // Array für vier Ausgänge\n\n// Zustand der Abluft und Geschwindigkeit aus der Payload extrahieren\nconst exhaustSpeed = msg.payload.exhaustSet.value; // Anpassung hier\nlet exhaustState = 'off'; // Standardwert setzen, falls kein Zustand gefunden wird\nif (msg.payload.Exhaust && msg.payload.Exhaust.length > 0) {\n    const exhaustSwitch = msg.payload.Exhaust.find(e => e.entity_id && e.entity_id.toLowerCase().includes(\"switch\"));\n    if (exhaustSwitch && exhaustSwitch.value) {\n        exhaustState = exhaustSwitch.value;\n    }\n}\n\nconst dutyCycle = findDutyCycle(msg.payload.Exhaust);\n\n// Prüfen, ob ein dutyCycle vorhanden ist\nif (dutyCycle === null) {\n    return outputs; // Kein dutyCycle gefunden, keine Aktion erforderlich\n}\n\nconst percentDifference = parseFloat(msg.payload.exhaustSet.percentDifference);\nlet newDutyCycle = dutyCycle;\n\n// Berechnung des neuen Duty Cycle basierend auf der prozentualen Abweichung\nif (percentDifference !== 0) {\n    if (percentDifference < 0) {\n        // Wenn der Wert negativ ist, erhöhen wir den Duty Cycle\n        newDutyCycle = dutyCycle + Math.abs(percentDifference);\n    } else {\n        // Wenn der Wert positiv ist, verringern wir den Duty Cycle\n        newDutyCycle = dutyCycle - percentDifference;\n    }\n\n    // Stellen Sie sicher, dass der neue Duty Cycle innerhalb der Grenzen liegt\n    newDutyCycle = Math.min(95, Math.max(10, Math.round(newDutyCycle)));\n}\n\n// Abluft starten auf dem ersten Ausgang, wenn sie aus ist und erhöht werden muss\nif (exhaustSpeed === \"increased\" && exhaustState === \"off\") {\n    outputs[0] = { payload: \"Starte Abluft\", topic: \"Start\" };\n    return outputs;\n}\n\n// Abluft-Geschwindigkeit erhöhen, wenn sie bereits eingeschaltet ist\nif (exhaustSpeed === \"increased\" && exhaustState === \"on\") {\n    outputs[2] = { payload: newDutyCycle.toString(), topic: \"Increase\" };\n    return outputs;\n}\n\n// Abluft stoppen auf dem zweiten Ausgang, wenn die Geschwindigkeit reduziert wird und der Duty Cycle sehr niedrig ist\nif (exhaustSpeed === \"reduced\" && exhaustState === \"on\" && newDutyCycle <= 10) {\n    outputs[1] = { payload: \"Stoppe Abluft\", topic: \"Stop\" };\n    return outputs;\n} else if (exhaustSpeed === \"reduced\" && exhaustState === \"on\") {\n    outputs[2] = { payload: newDutyCycle.toString(), topic: \"Decrease\" };\n    return outputs;\n}\n\n// Warnung ausgeben, wenn versucht wird, die Abluftgeschwindigkeit zu reduzieren, obwohl sie bereits aus ist\nif (exhaustSpeed === \"reduced\" && exhaustState === \"off\") {\n    outputs[1] = { payload: \"Abluft bereits gestoppt, kann nicht weiter reduziert werden\", topic: \"AlreadyStopped\" };\n    return outputs;\n}\n\n// Nichts tun, wenn keine Änderung erforderlich ist\nif (exhaustSpeed === \"unchanged\") {\n    outputs[3] = { payload: \"Abluft unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n    return outputs;\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":980,"y":2340,"wires":[["f2694e0f9513439f","2b8aa6fa4287146b"],["d6d07d605b509b9f","2b8aa6fa4287146b"],["9c3fc299c316d9df","2b8aa6fa4287146b"],["2b8aa6fa4287146b"]]},{"id":"4205dce0f9b43395","type":"http request","z":"87bab898757000a2","g":"5cb542e9b231668c","name":"DutyPostChange","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.253:5533/air/ctrl","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":1370,"y":2360,"wires":[["a5f2fd8bd4de83da"]]},{"id":"9c3fc299c316d9df","type":"function","z":"87bab898757000a2","g":"5cb542e9b231668c","name":"DutyChanger","func":"\nconst NewDuty = msg.payload\n\nmsg.payload = { \"newDuty\": NewDuty}\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1190,"y":2360,"wires":[["4205dce0f9b43395","a5f2fd8bd4de83da"]]},{"id":"b450272b0a6bfb38","type":"join","z":"87bab898757000a2","g":"5cb542e9b231668c","name":"exhasutData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":900,"y":2280,"wires":[["42e2c72bda596b85","db42c984cfc3c6eb"]]},{"id":"4ad596727315ba0c","type":"link in","z":"87bab898757000a2","g":"5cb542e9b231668c","name":"ExhaustData","links":["9d125ce221658824"],"x":845,"y":2240,"wires":[["b450272b0a6bfb38"]]},{"id":"f2694e0f9513439f","type":"link out","z":"87bab898757000a2","g":"5cb542e9b231668c","name":"ExhaustFlowerON","mode":"link","links":["55acda8e6f953bc1"],"x":1125,"y":2280,"wires":[]},{"id":"d6d07d605b509b9f","type":"link out","z":"87bab898757000a2","g":"5cb542e9b231668c","name":"ExhaustFlowerOFF","mode":"link","links":["23d01364d3856db1"],"x":1125,"y":2320,"wires":[]},{"id":"a5f2fd8bd4de83da","type":"debug","z":"87bab898757000a2","g":"5cb542e9b231668c","name":"debug 202","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1310,"y":2320,"wires":[]},{"id":"2b8aa6fa4287146b","type":"debug","z":"87bab898757000a2","g":"5cb542e9b231668c","name":"debug 203","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":950,"y":2400,"wires":[]},{"id":"db42c984cfc3c6eb","type":"debug","z":"87bab898757000a2","g":"5cb542e9b231668c","name":"debug 204","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1130,"y":2240,"wires":[]},{"id":"c742defbf802bbdb","type":"function","z":"87bab898757000a2","g":"81987266af5b5d0f","name":"BefeuchterSetup","func":"let outputs = [null, null]; // Array für zwei Ausgänge\n\nlet humidifierState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.humidifier.length; i++) {\n    if (msg.payload.humidifier[i].entity_id.includes('humidifier')) {\n        humidifierState = msg.payload.humidifier[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.humidifierSet.value === \"increased\" && humidifierState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.humidifierSet.value === \"reduced\" && humidifierState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.humidifierSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Befeuchter unverändert, keine Aktion erforderlich\",data:msg.payload, topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1150,"y":2540,"wires":[["375d779e0949166d"],["d7e52f9a26275fcb"],["bb300e0ced84c184","d7e52f9a26275fcb","00c07247d78e056a"],[]]},{"id":"ce80e74b4f0c3169","type":"join","z":"87bab898757000a2","g":"81987266af5b5d0f","name":"HumidityData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":900,"y":2540,"wires":[["c742defbf802bbdb","06864fcb48ef67bd"]]},{"id":"c6952828beed3687","type":"link in","z":"87bab898757000a2","g":"81987266af5b5d0f","name":"HumidifierData","links":["79bde8bec83cb56a"],"x":835,"y":2500,"wires":[["ce80e74b4f0c3169"]]},{"id":"06864fcb48ef67bd","type":"debug","z":"87bab898757000a2","g":"81987266af5b5d0f","name":"debug 205","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1060,"y":2480,"wires":[]},{"id":"bb300e0ced84c184","type":"debug","z":"87bab898757000a2","g":"81987266af5b5d0f","name":"debug 206","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1050,"y":2600,"wires":[]},{"id":"375d779e0949166d","type":"link out","z":"87bab898757000a2","g":"81987266af5b5d0f","name":"HumidifierStart","mode":"link","links":["acb0f5addd129adf"],"x":1305,"y":2500,"wires":[]},{"id":"d7e52f9a26275fcb","type":"link out","z":"87bab898757000a2","g":"81987266af5b5d0f","name":"HumidifierStop","mode":"link","links":["38a12a509a13d715"],"x":1365,"y":2520,"wires":[]},{"id":"00c07247d78e056a","type":"link out","z":"87bab898757000a2","g":"81987266af5b5d0f","name":"HumidifierMode","mode":"link","links":[],"x":1395,"y":2560,"wires":[]},{"id":"47ffae24b00b2672","type":"join","z":"87bab898757000a2","g":"1abfd968b5c48b59","name":"LightData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":910,"y":3180,"wires":[["08978e67fee76396"]]},{"id":"c5631d44ded643ff","type":"link in","z":"87bab898757000a2","g":"1abfd968b5c48b59","name":"link in 69","links":[],"x":845,"y":3140,"wires":[["47ffae24b00b2672"]]},{"id":"08978e67fee76396","type":"function","z":"87bab898757000a2","g":"1abfd968b5c48b59","name":"LightSetup","func":"let outputs = [null, null]; // Array für zwei Ausgänge\n\nlet lightState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.light.length; i++) {\n    if (msg.payload.light[i].entity_id.includes('light')) {\n        lightState = msg.payload.light[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.lightSet.value === \"increased\" && lightState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.lightSet.value === \"reduced\" && lightState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.lightSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Befeuchter unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1110,"y":3180,"wires":[["5be20b2b7060736e"],["ea193e9a809dd292"],["63f114603d508df6"],[]]},{"id":"5be20b2b7060736e","type":"link out","z":"87bab898757000a2","g":"1abfd968b5c48b59","name":"link out 226","mode":"link","links":[],"x":1245,"y":3160,"wires":[]},{"id":"ea193e9a809dd292","type":"link out","z":"87bab898757000a2","g":"1abfd968b5c48b59","name":"link out 227","mode":"link","links":[],"x":1305,"y":3180,"wires":[]},{"id":"63f114603d508df6","type":"link out","z":"87bab898757000a2","g":"1abfd968b5c48b59","name":"link out 228","mode":"link","links":[],"x":1365,"y":3200,"wires":[]},{"id":"4b24403b907dc49b","type":"comment","z":"87bab898757000a2","g":"1abfd968b5c48b59","name":"NOT IMPLEMNTED RIGHT NOW","info":"","x":1050,"y":3180,"wires":[]},{"id":"0d493677b323115e","type":"function","z":"87bab898757000a2","g":"17d639c2d653b0d0","name":"VentsSetup","func":"let outputs = [null, null]; // Array für zwei Ausgänge\n\nlet ventsState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.vents.length; i++) {\n    if (msg.payload.vents[i].entity_id.includes('vents')) {\n        ventsState = msg.payload.vents[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.ventsSet.value === \"increased\" && ventsState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.ventsSet.value === \"reduced\" && ventsState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.ventsSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Befeuchter unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1110,"y":3340,"wires":[["fa3936a3af582bbe"],["3def191c75fd10fb"],["5885ac0314c899cd"],[]]},{"id":"625af5ab649384e9","type":"join","z":"87bab898757000a2","g":"17d639c2d653b0d0","name":"VentsData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"4","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"num","reduceFixup":"","x":910,"y":3340,"wires":[["0d493677b323115e"]]},{"id":"af2f0286e736ba9e","type":"link in","z":"87bab898757000a2","g":"17d639c2d653b0d0","name":"link in 70","links":[],"x":855,"y":3300,"wires":[["625af5ab649384e9"]]},{"id":"fa3936a3af582bbe","type":"link out","z":"87bab898757000a2","g":"17d639c2d653b0d0","name":"link out 229","mode":"link","links":[],"x":1255,"y":3320,"wires":[]},{"id":"3def191c75fd10fb","type":"link out","z":"87bab898757000a2","g":"17d639c2d653b0d0","name":"link out 230","mode":"link","links":[],"x":1295,"y":3340,"wires":[]},{"id":"5885ac0314c899cd","type":"link out","z":"87bab898757000a2","g":"17d639c2d653b0d0","name":"link out 231","mode":"link","links":[],"x":1355,"y":3360,"wires":[]},{"id":"9dd23f1ec5c1b9af","type":"comment","z":"87bab898757000a2","g":"17d639c2d653b0d0","name":"NOT READY","info":"","x":1070,"y":3340,"wires":[]},{"id":"38063a14958a4bb2","type":"function","z":"87bab898757000a2","g":"baea7e0570065c00","name":"DehumidifierSetup","func":"let outputs = [null, null]; // Array für zwei Ausgänge\n\nlet dehumidifierState = null;\n\n// Schleife, um den Zustand des Dehumidifier zu finden\nfor (let i = 0; i < msg.payload.dehumidifier.length; i++) {\n    if (msg.payload.dehumidifier[i].entity_id.includes('dehumidifier')) {\n        dehumidifierState = msg.payload.dehumidifier[i].value;\n        break;\n    }\n}\n\n// Dehumidifier starten\nif (msg.payload.dehumidifierSet.value === \"increased\" && dehumidifierState === \"off\") {\n    outputs[0] = { payload: \"Starte Dehumidifier\", topic: \"Start\" };\n}\n\n// Dehumidifier stoppen\nif (msg.payload.dehumidifierSet.value === \"reduced\" && dehumidifierState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Dehumidifier\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.dehumidifierSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Dehumidifier unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1130,"y":2740,"wires":[["e38feae8aeb3e604"],["d8fd91bf4fabc3c5"],["a2808d700e0c9aec"],[]]},{"id":"5bcd88519979bcf2","type":"join","z":"87bab898757000a2","g":"baea7e0570065c00","name":"DehumidifierData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":910,"y":2740,"wires":[["38063a14958a4bb2"]]},{"id":"871841fd35ad901a","type":"link in","z":"87bab898757000a2","g":"baea7e0570065c00","name":"Dehumidifier","links":[],"x":835,"y":2700,"wires":[["5bcd88519979bcf2"]]},{"id":"e38feae8aeb3e604","type":"link out","z":"87bab898757000a2","g":"baea7e0570065c00","name":"DehumidiferStart","mode":"link","links":["99832bcde6aaec0d"],"x":1285,"y":2720,"wires":[]},{"id":"d8fd91bf4fabc3c5","type":"link out","z":"87bab898757000a2","g":"baea7e0570065c00","name":"DehumidiferStop","mode":"link","links":["b576fb3aef39185a"],"x":1335,"y":2740,"wires":[]},{"id":"a2808d700e0c9aec","type":"link out","z":"87bab898757000a2","g":"baea7e0570065c00","name":"link out 232","mode":"link","links":[],"x":1385,"y":2760,"wires":[]},{"id":"cb5dc0c35fcb1d14","type":"function","z":"87bab898757000a2","g":"0d9a6eb3f7c88499","name":"HeaterSetup","func":"let outputs = [null, null]; // Array für zwei Ausgänge\n\nlet heaterState = null;\n\n// Schleife, um den Zustand des Heater zu finden\nfor (let i = 0; i < msg.payload.heater.length; i++) {\n    if (msg.payload.heater[i].entity_id.includes('heater')) {\n        heaterState = msg.payload.heater[i].value;\n        break;\n    }\n}\n\n// Heater starten\nif (msg.payload.heaterSet.value === \"increased\" && heaterState === \"off\") {\n    outputs[0] = { payload: \"Start Heater\", topic: \"Start\" };\n}\n\n// Heater stoppen\nif (msg.payload.heaterSet.value === \"reduced\" && heaterState === \"on\") {\n    outputs[1] = { payload: \"Stop Heater\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.heaterSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Heater unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1110,"y":2900,"wires":[["fc9c48027aed9dfd"],["29c058ed777577ad"],["c09cffbee09fcb77"],[]]},{"id":"1edf2bc707797373","type":"join","z":"87bab898757000a2","g":"0d9a6eb3f7c88499","name":"HeaterData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":910,"y":2900,"wires":[["cb5dc0c35fcb1d14"]]},{"id":"61c54cc3b330ae33","type":"link in","z":"87bab898757000a2","g":"0d9a6eb3f7c88499","name":"link in 71","links":[],"x":845,"y":2860,"wires":[["1edf2bc707797373"]]},{"id":"fc9c48027aed9dfd","type":"link out","z":"87bab898757000a2","g":"0d9a6eb3f7c88499","name":"HeaterStart","mode":"link","links":["958127653d74be3f"],"x":1265,"y":2880,"wires":[]},{"id":"29c058ed777577ad","type":"link out","z":"87bab898757000a2","g":"0d9a6eb3f7c88499","name":"HeaterStop","mode":"link","links":["4cbea83396a0f0ac"],"x":1325,"y":2900,"wires":[]},{"id":"c09cffbee09fcb77","type":"link out","z":"87bab898757000a2","g":"0d9a6eb3f7c88499","name":"link out 233","mode":"link","links":[],"x":1375,"y":2920,"wires":[]},{"id":"1ec492ebf534af74","type":"join","z":"87bab898757000a2","g":"c44580117a7fcb7a","name":"CoolerData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":910,"y":3040,"wires":[["2aa9227a3c950e0b"]]},{"id":"0c161b5cfee11cf3","type":"link in","z":"87bab898757000a2","g":"c44580117a7fcb7a","name":"link in 72","links":[],"x":845,"y":3000,"wires":[["1ec492ebf534af74"]]},{"id":"2aa9227a3c950e0b","type":"function","z":"87bab898757000a2","g":"c44580117a7fcb7a","name":"CoolerSetup","func":"let outputs = [null, null]; // Array für zwei Ausgänge\n\nlet coolerState = null;\n\n// Schleife, um den Zustand des Cooler zu finden\nfor (let i = 0; i < msg.payload.cooler.length; i++) {\n    if (msg.payload.cooler[i].entity_id.includes('cooler')) {\n        coolerState = msg.payload.cooler[i].value;\n        break;\n    }\n}\n\n// Cooler starten\nif (msg.payload.coolerSet.value === \"increased\" && coolerState === \"off\") {\n    outputs[0] = { payload: \"Start Cooler\", topic: \"Start\" };\n}\n\n// Cooler stoppen\nif (msg.payload.coolerSet.value === \"reduced\" && coolerState === \"on\") {\n    outputs[1] = { payload: \"Stop Cooler\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.coolerSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Cooler unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1110,"y":3040,"wires":[["0b366bfd2dbe21b8"],["15a88cdb06cd6786"],["eb765bd6a74a15c1"],[]]},{"id":"0b366bfd2dbe21b8","type":"link out","z":"87bab898757000a2","g":"c44580117a7fcb7a","name":"CoolerStart","mode":"link","links":["5a5614359d863721"],"x":1275,"y":3020,"wires":[]},{"id":"15a88cdb06cd6786","type":"link out","z":"87bab898757000a2","g":"c44580117a7fcb7a","name":"CoolerStop","mode":"link","links":["54ac3c52a83ae28a"],"x":1335,"y":3040,"wires":[]},{"id":"eb765bd6a74a15c1","type":"link out","z":"87bab898757000a2","g":"c44580117a7fcb7a","name":"link out 234","mode":"link","links":[],"x":1385,"y":3060,"wires":[]},{"id":"94bfb7e91f8b5674","type":"function","z":"87bab898757000a2","g":"34aef9ddeaf4182a","name":"Exhaust Setup","func":"// Hilfsfunktion zur Überprüfung, ob ein Wert numerisch ist\nconst isNumeric = (value) => {\n    return !isNaN(parseFloat(value)) && isFinite(value);\n};\n\n// Funktion zur Bestimmung des dutyCycle-Werts\nconst findDutyCycle = (exhaustArray) => {\n    if (exhaustArray.length === 0) {\n        return null; // Keine Werte zu verarbeiten, wenn das Array leer ist\n    }\n    for (let i = 0; i < exhaustArray.length; i++) {\n        if (isNumeric(exhaustArray[i].value)) {\n            return parseInt(exhaustArray[i].value, 10);\n        }\n    }\n    return null; // Falls kein numerischer Wert gefunden wurde\n};\n\nlet outputs = [null, null, null, null]; // Array für vier Ausgänge\n\n// Zustand der Abluft und Geschwindigkeit aus der Payload extrahieren\nconst exhaustSpeed = msg.payload.exhaustSet.value; // Anpassung hier\nlet exhaustState = 'off'; // Standardwert setzen, falls kein Zustand gefunden wird\nif (msg.payload.Exhaust && msg.payload.Exhaust.length > 0) {\n    const exhaustSwitch = msg.payload.Exhaust.find(e => e.entity_id && e.entity_id.toLowerCase().includes(\"switch\"));\n    if (exhaustSwitch && exhaustSwitch.value) {\n        exhaustState = exhaustSwitch.value;\n    }\n}\n\nconst dutyCycle = findDutyCycle(msg.payload.Exhaust);\n\n// Prüfen, ob ein dutyCycle vorhanden ist\nif (dutyCycle === null) {\n    return outputs; // Kein dutyCycle gefunden, keine Aktion erforderlich\n}\n\nconst percentDifference = parseFloat(msg.payload.exhaustSet.percentDifference);\nlet newDutyCycle = dutyCycle;\n\n// Berechnung des neuen Duty Cycle basierend auf der prozentualen Abweichung\nif (percentDifference !== 0) {\n    if (percentDifference < 0) {\n        // Wenn der Wert negativ ist, erhöhen wir den Duty Cycle\n        newDutyCycle = dutyCycle + Math.abs(percentDifference);\n    } else {\n        // Wenn der Wert positiv ist, verringern wir den Duty Cycle\n        newDutyCycle = dutyCycle - percentDifference;\n    }\n\n    // Stellen Sie sicher, dass der neue Duty Cycle innerhalb der Grenzen liegt\n    newDutyCycle = Math.min(95, Math.max(10, Math.round(newDutyCycle)));\n}\n\n// Abluft starten auf dem ersten Ausgang, wenn sie aus ist und erhöht werden muss\nif (exhaustSpeed === \"increased\" && exhaustState === \"off\") {\n    outputs[0] = { payload: \"Starte Abluft\", topic: \"Start\" };\n    return outputs;\n}\n\n// Abluft-Geschwindigkeit erhöhen, wenn sie bereits eingeschaltet ist\nif (exhaustSpeed === \"increased\" && exhaustState === \"on\") {\n    outputs[2] = { payload: newDutyCycle.toString(), topic: \"Increase\" };\n    return outputs;\n}\n\n// Abluft stoppen auf dem zweiten Ausgang, wenn die Geschwindigkeit reduziert wird und der Duty Cycle sehr niedrig ist\nif (exhaustSpeed === \"reduced\" && exhaustState === \"on\" && newDutyCycle <= 10) {\n    outputs[1] = { payload: \"Stoppe Abluft\", topic: \"Stop\" };\n    return outputs;\n} else if (exhaustSpeed === \"reduced\" && exhaustState === \"on\") {\n    outputs[2] = { payload: newDutyCycle.toString(), topic: \"Decrease\" };\n    return outputs;\n}\n\n// Warnung ausgeben, wenn versucht wird, die Abluftgeschwindigkeit zu reduzieren, obwohl sie bereits aus ist\nif (exhaustSpeed === \"reduced\" && exhaustState === \"off\") {\n    outputs[1] = { payload: \"Abluft bereits gestoppt, kann nicht weiter reduziert werden\", topic: \"AlreadyStopped\" };\n    return outputs;\n}\n\n// Nichts tun, wenn keine Änderung erforderlich ist\nif (exhaustSpeed === \"unchanged\") {\n    outputs[3] = { payload: \"Abluft unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n    return outputs;\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1000,"y":3600,"wires":[["78ae52d514d16f60","d4df1bd0d38045a5"],["823cc06908fe0581","d4df1bd0d38045a5"],["d82a5348498d94b9","d4df1bd0d38045a5"],["d4df1bd0d38045a5"]]},{"id":"86b38ecb7d5a7f2f","type":"http request","z":"87bab898757000a2","g":"34aef9ddeaf4182a","name":"DutyPostChange","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.253:5533/air/ctrl","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":1390,"y":3620,"wires":[["4b3658d446c38c96"]]},{"id":"d82a5348498d94b9","type":"function","z":"87bab898757000a2","g":"34aef9ddeaf4182a","name":"DutyChanger","func":"\nconst NewDuty = msg.payload\n\nmsg.payload = { \"newDuty\": NewDuty}\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1210,"y":3620,"wires":[["86b38ecb7d5a7f2f","4b3658d446c38c96"]]},{"id":"17d2dff4e6e6b9d5","type":"join","z":"87bab898757000a2","g":"34aef9ddeaf4182a","name":"exhasutData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":920,"y":3540,"wires":[["94bfb7e91f8b5674","5dcc5c3453990a99"]]},{"id":"e705047b1a410ff1","type":"link in","z":"87bab898757000a2","g":"34aef9ddeaf4182a","name":"ExhaustData","links":["9d125ce221658824"],"x":865,"y":3500,"wires":[["17d2dff4e6e6b9d5"]]},{"id":"78ae52d514d16f60","type":"link out","z":"87bab898757000a2","g":"34aef9ddeaf4182a","name":"ExhaustFlowerON","mode":"link","links":["55acda8e6f953bc1"],"x":1145,"y":3540,"wires":[]},{"id":"823cc06908fe0581","type":"link out","z":"87bab898757000a2","g":"34aef9ddeaf4182a","name":"ExhaustFlowerOFF","mode":"link","links":["23d01364d3856db1"],"x":1145,"y":3580,"wires":[]},{"id":"4b3658d446c38c96","type":"debug","z":"87bab898757000a2","g":"34aef9ddeaf4182a","name":"debug 207","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1330,"y":3580,"wires":[]},{"id":"d4df1bd0d38045a5","type":"debug","z":"87bab898757000a2","g":"34aef9ddeaf4182a","name":"debug 208","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1090,"y":3680,"wires":[]},{"id":"5dcc5c3453990a99","type":"debug","z":"87bab898757000a2","g":"34aef9ddeaf4182a","name":"debug 209","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1050,"y":3480,"wires":[]},{"id":"928397ec435b4776","type":"function","z":"87bab898757000a2","g":"b0265c6efd223fe2","name":"BefeuchterSetup","func":"let outputs = [null, null]; // Array für zwei Ausgänge\n\nlet humidifierState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.humidifier.length; i++) {\n    if (msg.payload.humidifier[i].entity_id.includes('humidifier')) {\n        humidifierState = msg.payload.humidifier[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.humidifierSet.value === \"increased\" && humidifierState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.humidifierSet.value === \"reduced\" && humidifierState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.humidifierSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Befeuchter unverändert, keine Aktion erforderlich\",data:msg.payload, topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1170,"y":3820,"wires":[["e8d14de801bad46b"],["b6d8036882fb0315"],["e4d7bc16f411e836","b6d8036882fb0315","70b503d9f70be854"],[]]},{"id":"bfbd9b30c217d194","type":"join","z":"87bab898757000a2","g":"b0265c6efd223fe2","name":"HumidityData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":920,"y":3820,"wires":[["928397ec435b4776","ea36d3f7b30be7af"]]},{"id":"5250abb0abece036","type":"link in","z":"87bab898757000a2","g":"b0265c6efd223fe2","name":"HumidifierData","links":["79bde8bec83cb56a"],"x":855,"y":3780,"wires":[["bfbd9b30c217d194"]]},{"id":"ea36d3f7b30be7af","type":"debug","z":"87bab898757000a2","g":"b0265c6efd223fe2","name":"debug 210","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1080,"y":3760,"wires":[]},{"id":"e4d7bc16f411e836","type":"debug","z":"87bab898757000a2","g":"b0265c6efd223fe2","name":"debug 211","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1070,"y":3880,"wires":[]},{"id":"e8d14de801bad46b","type":"link out","z":"87bab898757000a2","g":"b0265c6efd223fe2","name":"HumidifierStart","mode":"link","links":["acb0f5addd129adf"],"x":1325,"y":3780,"wires":[]},{"id":"b6d8036882fb0315","type":"link out","z":"87bab898757000a2","g":"b0265c6efd223fe2","name":"HumidifierStop","mode":"link","links":["38a12a509a13d715"],"x":1385,"y":3800,"wires":[]},{"id":"70b503d9f70be854","type":"link out","z":"87bab898757000a2","g":"b0265c6efd223fe2","name":"HumidifierMode","mode":"link","links":[],"x":1415,"y":3840,"wires":[]},{"id":"d5ef25611722e6a9","type":"join","z":"87bab898757000a2","g":"b2941bd36f42936c","name":"LightData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":930,"y":4460,"wires":[["8e161a20289c233c"]]},{"id":"cef9d65266276d66","type":"link in","z":"87bab898757000a2","g":"b2941bd36f42936c","name":"link in 73","links":[],"x":865,"y":4420,"wires":[["d5ef25611722e6a9"]]},{"id":"8e161a20289c233c","type":"function","z":"87bab898757000a2","g":"b2941bd36f42936c","name":"LightSetup","func":"let outputs = [null, null]; // Array für zwei Ausgänge\n\nlet lightState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.light.length; i++) {\n    if (msg.payload.light[i].entity_id.includes('light')) {\n        lightState = msg.payload.light[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.lightSet.value === \"increased\" && lightState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.lightSet.value === \"reduced\" && lightState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.lightSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Befeuchter unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1130,"y":4460,"wires":[["9f9443e6d4c2c609"],["a6778dbdae56c316"],["d8109ab529567d6e"],[]]},{"id":"9f9443e6d4c2c609","type":"link out","z":"87bab898757000a2","g":"b2941bd36f42936c","name":"link out 235","mode":"link","links":[],"x":1265,"y":4440,"wires":[]},{"id":"a6778dbdae56c316","type":"link out","z":"87bab898757000a2","g":"b2941bd36f42936c","name":"link out 236","mode":"link","links":[],"x":1325,"y":4460,"wires":[]},{"id":"d8109ab529567d6e","type":"link out","z":"87bab898757000a2","g":"b2941bd36f42936c","name":"link out 237","mode":"link","links":[],"x":1385,"y":4480,"wires":[]},{"id":"749b4d1c28ac4963","type":"comment","z":"87bab898757000a2","g":"b2941bd36f42936c","name":"NOT IMPLEMNTED RIGHT NOW","info":"","x":1070,"y":4460,"wires":[]},{"id":"97e779233af476c5","type":"function","z":"87bab898757000a2","g":"12d89e0a67715ef8","name":"VentsSetup","func":"let outputs = [null, null]; // Array für zwei Ausgänge\n\nlet ventsState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.vents.length; i++) {\n    if (msg.payload.vents[i].entity_id.includes('vents')) {\n        ventsState = msg.payload.vents[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.ventsSet.value === \"increased\" && ventsState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.ventsSet.value === \"reduced\" && ventsState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.ventsSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Befeuchter unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1130,"y":4620,"wires":[["ad5822edfe94c662"],["bb58b49ed058723c"],["98d32b41f170df22"],[]]},{"id":"f46b666e01621da8","type":"join","z":"87bab898757000a2","g":"12d89e0a67715ef8","name":"VentsData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"4","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"num","reduceFixup":"","x":930,"y":4620,"wires":[["97e779233af476c5"]]},{"id":"64086f50f3158f39","type":"link in","z":"87bab898757000a2","g":"12d89e0a67715ef8","name":"link in 74","links":[],"x":875,"y":4580,"wires":[["f46b666e01621da8"]]},{"id":"ad5822edfe94c662","type":"link out","z":"87bab898757000a2","g":"12d89e0a67715ef8","name":"link out 238","mode":"link","links":[],"x":1275,"y":4600,"wires":[]},{"id":"bb58b49ed058723c","type":"link out","z":"87bab898757000a2","g":"12d89e0a67715ef8","name":"link out 239","mode":"link","links":[],"x":1315,"y":4620,"wires":[]},{"id":"98d32b41f170df22","type":"link out","z":"87bab898757000a2","g":"12d89e0a67715ef8","name":"link out 240","mode":"link","links":[],"x":1375,"y":4640,"wires":[]},{"id":"eabc5afdc7486d58","type":"comment","z":"87bab898757000a2","g":"12d89e0a67715ef8","name":"NOT READY","info":"","x":1090,"y":4620,"wires":[]},{"id":"373403c70d18ed2e","type":"function","z":"87bab898757000a2","g":"924791273d1f0464","name":"DehumidifierSetup","func":"let outputs = [null, null]; // Array für zwei Ausgänge\n\nlet dehumidifierState = null;\n\n// Schleife, um den Zustand des Dehumidifier zu finden\nfor (let i = 0; i < msg.payload.dehumidifier.length; i++) {\n    if (msg.payload.dehumidifier[i].entity_id.includes('dehumidifier')) {\n        dehumidifierState = msg.payload.dehumidifier[i].value;\n        break;\n    }\n}\n\n// Dehumidifier starten\nif (msg.payload.dehumidifierSet.value === \"increased\" && dehumidifierState === \"off\") {\n    outputs[0] = { payload: \"Starte Dehumidifier\", topic: \"Start\" };\n}\n\n// Dehumidifier stoppen\nif (msg.payload.dehumidifierSet.value === \"reduced\" && dehumidifierState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Dehumidifier\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.dehumidifierSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Dehumidifier unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1150,"y":4020,"wires":[["2a9f9087dc56f131"],["6e03a74882a0defb"],["056359bb9ab228ce"],[]]},{"id":"0550e27bc4f11b6f","type":"join","z":"87bab898757000a2","g":"924791273d1f0464","name":"DehumidifierData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":930,"y":4020,"wires":[["373403c70d18ed2e"]]},{"id":"37cea002b8b4bca6","type":"link in","z":"87bab898757000a2","g":"924791273d1f0464","name":"Dehumidifier","links":[],"x":855,"y":3980,"wires":[["0550e27bc4f11b6f"]]},{"id":"2a9f9087dc56f131","type":"link out","z":"87bab898757000a2","g":"924791273d1f0464","name":"DehumidiferStart","mode":"link","links":["99832bcde6aaec0d"],"x":1305,"y":4000,"wires":[]},{"id":"6e03a74882a0defb","type":"link out","z":"87bab898757000a2","g":"924791273d1f0464","name":"DehumidiferStop","mode":"link","links":["b576fb3aef39185a"],"x":1355,"y":4020,"wires":[]},{"id":"056359bb9ab228ce","type":"link out","z":"87bab898757000a2","g":"924791273d1f0464","name":"link out 241","mode":"link","links":[],"x":1405,"y":4040,"wires":[]},{"id":"b64058966bc2b03a","type":"function","z":"87bab898757000a2","g":"07e412f9e1dd538e","name":"HeaterSetup","func":"let outputs = [null, null]; // Array für zwei Ausgänge\n\nlet heaterState = null;\n\n// Schleife, um den Zustand des Heater zu finden\nfor (let i = 0; i < msg.payload.heater.length; i++) {\n    if (msg.payload.heater[i].entity_id.includes('heater')) {\n        heaterState = msg.payload.heater[i].value;\n        break;\n    }\n}\n\n// Heater starten\nif (msg.payload.heaterSet.value === \"increased\" && heaterState === \"off\") {\n    outputs[0] = { payload: \"Start Heater\", topic: \"Start\" };\n}\n\n// Heater stoppen\nif (msg.payload.heaterSet.value === \"reduced\" && heaterState === \"on\") {\n    outputs[1] = { payload: \"Stop Heater\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.heaterSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Heater unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1130,"y":4180,"wires":[["398f75acb586fac8"],["7bf434e4292d2327"],["c1b24bccf2e7d5a7"],[]]},{"id":"26cedfa8d1203037","type":"join","z":"87bab898757000a2","g":"07e412f9e1dd538e","name":"HeaterData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":930,"y":4180,"wires":[["b64058966bc2b03a"]]},{"id":"623303e267deef2d","type":"link in","z":"87bab898757000a2","g":"07e412f9e1dd538e","name":"link in 75","links":[],"x":865,"y":4140,"wires":[["26cedfa8d1203037"]]},{"id":"398f75acb586fac8","type":"link out","z":"87bab898757000a2","g":"07e412f9e1dd538e","name":"HeaterStart","mode":"link","links":["958127653d74be3f"],"x":1285,"y":4160,"wires":[]},{"id":"7bf434e4292d2327","type":"link out","z":"87bab898757000a2","g":"07e412f9e1dd538e","name":"HeaterStop","mode":"link","links":["4cbea83396a0f0ac"],"x":1345,"y":4180,"wires":[]},{"id":"c1b24bccf2e7d5a7","type":"link out","z":"87bab898757000a2","g":"07e412f9e1dd538e","name":"link out 242","mode":"link","links":[],"x":1395,"y":4200,"wires":[]},{"id":"faf00348be972d39","type":"join","z":"87bab898757000a2","g":"bfb1374fcf5b48b9","name":"CoolerData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":930,"y":4320,"wires":[["36903ebd466f326d"]]},{"id":"303dad00f2afe923","type":"link in","z":"87bab898757000a2","g":"bfb1374fcf5b48b9","name":"link in 76","links":[],"x":865,"y":4280,"wires":[["faf00348be972d39"]]},{"id":"36903ebd466f326d","type":"function","z":"87bab898757000a2","g":"bfb1374fcf5b48b9","name":"CoolerSetup","func":"let outputs = [null, null]; // Array für zwei Ausgänge\n\nlet coolerState = null;\n\n// Schleife, um den Zustand des Cooler zu finden\nfor (let i = 0; i < msg.payload.cooler.length; i++) {\n    if (msg.payload.cooler[i].entity_id.includes('cooler')) {\n        coolerState = msg.payload.cooler[i].value;\n        break;\n    }\n}\n\n// Cooler starten\nif (msg.payload.coolerSet.value === \"increased\" && coolerState === \"off\") {\n    outputs[0] = { payload: \"Start Cooler\", topic: \"Start\" };\n}\n\n// Cooler stoppen\nif (msg.payload.coolerSet.value === \"reduced\" && coolerState === \"on\") {\n    outputs[1] = { payload: \"Stop Cooler\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.coolerSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Cooler unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1130,"y":4320,"wires":[["3df780562aaccd0e"],["d2ed257429706836"],["e6f79e1c57373dcd"],[]]},{"id":"3df780562aaccd0e","type":"link out","z":"87bab898757000a2","g":"bfb1374fcf5b48b9","name":"CoolerStart","mode":"link","links":["5a5614359d863721"],"x":1295,"y":4300,"wires":[]},{"id":"d2ed257429706836","type":"link out","z":"87bab898757000a2","g":"bfb1374fcf5b48b9","name":"CoolerStop","mode":"link","links":["54ac3c52a83ae28a"],"x":1355,"y":4320,"wires":[]},{"id":"e6f79e1c57373dcd","type":"link out","z":"87bab898757000a2","g":"bfb1374fcf5b48b9","name":"link out 243","mode":"link","links":[],"x":1405,"y":4340,"wires":[]},{"id":"5772bf4c.b461d","type":"server","name":"OpenGrowBox","version":5,"addon":true,"rejectUnauthorizedCerts":true,"ha_boolean":"y|yes|true|on|home|open","connectionDelay":true,"cacheJson":true,"heartbeat":false,"heartbeatInterval":"30","areaSelector":"friendlyName","deviceSelector":"friendlyName","entitySelector":"friendlyName","statusSeparator":"at: ","statusYear":"hidden","statusMonth":"short","statusDay":"numeric","statusHourCycle":"h23","statusTimeFormat":"h:m","enableGlobalContextStore":true},{"id":"532f3d1e489722da","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerAVGHum","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerAVGHum"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"humidity"},{"property":"unit_of_measurement","value":"%"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"edc405a70462ce85","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerAVGTemp","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerAVGTemp"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"temperature"},{"property":"unit_of_measurement","value":"°C"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"1a9ed93138063774","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"vpdflower","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VPD-Flower"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"pressure"},{"property":"unit_of_measurement","value":"kPa"},{"property":"state_class","value":"measurement"}],"resend":true,"debugEnabled":false},{"id":"0741c8a3236b491c","type":"ha-entity-config","server":"home-assistant-server","deviceConfig":"","name":"FlowerAVGDewPoint","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerAVGDewPoint"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"temperature"},{"property":"unit_of_measurement","value":"°C"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"4c5909d829f0f2cf","type":"ha-entity-config","server":"home-assistant-server","deviceConfig":"","name":"FlowerCO2","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerCO2"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"carbon_dioxide"},{"property":"unit_of_measurement","value":"ppm"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"ee6603a7841f90d7","type":"ha-entity-config","server":"home-assistant-server","deviceConfig":"","name":"FlowerPressure","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerPressure"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"pressure"},{"property":"unit_of_measurement","value":"kPa"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"b48068e2b6382f35","type":"ha-entity-config","server":"home-assistant-server","deviceConfig":"","name":"FlowerMoisture","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerMoisture"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"moisture"},{"property":"unit_of_measurement","value":"%"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"2150742022321ba4","type":"ha-entity-config","server":"home-assistant-server","deviceConfig":"","name":"FlowerBatterieDevices","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerBatterieDevices"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"battery"},{"property":"unit_of_measurement","value":"%"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"6938113c94cc6c5d","type":"ha-entity-config","server":"home-assistant-server","deviceConfig":"","name":"FlowerRootTemp","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerRootTemp"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"temperature"},{"property":"unit_of_measurement","value":"°C"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"2acab65eb8c7d7db","type":"ha-entity-config","server":"home-assistant-server","deviceConfig":"","name":"FlowerEC","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerEC"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":""},{"property":"unit_of_measurement","value":"µS/cm"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"6584d61dadd6110e","type":"ha-entity-config","server":"home-assistant-server","deviceConfig":"","name":"FLowerLightIntense","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FLowerLightIntense"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":"illuminance"},{"property":"unit_of_measurement","value":"lx"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"0628161aa905c63c","type":"ha-entity-config","server":"home-assistant-server","deviceConfig":"","name":"FlowerPowerConsume","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerPowerConsume"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"power"},{"property":"unit_of_measurement","value":"W"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"87469d8744ed20ba","type":"ha-entity-config","server":"home-assistant-server","deviceConfig":"","name":"FlowerExhaustState","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerExhaustState"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":""},{"property":"unit_of_measurement","value":""},{"property":"state_class","value":""}],"resend":false,"debugEnabled":false},{"id":"96027b4729ff7383","type":"ha-entity-config","server":"home-assistant-server","deviceConfig":"","name":"FlowerExhaustDutyCycle","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerExhaustDutyCycle"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"battery"},{"property":"unit_of_measurement","value":"%"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"10a55acc5911459b","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"DLI","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"DLI"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":""},{"property":"unit_of_measurement","value":"mol/m²/d"},{"property":"state_class","value":""}],"resend":false,"debugEnabled":false},{"id":"c58623d735fb8295","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"PPFD","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"PPFD"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":""},{"property":"unit_of_measurement","value":"µmol/m²s"},{"property":"state_class","value":""}],"resend":false,"debugEnabled":false},{"id":"home-assistant-server","type":"server","name":"Home Assistant","addon":true}]