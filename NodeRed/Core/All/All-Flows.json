[{"id":"7dbb001f4a12c33e","type":"tab","label":"Master","disabled":false,"info":"","env":[]},{"id":"06acd4b20e43ebca","type":"tab","label":"Globals","disabled":false,"info":"","env":[]},{"id":"f5216914e209e4aa","type":"tab","label":"TargetDevices","disabled":false,"info":"","env":[]},{"id":"87bab898757000a2","type":"tab","label":"FlowerCtrl","disabled":false,"info":"","env":[]},{"id":"3752d27d7587c957","type":"tab","label":"VeggiCtrl","disabled":false,"info":"","env":[]},{"id":"d95a2d1f80d65696","type":"tab","label":"DryingCtrl","disabled":false,"info":"","env":[]},{"id":"3eced32f6afec9ad","type":"tab","label":"RuckECControll","disabled":false,"info":"","env":[]},{"id":"837562a29cc16bf1","type":"tab","label":"Template","disabled":false,"info":"","env":[]},{"id":"0dd1d006a8b8f409","type":"subflow","name":"[DC] AC Control","info":"","category":"","in":[{"x":80,"y":140,"wires":[{"id":"9afc0850d308ec1d"}]}],"out":[],"env":[],"meta":{},"color":"#DDAA99"},{"id":"4fa2fd5f290d5aa6","type":"subflow","name":"[AC] Static Mode","info":"","category":"","in":[{"x":60,"y":100,"wires":[]}],"out":[],"env":[],"meta":{"module":"Static Mode","author":"GrowBot Open Source","license":"MIT"},"color":"#DDAA99"},{"id":"7236f08e93d54df7","type":"group","z":"7dbb001f4a12c33e","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["2d557ea78433109d","8d9fd654ae8aaec2","4d54e84af3d4b81c","9aee886e8e0fa11b","78f51155f8c50460","0a30a4555f40a167","dd6b14b460dab075","2ba711e98d827f28","5016bb031906d635","22a1d3e6ac107c3f","01cce3f8bf2a66d3","c561d85b1dda300e","fd2b9c6859eb1484","f0449f704d2f7c8a","da6c2e0c92ff7e70","311ee520c3f61f77","b221316ab2b19880","e2a9c4cfd27a3aa1","2f4fb16684615c04","9f67d85122ac891e"],"x":34,"y":819,"w":1392,"h":422},{"id":"28b0d068c70f684b","type":"group","z":"06acd4b20e43ebca","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["7133652db17a3480","342da06502c76007","d6e04975e1781dab","e0f06675a0f57c06"],"x":274,"y":79,"w":302,"h":162},{"id":"404d0274840916c7","type":"group","z":"06acd4b20e43ebca","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["8d521c0ad25a2741","498b420139c68178","a0636a9942a1768d","eb1e14424fc44d32"],"x":654,"y":79,"w":282,"h":162},{"id":"2ed032bcd8d8fc97","type":"group","z":"06acd4b20e43ebca","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["ca0d96c34b0b2594","fbe145fbf1efc03b","fe6c5b1df641bf24"],"x":14,"y":139,"w":212,"h":182},{"id":"570df94b7b8fd3db","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["afeb5423a6f3b5db","bab58a1e055f1530","fb64d5b83ef0f886","718bc098c204f567","1fc52b3283aabd93","cf64ead2f0f9c53f","7856db1b9077bca0","5e2b8fb494e4ebfe","7e8b342e3753e452","808f10a848fd1bbc","8478947630a71dd8","60320ccde9c6bb77","90926a27b0c54411","5cfa060f5b8332cf","e85f06938d85911a"],"x":1914,"y":1159,"w":792,"h":382},{"id":"6abebfeb172743b0","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["f1b0b6e3183aaeab","2e49f2a877dc0908","e878287b07f180fd","78d116b1f17e53a9","cb901688be6c0de1","546819f8bcf743d9","7b3614a53b99b56b","e6b2c630db705db7","a7faaa78e3ab3a02","e3900c6fcb1518f1","76500f9124621519","10c052baa77914bd","c8950634986ed39f","6b7c54b84d733581","b5790a0ccc6a2965","464ace433af602f5"],"x":1914,"y":1639,"w":792,"h":402},{"id":"2a37f65b72394049","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["33ec8a5f3c05962b","86b2ec1b10c4c0f3","7365db5b05b0cdad","5621782b9ee9ac2e","55da67fef2acad51","356ce5b53838cd67","6b389a8ca3ee7f49","cee90b8566452ac8","037948bc84926efa","e1a942ad8a536ef3","39099da8915e29b7","27e01016801fc664","0963c29ce537e39b"],"x":1898,"y":259,"w":1118,"h":828},{"id":"b4216bd866b1924a","type":"group","z":"3752d27d7587c957","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["ccdccc414634ff7d","6348b269079bfa32","82a3c89470307c7b","dd1ef50d40a2e8fa","623fb660cf22ede4","66898e3bde87b1c4","b4ffc7429cc6d314","08f0fa9570535866","243e4dc964a7dbf4","128a30397aed36be","2da69194534ed372","68225790c0cb82bc","b1dbc5b52ddb3d1b","c9b790e0fa1dbc49","80b9933fc37e57a6","8d38db5fb60c01a9","91e45ccb74a35800","9e679a1a5777db44","6225380f219a0d41","18a47541cb144519","8efbc7331afa5d51","157fdad538b46545"],"x":634,"y":39,"w":1322,"h":302},{"id":"d14fa664d0413a5c","type":"group","z":"3752d27d7587c957","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["68a16773bf83b16c","f5fe0d1d1e07c638","f409e7c8d74372fc","95d7e3e76993cfba","2fc57bbeab61d575","d630bdaf19da0309","d12e6221a51af518","01cd46160592fe21","2236e755ab8aaf88","1bb3dfe91ae46289","b0f6711d749c2fd9","d01d126af31e972b","03c00d49f67a6651","a6c380ef2d09a380","eb30bf3343a316af"],"x":1784,"y":1299,"w":782,"h":502},{"id":"6dd36616a92a87a4","type":"group","z":"3752d27d7587c957","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["0a28b21d3b4a4f2b","10975d949b78c673","2afcbf200982e39e","9ac8cca8bbd8cc26","07308f4728d5980a","61d3b1e40e8a29c1","b7f3ca5cd432bab5","df5e74c7f7712579","138c5865040f68a3","a47d72d27f76363f","3c8af30af5e1621b","15554571e89dc2d6","70c88c449da62baf","67864bb87afa5ecf","c07c821dd022801c"],"x":1774,"y":859,"w":772,"h":422},{"id":"2651868e58bb1778","type":"group","z":"3752d27d7587c957","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["38a22324d2ddeb2e","0eca8b29f89f4926","5373a6c3f26af0c7","317e9ec8876608ff","fb9d3843392773d1","d2b8b521e6d704e6","a8254bcb0725889b"],"x":3434,"y":759,"w":702,"h":142},{"id":"8ecdceb2353f84e1","type":"group","z":"3752d27d7587c957","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["2190d00a05105c37","032ae17ffae61c84","64311156e04065be","e67e4105200aba9a","418a4427dfb8d6af","d1ba22a962408cbd","068b8e7a89eef1ba","9ee872c8de807c68","db06e129a47a81f9","9f42bb9bae27290b","a9ce176894e4219e","297a909f94262fbd"],"x":3434,"y":459,"w":1052,"h":262},{"id":"1a459c099aab5c42","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["6cabaff09a9fa85a","8ba8b97980f98d4e","24cec488a394f147","cdabbf668a463011","7b1434a24c5c2d0a","6dc8f908895b8048","24a35980a67b1b86","b5fcb9fc8354bcab","ce4696697eb9cc47","fc7309bac2a5580d","3dbeae382f71f092","ea181fad67e4609d","330a5b405ad89acf","4071ade6426af61b","6077fa1071b64972","a057a5f182e73de8","de57249fcd512509","c4d9642cd60ee3b5","34b3481968acc628","5f10e37424012087","7b33e1fa9654de02","194edf344188f8d1","f1ea259d4cd1ad73","bf6ad6f294b897f5","7da08f37d75439f9","131a14af0d07fc04","8da0a29a26edb00a","1a62dd0247f36369","ea4a919972365159","a243b16f3d00fcf3","696e41e72b6d87c3","a0cd0a8e16bb7a99","88cd27695c982e3d","0adb7ded56f4f452","fb159f67322d5374","6205e0cbac912f90","b02e18c123139623","7f1e779d5b8c5471","82f4857b20be7401","69ee865c7f63151e"],"x":634,"y":419,"w":882,"h":1242},{"id":"54292956c333b23f","type":"group","z":"06acd4b20e43ebca","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["fda5147727773bdd"],"x":268,"y":253,"w":304,"h":234},{"id":"fc522ecb452d5d02","type":"group","z":"06acd4b20e43ebca","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["28063fd731271172"],"x":648,"y":253,"w":304,"h":234},{"id":"684260cd34e37219","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["4675a31b7d62a521","e352eb9ec5f51329","fc63cad79428afc6","1d43ba5bea872eea","650d94e8238e269e","b343362282198e73","e26a880fb2d24667","464b23e70cf844c8","fae02ab1f3ce0e63","e9088dc392b5024f","01d5f2b84873c638","eb72ffdb8d671839","da4a10ce600a3a02","97fb7c5e5e3f9dee","c6f9196bc280b4e5","b5a693bcd77d4f80","8a884fe39e4f1e3c","54b1d8a63e1902a7","47249219e55b6920","3d4627f3225a086b","d51dc8176bf8690e","a96ccda7addd1614"],"x":634,"y":19,"w":1252,"h":342},{"id":"52a27586382bb1ef","type":"group","z":"06acd4b20e43ebca","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["9c45f9c868ca9b0d","b6169762537cdb93","2eedfcd77e979f4d","8b4bd9fdcec34439","2adda7340a61618d","dcac2e8aaf2b782f","ffdb9e11ce6b9e9e","3d93471fe1360ca2","a9a7f4e1bdcd48ff","bfcdf367f86deaec","2cb6dfb81c8f6d23","a1151db838a105af","972658f0b1461c4a","e5ee7531fe11c0c7","e5b3121802163bfc","621d610fa0ab9742"],"x":974,"y":79,"w":1012,"h":382},{"id":"fb83b7a26af05fdc","type":"group","z":"3752d27d7587c957","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["b15af587e5fdd218","0249561a3fec1f56","4514863886914953","fa1ac2acc7e0b33d","d6870c9a6b9ceba0","ad4ab75f382b18f8","7cea495731d0be12"],"x":2034,"y":79,"w":992,"h":182},{"id":"952a4bc7dff3f66a","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["90e7d66de4e646ed","dcc4f2b4266ce2c9","75cd81ac71068cbe","f2d5e7c61c28de89","34e2ea1867e751f9","ea836fad7734354a","1f21fdc068ba4fdd"],"x":1914,"y":59,"w":992,"h":162},{"id":"d634b49c93972c8c","type":"group","z":"3752d27d7587c957","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["f0d2d59e9fb71a11","695c16207afdcdaa","4f8602da2d439cb1","ccb808bba5fe34af","1fc079df5d0649cc","795027dc6079bbcd","9e528fbb25e69fba"],"x":3434,"y":1099,"w":792,"h":162},{"id":"082054cd4a9a0dc1","type":"group","z":"3752d27d7587c957","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["2fe236b6ecf4be1a","548fd1b0ea533144","dec304f413eef635","1c021da55d25e11a","7fda7edaf7e5818c","4c6249a89c9f8505","d204071a89b51356"],"x":3434,"y":1299,"w":722,"h":162},{"id":"ecb02d38c4118377","type":"group","z":"3752d27d7587c957","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["f81d8c962ee7f1d5","9743d50e741ac49e","ba354dc96e68c583","09de5509dbd47ef7","fa4182f14e046b55","3905f327349462e9","9137501bc6555693"],"x":3434,"y":919,"w":742,"h":162},{"id":"39650dd0d506b2d1","type":"group","z":"d95a2d1f80d65696","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["acbb671a920e1204","2db70e9c77512cd5","a3cfacc22ceb6aee","61c8e4bc0fb9f598","ea7632f875a34c08","4423ab9f0a3a7051","4355525d0b4b8c51","ed48bd245e4075d8","ee92038496ac7849","91a1ad1cbe0b7c09"],"x":1834,"y":599,"w":732,"h":242},{"id":"9f5e15c59748e483","type":"group","z":"d95a2d1f80d65696","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["a337b42e213aa3d0","85576630d2685b3e","a7442e288be67768","d24528c2638458fa","2cc85d66331ad017","1e3ba145f83bde83","be27891ec0917324","f3356508ddab7974"],"x":1834,"y":859,"w":642,"h":202},{"id":"cc8c0cb779e05053","type":"group","z":"d95a2d1f80d65696","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["6644813d9eaf280d","9e7bc6d79550445b","1136a49332e1678a","96a3a134f4100677","a2343e8d5b5a2cfe","811f01977939a2aa"],"x":1834,"y":1079,"w":652,"h":162},{"id":"6e865cec49167337","type":"group","z":"d95a2d1f80d65696","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["13dd6ae7815b011d","aad3dbd470556729","c915062c9362e93a","6f79edbf657fb486","2392fac8ee3c6abf","0a35d57f04cf3e61"],"x":1834,"y":1259,"w":637,"h":162},{"id":"5977772281d273f8","type":"group","z":"3eced32f6afec9ad","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["d0184e748701da52","f0d791250ce3cb79"],"x":48,"y":913,"w":2064,"h":394},{"id":"04f0e803aedb278e","type":"group","z":"3eced32f6afec9ad","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["d3018dd6637a17e7","cc0c7ed9ea21cf9b"],"x":48,"y":493,"w":2064,"h":394},{"id":"ba3c7382296c9f61","type":"group","z":"3eced32f6afec9ad","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["e3ae47face506c41","7881c1d5756a95f9"],"x":48,"y":53,"w":2084,"h":414},{"id":"2f16034c5088356b","type":"group","z":"3752d27d7587c957","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["2f7f44cc5475aa9e","a0b3236b810a1d68","89b4bb0beb9173d1","b41b4e4f56a8bfdd","97bb26a5c0f5bb2b","50586f7873597b1b","d8ca44ad455dbdcc","b4d17b12450acac5","792c2d12847b3c30","f67b812477b0ee36","b418161007dfaaea","a41d99da1a516c1a","cf371755340339d9","f2dbe7f4fc63732c","944e631d1a25585e","0146bdd163646e65","c75be806c71aae08"],"x":1764,"y":399,"w":792,"h":442},{"id":"077c0666ef9f39f6","type":"group","z":"3752d27d7587c957","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["c97d86f4eb3827ad","bcc5756283e66c56","db64f19844a45a25","825ed8cac87f6ba8","f58811e4189b45cc","3084915b3c3153eb","228540ed8dcab290","95ed2ef55d637d57","44c482979d3323d4","fba3fd82020bcd3e"],"x":2574,"y":419,"w":542,"h":322},{"id":"e571ea1d17733f37","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["2998d9a1245dddc9","f902a5ba1e7c93b5","99eed7784fee4257","00bda2dbce1f7cc7","e84f5a714316bb95","b99a15275082032e","85c3440005e758b3"],"x":3164,"y":919,"w":772,"h":142},{"id":"9b20a372abab7583","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["1a5f158673e007b2","73a743c68faf5f1e","909f9b28f49204e5","f0b5ee67a8063949","21e006a3e8bc99c8","4810fb25535f84fe","7233a2912b7504c9","327c5de2023af8c2","033d8f63407adc30","90d00cec7854934c","cb4f634c782f0c95","b86eac9a31fb568d"],"x":3154,"y":639,"w":1032,"h":222},{"id":"5d46755c395cc634","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["a0e539be6495156a","49c9a1e109c2af12","01417a0b06b01a47","3081bbc3923d74d6","145ff0f6e90930a9","ce08bd17130ae3da","a8f4aa363971a87e"],"x":3164,"y":1339,"w":782,"h":142},{"id":"1f1393384d8b6026","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["9930181e9729f506","c7d049bd4613032b","1e4955e3e9e67ced","24cc65d018bd1921","d0cc247c71edd2bd","c3dcc7c02b588f54","f8c71d23e8b2d7d4"],"x":3164,"y":1539,"w":782,"h":162},{"id":"6b79b465bd6d66fa","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["f6801c858c320ca9","b29b71f5b5f8f403","ef1e7f1156daa588","d0914064742b75a7","15a20f16124069a7","76fcaf89b2120d63","211a33b6ee23cb2a"],"x":3164,"y":1119,"w":782,"h":162},{"id":"13fe4471abdc9eb6","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["09eb94f26d493e8b","df48cf3d2f7eba94","dd0baa65bd4228de","4e6d8c2f1c6a02f4","c7678607425efafe","62497009f7293fbd","f13854017a1084f1","96276016bab2e1aa","46b63c5a93a0813a","5369d1e3838faa76","b9fb8641ac981f23","7f00e431b1de7652"],"x":3154,"y":339,"w":1152,"h":242},{"id":"b377a7d2d8154846","type":"group","z":"3752d27d7587c957","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["18cbb2d076da7f4e","25559f8f74dbacc5","edf09569bc23fb4f","b4d4b90fe3a6ec9c","01b7df04eed13a74","72f5c3bdfb3190bc","533b7f798734327f","8670816afac14164","d952d70aed5c4421","2e2215015fc0b3bd","74627de8274cdc7c","e51b97599d8ebb10"],"x":3434,"y":159,"w":1192,"h":262},{"id":"b758b53640d466a4","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["7ffeaeb39befbd13","09296d5bd2225e88","2402aa0c07cdcf6c"],"x":3168,"y":1759,"w":814,"h":508},{"id":"833c4f15fec98408","type":"group","z":"3752d27d7587c957","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["9309ba9f15bdd552","c91e1e1018209c58"],"x":3428,"y":1593,"w":834,"h":394},{"id":"fcf3c31407539ca6","type":"group","z":"3752d27d7587c957","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["61d447a8dd2039a2","883e53c619710a5c","d63dfedba31e6c03","d667e426b36be2c9","03170a055dee0c18","bb53d025f4d0e3fa","b0d376be03892225","71bbf76e3992257f","b2cb416cb6617c7b","3f02c178f632f85b","921cb4af51950c56","0a775ad93eb0201a","32558d701303ef20","c3cdc89fea6e66dd","0b48f34fdeeadbd4","09388aae1c81e85e","502bf442461b61cd","42ab596fae23920e","a968aa9eccbf2d79","409a33744f657fd1","2ec8b29e881e1150","20ed8422cf5c2d23","41834d3741e6a772","1124f430fe2c02cc","d062b4edfee7bd40","81252048b9753437","174996762a37d6ac","1cba63e6b0ed1282","ec6f92f6a77bd82b"],"x":768,"y":339,"w":938,"h":1308},{"id":"0963c29ce537e39b","type":"group","z":"87bab898757000a2","g":"2a37f65b72394049","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["180eab0539ef4f5b","1e5ab4d1f342f560","78de53c8bb55e403","d37ecd3c5f82cdbc","c1e70d8332a5d4e4","da916caa4c612842","a2491093273ea707","11736a563bfcb495","b81d8ddcfd887066","84809bfb26038acc","2cab4ff46bb255d1","fa452f0146e78478","24030fcfc3c0c570","17ce802afe4871e3","8bb02e174a322903"],"x":1924,"y":579,"w":942,"h":482},{"id":"9309ba9f15bdd552","type":"group","z":"3752d27d7587c957","g":"833c4f15fec98408","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["15db15c7e2de4370","f8f91e027dfc8333","13559ea87af327af","bda808f336509948","64e65d877d2f6338","61af123542cf6443","fbba94c4d9cbdadb","cc32bf965e21b62c"],"x":3454,"y":1799,"w":782,"h":162},{"id":"c91e1e1018209c58","type":"group","z":"3752d27d7587c957","g":"833c4f15fec98408","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["bf178d140cd3a947","0970ba51c7fda08e","b05f07a1e755da48","dad47ea322ec8b37","28c6b5d7d65acfac","bc2bedc4446fe072","38358691bf1511a9","7968566b6c484c08"],"x":3454,"y":1619,"w":762,"h":162},{"id":"7ffeaeb39befbd13","type":"group","z":"87bab898757000a2","g":"b758b53640d466a4","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["ba01f54da92cb494","6e54d03748788ac3","a5e76ce616ccd09b","73c9321033ae54ac","5c5b756c6fed2199","40cd9e275785f068","45acfdd0b6e88579","bddb396981a46ba6"],"x":3194,"y":2079,"w":762,"h":162},{"id":"09296d5bd2225e88","type":"group","z":"87bab898757000a2","g":"b758b53640d466a4","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["9dbb816d3dd0bfa8","32d42160c20106c8","f22e390bd2f006e9","6ed3e5d973b389c5","0a6c31cfdc8d2520","8a2ad5076a271f6e","db41548602716d21","42b00b5b259da75d"],"x":3194,"y":1879,"w":742,"h":162},{"id":"e3ae47face506c41","type":"group","z":"3eced32f6afec9ad","g":"ba3c7382296c9f61","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["35bd5fd65c9a0879","9e723e7f476ea8f8","cb63b224171d1a61","f91c7f698a26dd0e","6f6a1483bb727dc8","726ff0be82ad7423","ac45c928935c7dfb","b5421e42b33902bc","ef306e0bb8574cf7"],"x":1254,"y":119,"w":852,"h":262},{"id":"d3018dd6637a17e7","type":"group","z":"3eced32f6afec9ad","g":"04f0e803aedb278e","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["d4ee50c361aa4ca9","4a009cfd840e08ec","b2c1303d977cf4c8","fd9dc73ed7f6f02c","32822402a46d0257","614ca3bfbf9e4df5","578c2c0a69835a12","b838e1bb8d2f4a8d","227574f9468de816"],"x":1234,"y":559,"w":852,"h":242},{"id":"f0d791250ce3cb79","type":"group","z":"3eced32f6afec9ad","g":"5977772281d273f8","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["89bbe2fb835eb83b","93ef8584d57fe5b7","8aa103c983aeac9d","972077a0dd65535b","ea91907ac588be23","dddac41b1a6ed6aa","cfe2eb1863b1949c","4ac4c49a4e3014c1","de8180bd72a13fca"],"x":1254,"y":979,"w":832,"h":262},{"id":"7881c1d5756a95f9","type":"group","z":"3eced32f6afec9ad","g":"ba3c7382296c9f61","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["839a471f41870830","aab3cfc0c8cefa14","c29833ece0d282ba","edc6b2118761154c","b72f611d8f79f840","fdf1bd6dd1070fbc","cea6f508110a5b62","23b54df21007e20e","0744b0e547eb2565","e7c6436ff95e88f6","794c44658f6efede","a1dd8f98197e0a14","e8bc2512eed39252","e6d61ecc778b733a","73f2abed6d5c9e36"],"x":74,"y":79,"w":1092,"h":362},{"id":"cc0c7ed9ea21cf9b","type":"group","z":"3eced32f6afec9ad","g":"04f0e803aedb278e","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["a2de9fd6d2f557ef","ec9710af1d0cd050","04c8a1a466a2f268","68456ed3d9470423","90d994698db057fa","35452893dd38f293","7a518a1d9ab5d941","078b870bf2716503","6f4f9bdcba616abb","ddab435427260de1","3162e0a1ac83930b","b10430d6eae75417","c977b318830b9344","6d7d082f99808488","489db73ee0cfb6ef","6aee30ba173d3e3e"],"x":74,"y":519,"w":1072,"h":342},{"id":"d0184e748701da52","type":"group","z":"3eced32f6afec9ad","g":"5977772281d273f8","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["f0ff0a0fb1975a69","72f80534f0857440","442464aa9abec787","7f83211f1adf1085","df129d682c7098c7","73f7f8508dfc837b","61205c55b28599ab","1f730adffd496dc4","70c691cb77d35316","30fde43e19631bb1","7d39d0224f4376fc","c033c6d42954ef22","be6bba3d99543c18","7102b1e4cc6e2cd2","59a56b421d022487","7424b2d7730c5815","90293cf01cb8e88d","a5789763092ca2ce"],"x":74,"y":939,"w":1112,"h":342},{"id":"fda5147727773bdd","type":"group","z":"06acd4b20e43ebca","g":"54292956c333b23f","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["e387af1f5dd04006","c909908d89ddf89f","745794723f1cf766"],"x":294,"y":279,"w":252,"h":182},{"id":"28063fd731271172","type":"group","z":"06acd4b20e43ebca","g":"fc522ecb452d5d02","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["f947f4bc73ed6cbd","beb5dd70fad21ece","cf42387b60977efe"],"x":674,"y":279,"w":252,"h":182},{"id":"1cba63e6b0ed1282","type":"group","z":"3752d27d7587c957","g":"fcf3c31407539ca6","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["54915a0b42cbb531","b5493a3f55459205","9f481796c50b24ca","f84213a3ac3c506d","eed4272deb53836f","063773e3770ed023","0045e4e34e996967","bb4422cb843fa184","55581d4b6f9bb716","836058dea98edfbb","1b2af9e442403c55","c2dafe1ccb11a237"],"x":794,"y":1239,"w":712,"h":382},{"id":"4699a341c0e525a1","type":"junction","z":"3752d27d7587c957","x":340,"y":80,"wires":[["a02e58aa1b5be4d9"]]},{"id":"d6b7596272b92fd6","type":"junction","z":"3752d27d7587c957","x":340,"y":120,"wires":[["d0fa75ce32c2b2ec","157fdad538b46545"]]},{"id":"a8d42f450f5ec3bf","type":"junction","z":"3752d27d7587c957","x":340,"y":160,"wires":[["37a0cd0ecce69585","157fdad538b46545"]]},{"id":"82b3968d5e1d0b1a","type":"junction","z":"3752d27d7587c957","x":340,"y":200,"wires":[["b01cc8b798cf40db"]]},{"id":"716d0ea3761ab229","type":"junction","z":"3752d27d7587c957","x":340,"y":240,"wires":[["a0b65bcedc96a0fe","d667e426b36be2c9"]]},{"id":"1beade2ff5ca5212","type":"junction","z":"3752d27d7587c957","x":340,"y":320,"wires":[["38cd4d82cd0fd287","03170a055dee0c18"]]},{"id":"3b25550daaa0d938","type":"junction","z":"3752d27d7587c957","x":340,"y":360,"wires":[["6e29c36400302613","d63dfedba31e6c03"]]},{"id":"628eb0efdd45d47f","type":"junction","z":"3752d27d7587c957","x":340,"y":400,"wires":[["eb850d44242cc6c6","883e53c619710a5c"]]},{"id":"02199cb92b1a3f32","type":"junction","z":"3752d27d7587c957","x":340,"y":440,"wires":[["3b9ddcea592dfa6c","09388aae1c81e85e"]]},{"id":"455ed3c6930adfe0","type":"junction","z":"3752d27d7587c957","x":340,"y":280,"wires":[["42ff7b7243adac0b","71bbf76e3992257f"]]},{"id":"edeead31dd6a80b8","type":"junction","z":"3752d27d7587c957","x":340,"y":540,"wires":[["c82ef6e4f9fa3159","bb53d025f4d0e3fa"]]},{"id":"7e5df50c6683b600","type":"junction","z":"3752d27d7587c957","x":340,"y":760,"wires":[["89391fcf7fa2d9dc","669616aead0ef19f","2ec8b29e881e1150"]]},{"id":"bd65fa0bcf194b27","type":"junction","z":"3752d27d7587c957","x":340,"y":720,"wires":[["65ac2cfaa7ba045c","49c6e2de0f1b0630"]]},{"id":"724dfeb83c172e7d","type":"junction","z":"3752d27d7587c957","x":340,"y":680,"wires":[["fea31e55b74e768b","e52f426c3a45d473","b2cb416cb6617c7b"]]},{"id":"3aa5bb36956938c6","type":"junction","z":"3752d27d7587c957","x":340,"y":640,"wires":[["cab823730c4a70a7","5f82452669bf7cb1"]]},{"id":"8c0773acdba0ce48","type":"junction","z":"3752d27d7587c957","x":340,"y":600,"wires":[["472539b957b3d55c","2d1d43cca2adc804"]]},{"id":"85a703016b798065","type":"junction","z":"3752d27d7587c957","x":340,"y":500,"wires":[["c8ac68f99c237d2c","b0d376be03892225"]]},{"id":"709f15e79c3e231e","type":"junction","z":"87bab898757000a2","x":360,"y":800,"wires":[["6f852176198d67b8","0d648d1a287b160d","7b33e1fa9654de02"]]},{"id":"006d6dc52bbe29da","type":"junction","z":"87bab898757000a2","x":360,"y":760,"wires":[["f400654d457ab0af","79bde8bec83cb56a","fc7309bac2a5580d"]]},{"id":"ad366fe75322e5d3","type":"junction","z":"87bab898757000a2","x":360,"y":720,"wires":[["349dcfebcd7877da","9d125ce221658824","ce4696697eb9cc47"]]},{"id":"e6c1ccc1e8bf4243","type":"junction","z":"87bab898757000a2","x":360,"y":680,"wires":[["8d95d41fedb12bda","f76573c680abe051","5f10e37424012087"]]},{"id":"95cfd8479db6cdb6","type":"junction","z":"87bab898757000a2","x":360,"y":640,"wires":[["0a1295920208c384","c4d9642cd60ee3b5","5a8503d8043c102d"]]},{"id":"72f71ec5f3b106d5","type":"junction","z":"87bab898757000a2","x":360,"y":580,"wires":[["e4b5460d3febe1a2","6dc8f908895b8048"]]},{"id":"dd5b4ad7e458c3f6","type":"junction","z":"87bab898757000a2","x":360,"y":540,"wires":[["18c34d8b20c39f73","24a35980a67b1b86"]]},{"id":"b8d42bdbb97224c9","type":"junction","z":"87bab898757000a2","x":360,"y":480,"wires":[["cee884061f3f2261","a057a5f182e73de8"]]},{"id":"310608ec1d45fcb2","type":"junction","z":"87bab898757000a2","x":360,"y":440,"wires":[["0d29d605591497f4","8ba8b97980f98d4e"]]},{"id":"ae7ddd31bbfb2985","type":"junction","z":"87bab898757000a2","x":360,"y":400,"wires":[["9865254487956201","24cec488a394f147"]]},{"id":"a0aeced795617438","type":"junction","z":"87bab898757000a2","x":360,"y":360,"wires":[["1d22f5d38d2f029b","7b1434a24c5c2d0a"]]},{"id":"7b717655bc69afdc","type":"junction","z":"87bab898757000a2","x":360,"y":320,"wires":[["a46594e2514f068e","b5fcb9fc8354bcab"]]},{"id":"802c582eb02146c9","type":"junction","z":"87bab898757000a2","x":360,"y":280,"wires":[["79fa901ba76691b8","cdabbf668a463011"]]},{"id":"8b78835f54a976ce","type":"junction","z":"87bab898757000a2","x":360,"y":240,"wires":[["9f322326faf32502"]]},{"id":"b769596a4bbc4607","type":"junction","z":"87bab898757000a2","x":360,"y":200,"wires":[["5974b167ebb2f9e4","4675a31b7d62a521"]]},{"id":"ad196bb7c36068ab","type":"junction","z":"87bab898757000a2","x":360,"y":160,"wires":[["4302d5e5f0144f64","4675a31b7d62a521"]]},{"id":"1ded9b8984de496a","type":"junction","z":"87bab898757000a2","x":360,"y":120,"wires":[["dfe1f213a50dabe8"]]},{"id":"820f24819599c56d","type":"junction","z":"837562a29cc16bf1","x":340,"y":780,"wires":[["1feef4e361d6f4ab"]]},{"id":"06a8234a0e50da53","type":"junction","z":"837562a29cc16bf1","x":340,"y":740,"wires":[["d8f2fcca50f43695","b08769debd37ea42"]]},{"id":"7a29d65c56ea38ce","type":"junction","z":"837562a29cc16bf1","x":340,"y":700,"wires":[["4ff3d1707695e0f6","2e58ca36e4975292"]]},{"id":"f2f13c248e0b8c38","type":"junction","z":"837562a29cc16bf1","x":340,"y":660,"wires":[["738cf6c13d34f5ac","b29f1ccf177ca9bc"]]},{"id":"0b97ef72d268e742","type":"junction","z":"837562a29cc16bf1","x":340,"y":620,"wires":[["0aa762f5f80712c8"]]},{"id":"d807c37c87e52fb7","type":"junction","z":"837562a29cc16bf1","x":340,"y":560,"wires":[["3011ac99935058fc"]]},{"id":"2600ce922720d165","type":"junction","z":"837562a29cc16bf1","x":340,"y":520,"wires":[["33d2df760c249443"]]},{"id":"e474bc581931075b","type":"junction","z":"837562a29cc16bf1","x":340,"y":460,"wires":[["7f77813b91965276"]]},{"id":"884cf8a2633214fe","type":"junction","z":"837562a29cc16bf1","x":340,"y":420,"wires":[["f3be4872d689a0ca"]]},{"id":"4babf1f954c3e57b","type":"junction","z":"837562a29cc16bf1","x":340,"y":380,"wires":[["022c729507aff6df"]]},{"id":"237aa8a46cf62248","type":"junction","z":"837562a29cc16bf1","x":340,"y":340,"wires":[["afeeb2589c30fa74"]]},{"id":"75f661a92ec9a9bc","type":"junction","z":"837562a29cc16bf1","x":340,"y":300,"wires":[["caf859c3f933940e"]]},{"id":"3deecb435aa812f2","type":"junction","z":"837562a29cc16bf1","x":340,"y":260,"wires":[["e29616dda5bc78bb"]]},{"id":"cd2ee8affa561b9c","type":"junction","z":"837562a29cc16bf1","x":340,"y":220,"wires":[["52fdbd67490934c4"]]},{"id":"894e3f2d417270a1","type":"junction","z":"837562a29cc16bf1","x":340,"y":180,"wires":[["eb74c53d01b97ace","f10df41350b98c50"]]},{"id":"d2502e609aee86c4","type":"junction","z":"837562a29cc16bf1","x":340,"y":140,"wires":[["a42167d7f369149a","f10df41350b98c50"]]},{"id":"e7d85836d6efff20","type":"junction","z":"837562a29cc16bf1","x":340,"y":100,"wires":[["0214db4988ac22b5"]]},{"id":"e0089b76e9b07458","type":"junction","z":"d95a2d1f80d65696","x":340,"y":780,"wires":[["72ce70122a4b5a96","6619d22506855909"]]},{"id":"75e4dd66180fefe6","type":"junction","z":"d95a2d1f80d65696","x":340,"y":740,"wires":[["503692ccb4fc3cd7","7316af7c4211ddef"]]},{"id":"1b4109565dd32a64","type":"junction","z":"d95a2d1f80d65696","x":340,"y":700,"wires":[["3997e496b928bfd1","4283f043fbd1a875"]]},{"id":"f17ce61aa53f8de1","type":"junction","z":"d95a2d1f80d65696","x":340,"y":660,"wires":[["5b97a07be9780c5a","6a27dc258154d174"]]},{"id":"3592de82d318bcc3","type":"junction","z":"d95a2d1f80d65696","x":340,"y":620,"wires":[["04d9aa778913bdfb"]]},{"id":"a6ffbd85ba34d697","type":"junction","z":"d95a2d1f80d65696","x":340,"y":560,"wires":[["240a49a3805024f1"]]},{"id":"c3cb5ccd349e588a","type":"junction","z":"d95a2d1f80d65696","x":340,"y":520,"wires":[["8530a7a2c1934af3"]]},{"id":"fd5b01301f4c127b","type":"junction","z":"d95a2d1f80d65696","x":340,"y":460,"wires":[["54c53ccb105fef3e"]]},{"id":"910e0521f19bc495","type":"junction","z":"d95a2d1f80d65696","x":340,"y":420,"wires":[["4dd7ac73e73f1e4c"]]},{"id":"b3f3c8e097e9deab","type":"junction","z":"d95a2d1f80d65696","x":340,"y":380,"wires":[["6eb18246e138dc9f"]]},{"id":"dcc4f38f63e30a93","type":"junction","z":"d95a2d1f80d65696","x":340,"y":340,"wires":[["c507f6fd66cb5ace"]]},{"id":"4a7711999961f732","type":"junction","z":"d95a2d1f80d65696","x":340,"y":300,"wires":[["d12ee96a6dcfa11c"]]},{"id":"02f348d35ebc626a","type":"junction","z":"d95a2d1f80d65696","x":340,"y":260,"wires":[["8bd0deae8ad2bf46"]]},{"id":"279b0b2a0bc504ca","type":"junction","z":"d95a2d1f80d65696","x":340,"y":220,"wires":[["c107273eef1e4eb5"]]},{"id":"4ac178982831a199","type":"junction","z":"d95a2d1f80d65696","x":340,"y":180,"wires":[["db99e2b9dd4a5875","5e184e56c9a47ec2"]]},{"id":"788ff18f453cb71a","type":"junction","z":"d95a2d1f80d65696","x":340,"y":140,"wires":[["2999018347a0a92b","5e184e56c9a47ec2"]]},{"id":"fd840d8e89f4a1a9","type":"junction","z":"d95a2d1f80d65696","x":340,"y":100,"wires":[["4dc46ce5f9f3b35c"]]},{"id":"4d0555b9231bf39c","type":"junction","z":"d95a2d1f80d65696","x":340,"y":820,"wires":[["3614513fa9c5b0f7","ef8d063b02d2d6fa"]]},{"id":"2a688d0ab481b42b","type":"junction","z":"d95a2d1f80d65696","x":320,"y":860,"wires":[["aff5cab903300a7c","2c58a65cb77f695b"]]},{"id":"7c35ebcfdd9a14f4","type":"junction","z":"3752d27d7587c957","x":340,"y":800,"wires":[["f7adc2a82d261c1c","53744e9d23f8df14","174996762a37d6ac"]]},{"id":"856cb32d12870716","type":"junction","z":"3752d27d7587c957","x":340,"y":840,"wires":[["406716c4908964f0","9cebbdc13963270f","81252048b9753437"]]},{"id":"8f454b2610cab17e","type":"junction","z":"87bab898757000a2","x":360,"y":840,"wires":[["c06f47080f347a58","fc12515c1658f1b9","8da0a29a26edb00a"]]},{"id":"eab7247edeede781","type":"junction","z":"87bab898757000a2","x":360,"y":880,"wires":[["2ca4f310b0d6f11e","0109c4d9ec4db16e","131a14af0d07fc04"]]},{"id":"aca8b2391f7c4b40","type":"junction","z":"3752d27d7587c957","x":340,"y":880,"wires":[["b5f61a40cd90bf16","f3a93cd22e692bd5","54915a0b42cbb531"]]},{"id":"523867b5f2762731","type":"junction","z":"87bab898757000a2","x":360,"y":920,"wires":[["e17fb27d24007412","5577f18e1e52d1e5","ea4a919972365159"]]},{"id":"5772bf4c.b461d","type":"server","name":"OpenGrowBox","version":5,"addon":true,"rejectUnauthorizedCerts":true,"ha_boolean":"y|yes|true|on|home|open","connectionDelay":true,"cacheJson":true,"heartbeat":false,"heartbeatInterval":"30","areaSelector":"friendlyName","deviceSelector":"friendlyName","entitySelector":"friendlyName","statusSeparator":"at: ","statusYear":"hidden","statusMonth":"short","statusDay":"numeric","statusHourCycle":"h23","statusTimeFormat":"h:m","enableGlobalContextStore":true},{"id":"1a9ed93138063774","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"vpdflower","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VPD-Flower"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"pressure"},{"property":"unit_of_measurement","value":"kPa"},{"property":"state_class","value":"measurement"}],"resend":true,"debugEnabled":false},{"id":"a9a93d97bbb7b04a","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"AirCtrlFlower","version":"6","entityType":"number","haConfig":[{"property":"name","value":"AirCtrlFlower"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"config"},{"property":"device_class","value":"battery"},{"property":"unit_of_measurement","value":"%"},{"property":"min_value","value":5},{"property":"max_value","value":95},{"property":"step_value","value":1},{"property":"mode","value":"slider"}],"resend":false,"debugEnabled":true},{"id":"9cc6832db356ad2f","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"ECRuckFlower","version":"6","entityType":"switch","haConfig":[{"property":"name","value":"ECRuckFlower"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"config"},{"property":"device_class","value":"switch"}],"resend":false,"debugEnabled":true},{"id":"2b0a7710b4f6a58a","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VeggiPlantStageSelect","version":"6","entityType":"select","haConfig":[{"property":"name","value":"VeggiPlantStageSelect"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"options","value":["Germination","Clones","EarlyVeg","MidVeg","LateVeg","EarlyFlower","MidFlower","LateFlower"]}],"resend":false,"debugEnabled":false},{"id":"74408db15ce786e7","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerPlantStageSelect","version":"6","entityType":"select","haConfig":[{"property":"name","value":"FlowerPlantStageSelect"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"options","value":["Germination","Clones","EarlyVeg","MidVeg","LateVeg","EarlyFlower","MidFlower","LateFlower"]}],"resend":false,"debugEnabled":false},{"id":"5de3d083be69c9ff","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"vpdVegi","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"vpdVegi"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"pressure"},{"property":"unit_of_measurement","value":"kPa"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"10a55acc5911459b","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"DLI","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"DLI"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":""},{"property":"unit_of_measurement","value":"mol/m²/d"},{"property":"state_class","value":""}],"resend":false,"debugEnabled":false},{"id":"c58623d735fb8295","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"PPFD","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"PPFD"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":""},{"property":"unit_of_measurement","value":"µmol/m²s"},{"property":"state_class","value":""}],"resend":false,"debugEnabled":false},{"id":"966c8337df68a0db","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerTentModes","version":"6","entityType":"select","haConfig":[{"property":"name","value":"FlowerTentModes"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"options","value":["VPD Perfection","IN-VPD-Range","Targeted VPD","CropSteering","Disabled"]}],"resend":false,"debugEnabled":false},{"id":"f152b5af3096b1e5","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VegiTentModes","version":"6","entityType":"select","haConfig":[{"property":"name","value":"VegiTentModes"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"options","value":["VPD Perfection","IN-VPD-Range","Targeted VPD","CropSteering","Disabled"]}],"resend":false,"debugEnabled":false},{"id":"351be2fcdaadc9bd","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"PPFD_VEGI","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"PPFDVegi"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":""},{"property":"unit_of_measurement","value":"µmol/m²s"},{"property":"state_class","value":""}],"resend":false,"debugEnabled":false},{"id":"a5f1cc19016994d1","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"DLIVegi","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"DLIVegi"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":""},{"property":"unit_of_measurement","value":"mol/m²/d"},{"property":"state_class","value":""}],"resend":false,"debugEnabled":false},{"id":"b923911d032dc0de","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"AirCtrlVegi","version":"6","entityType":"number","haConfig":[{"property":"name","value":"AirCtrlVegi"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"config"},{"property":"device_class","value":"battery"},{"property":"unit_of_measurement","value":"%"},{"property":"min_value","value":5},{"property":"max_value","value":95},{"property":"step_value","value":""},{"property":"mode","value":"slider"}],"resend":false,"debugEnabled":false},{"id":"9e27ae392ae6bf01","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"ECRuckVegi","version":"6","entityType":"switch","haConfig":[{"property":"name","value":"RuckECVegi"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":""}],"resend":false,"debugEnabled":false},{"id":"353aed64cee4c57c","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VPD-Drying-Wish-Saturation","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VPD-Drying-Wish-Saturation"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"pressure"},{"property":"unit_of_measurement","value":"mbar"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"51482df92d2f1f29","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"AirCtrlDryer","version":"6","entityType":"number","haConfig":[{"property":"name","value":"AirCtrlDryer"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":""},{"property":"unit_of_measurement","value":""},{"property":"min_value","value":""},{"property":"max_value","value":""},{"property":"step_value","value":""},{"property":"mode","value":"auto"}],"resend":false,"debugEnabled":false},{"id":"52b8c46d1aea9a62","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"ECRuckDryer","version":"6","entityType":"switch","haConfig":[{"property":"name","value":"ECRuckDryer"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":""}],"resend":false,"debugEnabled":false},{"id":"b1ea27673763365a","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"DryTentTemp","version":"6","entityType":"number","haConfig":[{"property":"name","value":"DryTentTemp"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"config"},{"property":"device_class","value":"temperature"},{"property":"unit_of_measurement","value":"°C"},{"property":"min_value","value":12},{"property":"max_value","value":25},{"property":"step_value","value":0.25},{"property":"mode","value":"slider"}],"resend":false,"debugEnabled":false},{"id":"73f4eb93439668cf","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"DryTentDewPoint","version":"6","entityType":"number","haConfig":[{"property":"name","value":"DryTentDewPoint"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":"temperature"},{"property":"unit_of_measurement","value":"°C"},{"property":"min_value","value":8},{"property":"max_value","value":15},{"property":"step_value","value":0.25},{"property":"mode","value":"slider"}],"resend":false,"debugEnabled":false},{"id":"5e8e4b22b2382ebb","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"DryTentCana","version":"6","entityType":"select","haConfig":[{"property":"name","value":"DryTentCana"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"config"},{"property":"options","value":["Drying","Curing","Holding","DarkRoom","Disabled"]}],"resend":false,"debugEnabled":false},{"id":"16cdce977a2e1395","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VPD-Wish-DryTent","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VPD-Wish-DryTent"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"pressure"},{"property":"unit_of_measurement","value":"kPa"},{"property":"state_class","value":""}],"resend":false,"debugEnabled":false},{"id":"ff39c4ebf8b39710","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VaporPressure-Drying-Actual","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VaporPressureWish-Drying-Actual"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"pressure"},{"property":"unit_of_measurement","value":"mbar"},{"property":"state_class","value":""}],"resend":false,"debugEnabled":false},{"id":"3ea1f76a87bc8d2e","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"WaterActivityWish","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"WaterActivityWish"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":""},{"property":"unit_of_measurement","value":""},{"property":"state_class","value":""}],"resend":false,"debugEnabled":false},{"id":"73178f44c6896881","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"DryTentWishHumidity","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"DryTentWishHumidity"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"humidity"},{"property":"unit_of_measurement","value":"%"},{"property":"state_class","value":""}],"resend":false,"debugEnabled":false},{"id":"edc405a70462ce85","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerAVGTemp","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerAVGTemp"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"temperature"},{"property":"unit_of_measurement","value":"°C"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"532f3d1e489722da","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerAVGHum","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerAVGHum"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"humidity"},{"property":"unit_of_measurement","value":"%"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"fbd2ef51e597d808","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VegiAVGTemp","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VegiAVGTemp"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"temperature"},{"property":"unit_of_measurement","value":"°C"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"c918d481d80ee2dc","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VegiAVGHum","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VegiAVGHum"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"humidity"},{"property":"unit_of_measurement","value":"%"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"9b20db2b6bd5562c","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VeggiTarget-VPD","version":"6","entityType":"number","haConfig":[{"property":"name","value":"VeggiTarget-VPD"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":"pressure"},{"property":"unit_of_measurement","value":"kPa"},{"property":"min_value","value":0},{"property":"max_value","value":1.8},{"property":"step_value","value":0.01},{"property":"mode","value":"slider"}],"resend":false,"debugEnabled":false},{"id":"7dd2240f65033c72","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerTarget-VPD","version":"6","entityType":"number","haConfig":[{"property":"name","value":"FlowerTarget-VPD"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"pressure"},{"property":"unit_of_measurement","value":"kPa"},{"property":"min_value","value":0},{"property":"max_value","value":2},{"property":"step_value","value":0.01},{"property":"mode","value":"auto"}],"resend":false,"debugEnabled":false},{"id":"10c9db02cb486656","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"GlobalLeafTemp","version":"6","entityType":"number","haConfig":[{"property":"name","value":"LeafTempOffset"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"temperature"},{"property":"unit_of_measurement","value":"°C"},{"property":"min_value","value":0},{"property":"max_value","value":2},{"property":"step_value","value":0.1},{"property":"mode","value":"slider"}],"resend":false,"debugEnabled":false},{"id":"bb585a7e9b14d52e","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VeggiAVGDewPoint","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VeggiAVGDewPoint"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"temperature"},{"property":"unit_of_measurement","value":"°C"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"0741c8a3236b491c","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerAVGDewPoint","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerAVGDewPoint"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"temperature"},{"property":"unit_of_measurement","value":"°C"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"e6f59d1d73093224","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerLeafTemp","version":"6","entityType":"number","haConfig":[{"property":"name","value":"FlowerLeafTemp"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"config"},{"property":"device_class","value":"temperature"},{"property":"unit_of_measurement","value":"°C"},{"property":"min_value","value":0},{"property":"max_value","value":2},{"property":"step_value","value":0.1},{"property":"mode","value":"slider"}],"resend":false,"debugEnabled":false},{"id":"0d4aa62025063e39","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VeggiLeafTemp","version":"6","entityType":"number","haConfig":[{"property":"name","value":"VeggiLeafTemp"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":"temperature"},{"property":"unit_of_measurement","value":"°C"},{"property":"min_value","value":0},{"property":"max_value","value":2},{"property":"step_value","value":0.1},{"property":"mode","value":"slider"}],"resend":false,"debugEnabled":false},{"id":"2c294ef3ef47f75d","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"GRoomLeafTemp","version":"6","entityType":"number","haConfig":[{"property":"name","value":"GRoomLeafTemp"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"config"},{"property":"device_class","value":"temperature"},{"property":"unit_of_measurement","value":"°C"},{"property":"min_value","value":0},{"property":"max_value","value":2},{"property":"step_value","value":0.1},{"property":"mode","value":"auto"}],"resend":false,"debugEnabled":false},{"id":"0acca6c6ffe536a2","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"LeafSet","version":"6","entityType":"select","haConfig":[{"property":"name","value":"LeafSet"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"config"},{"property":"options","value":["Default","Custom"]}],"resend":false,"debugEnabled":false},{"id":"4c5909d829f0f2cf","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerCO2","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerCO2"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"carbon_dioxide"},{"property":"unit_of_measurement","value":"ppm"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"ee6603a7841f90d7","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerPressure","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerPressure"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"pressure"},{"property":"unit_of_measurement","value":"kPa"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"b48068e2b6382f35","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerMoisture","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerMoisture"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"moisture"},{"property":"unit_of_measurement","value":"%"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"2150742022321ba4","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerBatterieDevices","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerBatterieDevices"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"battery"},{"property":"unit_of_measurement","value":"%"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"6938113c94cc6c5d","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerRootTemp","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerRootTemp"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"temperature"},{"property":"unit_of_measurement","value":"°C"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"6584d61dadd6110e","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FLowerLightIntense","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FLowerLightIntense"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":"illuminance"},{"property":"unit_of_measurement","value":"lx"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"0628161aa905c63c","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerPowerConsume","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerPowerConsume"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"power"},{"property":"unit_of_measurement","value":"W"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"2acab65eb8c7d7db","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerEC","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerEC"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":""},{"property":"unit_of_measurement","value":"µS/cm"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"96027b4729ff7383","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerExhaustDutyCycle","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerExhaustDutyCycle"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"battery"},{"property":"unit_of_measurement","value":"%"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"87469d8744ed20ba","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerExhaustState","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerExhaustState"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":""},{"property":"unit_of_measurement","value":""},{"property":"state_class","value":""}],"resend":false,"debugEnabled":false},{"id":"fdc22e77b0c5dbe3","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VeggiMoisture","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VeggiMoisture"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"moisture"},{"property":"unit_of_measurement","value":"%"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"68810d13c01a98ba","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VeggiRootTemp","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VeggiRootTemp"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"temperature"},{"property":"unit_of_measurement","value":"°C"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"0a689f654f6cfecb","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VeggiEC","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VeggiEC"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":""},{"property":"unit_of_measurement","value":"µS/cm"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"6aeda981e19a8694","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VeggiPressure","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VeggiPressure"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"pressure"},{"property":"unit_of_measurement","value":"kPa"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"3bf46a3f240b688e","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VeggiCO2","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VeggiCO2"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"carbon_dioxide"},{"property":"unit_of_measurement","value":"ppm"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"d3a9b3e22cb3c349","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VeggiLightIntense","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VeggiLightIntense"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":"illuminance"},{"property":"unit_of_measurement","value":"lx"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"3f8ce21d326f8670","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VeggiBatterieDevices","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VeggiBatterieDevices"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"battery"},{"property":"unit_of_measurement","value":"%"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"cd5681d147a94f3e","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VeggiPowerConsume","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VeggiPowerConsume"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":"power"},{"property":"unit_of_measurement","value":"W"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"ba8566e09903f293","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VeggiExhaustDuty","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VeggiExhaustDuty"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":"battery"},{"property":"unit_of_measurement","value":"%"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"c8a22cfdbd11971c","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VeggiExhaustState","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VeggiExhaustState"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":""},{"property":"unit_of_measurement","value":""},{"property":"state_class","value":""}],"resend":false,"debugEnabled":false},{"id":"67c5de066aa5aca0","type":"server","name":"Home Assistant","addon":true},{"id":"21f77f51eed89bc1","type":"ha-entity-config","server":"9e444506086606d5","deviceConfig":"","name":"DryingAVGHUM","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"DryingAVGHUM"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"humidity"},{"property":"unit_of_measurement","value":"%"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"f4caa1d3cf2afd02","type":"ha-entity-config","server":"9e444506086606d5","deviceConfig":"","name":"DryingAVGTemp","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"DryingAVGTemp"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"temperature"},{"property":"unit_of_measurement","value":"°C"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"c4dd8cf5329e0b68","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"WaterActivityTent","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"WaterActivityTent"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":""},{"property":"unit_of_measurement","value":""},{"property":"state_class","value":""}],"resend":false,"debugEnabled":false},{"id":"7adf25576d4cdadb","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VPD-DRYING-Tent-Dewpoint","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VPD-DRYING-Tent-Dewpoint"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"pressure"},{"property":"unit_of_measurement","value":"kPa"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"73b7a7323e840e31","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VaporPressure-Saturation","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VaporPressure-Saturation"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"pressure"},{"property":"unit_of_measurement","value":"mbar"},{"property":"state_class","value":""}],"resend":false,"debugEnabled":false},{"id":"c9b08ec4b93dfab7","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VaporPressure-Actual","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VaporPressure-Actual"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"pressure"},{"property":"unit_of_measurement","value":"mbar"},{"property":"state_class","value":""}],"resend":false,"debugEnabled":false},{"id":"4725cf9d34fa649f","type":"ha-entity-config","server":"9e444506086606d5","deviceConfig":"","name":"DryingAVGDewpoint","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"DryingAVGDewpoint"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"temperature"},{"property":"unit_of_measurement","value":"°C"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"4f7f25d7aed69b8a","type":"ha-entity-config","server":"9e444506086606d5","deviceConfig":"","name":"vpdDrying","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"vpdDrying"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"pressure"},{"property":"unit_of_measurement","value":"kPa"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"9e444506086606d5","type":"server","name":"Home Assistant","addon":true},{"id":"48655aeb6b0aa1e8","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VeggiWateringIntervall","version":"6","entityType":"number","haConfig":[{"property":"name","value":"VeggiWateringIntervall"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":""},{"property":"unit_of_measurement","value":"Hours"},{"property":"min_value","value":""},{"property":"max_value","value":""},{"property":"step_value","value":""},{"property":"mode","value":"auto"}],"resend":false,"debugEnabled":false},{"id":"e447ef302f778fa1","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VeggiWateringDuration","version":"6","entityType":"number","haConfig":[{"property":"name","value":"VeggiWateringDuration"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":""},{"property":"unit_of_measurement","value":"Seconds"},{"property":"min_value","value":20},{"property":"max_value","value":300},{"property":"step_value","value":""},{"property":"mode","value":"auto"}],"resend":false,"debugEnabled":false},{"id":"23c38aaab340822f","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VeggiAutoPump","version":"6","entityType":"switch","haConfig":[{"property":"name","value":"VeggiAutoPump"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":""}],"resend":false,"debugEnabled":false},{"id":"97a4402c3b7ed861","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VeggiPumpOn","version":"6","entityType":"switch","haConfig":[{"property":"name","value":"VeggiPumpOn"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":""}],"resend":false,"debugEnabled":false},{"id":"a10204452fe11d95","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VeggiNextPumpingIntervall","version":"6","entityType":"text","haConfig":[{"property":"name","value":"VeggiNextPumpingIntervall"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"mode","value":"text"},{"property":"min_length","value":""},{"property":"max_length","value":""},{"property":"pattern","value":""}],"resend":false,"debugEnabled":false},{"id":"af44ccc93e488cc4","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VeggiPumpingDuration","version":"6","entityType":"text","haConfig":[{"property":"name","value":"VeggiPumpingDuration"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"mode","value":"text"},{"property":"min_length","value":""},{"property":"max_length","value":""},{"property":"pattern","value":""}],"resend":false,"debugEnabled":false},{"id":"9552f58a69089ac1","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerWateringIntervall","version":"6","entityType":"number","haConfig":[{"property":"name","value":"FlowerWateringIntervall"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":""},{"property":"unit_of_measurement","value":"Hours"},{"property":"min_value","value":""},{"property":"max_value","value":""},{"property":"step_value","value":""},{"property":"mode","value":"auto"}],"resend":false,"debugEnabled":false},{"id":"9fdb5c51a50f9202","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerWateringDuration","version":"6","entityType":"number","haConfig":[{"property":"name","value":"FlowerWateringDuration"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":""},{"property":"unit_of_measurement","value":"Seconds"},{"property":"min_value","value":20},{"property":"max_value","value":300},{"property":"step_value","value":""},{"property":"mode","value":"auto"}],"resend":false,"debugEnabled":false},{"id":"59a771a312d7a309","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerNextPumpingIntervall","version":"6","entityType":"text","haConfig":[{"property":"name","value":"FlowerNextPumpingIntervall"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"mode","value":"text"},{"property":"min_length","value":""},{"property":"max_length","value":""},{"property":"pattern","value":""}],"resend":false,"debugEnabled":false},{"id":"62093afc01cbef1b","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerAutoPump","version":"6","entityType":"switch","haConfig":[{"property":"name","value":"FlowerAutoPump"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":""}],"resend":false,"debugEnabled":false},{"id":"8ea86451b7d0f88d","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerPumpOn","version":"6","entityType":"switch","haConfig":[{"property":"name","value":"FlowerPumpOn"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":""}],"resend":false,"debugEnabled":false},{"id":"2a036f3fe25e5b96","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerPumpingDuration","version":"6","entityType":"text","haConfig":[{"property":"name","value":"FlowerPumpingDuration"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"mode","value":"text"},{"property":"min_length","value":""},{"property":"max_length","value":""},{"property":"pattern","value":""}],"resend":false,"debugEnabled":false},{"id":"9afc0850d308ec1d","type":"debug","z":"0dd1d006a8b8f409","name":"Debug AC Control","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":370,"y":260,"wires":[]},{"id":"581e5fa8cc7a8992","type":"ha-api","z":"7dbb001f4a12c33e","name":"areas","server":"5772bf4c.b461d","version":1,"debugenabled":false,"protocol":"websocket","method":"get","path":"","data":"{\"type\": \"config/area_registry/list\"}","dataType":"json","responseType":"json","outputProperties":[{"property":"areas","propertyType":"msg","value":"","valueType":"results"}],"x":370,"y":220,"wires":[["cf8db50f5163243f"]]},{"id":"11b9f352d836eab4","type":"inject","z":"7dbb001f4a12c33e","name":"Manual Update","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"60","crontab":"","once":true,"onceDelay":"20","topic":"","payload":"","payloadType":"date","x":140,"y":260,"wires":[["581e5fa8cc7a8992"]]},{"id":"cf8db50f5163243f","type":"ha-api","z":"7dbb001f4a12c33e","name":"devices","server":"5772bf4c.b461d","version":1,"debugenabled":false,"protocol":"websocket","method":"get","path":"","data":"{\"type\": \"config/device_registry/list\"}","dataType":"json","responseType":"json","outputProperties":[{"property":"devices","propertyType":"msg","value":"","valueType":"results"}],"x":520,"y":180,"wires":[["3da04e574ac9aeb7"]]},{"id":"3da04e574ac9aeb7","type":"ha-api","z":"7dbb001f4a12c33e","name":"entities","server":"5772bf4c.b461d","version":1,"debugenabled":false,"protocol":"websocket","method":"get","path":"","data":"{\"type\": \"config/entity_registry/list\"}","dataType":"json","responseType":"json","outputProperties":[{"property":"entities","propertyType":"msg","value":"","valueType":"results"}],"x":660,"y":120,"wires":[["3243f84ac6977cd8"]]},{"id":"f4658b3d2bf78fc2","type":"server-events","z":"7dbb001f4a12c33e","name":"","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","eventType":"state_changed","eventData":"","waitForRunning":true,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"$outputData(\"eventData\").event_type","valueType":"jsonata"},{"property":"event_type","propertyType":"msg","value":"$outputData(\"eventData\").event_type","valueType":"jsonata"}],"x":140,"y":560,"wires":[["0c9c8319a0da3108"]]},{"id":"3243f84ac6977cd8","type":"function","z":"7dbb001f4a12c33e","name":"","func":"const entities = {};\n\nmsg.entities.forEach(e => {\n    // Überprüfe, ob entweder device_id gefüllt ist oder area_id gefüllt ist, aber device_id null ist\n    if (!e.device_id && e.area_id) {\n        const area = msg.areas.find(a => a.area_id === e.area_id);\n        if (area) {\n            entities[e.entity_id] = {\n                area_id: area.area_id,\n                name: area.name\n            };\n        }\n    } else if (e.device_id) {\n        const device = msg.devices.find(d => d.id === e.device_id);\n        const area = msg.areas.find(a => a.area_id === device.area_id);\n        if (area) {\n            entities[e.entity_id] = {\n                area_id: area.area_id,\n                name: area.name\n            };\n        }\n    }\n});\n\nmsg.payload = entities;\nmsg.update = true;\nreturn msg;\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":700,"y":80,"wires":[["0c9c8319a0da3108","fe32925329bbf5e1","1ea6f686733cc148"]]},{"id":"0c9c8319a0da3108","type":"function","z":"7dbb001f4a12c33e","name":"set area","func":"if(msg.update) {\n    node.status({fill:\"green\", shape: \"dot\", text: \"Area Data Loaded\", })\n    context.set(\"data\", msg.payload);\n    return;\n}\nconst data = context.get(\"data\");\n\nif(!data) {\n    node.status({fill:\"red\", shape: \"ring\", text: \"No Area Data\", })\n    return;\n}\n\nconst area = data[msg.payload.entity_id];\nif(!area) return;\n\nmsg.area = area.name.toLowerCase();\nnode.status({text: msg.area});\n\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":360,"y":560,"wires":[["f91947dc5aacc47a"]]},{"id":"f91947dc5aacc47a","type":"switch","z":"7dbb001f4a12c33e","name":"","property":"area","propertyType":"msg","rules":[{"t":"eq","v":"enviorment","vt":"str"},{"t":"eq","v":"veggitent","vt":"str"},{"t":"eq","v":"flowertent","vt":"str"},{"t":"eq","v":"dryingtent","vt":"str"}],"checkall":"true","repair":false,"outputs":4,"x":490,"y":560,"wires":[["b691b6f4d6611b80"],["65a8b26e06e09de6"],["7a6c54dd81eaa289"],["d7a676273cdce15d"]]},{"id":"6ead11c227cbd78a","type":"server-events","z":"7dbb001f4a12c33e","name":"On Connect","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","eventType":"home_assistant_client","eventData":"","waitForRunning":true,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"$outputData(\"eventData\").event_type","valueType":"jsonata"},{"property":"event_type","propertyType":"msg","value":"$outputData(\"eventData\").event_type","valueType":"jsonata"}],"x":78,"y":172,"wires":[["eec2d81dad6067ca"]]},{"id":"eec2d81dad6067ca","type":"switch","z":"7dbb001f4a12c33e","name":"connected","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"connected","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":230,"y":180,"wires":[["581e5fa8cc7a8992"]]},{"id":"abcb51cb5b850fb5","type":"server-events","z":"7dbb001f4a12c33e","name":"entity_registry_updated","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","eventType":"entity_registry_updated","eventData":"","waitForRunning":true,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"$outputData(\"eventData\").event_type","valueType":"jsonata"},{"property":"event_type","propertyType":"msg","value":"$outputData(\"eventData\").event_type","valueType":"jsonata"}],"x":114,"y":28,"wires":[["44a73efd617d5f0c"]]},{"id":"04dc88f1eaac6d05","type":"server-events","z":"7dbb001f4a12c33e","name":"device_registry_updated","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","eventType":"device_registry_updated","eventData":"","waitForRunning":true,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"$outputData(\"eventData\").event_type","valueType":"jsonata"},{"property":"event_type","propertyType":"msg","value":"$outputData(\"eventData\").event_type","valueType":"jsonata"}],"x":124,"y":76,"wires":[["44a73efd617d5f0c"]]},{"id":"bfcf2e7197ad45b2","type":"server-events","z":"7dbb001f4a12c33e","name":"area_registry_updated","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","eventType":"area_registry_updated","eventData":"","waitForRunning":true,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"$outputData(\"eventData\").event_type","valueType":"jsonata"},{"property":"event_type","propertyType":"msg","value":"$outputData(\"eventData\").event_type","valueType":"jsonata"}],"x":114,"y":124,"wires":[["44a73efd617d5f0c"]]},{"id":"44a73efd617d5f0c","type":"trigger","z":"7dbb001f4a12c33e","name":"Update at most every 10 secs","op1":"","op2":"","op1type":"nul","op2type":"payl","duration":"10","extend":false,"units":"s","reset":"","bytopic":"all","outputs":1,"x":430,"y":80,"wires":[["581e5fa8cc7a8992"]]},{"id":"65a8b26e06e09de6","type":"function","z":"7dbb001f4a12c33e","name":"VeggiTent-LiveData","func":"const entity = {\n    entity_id: null,\n    state: null,\n    attributes: null\n}\n\nentity.entity_id = msg.payload.event.new_state.entity_id\nentity.state = msg.payload.event.new_state.state\nentity.attributes = msg.payload.event.new_state.attributes\n\nmsg.payload = entity\nmsg.topic = \"liveData\"\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":710,"y":520,"wires":[["d634607d565bceec","3dfb6bf010f3e7cd"]]},{"id":"7a6c54dd81eaa289","type":"function","z":"7dbb001f4a12c33e","name":"FlowerTent-LiveData","func":"const entity = {\n    entity_id:null,\n    state:null,\n    attributes:null\n}\n\nentity.entity_id = msg.payload.event.new_state.entity_id\nentity.state = msg.payload.event.new_state.state\nentity.attributes = msg.payload.event.new_state.attributes\n\nmsg.payload = entity\nmsg.topic = \"liveData\"\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":720,"y":600,"wires":[["696ec24d89904481","4467b649795a1369"]]},{"id":"d7a676273cdce15d","type":"function","z":"7dbb001f4a12c33e","name":"DryingTent-LiveData","func":"const entity = {\n    entity_id:null,\n    state:null,\n    attributes:null\n}\n\nentity.entity_id = msg.payload.event.new_state.entity_id\nentity.state = msg.payload.event.new_state.state\nentity.attributes = msg.payload.event.new_state.attributes\n\nmsg.payload = entity\nmsg.topic = \"liveData\"\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":700,"y":700,"wires":[["ecd94598f605c8eb","96b8bd9877ce6902"]]},{"id":"fe32925329bbf5e1","type":"function","z":"7dbb001f4a12c33e","name":"Transform Object","func":"let input = msg.payload;\nlet output = {};\n\nfor (let key in input) {\n    let area_id = input[key].area_id;\n    if (!output[area_id]) {\n        output[area_id] = {};\n    }\n    output[area_id][key] = null;\n}\n\nmsg.payload = output;\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":770,"y":200,"wires":[["8cd9e6383593b682","49fc6ff67fd40a13","8a2dc8b298c0c791"]]},{"id":"8cd9e6383593b682","type":"debug","z":"7dbb001f4a12c33e","name":"debug 105","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":790,"y":240,"wires":[]},{"id":"49fc6ff67fd40a13","type":"switch","z":"7dbb001f4a12c33e","name":"Switch on area_id","property":"payload","propertyType":"msg","rules":[{"t":"jsonata_exp","v":"'enviorment' in $keys(payload)","vt":"jsonata"},{"t":"jsonata_exp","v":"'veggitent' in $keys(payload)","vt":"jsonata"},{"t":"jsonata_exp","v":"'flowertent' in $keys(payload)","vt":"jsonata"},{"t":"jsonata_exp","v":"'dryingtent' in $keys(payload)","vt":"jsonata"}],"checkall":"true","repair":false,"outputs":4,"x":1030,"y":200,"wires":[["e6f0dc82a197e803"],["6b884a8d29176b53"],["ddcfbb4e9762a780"],["bba83b340f0841b2"]]},{"id":"6b884a8d29176b53","type":"function","z":"7dbb001f4a12c33e","name":"VeggiTent Devices","func":"msg.payload =  msg.payload.veggitent;\nmsg.topic = \"VeggiTent\"\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1310,"y":140,"wires":[["d110bd71b917d437","cdd8a5f6743bf858"]]},{"id":"ddcfbb4e9762a780","type":"function","z":"7dbb001f4a12c33e","name":"FlowerTent Devices","func":"msg.payload = msg.payload.flowertent\nmsg.topic = \"FlowerTent\"\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1310,"y":180,"wires":[["c26752d854cfc65a"]]},{"id":"bba83b340f0841b2","type":"function","z":"7dbb001f4a12c33e","name":"DryingTent Devices","func":"msg.payload = msg.payload.dryingtent\nmsg.topic = \"DryingTent\"\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1310,"y":220,"wires":[["f6c3188c203af1d5"]]},{"id":"d110bd71b917d437","type":"join","z":"7dbb001f4a12c33e","name":"VeggiTent-Device-Data","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1690,"y":140,"wires":[["function"]]},{"id":"c26752d854cfc65a","type":"join","z":"7dbb001f4a12c33e","name":"FlowerTent-Device-Data","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1690,"y":180,"wires":[["fd34330655f2a59a"]]},{"id":"f6c3188c203af1d5","type":"join","z":"7dbb001f4a12c33e","name":"DryingTent-Device-Data","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1690,"y":220,"wires":[["127ca65750a1fea3"]]},{"id":"bef3e305e3286e6d","type":"join","z":"7dbb001f4a12c33e","name":"GrowRoom-Device-Data","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1700,"y":260,"wires":[["d556a0d58ed08600"]]},{"id":"71f76972b5025b37","type":"function","z":"7dbb001f4a12c33e","name":"SetTopic-AllData","func":"msg.topic=\"AllData\"\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1310,"y":60,"wires":[["d110bd71b917d437","c26752d854cfc65a","f6c3188c203af1d5","bef3e305e3286e6d","1355098dd9fd24e1"]]},{"id":"function","type":"function","z":"7dbb001f4a12c33e","name":"Fill Data","func":"let data = msg.payload;\nlet allData = data.AllData;\ndelete data.AllData;\n\n// Erstelle ein Mapping von entity_id zu state aus dem AllData-Array\nlet entityIdToStateMap = {};\nallData.forEach(item => {\n    entityIdToStateMap[item.entity_id] = item.state;\n});\n\n// Iteriere über die Keys des initialen Objekts und füge die entsprechenden Werte hinzu\nfor (let key in data) {\n    if (data.hasOwnProperty(key)) {\n        for (let sensor in data[key]) {\n            if (data[key].hasOwnProperty(sensor) && entityIdToStateMap.hasOwnProperty(sensor)) {\n                data[key][sensor] = entityIdToStateMap[sensor];\n            }\n        }\n    }\n}\nmsg.topic = \"data\"\ndelete msg.areas;\ndelete msg.devices;\ndelete msg.entities;\nreturn msg;\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":2000,"y":140,"wires":[["d634607d565bceec","094a8eca640c4e2d","229ec28c94435960"]]},{"id":"fd34330655f2a59a","type":"function","z":"7dbb001f4a12c33e","name":"Fill Data","func":"let data = msg.payload;\nlet allData = data.AllData;\ndelete data.AllData;\n\n// Erstelle ein Mapping von entity_id zu state aus dem AllData-Array\nlet entityIdToStateMap = {};\nallData.forEach(item => {\n    entityIdToStateMap[item.entity_id] = item.state;\n});\n\n// Iteriere über die Keys des initialen Objekts und füge die entsprechenden Werte hinzu\nfor (let key in data) {\n    if (data.hasOwnProperty(key)) {\n        for (let sensor in data[key]) {\n            if (data[key].hasOwnProperty(sensor) && entityIdToStateMap.hasOwnProperty(sensor)) {\n                data[key][sensor] = entityIdToStateMap[sensor];\n            }\n        }\n    }\n}\nmsg.topic = \"data\"\nmsg.payload = data;\ndelete msg.areas;\ndelete msg.devices;\ndelete msg.entities;\nreturn msg;\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":2000,"y":180,"wires":[["43ca19d80e63515d","696ec24d89904481","0aa29c967201c7c6"]]},{"id":"127ca65750a1fea3","type":"function","z":"7dbb001f4a12c33e","name":"Fill Data","func":"let data = msg.payload;\nlet allData = data.AllData;\ndelete data.AllData;\n\n// Erstelle ein Mapping von entity_id zu state aus dem AllData-Array\nlet entityIdToStateMap = {};\nallData.forEach(item => {\n    entityIdToStateMap[item.entity_id] = item.state;\n});\n\n// Iteriere über die Keys des initialen Objekts und füge die entsprechenden Werte hinzu\nfor (let key in data) {\n    if (data.hasOwnProperty(key)) {\n        for (let sensor in data[key]) {\n            if (data[key].hasOwnProperty(sensor) && entityIdToStateMap.hasOwnProperty(sensor)) {\n                data[key][sensor] = entityIdToStateMap[sensor];\n            }\n        }\n    }\n}\nmsg.topic = \"data\"\nmsg.payload = data;\ndelete msg.areas;\ndelete msg.devices;\ndelete msg.entities;\nreturn msg;\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":2000,"y":220,"wires":[["f639a305698026d1","ecd94598f605c8eb","32ee1c580b50c11b"]]},{"id":"d556a0d58ed08600","type":"function","z":"7dbb001f4a12c33e","name":"Fill Data","func":"let data = msg.payload;\nlet allData = data.AllData;\ndelete data.AllData;\n\n// Erstelle ein Mapping von entity_id zu state aus dem AllData-Array\nlet entityIdToStateMap = {};\nallData.forEach(item => {\n    entityIdToStateMap[item.entity_id] = item.state;\n});\n\n// Iteriere über die Keys des initialen Objekts und füge die entsprechenden Werte hinzu\nfor (let key in data) {\n    if (data.hasOwnProperty(key)) {\n        for (let sensor in data[key]) {\n            if (data[key].hasOwnProperty(sensor) && entityIdToStateMap.hasOwnProperty(sensor)) {\n                data[key][sensor] = entityIdToStateMap[sensor];\n            }\n        }\n    }\n}\nmsg.topic = \"data\"\nmsg.payload = data;\ndelete msg.areas;\ndelete msg.devices;\ndelete msg.entities;\ndelete msg.update;\nreturn msg;\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":2000,"y":260,"wires":[["735e34c63d920535","ab27642dd3e1e4d9"]]},{"id":"094a8eca640c4e2d","type":"link out","z":"7dbb001f4a12c33e","name":"VeggiCtrl","mode":"link","links":["8c9088a88c067085","be4760445d389efd"],"x":2165,"y":140,"wires":[]},{"id":"43ca19d80e63515d","type":"link out","z":"7dbb001f4a12c33e","name":"FlowerCtrl","mode":"link","links":["69d2bbbaa57da104"],"x":2165,"y":180,"wires":[]},{"id":"f639a305698026d1","type":"link out","z":"7dbb001f4a12c33e","name":"DryingCtrl","mode":"link","links":["812330f99e226222"],"x":2165,"y":220,"wires":[]},{"id":"e84242346557dbcb","type":"link out","z":"7dbb001f4a12c33e","name":"VeggiTentLiveData","mode":"link","links":["a34b894b03b36458"],"x":2145,"y":520,"wires":[]},{"id":"e0e6fce7027c2e26","type":"link out","z":"7dbb001f4a12c33e","name":"FlowerTentLiveData","mode":"link","links":["b9dfb243cc1af1b4"],"x":2145,"y":620,"wires":[]},{"id":"854a899b81ae0da3","type":"link out","z":"7dbb001f4a12c33e","name":"DryingTentLiveData","mode":"link","links":["3f44a96e32f333c2"],"x":2145,"y":720,"wires":[]},{"id":"d634607d565bceec","type":"join","z":"7dbb001f4a12c33e","name":"VeggiTent-Updated","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1520,"y":520,"wires":[["5142ea4460f6cef4"]]},{"id":"696ec24d89904481","type":"join","z":"7dbb001f4a12c33e","name":"FlowerTent-Updated","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1520,"y":600,"wires":[["cee9ddd4d3c3158d"]]},{"id":"ecd94598f605c8eb","type":"join","z":"7dbb001f4a12c33e","name":"DryingTent-Updated","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1520,"y":700,"wires":[["cfa78ab308277cdf"]]},{"id":"cfa78ab308277cdf","type":"function","z":"7dbb001f4a12c33e","name":"Set LiveData","func":"let data = msg.payload.data;\nconst livedata = msg.payload.liveData;\n\n// Funktion zur Aktualisierung des state-Werts aus livedata\nfunction updateState(data, livedata) {\n    const entityId = livedata.entity_id;\n\n    for (const key in data) {\n        if (data.hasOwnProperty(key) && typeof data[key] === 'object' && data[key] !== null) {\n            if (data[key].hasOwnProperty(entityId)) {\n                // Setze nur den state-Wert aus livedata\n                data[key][entityId] = livedata.state;\n                return;\n            }\n        }\n    }\n}\n\n// Aktualisiere den state-Wert im data-Objekt\nupdateState(data, livedata);\n\n// Setze das aktualisierte data-Objekt direkt in msg.payload\nmsg.payload = data;\n\n// Entferne das liveData-Objekt und andere nicht benötigte Objekte aus msg\ndelete msg.liveData;\ndelete msg.areas;\ndelete msg.devices;\ndelete msg.entities;\ndelete msg.update;\n\n// Setze das Topic zurück auf \"data\"\nmsg.topic = \"data\";\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1730,"y":700,"wires":[["c59f29b7a6db9201","763b20a8fae48b90","ecd94598f605c8eb"]]},{"id":"cee9ddd4d3c3158d","type":"function","z":"7dbb001f4a12c33e","name":"Set LiveData","func":"let data = msg.payload.data;\nconst livedata = msg.payload.liveData;\n\n// Funktion zur Aktualisierung des state-Werts aus livedata\nfunction updateState(data, livedata) {\n    const entityId = livedata.entity_id;\n\n    for (const key in data) {\n        if (data.hasOwnProperty(key) && typeof data[key] === 'object' && data[key] !== null) {\n            if (data[key].hasOwnProperty(entityId)) {\n                // Setze nur den state-Wert aus livedata\n                data[key][entityId] = livedata.state;\n                return;\n            }\n        }\n    }\n}\n\n// Aktualisiere den state-Wert im data-Objekt\nupdateState(data, livedata);\n\n// Setze das aktualisierte data-Objekt direkt in msg.payload\nmsg.payload = data;\n\n// Entferne das liveData-Objekt und andere nicht benötigte Objekte aus msg\ndelete msg.liveData;\ndelete msg.areas;\ndelete msg.devices;\ndelete msg.entities;\ndelete msg.update;\n\n// Setze das Topic zurück auf \"data\"\nmsg.topic = \"data\";\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1730,"y":600,"wires":[["30e6cea9a2330b2f","3ba7b1f323bcb6f0","696ec24d89904481"]]},{"id":"5142ea4460f6cef4","type":"function","z":"7dbb001f4a12c33e","name":"Set LiveData","func":"let data = msg.payload.data;\nconst livedata = msg.payload.liveData;\n\n// Funktion zur Aktualisierung des state-Werts aus livedata\nfunction updateState(data, livedata) {\n    const entityId = livedata.entity_id;\n\n    for (const key in data) {\n        if (data.hasOwnProperty(key) && typeof data[key] === 'object' && data[key] !== null) {\n            if (data[key].hasOwnProperty(entityId)) {\n                // Setze nur den state-Wert aus livedata\n                data[key][entityId] = livedata.state;\n                return;\n            }\n        }\n    }\n}\n\n// Aktualisiere den state-Wert im data-Objekt\nupdateState(data, livedata);\n\n// Setze das aktualisierte data-Objekt direkt in msg.payload\nmsg.payload = data;\n\n// Entferne das liveData-Objekt und andere nicht benötigte Objekte aus msg\ndelete msg.liveData;\ndelete msg.areas;\ndelete msg.devices;\ndelete msg.entities;\ndelete msg.update;\n\n// Setze das Topic zurück auf \"data\"\nmsg.topic = \"data\";\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1730,"y":520,"wires":[["210ac2b8dcb58d6b","ccb3187f22b46747","d634607d565bceec"]]},{"id":"30e6cea9a2330b2f","type":"debug","z":"7dbb001f4a12c33e","name":"debug 108","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1970,"y":580,"wires":[]},{"id":"210ac2b8dcb58d6b","type":"debug","z":"7dbb001f4a12c33e","name":"debug 109","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1970,"y":480,"wires":[]},{"id":"1ea6f686733cc148","type":"debug","z":"7dbb001f4a12c33e","name":"debug 112","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":890,"y":80,"wires":[]},{"id":"735e34c63d920535","type":"link out","z":"7dbb001f4a12c33e","name":"GrowRoomCtrl","mode":"link","links":["1bedaaa0414273ae"],"x":2165,"y":260,"wires":[]},{"id":"9f67d85122ac891e","type":"comment","z":"7dbb001f4a12c33e","g":"7236f08e93d54df7","name":"GlobalsControll","info":"","x":140,"y":860,"wires":[]},{"id":"2d557ea78433109d","type":"ha-number","z":"7dbb001f4a12c33e","g":"7236f08e93d54df7","name":"GlobalLeafTemp","version":1,"debugenabled":false,"inputs":1,"outputs":1,"entityConfig":"10c9db02cb486656","mode":"set","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"}],"x":1320,"y":900,"wires":[[]]},{"id":"8d9fd654ae8aaec2","type":"ha-number","z":"7dbb001f4a12c33e","g":"7236f08e93d54df7","name":"FlowerLeafTemp","version":1,"debugenabled":false,"inputs":1,"outputs":1,"entityConfig":"e6f59d1d73093224","mode":"set","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"}],"x":1320,"y":1000,"wires":[[]]},{"id":"4d54e84af3d4b81c","type":"ha-number","z":"7dbb001f4a12c33e","g":"7236f08e93d54df7","name":"VeggiLeafTemp","version":1,"debugenabled":false,"inputs":1,"outputs":1,"entityConfig":"0d4aa62025063e39","mode":"set","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"}],"x":1320,"y":1100,"wires":[[]]},{"id":"9aee886e8e0fa11b","type":"ha-number","z":"7dbb001f4a12c33e","g":"7236f08e93d54df7","name":"GRoomLeafTemp","version":1,"debugenabled":false,"inputs":1,"outputs":1,"entityConfig":"2c294ef3ef47f75d","mode":"set","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"}],"x":1320,"y":1200,"wires":[[]]},{"id":"78f51155f8c50460","type":"function","z":"7dbb001f4a12c33e","g":"7236f08e93d54df7","name":"Default","func":"var state = msg.payload.newOffSet\n\nlet outputs = [null, null];\n    outputs[0] = { payload: state }; \n    outputs[1] = { payload: 0 };  \n\nreturn [outputs[0], outputs[1]]; \n","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":980,"y":960,"wires":[["2d557ea78433109d"],["8d9fd654ae8aaec2","4d54e84af3d4b81c","9aee886e8e0fa11b"]]},{"id":"0a30a4555f40a167","type":"function","z":"7dbb001f4a12c33e","g":"7236f08e93d54df7","name":"Custom","func":"let outputs = [null, null, null, null];\n\nvar flower = parseFloat(msg.payload.flowerLeafOffset);\nvar veggi = parseFloat(msg.payload.veggiLeafOffset);\nvar groom = parseFloat(msg.payload.groomLeafOffset);\nvar leafOffset = parseFloat(msg.payload.leafOffSet);\nvar leafMode = msg.payload.leafMode\n\n\n// Ensure that the payload values are numbers or default to 0 if they are NaN or null\nflower = isNaN(flower) ? 0 : flower;\nveggi = isNaN(veggi) ? 0 : veggi;\ngroom = isNaN(groom) ? 0 : groom;\nleafOffset = isNaN(leafOffset) ? 0 : leafOffset;\n\nif (leafMode == \"Custom\") {\n    if (flower === 0 && veggi === 0 && groom == 0) {\n        leafOffset = 0\n        flower = 2\n        veggi = 2\n        groom = 2\n    }\n}\n\noutputs[0] = { payload: flower };\noutputs[1] = { payload: veggi };\noutputs[2] = { payload: groom };\noutputs[3] = { payload: 0 };\n\nreturn outputs;\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":980,"y":1100,"wires":[["8d9fd654ae8aaec2"],["4d54e84af3d4b81c"],["9aee886e8e0fa11b"],["2d557ea78433109d"]]},{"id":"dd6b14b460dab075","type":"poll-state","z":"7dbb001f4a12c33e","g":"7236f08e93d54df7","name":"GlobalLeafOffset","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","updateInterval":"10","updateIntervalType":"num","updateIntervalUnits":"seconds","outputInitially":true,"outputOnChanged":true,"entityId":"number.leaftempoffset","stateType":"num","ifState":"","ifStateType":"num","ifStateOperator":"is","outputs":1,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"LeafOffset","valueType":"str"}],"x":440,"y":1160,"wires":[["01cce3f8bf2a66d3"]]},{"id":"2ba711e98d827f28","type":"poll-state","z":"7dbb001f4a12c33e","g":"7236f08e93d54df7","name":"FlowerLeafOffset","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","updateInterval":"10","updateIntervalType":"num","updateIntervalUnits":"seconds","outputInitially":true,"outputOnChanged":true,"entityId":"number.flowerleaftemp","stateType":"num","ifState":"","ifStateType":"num","ifStateOperator":"is","outputs":1,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"FlowerLeafOffset","valueType":"str"}],"x":440,"y":980,"wires":[["01cce3f8bf2a66d3"]]},{"id":"5016bb031906d635","type":"poll-state","z":"7dbb001f4a12c33e","g":"7236f08e93d54df7","name":"VeggiLeafOffset","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","updateInterval":"10","updateIntervalType":"num","updateIntervalUnits":"seconds","outputInitially":true,"outputOnChanged":true,"entityId":"number.veggileaftemp","stateType":"num","ifState":"","ifStateType":"num","ifStateOperator":"is","outputs":1,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"VeggiLeafOffset","valueType":"str"}],"x":440,"y":1040,"wires":[["01cce3f8bf2a66d3"]]},{"id":"22a1d3e6ac107c3f","type":"poll-state","z":"7dbb001f4a12c33e","g":"7236f08e93d54df7","name":"GRoomLeafOffset","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","updateInterval":"10","updateIntervalType":"num","updateIntervalUnits":"seconds","outputInitially":true,"outputOnChanged":true,"entityId":"number.groomleaftemp","stateType":"num","ifState":"","ifStateType":"num","ifStateOperator":"is","outputs":1,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"GRoomLeafOffset","valueType":"str"}],"x":430,"y":1100,"wires":[["01cce3f8bf2a66d3"]]},{"id":"01cce3f8bf2a66d3","type":"join","z":"7dbb001f4a12c33e","g":"7236f08e93d54df7","name":"LeafSetsCustom","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"5","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":690,"y":1020,"wires":[["c561d85b1dda300e","f0449f704d2f7c8a","fd2b9c6859eb1484"]]},{"id":"c561d85b1dda300e","type":"debug","z":"7dbb001f4a12c33e","g":"7236f08e93d54df7","name":"debug 158","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":690,"y":960,"wires":[]},{"id":"fd2b9c6859eb1484","type":"function","z":"7dbb001f4a12c33e","g":"7236f08e93d54df7","name":"Select","func":"let outputs = [null, null];\n\n// Utility function to check and set null or NaN values to a default of 1\nfunction checkAndSetDefault(value) {\n    if (value === null || value === undefined || isNaN(parseFloat(value))) {\n        return 2;\n    }\n    return parseFloat(value);\n}\n\n// Extract and convert values\nvar leafMode = msg.payload.GlobalLeafSet;\n\nvar newOffSet = 0;\n\nvar leafOffSet = checkAndSetDefault(msg.payload.LeafOffset);\nvar flowerLeafOffset = checkAndSetDefault(msg.payload.FlowerLeafOffset);\nvar veggiLeafOffset = checkAndSetDefault(msg.payload.VeggiLeafOffset);\nvar groomLeafOffset = checkAndSetDefault(msg.payload.GRoomLeafOffset);\n\n// Logic to set new offset based on leaf mode\nif (leafMode === \"Default\") {\n    newOffSet = leafOffSet === 0 ? 2 : leafOffSet;  // Default to 2 if current offset is 0\n    outputs[0] = { payload: { leafMode, newOffSet }, topic: `Mode: ${leafMode}` };\n} else if (leafMode === \"Custom\") {\n    newOffSet = { flowerLeafOffset, veggiLeafOffset, groomLeafOffset, leafOffSet, leafMode };\n    outputs[1] = { payload: newOffSet, topic: `Mode: ${leafMode}` };\n}\n\nreturn outputs;  // Return the modified outputs array\n","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":890,"y":1020,"wires":[["78f51155f8c50460"],["0a30a4555f40a167"]]},{"id":"f0449f704d2f7c8a","type":"link out","z":"7dbb001f4a12c33e","g":"7236f08e93d54df7","name":"LeafOffSet","mode":"link","links":["78243dcf0f50dbc8","6225380f219a0d41","3d4627f3225a086b","5586660314d79b76"],"x":725,"y":1140,"wires":[]},{"id":"311ee520c3f61f77","type":"api-current-state","z":"7dbb001f4a12c33e","g":"7236f08e93d54df7","name":"VeggiLeafOffset","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"number.veggileaftemp","state_type":"num","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"VeggiLeafOffset","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":160,"y":1040,"wires":[[]]},{"id":"da6c2e0c92ff7e70","type":"poll-state","z":"7dbb001f4a12c33e","g":"7236f08e93d54df7","name":"LeafSet","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","updateInterval":"10","updateIntervalType":"num","updateIntervalUnits":"seconds","outputInitially":true,"outputOnChanged":true,"entityId":"select.leafset","stateType":"str","ifState":"","ifStateType":"num","ifStateOperator":"is","outputs":1,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"GlobalLeafSet","valueType":"str"}],"x":430,"y":920,"wires":[["01cce3f8bf2a66d3"]]},{"id":"b221316ab2b19880","type":"api-current-state","z":"7dbb001f4a12c33e","g":"7236f08e93d54df7","name":"FlowerLeafOffset","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"number.flowerleaftemp","state_type":"num","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"FlowerLeafOffset","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":170,"y":980,"wires":[[]]},{"id":"e2a9c4cfd27a3aa1","type":"api-current-state","z":"7dbb001f4a12c33e","g":"7236f08e93d54df7","name":"GRoomLeafOffset","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"number.groomleaftemp","state_type":"num","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"GRoomLeafOffset","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":170,"y":1100,"wires":[[]]},{"id":"2f4fb16684615c04","type":"api-current-state","z":"7dbb001f4a12c33e","g":"7236f08e93d54df7","name":"GlobalLeafOffset","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"number.flowerleaftemp","state_type":"num","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"GlobalLeafOffset","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":170,"y":1160,"wires":[[]]},{"id":"c59f29b7a6db9201","type":"debug","z":"7dbb001f4a12c33e","name":"debug 171","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1970,"y":680,"wires":[]},{"id":"ccb3187f22b46747","type":"function","z":"7dbb001f4a12c33e","name":"CleanRoomName","func":"msg.payload = msg.payload.VeggiTent\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1970,"y":520,"wires":[["e84242346557dbcb","210ac2b8dcb58d6b"]]},{"id":"763b20a8fae48b90","type":"function","z":"7dbb001f4a12c33e","name":"CleanRoomName","func":"msg.payload = msg.payload.DryingTent\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1970,"y":720,"wires":[["854a899b81ae0da3","c59f29b7a6db9201"]]},{"id":"3ba7b1f323bcb6f0","type":"function","z":"7dbb001f4a12c33e","name":"CleanRoomName","func":"msg.payload = msg.payload.FlowerTent\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1990,"y":620,"wires":[["e0e6fce7027c2e26","30e6cea9a2330b2f"]]},{"id":"8a2dc8b298c0c791","type":"ha-get-entities","z":"7dbb001f4a12c33e","name":"Get All Entities","server":"67c5de066aa5aca0","version":1,"rules":[],"outputType":"array","outputEmptyResults":false,"outputLocationType":"msg","outputLocation":"payload","x":920,"y":120,"wires":[["71f76972b5025b37"]]},{"id":"b691b6f4d6611b80","type":"function","z":"7dbb001f4a12c33e","name":"Outdoor-LiveData","func":"const entity = {\n    entity_id:null,\n    state:null,\n    attributes:null\n}\n\nentity.entity_id = msg.payload.event.new_state.entity_id\nentity.state = msg.payload.event.new_state.state\nentity.attributes = msg.payload.event.new_state.attributes\n\nmsg.payload = entity\nmsg.topic = \"liveData\"\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":690,"y":440,"wires":[["df3b1e7a324d1903","4be05d1d9fa3bc23"]]},{"id":"265fe00ebc822be2","type":"link out","z":"7dbb001f4a12c33e","name":"EnviormentLiveData","mode":"link","links":["153f6ac7a35145a3","d96e73b9706f22f2","69dd609466006344","dacaec036d31f842","2571f187e8b7c862","75747927a394406d","5c4f509b5eb7d135","61afd7503e71f62c","c9de3550e05cf591","35de4279c266e8c0"],"x":2135,"y":440,"wires":[]},{"id":"df3b1e7a324d1903","type":"join","z":"7dbb001f4a12c33e","name":"Outdoor-Updated","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1510,"y":440,"wires":[["59b7cf01653283d8"]]},{"id":"72d4319a19b422b3","type":"function","z":"7dbb001f4a12c33e","name":"CleanRoomName","func":"msg.payload = msg.payload.Outdoor\nmsg.topic = \"EnvData\"\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1950,"y":440,"wires":[["265fe00ebc822be2","61e9bf55cbea2a0a"]]},{"id":"59b7cf01653283d8","type":"function","z":"7dbb001f4a12c33e","name":"Set LiveData","func":"let data = msg.payload.data;\nconst livedata = msg.payload.liveData;\n\n// Funktion zur Aktualisierung des state-Werts aus livedata\nfunction updateState(data, livedata) {\n    const entityId = livedata.entity_id;\n\n    for (const key in data) {\n        if (data.hasOwnProperty(key) && typeof data[key] === 'object' && data[key] !== null) {\n            if (data[key].hasOwnProperty(entityId)) {\n                // Setze nur den state-Wert aus livedata\n                data[key][entityId] = livedata.state;\n                return;\n            }\n        }\n    }\n}\n\n// Aktualisiere den state-Wert im data-Objekt\nupdateState(data, livedata);\n\n// Setze das aktualisierte data-Objekt direkt in msg.payload\nmsg.payload = data;\n\n// Entferne das liveData-Objekt und andere nicht benötigte Objekte aus msg\ndelete msg.liveData;\ndelete msg.areas;\ndelete msg.devices;\ndelete msg.entities;\ndelete msg.update;\n\n// Setze das Topic zurück auf \"data\"\nmsg.topic = \"data\";\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1730,"y":440,"wires":[["72d4319a19b422b3","df3b1e7a324d1903","61e9bf55cbea2a0a"]]},{"id":"61e9bf55cbea2a0a","type":"debug","z":"7dbb001f4a12c33e","name":"debug 247","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1970,"y":400,"wires":[]},{"id":"e6f0dc82a197e803","type":"function","z":"7dbb001f4a12c33e","name":"Environment","func":"msg.payload = msg.payload.outdoor\nmsg.topic = \"Eviorment\"\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1290,"y":100,"wires":[["1355098dd9fd24e1"]]},{"id":"1355098dd9fd24e1","type":"join","z":"7dbb001f4a12c33e","name":"Enviorment-Device-Data","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1700,"y":100,"wires":[["cf330350e8357b39"]]},{"id":"cf330350e8357b39","type":"function","z":"7dbb001f4a12c33e","name":"Fill Data","func":"let data = msg.payload;\nlet allData = data.AllData;\ndelete data.AllData;\n\n// Erstelle ein Mapping von entity_id zu state aus dem AllData-Array\nlet entityIdToStateMap = {};\nallData.forEach(item => {\n    entityIdToStateMap[item.entity_id] = item.state;\n});\n\n// Iteriere über die Keys des initialen Objekts und füge die entsprechenden Werte hinzu\nfor (let key in data) {\n    if (data.hasOwnProperty(key)) {\n        for (let sensor in data[key]) {\n            if (data[key].hasOwnProperty(sensor) && entityIdToStateMap.hasOwnProperty(sensor)) {\n                data[key][sensor] = entityIdToStateMap[sensor];\n            }\n        }\n    }\n}\nmsg.topic = \"data\"\nmsg.payload = data;\ndelete msg.areas;\ndelete msg.devices;\ndelete msg.entities;\ndelete msg.update;\nreturn msg;\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":2000,"y":100,"wires":[["c426ac203c581e56","df3b1e7a324d1903"]]},{"id":"c426ac203c581e56","type":"debug","z":"7dbb001f4a12c33e","name":"debug 245","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2290,"y":100,"wires":[]},{"id":"3dfb6bf010f3e7cd","type":"debug","z":"7dbb001f4a12c33e","name":"debug 258","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":910,"y":500,"wires":[]},{"id":"4467b649795a1369","type":"debug","z":"7dbb001f4a12c33e","name":"debug 259","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":910,"y":580,"wires":[]},{"id":"96b8bd9877ce6902","type":"debug","z":"7dbb001f4a12c33e","name":"debug 260","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":910,"y":680,"wires":[]},{"id":"4be05d1d9fa3bc23","type":"debug","z":"7dbb001f4a12c33e","name":"debug 261","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":910,"y":420,"wires":[]},{"id":"cdd8a5f6743bf858","type":"debug","z":"7dbb001f4a12c33e","name":"debug 262","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1290,"y":260,"wires":[]},{"id":"229ec28c94435960","type":"debug","z":"7dbb001f4a12c33e","name":"debug 263","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2290,"y":140,"wires":[]},{"id":"0aa29c967201c7c6","type":"debug","z":"7dbb001f4a12c33e","name":"debug 264","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2290,"y":180,"wires":[]},{"id":"32ee1c580b50c11b","type":"debug","z":"7dbb001f4a12c33e","name":"debug 265","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2290,"y":220,"wires":[]},{"id":"ab27642dd3e1e4d9","type":"debug","z":"7dbb001f4a12c33e","name":"debug 266","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2290,"y":260,"wires":[]},{"id":"ca0d96c34b0b2594","type":"ha-number","z":"06acd4b20e43ebca","g":"2ed032bcd8d8fc97","name":"GlobalLeafTemp","version":1,"debugenabled":false,"inputs":0,"outputs":1,"entityConfig":"10c9db02cb486656","mode":"listen","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"}],"x":120,"y":280,"wires":[[]]},{"id":"7133652db17a3480","type":"ha-number","z":"06acd4b20e43ebca","g":"28b0d068c70f684b","name":"FlowerLeafTemp","version":1,"debugenabled":false,"inputs":0,"outputs":1,"entityConfig":"e6f59d1d73093224","mode":"listen","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"}],"x":380,"y":120,"wires":[["e0f06675a0f57c06"]]},{"id":"8d521c0ad25a2741","type":"ha-number","z":"06acd4b20e43ebca","g":"404d0274840916c7","name":"VeggiLeafTemp","version":1,"debugenabled":false,"inputs":0,"outputs":1,"entityConfig":"0d4aa62025063e39","mode":"listen","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"}],"x":760,"y":120,"wires":[["a0636a9942a1768d"]]},{"id":"fbe145fbf1efc03b","type":"comment","z":"06acd4b20e43ebca","g":"2ed032bcd8d8fc97","name":"Globals","info":"","x":90,"y":240,"wires":[]},{"id":"fe6c5b1df641bf24","type":"ha-select","z":"06acd4b20e43ebca","g":"2ed032bcd8d8fc97","name":"LeafSetSelect","version":1,"debugenabled":false,"inputs":0,"outputs":1,"entityConfig":"0acca6c6ffe536a2","mode":"listen","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"}],"x":110,"y":180,"wires":[[]]},{"id":"342da06502c76007","type":"ha-number","z":"06acd4b20e43ebca","g":"28b0d068c70f684b","name":"FlowerTarget-VPD","version":1,"debugenabled":false,"inputs":0,"outputs":1,"entityConfig":"7dd2240f65033c72","mode":"listen","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"},{"property":"topic","propertyType":"msg","value":"TargetVPD","valueType":"str"}],"x":390,"y":200,"wires":[["d6e04975e1781dab"]]},{"id":"498b420139c68178","type":"ha-number","z":"06acd4b20e43ebca","g":"404d0274840916c7","name":"VeggiTarget-VPD","version":1,"debugenabled":false,"inputs":0,"outputs":1,"entityConfig":"9b20db2b6bd5562c","mode":"listen","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"},{"property":"topic","propertyType":"msg","value":"TargetVPD","valueType":"str"}],"x":760,"y":200,"wires":[["eb1e14424fc44d32"]]},{"id":"d6e04975e1781dab","type":"link out","z":"06acd4b20e43ebca","g":"28b0d068c70f684b","name":"link out 1","mode":"link","links":[],"x":535,"y":200,"wires":[]},{"id":"e0f06675a0f57c06","type":"link out","z":"06acd4b20e43ebca","g":"28b0d068c70f684b","name":"link out 2","mode":"link","links":[],"x":495,"y":120,"wires":[]},{"id":"a0636a9942a1768d","type":"link out","z":"06acd4b20e43ebca","g":"404d0274840916c7","name":"link out 3","mode":"link","links":[],"x":875,"y":120,"wires":[]},{"id":"eb1e14424fc44d32","type":"link out","z":"06acd4b20e43ebca","g":"404d0274840916c7","name":"link out 4","mode":"link","links":[],"x":895,"y":200,"wires":[]},{"id":"e387af1f5dd04006","type":"comment","z":"06acd4b20e43ebca","g":"fda5147727773bdd","name":"TentSetupObjects","info":"","x":410,"y":320,"wires":[]},{"id":"c909908d89ddf89f","type":"ha-select","z":"06acd4b20e43ebca","g":"fda5147727773bdd","name":"FlowerTent-Modes","version":1,"debugenabled":false,"inputs":0,"outputs":1,"entityConfig":"966c8337df68a0db","mode":"listen","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"}],"x":410,"y":360,"wires":[[]]},{"id":"745794723f1cf766","type":"ha-select","z":"06acd4b20e43ebca","g":"fda5147727773bdd","name":"FlowerPlantStageSelect","version":1,"debugenabled":false,"inputs":0,"outputs":1,"entityConfig":"74408db15ce786e7","mode":"listen","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"}],"x":420,"y":420,"wires":[[]]},{"id":"f947f4bc73ed6cbd","type":"ha-select","z":"06acd4b20e43ebca","g":"28063fd731271172","name":"VeggiPlantStageSelect","version":1,"debugenabled":false,"inputs":0,"outputs":1,"entityConfig":"2b0a7710b4f6a58a","mode":"listen","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"},{"property":"topic","propertyType":"msg","value":"ChangePlanteState","valueType":"str"}],"x":800,"y":420,"wires":[[]]},{"id":"beb5dd70fad21ece","type":"ha-select","z":"06acd4b20e43ebca","g":"28063fd731271172","name":"VegiTent-Modes","version":1,"debugenabled":false,"inputs":0,"outputs":1,"entityConfig":"f152b5af3096b1e5","mode":"listen","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"}],"x":780,"y":360,"wires":[[]]},{"id":"cf42387b60977efe","type":"comment","z":"06acd4b20e43ebca","g":"28063fd731271172","name":"TentSetupObjects","info":"","x":790,"y":320,"wires":[]},{"id":"a00cea8e365e26bb","type":"comment","z":"06acd4b20e43ebca","name":"GlobalSelects","info":"","x":110,"y":100,"wires":[]},{"id":"66d450d761eaf280","type":"comment","z":"06acd4b20e43ebca","name":"FlowerTent","info":"","x":340,"y":40,"wires":[]},{"id":"83fe0041f594d27c","type":"comment","z":"06acd4b20e43ebca","name":"VeggiTent","info":"","x":720,"y":40,"wires":[]},{"id":"9c45f9c868ca9b0d","type":"ha-number","z":"06acd4b20e43ebca","g":"52a27586382bb1ef","name":"DryTentDewPoint","version":1,"debugenabled":false,"inputs":0,"outputs":1,"entityConfig":"73f4eb93439668cf","mode":"listen","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"},{"property":"topic","propertyType":"msg","value":"DryTentDewPoint","valueType":"str"}],"x":1080,"y":300,"wires":[[]]},{"id":"b6169762537cdb93","type":"ha-number","z":"06acd4b20e43ebca","g":"52a27586382bb1ef","name":"DryTentTemp","version":1,"debugenabled":false,"inputs":0,"outputs":1,"entityConfig":"b1ea27673763365a","mode":"listen","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"},{"property":"topic","propertyType":"msg","value":"DryTentTemp","valueType":"str"}],"x":1070,"y":240,"wires":[[]]},{"id":"2eedfcd77e979f4d","type":"ha-select","z":"06acd4b20e43ebca","g":"52a27586382bb1ef","name":"DryTentMaster","version":1,"debugenabled":false,"inputs":0,"outputs":1,"entityConfig":"5e8e4b22b2382ebb","mode":"listen","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"},{"property":"topic","propertyType":"msg","value":"ChangePlanteState","valueType":"str"}],"x":1080,"y":180,"wires":[[]]},{"id":"8b4bd9fdcec34439","type":"poll-state","z":"06acd4b20e43ebca","g":"52a27586382bb1ef","name":"DryTentTemp","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","updateInterval":"15","updateIntervalType":"num","updateIntervalUnits":"seconds","outputInitially":true,"outputOnChanged":true,"entityId":"number.drytenttemp","stateType":"num","ifState":"","ifStateType":"num","ifStateOperator":"is","outputs":1,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"DryTentTemp","valueType":"str"}],"x":1270,"y":180,"wires":[["dcac2e8aaf2b782f"]]},{"id":"2adda7340a61618d","type":"poll-state","z":"06acd4b20e43ebca","g":"52a27586382bb1ef","name":"DryTentDewpoint","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","updateInterval":"30","updateIntervalType":"num","updateIntervalUnits":"seconds","outputInitially":true,"outputOnChanged":true,"entityId":"number.drytentdewpoint","stateType":"num","ifState":"","ifStateType":"num","ifStateOperator":"is","outputs":1,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"DryTentDewPoint","valueType":"str"}],"x":1280,"y":340,"wires":[["dcac2e8aaf2b782f"]]},{"id":"dcac2e8aaf2b782f","type":"join","z":"06acd4b20e43ebca","g":"52a27586382bb1ef","name":"DryVPDWish","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1340,"y":260,"wires":[["ffdb9e11ce6b9e9e","3d93471fe1360ca2","bfcdf367f86deaec"]]},{"id":"ffdb9e11ce6b9e9e","type":"function","z":"06acd4b20e43ebca","g":"52a27586382bb1ef","name":"HumidityCALC","func":"function calculateRelativeHumidity(T, Td) {\n    // Magnus-Formel Konstanten\n    const a = 17.27;\n    const b = 237.7;\n\n    // Berechnung des Sättigungsdampfdrucks (SDP) bei der aktuellen Temperatur\n    const saturationVaporPressure = 6.1078 * Math.exp((a * T) / (b + T));\n\n    // Berechnung des Sättigungsdampfdrucks (SDP) beim Taupunkt\n    const dewPointVaporPressure = 6.1078 * Math.exp((a * Td) / (b + Td));\n\n    // Berechnung der relativen Feuchtigkeit\n    const RH = 100 * (dewPointVaporPressure / saturationVaporPressure);\n\n    return Math.round(RH * 100) / 100; // Rundung auf zwei Dezimalstellen\n}\n\n// Lesen der Temperatur und des Taupunkts aus dem msg-Objekt\nconst temperature = parseFloat(msg.payload.DryTentTemp);\nconst dewPoint = parseFloat(msg.payload.DryTentDewPoint);\n\n// Validierung, ob die Eingaben Zahlen sind\nif (isNaN(temperature) || isNaN(dewPoint)) {\n    node.error(\"Invalid input data\", msg);\n    return null; // Stoppen der Ausführung bei ungültigen Daten\n}\n\n// Berechnung der relativen Feuchtigkeit\nlet humidity = calculateRelativeHumidity(temperature, dewPoint);\n\n// Setzen des Ergebnisses in msg.payload\nmsg.payload = humidity; // Zurückgeben eines Objekts mit der Feuchtigkeit\n\nreturn msg; // Weitergabe der Nachricht mit dem neuen Payload\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1520,"y":360,"wires":[["e5b3121802163bfc","e5ee7531fe11c0c7"]]},{"id":"3d93471fe1360ca2","type":"function","z":"06acd4b20e43ebca","g":"52a27586382bb1ef","name":"WISH VPD Creation","func":"function calculateVPD(luftTemperatur, dewPoint) {\n\n    // Stellen Sie sicher, dass alle Eingaben Zahlen sind\n    luftTemperatur = parseFloat(luftTemperatur);\n    dewPoint = parseFloat(dewPoint);\n\n    // Überprüfen Sie, ob einer der Werte NaN ist\n    if (isNaN(luftTemperatur) || isNaN(dewPoint)) {\n        return \"unavailable\";\n    }\n\n    // Berechnung des Sättigungsdampfdrucks (SDP) für Lufttemperatur\n    let sdpLuft = 0.6108 * Math.exp((17.27 * luftTemperatur) / (luftTemperatur + 237.3));\n    // Berechnung des tatsächlichen Dampfdrucks (ADP) am Taupunkt\n    let adp = 0.6108 * Math.exp((17.27 * dewPoint) / (dewPoint + 237.3));\n\n    // Berechnung des VPD\n    let vpd = sdpLuft - adp;\n\n\n    return vpd.toFixed(2);  // Rundet den VPD-Wert auf zwei Dezimalstellen\n}\n\n// Beispiel für die Verwendung der Funktion\nlet luftTemperatur = msg.payload.DryTentTemp; // Stellen Sie sicher, dass dies eine Zahl ist\nlet dewPoint = msg.payload.DryTentDewPoint; // Stellen Sie sicher, dass dies eine Zahl ist\n\nlet vpd = calculateVPD(luftTemperatur, dewPoint);\nlet vpdnum = parseFloat(vpd)\n\nmsg.topic = \"DryVPDWish\"\nmsg.payload = vpdnum;\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1540,"y":140,"wires":[["a1151db838a105af"]]},{"id":"a9a7f4e1bdcd48ff","type":"ha-sensor","z":"06acd4b20e43ebca","g":"52a27586382bb1ef","name":"VaporPressureWish-Drying-Actual","entityConfig":"ff39c4ebf8b39710","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1820,"y":280,"wires":[[]]},{"id":"bfcdf367f86deaec","type":"function","z":"06acd4b20e43ebca","g":"52a27586382bb1ef","name":"VaporPressure Getter","func":"function calculateVaporPressure(dewPoint) {\n    // Ensure input is a number\n    dewPoint = parseFloat(dewPoint);\n\n    // Check for NaN values\n    if (isNaN(dewPoint)) {\n        return \"unavailable\";\n    }\n\n    // Calculate vapor pressure using the formula (in mb)\n    let vaporPressure_mb = 6.11 * Math.pow(10, (7.5 * dewPoint) / (237.3 + dewPoint));\n\n    return vaporPressure_mb.toFixed(2);  // Round the vapor pressure to two decimal places\n}\n\nfunction calculateSaturationVaporPressure(temperature) {\n    // Ensure input is a number\n    temperature = parseFloat(temperature);\n\n    // Check for NaN values\n    if (isNaN(temperature)) {\n        return \"unavailable\";\n    }\n\n    // Calculate saturation vapor pressure using the formula (in mb)\n    let saturationVaporPressure_mb = 6.11 * Math.pow(10, (7.5 * temperature) / (237.3 + temperature));\n\n    return saturationVaporPressure_mb.toFixed(2);  // Round the vapor pressure to two decimal places\n}\n\n// Example usage of the function with debug logging\nlet temperature = parseFloat(msg.payload.DryTentTemp); // Ensure this is a number\nlet dewPoint = parseFloat(msg.payload.DryTentDewPoint); // Ensure this is a number\n\n// Check if inputs are valid numbers\nif (isNaN(temperature) || isNaN(dewPoint)) {\n    node.warn(\"Invalid input values\");\n    return [null, null]; // Return null for both outputs\n}\n\nlet saturationVaporPressure = calculateSaturationVaporPressure(temperature);\nlet actualVaporPressure = calculateVaporPressure(dewPoint);\n\n// Return the results as numeric values for each output\nreturn [\n    { payload: parseFloat(saturationVaporPressure) }, // First output: Saturation Vapor Pressure\n    { payload: parseFloat(actualVaporPressure) }      // Second output: Actual Vapor Pressure\n];\n","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1540,"y":260,"wires":[["2cb6dfb81c8f6d23"],["a9a7f4e1bdcd48ff"]]},{"id":"2cb6dfb81c8f6d23","type":"ha-sensor","z":"06acd4b20e43ebca","g":"52a27586382bb1ef","name":"VaporPressure-Drying-Saturation","entityConfig":"353aed64cee4c57c","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1820,"y":220,"wires":[[]]},{"id":"a1151db838a105af","type":"ha-sensor","z":"06acd4b20e43ebca","g":"52a27586382bb1ef","name":"VPD-DryTent","entityConfig":"16cdce977a2e1395","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1750,"y":140,"wires":[[]]},{"id":"972658f0b1461c4a","type":"ha-sensor","z":"06acd4b20e43ebca","g":"52a27586382bb1ef","name":"WaterActivityWish","entityConfig":"3ea1f76a87bc8d2e","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1790,"y":420,"wires":[[]]},{"id":"e5ee7531fe11c0c7","type":"function","z":"06acd4b20e43ebca","g":"52a27586382bb1ef","name":"WaterActivityWish","func":"// Input RH\nlet relativeHumidity = parseFloat(msg.payload);\n\n// Check if input is valid\nif (isNaN(relativeHumidity) || relativeHumidity < 0 || relativeHumidity > 100) {\n    msg.payload = \"Invalid RH value\";\n    return msg;\n}\n\n// Calculate water activity (aw)\nlet waterActivity = relativeHumidity / 100;\n\n// Output the result\nmsg.payload = waterActivity.toFixed(2); // Round to 2 decimal places\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1530,"y":420,"wires":[["972658f0b1461c4a"]]},{"id":"e5b3121802163bfc","type":"ha-sensor","z":"06acd4b20e43ebca","g":"52a27586382bb1ef","name":"DryTentWishHumidity","entityConfig":"73178f44c6896881","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1780,"y":340,"wires":[[]]},{"id":"621d610fa0ab9742","type":"comment","z":"06acd4b20e43ebca","g":"52a27586382bb1ef","name":"DryiongTent","info":"","x":1090,"y":120,"wires":[]},{"id":"e6b0f2bea705e5b5","type":"api-call-service","z":"f5216914e209e4aa","name":"FlowerExhaustOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_off","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":190,"y":360,"wires":[[]]},{"id":"863dc16021286692","type":"comment","z":"f5216914e209e4aa","name":"FlowerDevices","info":"","x":180,"y":40,"wires":[]},{"id":"4786b413247cbcce","type":"api-call-service","z":"f5216914e209e4aa","name":"FlowerExhaustON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_on","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":190,"y":300,"wires":[[]]},{"id":"93c4a647353f1e45","type":"comment","z":"f5216914e209e4aa","name":"VeggiDevices","info":"","x":590,"y":40,"wires":[]},{"id":"68a1ff5daf0514f9","type":"comment","z":"f5216914e209e4aa","name":"DryingDevices","info":"","x":930,"y":40,"wires":[]},{"id":"7366df6f2f57f13b","type":"api-call-service","z":"f5216914e209e4aa","name":"VeggiExhaustOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_off","areaId":[],"deviceId":[],"entityId":["switch.ruckecvegi"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":610,"y":360,"wires":[[]]},{"id":"47f977f3043544d0","type":"api-call-service","z":"f5216914e209e4aa","name":"VeggiExhaustON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_on","areaId":[],"deviceId":[],"entityId":["switch.ruckecvegi"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":610,"y":300,"wires":[[]]},{"id":"997d4846f6106af1","type":"comment","z":"f5216914e209e4aa","name":"Exhaust","info":"","x":90,"y":260,"wires":[]},{"id":"7e5d67284f5eb949","type":"comment","z":"f5216914e209e4aa","name":"Exhaust","info":"","x":510,"y":260,"wires":[]},{"id":"2b0dbd0d7246d0c3","type":"comment","z":"f5216914e209e4aa","name":"Exhaust","info":"","x":850,"y":260,"wires":[]},{"id":"a84271813ef47960","type":"comment","z":"f5216914e209e4aa","name":"LightsSwitch","info":"","x":110,"y":100,"wires":[]},{"id":"4a6d1fdd90626c41","type":"api-call-service","z":"f5216914e209e4aa","name":"FlowerLightOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_off","areaId":[],"deviceId":[],"entityId":["switch.light"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":180,"y":200,"wires":[[]]},{"id":"089092300651636c","type":"api-call-service","z":"f5216914e209e4aa","name":"FlowerLightON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_on","areaId":[],"deviceId":[],"entityId":["switch.light"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":180,"y":140,"wires":[[]]},{"id":"d371c38077e3ee44","type":"comment","z":"f5216914e209e4aa","name":"LightsSwitch","info":"","x":530,"y":100,"wires":[]},{"id":"9e1017aba757f201","type":"api-call-service","z":"f5216914e209e4aa","name":"VeggiLightOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_off","areaId":[],"deviceId":[],"entityId":["switch.light_veg"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":600,"y":200,"wires":[[]]},{"id":"b32ba50810a9c8f2","type":"api-call-service","z":"f5216914e209e4aa","name":"VeggiLightON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_on","areaId":[],"deviceId":[],"entityId":["switch.light_veg"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":600,"y":140,"wires":[[]]},{"id":"b7b422f34a3da57e","type":"comment","z":"f5216914e209e4aa","name":"LightsSwitch","info":"","x":870,"y":100,"wires":[]},{"id":"33e5c32a0aa50c3c","type":"api-call-service","z":"f5216914e209e4aa","d":true,"name":"LightOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_off","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":920,"y":200,"wires":[[]]},{"id":"57c0890d9329c4bc","type":"api-call-service","z":"f5216914e209e4aa","d":true,"name":"LightON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_on","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":920,"y":140,"wires":[[]]},{"id":"937050184021dc41","type":"comment","z":"f5216914e209e4aa","name":"Air-Condition","info":"","x":110,"y":920,"wires":[]},{"id":"7fc49592594e5b54","type":"api-call-service","z":"f5216914e209e4aa","name":"FlowerCoolerON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_on","areaId":[],"deviceId":["0d189c60358a6be7de3b9d017e1f8d40"],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":190,"y":980,"wires":[[]]},{"id":"045887de99f8fd59","type":"api-call-service","z":"f5216914e209e4aa","name":"FlowerCoolerOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_off","areaId":[],"deviceId":["0d189c60358a6be7de3b9d017e1f8d40"],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":190,"y":1040,"wires":[[]]},{"id":"c8deaee07887e129","type":"comment","z":"f5216914e209e4aa","name":"Air-Condition","info":"","x":530,"y":920,"wires":[]},{"id":"e7fccc6a7b2d2d8c","type":"comment","z":"f5216914e209e4aa","name":"Air-Condition","info":"","x":930,"y":1040,"wires":[]},{"id":"b327844919d128bc","type":"comment","z":"f5216914e209e4aa","name":"Heater","info":"","x":90,"y":760,"wires":[]},{"id":"68a2d57e41e261f3","type":"api-call-service","z":"f5216914e209e4aa","name":"FlowerHeaterOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_off","areaId":[],"deviceId":[],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":190,"y":860,"wires":[[]]},{"id":"cfbfd48643c03071","type":"comment","z":"f5216914e209e4aa","name":"Heater","info":"","x":510,"y":760,"wires":[]},{"id":"51d3e15448264207","type":"comment","z":"f5216914e209e4aa","name":"Heater","info":"","x":850,"y":760,"wires":[]},{"id":"5de1b8c3596c335c","type":"api-call-service","z":"f5216914e209e4aa","name":"DryingExhaustON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_on","areaId":[],"deviceId":[],"entityId":["ECRuckDryer"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":950,"y":300,"wires":[[]]},{"id":"b0566fe4800fe433","type":"api-call-service","z":"f5216914e209e4aa","name":"DryingExhaustOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_off","areaId":[],"deviceId":[],"entityId":["ECRuckDryer"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":950,"y":360,"wires":[[]]},{"id":"6f29b68b6c5838e7","type":"api-call-service","z":"f5216914e209e4aa","name":"FlowerHeaterON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_on","areaId":[],"deviceId":[],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":190,"y":800,"wires":[[]]},{"id":"3508a307ab2b868f","type":"link in","z":"f5216914e209e4aa","name":"DryingExhaustOFF","links":[],"x":815,"y":360,"wires":[["b0566fe4800fe433"]]},{"id":"450d50f88a446fed","type":"link in","z":"f5216914e209e4aa","name":"DryingExhaustON","links":[],"x":815,"y":300,"wires":[["5de1b8c3596c335c"]]},{"id":"85448860815a8c8e","type":"link in","z":"f5216914e209e4aa","name":"","links":[],"x":815,"y":200,"wires":[["33e5c32a0aa50c3c"]]},{"id":"4f7c56d181dc4251","type":"link in","z":"f5216914e209e4aa","name":"","links":[],"x":815,"y":140,"wires":[["57c0890d9329c4bc"]]},{"id":"95404f058f30b296","type":"link in","z":"f5216914e209e4aa","name":"VeggiExhaustOFF","links":["068b8e7a89eef1ba","89a87511d0923579","977e60743b857459","fd8e5abbdc9a2c97","c8eedd46a87c4e05","1a0ec9c685e04bdd","533b7f798734327f"],"x":475,"y":360,"wires":[["7366df6f2f57f13b"]]},{"id":"09f51aa364202656","type":"link in","z":"f5216914e209e4aa","name":"VeggiExhaustON","links":["7ce2cae7981b703a","b51c51949ed0c2a8","c393d04abdd34e2e","d1ba22a962408cbd","33fc3d2e9cd78585","b7c84e5a0d6164f8","72f5c3bdfb3190bc"],"x":475,"y":300,"wires":[["47f977f3043544d0"]]},{"id":"5bedb7577b16f1e3","type":"link in","z":"f5216914e209e4aa","name":"VeggiLightOFF","links":[],"x":475,"y":200,"wires":[["9e1017aba757f201"]]},{"id":"dbcc54529b2373f4","type":"link in","z":"f5216914e209e4aa","name":"VeggiLightON","links":[],"x":475,"y":140,"wires":[["b32ba50810a9c8f2"]]},{"id":"23d01364d3856db1","type":"link in","z":"f5216914e209e4aa","name":"FlowerExhaustOFF","links":["3fe1653c5c4342c0","fe43d7cf9ec8a24d","d6d07d605b509b9f","823cc06908fe0581","f13854017a1084f1","4810fb25535f84fe"],"x":55,"y":360,"wires":[["e6b0f2bea705e5b5"]]},{"id":"55acda8e6f953bc1","type":"link in","z":"f5216914e209e4aa","name":"FlowerExhaustON","links":["b429f9607803a4c3","e1181ae60d3e758c","f2694e0f9513439f","78ae52d514d16f60","62497009f7293fbd","21e006a3e8bc99c8"],"x":55,"y":300,"wires":[["4786b413247cbcce"]]},{"id":"2928d1d9cf2e96e6","type":"link in","z":"f5216914e209e4aa","name":"FlowerLightOFF","links":[],"x":55,"y":200,"wires":[["4a6d1fdd90626c41"]]},{"id":"69d96e3450fc38c4","type":"link in","z":"f5216914e209e4aa","name":"FlowerLightON","links":[],"x":55,"y":140,"wires":[["089092300651636c"]]},{"id":"5a5614359d863721","type":"link in","z":"f5216914e209e4aa","name":"FlowerCoolerON","links":["b3c3886b83a0ea6f","0b366bfd2dbe21b8","3df780562aaccd0e","3081bbc3923d74d6"],"x":55,"y":980,"wires":[["7fc49592594e5b54"]]},{"id":"54ac3c52a83ae28a","type":"link in","z":"f5216914e209e4aa","name":"FlowerCoolerOFF","links":["7841516b38ab2a6b","15a88cdb06cd6786","d2ed257429706836","145ff0f6e90930a9"],"x":55,"y":1040,"wires":[["045887de99f8fd59"]]},{"id":"4cbea83396a0f0ac","type":"link in","z":"f5216914e209e4aa","name":"FlowerHeaterOFF","links":["59fa1f2f5f6e1a32","29c058ed777577ad","7bf434e4292d2327","d0cc247c71edd2bd"],"x":55,"y":860,"wires":[["68a2d57e41e261f3"]]},{"id":"958127653d74be3f","type":"link in","z":"f5216914e209e4aa","name":"FlowerHeaterON","links":["6eecb00d9bcacb3d","fc9c48027aed9dfd","398f75acb586fac8","24cc65d018bd1921"],"x":55,"y":800,"wires":[["6f29b68b6c5838e7"]]},{"id":"d4900c621e99930e","type":"api-call-service","z":"f5216914e209e4aa","name":"VeggiHeaterOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_off","areaId":[],"deviceId":[],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":600,"y":860,"wires":[[]]},{"id":"238b30ac03508e5a","type":"api-call-service","z":"f5216914e209e4aa","name":"VeggiHeaterON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_on","areaId":[],"deviceId":[],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":600,"y":800,"wires":[[]]},{"id":"593f0c0e52db1610","type":"link in","z":"f5216914e209e4aa","name":"VeggiHeaterOFF","links":["7fda7edaf7e5818c","cb1beae740939d31","9a757849e139a788"],"x":475,"y":860,"wires":[["d4900c621e99930e"]]},{"id":"b2d23243fd9721ca","type":"link in","z":"f5216914e209e4aa","name":"VeggiHeaterON","links":[],"x":475,"y":800,"wires":[["238b30ac03508e5a"]]},{"id":"19a546e4c8b6c7bb","type":"api-call-service","z":"f5216914e209e4aa","name":"DryingHeaterOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_off","areaId":[],"deviceId":[],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":950,"y":860,"wires":[[]]},{"id":"5e560f3f16273c3d","type":"api-call-service","z":"f5216914e209e4aa","name":"DryingHeaterON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_on","areaId":[],"deviceId":[],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":940,"y":800,"wires":[[]]},{"id":"06ee4d4e44bd2dc1","type":"link in","z":"f5216914e209e4aa","name":"DryingHeaterOFF","links":[],"x":815,"y":860,"wires":[["19a546e4c8b6c7bb"]]},{"id":"042ba25956f0f597","type":"link in","z":"f5216914e209e4aa","name":"DryingHeaterON","links":[],"x":815,"y":800,"wires":[["5e560f3f16273c3d"]]},{"id":"4e9fe08b245cdf4d","type":"api-call-service","z":"f5216914e209e4aa","name":"VeggiCoolerON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_on","areaId":[],"deviceId":["0d189c60358a6be7de3b9d017e1f8d40"],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":600,"y":980,"wires":[[]]},{"id":"da6f6b78fa21225e","type":"api-call-service","z":"f5216914e209e4aa","name":"VeggiCoolerOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_off","areaId":[],"deviceId":["0d189c60358a6be7de3b9d017e1f8d40"],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":600,"y":1040,"wires":[[]]},{"id":"cc608f4009e112e6","type":"link in","z":"f5216914e209e4aa","name":"VeggiCoolerON","links":["ccb808bba5fe34af","c55d6a64f93d071e","c5ab8f7e0e65487f"],"x":475,"y":980,"wires":[["4e9fe08b245cdf4d"]]},{"id":"eabb7d61eeb2383f","type":"link in","z":"f5216914e209e4aa","name":"VeggiCoolerOFF","links":["1fc079df5d0649cc","8cbbef67cfbe7dfe","8af0c8809f8679e2"],"x":475,"y":1040,"wires":[["da6f6b78fa21225e"]]},{"id":"b4baf1bad155baa2","type":"api-call-service","z":"f5216914e209e4aa","name":"DryingCoolerON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_on","areaId":[],"deviceId":["0d189c60358a6be7de3b9d017e1f8d40"],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":940,"y":980,"wires":[[]]},{"id":"f137f0fa7d1e8150","type":"api-call-service","z":"f5216914e209e4aa","name":"DryingCoolerOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_off","areaId":[],"deviceId":["0d189c60358a6be7de3b9d017e1f8d40"],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":950,"y":1040,"wires":[[]]},{"id":"08383caaa8265b80","type":"link in","z":"f5216914e209e4aa","name":"DryingCoolerOFF","links":[],"x":815,"y":980,"wires":[["b4baf1bad155baa2"]]},{"id":"bfdb992b9873b1d8","type":"link in","z":"f5216914e209e4aa","name":"DryingCoolerON","links":[],"x":815,"y":1040,"wires":[["f137f0fa7d1e8150"]]},{"id":"092eb7bcd46b40d0","type":"api-call-service","z":"f5216914e209e4aa","name":"FlowerVentsALL-OFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_off","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":200,"y":1240,"wires":[[]]},{"id":"3648ec9c8b4d5309","type":"api-call-service","z":"f5216914e209e4aa","name":"FlowerVentsALL-ON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_on","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":200,"y":1160,"wires":[[]]},{"id":"eddf19938cbb8b26","type":"api-call-service","z":"f5216914e209e4aa","name":"VeggiVentsALL-OFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_off","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":620,"y":1240,"wires":[[]]},{"id":"a6b9a70e5a665e42","type":"api-call-service","z":"f5216914e209e4aa","name":"VeggiVentsALL-ON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_on","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":610,"y":1160,"wires":[[]]},{"id":"5dbdec3dc295d111","type":"api-call-service","z":"f5216914e209e4aa","name":"DryingVentsALL-OFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_off","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":960,"y":1240,"wires":[[]]},{"id":"3e42310f54dfe322","type":"api-call-service","z":"f5216914e209e4aa","name":"DryingVentsALL-ON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_on","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":960,"y":1160,"wires":[[]]},{"id":"925c352dc9855fa0","type":"comment","z":"f5216914e209e4aa","name":"Ventilation","info":"","x":100,"y":1100,"wires":[]},{"id":"49c378f454397cd0","type":"comment","z":"f5216914e209e4aa","name":"Ventilation","info":"","x":520,"y":1100,"wires":[]},{"id":"f11a21923167c8e7","type":"comment","z":"f5216914e209e4aa","name":"Ventilation","info":"","x":860,"y":1100,"wires":[]},{"id":"c9b02d44cdd2ad19","type":"link in","z":"f5216914e209e4aa","name":"DryingVentsALL-OFF","links":[],"x":815,"y":1240,"wires":[["5dbdec3dc295d111"]]},{"id":"f581b978567d4e53","type":"link in","z":"f5216914e209e4aa","name":"DryingVentsALL-ON","links":[],"x":815,"y":1160,"wires":[["3e42310f54dfe322"]]},{"id":"6c90672355d39d09","type":"link in","z":"f5216914e209e4aa","name":"VeggiVentsALL-OFF","links":[],"x":475,"y":1240,"wires":[["eddf19938cbb8b26"]]},{"id":"7f2f2671692d2d7e","type":"link in","z":"f5216914e209e4aa","name":"VeggiVentsALL-ON","links":[],"x":475,"y":1160,"wires":[["a6b9a70e5a665e42"]]},{"id":"11bdbeb3f8b0c694","type":"link in","z":"f5216914e209e4aa","name":"FlowerVentsALL-OFF","links":[],"x":55,"y":1240,"wires":[["092eb7bcd46b40d0"]]},{"id":"715bc88821fcf9eb","type":"link in","z":"f5216914e209e4aa","name":"FlowerVentsALL-ON","links":[],"x":55,"y":1160,"wires":[["3648ec9c8b4d5309"]]},{"id":"29e6ce2edf9037bf","type":"api-call-service","z":"f5216914e209e4aa","name":"FlowerHumidifierON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"humidifier","service":"turn_on","areaId":[],"deviceId":["a974734c414e9afca81e0f9dc27dc960"],"entityId":["humidifier.befeuchter"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":200,"y":480,"wires":[[]]},{"id":"7f0ee764ed2a134b","type":"api-call-service","z":"f5216914e209e4aa","name":"FlowerHumidifierOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"humidifier","service":"turn_off","areaId":[],"deviceId":["a974734c414e9afca81e0f9dc27dc960"],"entityId":["humidifier.befeuchter"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":200,"y":540,"wires":[[]]},{"id":"48835de4729fefa7","type":"comment","z":"f5216914e209e4aa","name":"Humidifier","info":"","x":100,"y":420,"wires":[]},{"id":"62724edd121a7c20","type":"comment","z":"f5216914e209e4aa","name":"Humidifier","info":"","x":520,"y":420,"wires":[]},{"id":"fd3e2145600acbf7","type":"comment","z":"f5216914e209e4aa","name":"Humidifier","info":"","x":860,"y":440,"wires":[]},{"id":"5f5c49e30360b5b5","type":"api-call-service","z":"f5216914e209e4aa","name":"FlowerDehumidifierON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_on","areaId":[],"deviceId":[],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":200,"y":640,"wires":[[]]},{"id":"8870a38066689fdc","type":"comment","z":"f5216914e209e4aa","name":"Dehumidifier","info":"","x":110,"y":600,"wires":[]},{"id":"951320fa7ba547bd","type":"comment","z":"f5216914e209e4aa","name":"Dehumidifier","info":"","x":530,"y":600,"wires":[]},{"id":"6d050d8dd2a3d237","type":"comment","z":"f5216914e209e4aa","name":"Dehumidifier","info":"","x":870,"y":600,"wires":[]},{"id":"4e5137698b797e33","type":"api-call-service","z":"f5216914e209e4aa","name":"FlowerDehumidifierOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_off","areaId":[],"deviceId":[],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":210,"y":700,"wires":[[]]},{"id":"38a12a509a13d715","type":"link in","z":"f5216914e209e4aa","name":"FlowerHumidifierOFF","links":["a387e2a4fc4c0250","aa5773a7762ec6a1","b935e8c4af376cc0","a598a7f8560d972d","d7e52f9a26275fcb","b6d8036882fb0315","e84f5a714316bb95"],"x":55,"y":540,"wires":[["7f0ee764ed2a134b"]]},{"id":"acb0f5addd129adf","type":"link in","z":"f5216914e209e4aa","name":"FlowerHumidifierON","links":["f985e76f9164be6f","ce9c357652d8fb35","73e599330c92cf04","330118bbab72d493","375d779e0949166d","e8d14de801bad46b","00bda2dbce1f7cc7"],"x":55,"y":480,"wires":[["29e6ce2edf9037bf"]]},{"id":"99832bcde6aaec0d","type":"link in","z":"f5216914e209e4aa","name":"FlowerDehumidifierON","links":["f1ed96c84b1e46e1","e38feae8aeb3e604","2a9f9087dc56f131","ef1e7f1156daa588"],"x":55,"y":640,"wires":[["5f5c49e30360b5b5"]]},{"id":"b576fb3aef39185a","type":"link in","z":"f5216914e209e4aa","name":"FlowerDehumidifierOFF","links":["abef1da1656fea02","d8fd91bf4fabc3c5","6e03a74882a0defb","d0914064742b75a7"],"x":55,"y":700,"wires":[["4e5137698b797e33"]]},{"id":"015239c5b434194c","type":"api-call-service","z":"f5216914e209e4aa","name":"VeggiDehumidifierON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_on","areaId":[],"deviceId":[],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":620,"y":640,"wires":[[]]},{"id":"83281680fe885d81","type":"api-call-service","z":"f5216914e209e4aa","name":"VeggiDehumidifierOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_off","areaId":[],"deviceId":[],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":620,"y":700,"wires":[[]]},{"id":"4c88812165b09b0e","type":"link in","z":"f5216914e209e4aa","name":"VeggiDehumidifierON","links":["09de5509dbd47ef7","a2cc8907d2e035e6","922bd2bc6ee5806f"],"x":475,"y":640,"wires":[["015239c5b434194c"]]},{"id":"2b8233e8bb0edf47","type":"link in","z":"f5216914e209e4aa","name":"VeggiDehumidifierOFF","links":["fa4182f14e046b55","6742723e51a69e70","e462cbb4a6911311"],"x":475,"y":700,"wires":[["83281680fe885d81"]]},{"id":"3582b06d82afcbc1","type":"api-call-service","z":"f5216914e209e4aa","name":"DryingDehumidifierON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_on","areaId":[],"deviceId":[],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":960,"y":640,"wires":[[]]},{"id":"4d9b6cced6775d85","type":"api-call-service","z":"f5216914e209e4aa","name":"DryingDehumidifierOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_off","areaId":[],"deviceId":[],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":970,"y":700,"wires":[[]]},{"id":"be1d3d1d7939e6e4","type":"link in","z":"f5216914e209e4aa","name":"DryingDehumidifierON","links":[],"x":815,"y":640,"wires":[["3582b06d82afcbc1"]]},{"id":"3d52f87e49d63fb6","type":"link in","z":"f5216914e209e4aa","name":"DryingDehumidifierOFF","links":[],"x":815,"y":700,"wires":[["4d9b6cced6775d85"]]},{"id":"f14842493e53a189","type":"api-call-service","z":"f5216914e209e4aa","name":"VeggiHumidifierON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"humidifier","service":"turn_on","areaId":[],"deviceId":["a974734c414e9afca81e0f9dc27dc960"],"entityId":["humidifier.befeuchter"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":610,"y":480,"wires":[[]]},{"id":"53f53d357df16a47","type":"api-call-service","z":"f5216914e209e4aa","name":"VeggiHumidifierOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"humidifier","service":"turn_off","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":620,"y":540,"wires":[[]]},{"id":"7deddc1b5d29a51e","type":"link in","z":"f5216914e209e4aa","name":"VeggiHumidifierOFF","links":["4838925f259b0f8f","d2b8b521e6d704e6","07a253f060cb08f3","f63d51ad02ce38e6","9ea6f7948516271f","ed29e5a88b496068"],"x":475,"y":540,"wires":[["53f53d357df16a47"]]},{"id":"1be287d67694b336","type":"link in","z":"f5216914e209e4aa","name":"VeggiHumidifierON","links":["41795c60f635579f","fb9d3843392773d1","cacb50c638ff93f0","77401e0fc8edc860","1c021da55d25e11a","275bae4f3b5b7256","b7298b472b6af1e2","14427e078adf6cba","2621143cc57c267d"],"x":475,"y":480,"wires":[["f14842493e53a189"]]},{"id":"4f88beec20f70e81","type":"api-call-service","z":"f5216914e209e4aa","name":"DryingHumidifierON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"humidifier","service":"turn_on","areaId":[],"deviceId":[],"entityId":["humidifier.befeuchter"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":960,"y":480,"wires":[[]]},{"id":"6d02b8a9ba6e1f90","type":"api-call-service","z":"f5216914e209e4aa","name":"DryingHumidifierOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"humidifier","service":"turn_off","areaId":[],"deviceId":["a974734c414e9afca81e0f9dc27dc960"],"entityId":["humidifier.befeuchter"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":960,"y":540,"wires":[[]]},{"id":"711d5e9407680562","type":"link in","z":"f5216914e209e4aa","name":"DryingHumidifierOFF","links":[],"x":815,"y":540,"wires":[["6d02b8a9ba6e1f90"]]},{"id":"f101e0061d61ac8d","type":"link in","z":"f5216914e209e4aa","name":"DryingHumidifierON","links":[],"x":815,"y":480,"wires":[["4f88beec20f70e81"]]},{"id":"6a3a68df8c886e6a","type":"api-call-service","z":"f5216914e209e4aa","name":"FlowerVentsTOP-OFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_off","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":200,"y":1440,"wires":[[]]},{"id":"d25bf02c39a1c661","type":"api-call-service","z":"f5216914e209e4aa","name":"FlowerVentsTOP-ON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_on","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":200,"y":1380,"wires":[[]]},{"id":"dbf991e9f55855f3","type":"api-call-service","z":"f5216914e209e4aa","name":"VeggiVentsTOP-OFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_off","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":620,"y":1440,"wires":[[]]},{"id":"cc731fa9f7eef2a8","type":"api-call-service","z":"f5216914e209e4aa","name":"VeggiVentsTOP-ON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_on","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":610,"y":1380,"wires":[[]]},{"id":"33d00c981dc88028","type":"api-call-service","z":"f5216914e209e4aa","name":"DryingVentsTOP-OFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_off","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":960,"y":1440,"wires":[[]]},{"id":"582e35b952109dc2","type":"api-call-service","z":"f5216914e209e4aa","name":"DryingVentsTOP-ON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_on","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":960,"y":1380,"wires":[[]]},{"id":"50e64fa33ce07500","type":"comment","z":"f5216914e209e4aa","name":"VentilationTop","info":"","x":110,"y":1320,"wires":[]},{"id":"d2d09bcc5850339e","type":"comment","z":"f5216914e209e4aa","name":"VentilationTop","info":"","x":530,"y":1320,"wires":[]},{"id":"df60ef1631512b28","type":"comment","z":"f5216914e209e4aa","name":"VentilationTop","info":"","x":870,"y":1320,"wires":[]},{"id":"ef9aa08986b98966","type":"link in","z":"f5216914e209e4aa","name":"DryingVentsTOP-OFF","links":[],"x":815,"y":1440,"wires":[["33d00c981dc88028"]]},{"id":"24d81e674d71dc9d","type":"link in","z":"f5216914e209e4aa","name":"DryingVentsTOP-ON","links":[],"x":815,"y":1380,"wires":[["582e35b952109dc2"]]},{"id":"855756be9589fa86","type":"link in","z":"f5216914e209e4aa","name":"VeggiVentsTOP-OFF","links":[],"x":475,"y":1440,"wires":[["dbf991e9f55855f3"]]},{"id":"44a6979426647e00","type":"link in","z":"f5216914e209e4aa","name":"VeggiVentsTOP-ON","links":[],"x":475,"y":1380,"wires":[["cc731fa9f7eef2a8"]]},{"id":"afbf94693f350e5d","type":"link in","z":"f5216914e209e4aa","name":"FlowerVentsTOP-OFF","links":[],"x":55,"y":1440,"wires":[["6a3a68df8c886e6a"]]},{"id":"a6f1bd1870d71f1f","type":"link in","z":"f5216914e209e4aa","name":"FlowerVentsTOP-ON","links":[],"x":55,"y":1380,"wires":[["d25bf02c39a1c661"]]},{"id":"69bf7c293ca3c7d3","type":"api-call-service","z":"f5216914e209e4aa","name":"FlowerVentsDOWN-OFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_off","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":210,"y":1640,"wires":[[]]},{"id":"c1355d06a7d8d05f","type":"api-call-service","z":"f5216914e209e4aa","name":"FlowerVentsDOWN-ON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_on","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":210,"y":1580,"wires":[[]]},{"id":"e13814f881bc8851","type":"api-call-service","z":"f5216914e209e4aa","name":"VeggiVentsDOWN-OFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_off","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":630,"y":1640,"wires":[[]]},{"id":"22ec71efa520e2de","type":"api-call-service","z":"f5216914e209e4aa","name":"VeggiVentsDOWN-ON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_on","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":620,"y":1580,"wires":[[]]},{"id":"20a0c090c5ca81b4","type":"api-call-service","z":"f5216914e209e4aa","name":"DryingVentsDOWN-OFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_off","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":970,"y":1640,"wires":[[]]},{"id":"a234e31ab90a8e1f","type":"api-call-service","z":"f5216914e209e4aa","name":"DryingVentsDOWN-ON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_on","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":970,"y":1580,"wires":[[]]},{"id":"9ac8acc5056821bd","type":"comment","z":"f5216914e209e4aa","name":"Ventilation Down","info":"","x":120,"y":1520,"wires":[]},{"id":"e6a94897bf113673","type":"comment","z":"f5216914e209e4aa","name":"Ventilation Down","info":"","x":540,"y":1520,"wires":[]},{"id":"fc7cf9d62beef04c","type":"comment","z":"f5216914e209e4aa","name":"Ventilation Down","info":"","x":880,"y":1520,"wires":[]},{"id":"1d548086dde9fbe5","type":"link in","z":"f5216914e209e4aa","name":"DryingVentsDOWN-OFF","links":[],"x":815,"y":1640,"wires":[["20a0c090c5ca81b4"]]},{"id":"32d8ccde6dd5c0b8","type":"link in","z":"f5216914e209e4aa","name":"DryingVentsDOWN-ON","links":[],"x":815,"y":1580,"wires":[["a234e31ab90a8e1f"]]},{"id":"f6dc7a1b02e6fbd8","type":"link in","z":"f5216914e209e4aa","name":"VeggiVentsDOWN-OFF","links":[],"x":475,"y":1640,"wires":[["e13814f881bc8851"]]},{"id":"11ad438188bbf7e1","type":"link in","z":"f5216914e209e4aa","name":"VeggiVentsDOWN-ON","links":[],"x":475,"y":1580,"wires":[["22ec71efa520e2de"]]},{"id":"356df5518b344be1","type":"link in","z":"f5216914e209e4aa","name":"FlowerVentsDOWN-OFF","links":[],"x":55,"y":1640,"wires":[["69bf7c293ca3c7d3"]]},{"id":"2162ad46178a16fd","type":"link in","z":"f5216914e209e4aa","name":"FlowerVentsDOWN-ON","links":[],"x":55,"y":1580,"wires":[["c1355d06a7d8d05f"]]},{"id":"feed18dbbcebdb52","type":"comment","z":"f5216914e209e4aa","name":"Air-Condition","info":"","x":870,"y":920,"wires":[]},{"id":"e8025512fb32e437","type":"api-call-service","z":"f5216914e209e4aa","name":"HEAT_HVAC_MODE_CLIMATE","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"set_hvac_mode","areaId":[],"deviceId":[],"entityId":[],"data":"{\"hvac_mode\":\"heat\"}","dataType":"json","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","output_location":"","output_location_type":"none","x":1250,"y":120,"wires":[[]]},{"id":"14c020923d1d42a9","type":"api-call-service","z":"f5216914e209e4aa","name":"COLD_HVAC_MODE_CLIMATE","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"set_hvac_mode","areaId":[],"deviceId":[],"entityId":[],"data":"{\"hvac_mode\":\"cold\"}","dataType":"json","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","output_location":"","output_location_type":"none","x":1250,"y":160,"wires":[[]]},{"id":"d04d7f5d25badffd","type":"api-call-service","z":"f5216914e209e4aa","name":"DRY_HVAC_MODE_CLIMATE","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"set_hvac_mode","areaId":[],"deviceId":[],"entityId":[],"data":"{\"hvac_mode\":\"dry\"}","dataType":"json","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","output_location":"","output_location_type":"none","x":1250,"y":200,"wires":[[]]},{"id":"69d2bbbaa57da104","type":"link in","z":"87bab898757000a2","name":"FlowerCtrl","links":["43ca19d80e63515d"],"x":55,"y":40,"wires":[["1bb8e9448a5f14de"]]},{"id":"1bb8e9448a5f14de","type":"debug","z":"87bab898757000a2","name":"FlowerTentData","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":180,"y":40,"wires":[]},{"id":"b9dfb243cc1af1b4","type":"link in","z":"87bab898757000a2","name":"FlowerLive","links":["e0e6fce7027c2e26"],"x":55,"y":80,"wires":[["bf6cdb0a0d2077a0","56aa552840d3803d"]]},{"id":"bf6cdb0a0d2077a0","type":"debug","z":"87bab898757000a2","name":"FlowerTentLiveData","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":190,"y":80,"wires":[]},{"id":"4675a31b7d62a521","type":"join","z":"87bab898757000a2","g":"684260cd34e37219","name":"VpdNeeds","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":740,"y":100,"wires":[["da4a10ce600a3a02"]]},{"id":"e352eb9ec5f51329","type":"function","z":"87bab898757000a2","g":"684260cd34e37219","name":"TentModesSetup","func":"// Initialisiert das Array für die Ausgänge mit Nullen\nlet outputs = [null, null, null, null, null ];\n\n// Überprüft den Zustand des eingehenden Payloads und setzt den entsprechenden Ausgang\nif (msg.payload === \"VPD Perfection\") {\n    return [{ payload: msg.payload, topic: \"Perfection\" }, null, null, null,null];\n}\nelse if (msg.payload === \"IN-VPD-Range\") {\n    return [null, { payload: msg.payload, topic: \"IN-VPD-Range\" }, null, null, null];\n}\nelse if (msg.payload === \"Targeted VPD\") {\n    return [null, null, { payload: msg.payload, topic: \"TargetedVPD\" }, null, null];\n}\nelse if (msg.payload === \"CropSteering\") {\n    return [null, null, null, { payload: msg.payload, topic: \"ModeDisabeld\" }, null ];\n}\nelse if (msg.payload === \"Disabled\") {\n    return [null, null, null, null, { payload: msg.payload, topic: \"ModeDisabeld\" }];\n}\n\n// Wenn keine Bedingungen zutreffen, sendet nichts\nreturn [null, null, null, null,null];\n","outputs":5,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1650,"y":220,"wires":[["b343362282198e73"],["e26a880fb2d24667"],["464b23e70cf844c8"],["a96ccda7addd1614"],["fc63cad79428afc6"]]},{"id":"fc63cad79428afc6","type":"function","z":"87bab898757000a2","g":"684260cd34e37219","name":"DISABLED AUTO","func":"msg.payload=\"DISABLED FLOWER\"\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1650,"y":280,"wires":[["1d43ba5bea872eea"]]},{"id":"1d43ba5bea872eea","type":"debug","z":"87bab898757000a2","g":"684260cd34e37219","name":"debug 118","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1630,"y":320,"wires":[]},{"id":"650d94e8238e269e","type":"api-current-state","z":"87bab898757000a2","g":"684260cd34e37219","name":"TentMode","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"select.flowertentmodes","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"TentMode","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1520,"y":120,"wires":[["e352eb9ec5f51329"]]},{"id":"b343362282198e73","type":"link out","z":"87bab898757000a2","g":"684260cd34e37219","name":"VPD-Perfektion","mode":"link","links":["1e5ab4d1f342f560"],"x":1845,"y":140,"wires":[]},{"id":"e26a880fb2d24667","type":"link out","z":"87bab898757000a2","g":"684260cd34e37219","name":"IN-Range-VPD","mode":"link","links":["f904b999069f9166","bab58a1e055f1530"],"x":1845,"y":180,"wires":[]},{"id":"180eab0539ef4f5b","type":"comment","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"VPD-Perfektion","info":"","x":2040,"y":620,"wires":[]},{"id":"1e5ab4d1f342f560","type":"link in","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"VPD-Perfektion","links":["b343362282198e73"],"x":1965,"y":680,"wires":[["d37ecd3c5f82cdbc"]]},{"id":"78de53c8bb55e403","type":"function","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"VPD State Values","func":"const plantStages = {\n    Germination: [0.42, 0.78], // Optimaler VPD-Bereich für Keimung bei 25-30°C\n    Clones: [0.42, 0.78],      // Optimaler VPD-Bereich für Klone bei 25-30°C\n    EarlyVeg: [0.55, 0.85],    // Optimaler VPD-Bereich für frühe Vegetation bei 20-25°C\n    MidVeg: [0.85, 1.1],      // Optimaler VPD-Bereich für mittlere Vegetation bei 20-25°C\n    LateVeg: [0.85, 1.2],     // Optimaler VPD-Bereich für späte Vegetation bei 20-25°C\n    EarlyFlower: [1, 1.25], // Optimaler VPD-Bereich für frühe Blüte bei 20-25°C\n    MidFlower: [1.1, 1.4],   // Optimaler VPD-Bereich für mittlere Blüte bei 20-25°C\n    LateFlower: [1.2, 1.6],  // Optimaler VPD-Bereich für späte Blüte bei 20-25°C\n};\n\n\n// Beispiel, wie msg.payload gesetzt wird\n// msg.payload = \"LateVeg\"; // Kommentieren Sie diese Zeile aus, um den tatsächlichen msg.payload zu verwenden\n\n// Prüfen, ob das Wachstumsstadium im plantStages-Objekt vorhanden ist\nif (plantStages.hasOwnProperty(msg.payload)) {\n    // Setzen des VPD-Wertes aus dem plantStages-Objekt\n    msg.payload = plantStages[msg.payload];\n} else {\n    // Fehlermeldung, wenn das Wachstumsstadium nicht gefunden wurde\n    msg.payload = \"Unbekanntes Wachstumsstadium\";\n\n}\nmsg.perfection = \"VPDStageValue\"\ndelete msg.data;\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2370,"y":680,"wires":[["c1e70d8332a5d4e4","33ec8a5f3c05962b"]]},{"id":"d37ecd3c5f82cdbc","type":"api-current-state","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"PlantStage","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"select.flowerplantstageselect","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"targetVPD","valueType":"str"},{"property":"perfection","propertyType":"msg","value":"targetVPD","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":2110,"y":680,"wires":[["78de53c8bb55e403"]]},{"id":"afeb5423a6f3b5db","type":"comment","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"IN-RANGE-VPD","info":"","x":2020,"y":1200,"wires":[]},{"id":"f1b0b6e3183aaeab","type":"comment","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"Targeted-VPD","info":"","x":2010,"y":1680,"wires":[]},{"id":"464b23e70cf844c8","type":"link out","z":"87bab898757000a2","g":"684260cd34e37219","name":"TargetedVPD","mode":"link","links":["500730d0af5e7cbf","78d116b1f17e53a9"],"x":1845,"y":220,"wires":[]},{"id":"fae02ab1f3ce0e63","type":"comment","z":"87bab898757000a2","g":"684260cd34e37219","name":"TentModes","info":"","x":1700,"y":160,"wires":[]},{"id":"e9088dc392b5024f","type":"ha-sensor","z":"87bab898757000a2","g":"684260cd34e37219","name":"FlowerAVGHum","entityConfig":"532f3d1e489722da","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1080,"y":240,"wires":[["8a884fe39e4f1e3c"]]},{"id":"01d5f2b84873c638","type":"ha-sensor","z":"87bab898757000a2","g":"684260cd34e37219","name":"FlowerAVGTemp","entityConfig":"edc405a70462ce85","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1090,"y":180,"wires":[["8a884fe39e4f1e3c"]]},{"id":"eb72ffdb8d671839","type":"ha-sensor","z":"87bab898757000a2","g":"684260cd34e37219","name":"currentVPD","entityConfig":"1a9ed93138063774","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1350,"y":140,"wires":[["650d94e8238e269e"]]},{"id":"da4a10ce600a3a02","type":"function","z":"87bab898757000a2","g":"684260cd34e37219","name":"Calc-AVG","func":"// Funktion zur Berechnung des Durchschnitts\nconst AvgTemp = (temps) => {\n    let sum = 0;\n    let count = 0;\n\n    temps.forEach((entry) => {\n        const temp = parseFloat(entry.value);\n        if (!isNaN(temp)) {\n            sum += temp;\n            count++;\n        }\n    });\n\n    if (count === 0) {\n        return \"unavailable\";\n    }\n\n    const avg = sum / count;\n    return avg.toFixed(2);\n};\n\n// Durchschnittstemperatur für jede Temperaturkategorie berechnen\nconst temperatureAvg = AvgTemp(msg.payload.temperature);\nconst humidityAvg = AvgTemp(msg.payload.humidity);\n\n// Objekt mit den Durchschnittswerten erstellen\nconst avgData = {\n    AvgTempData: temperatureAvg,\n    AvgHumData: humidityAvg\n};\n\n// Nachrichten erstellen und zurückgeben\nconst avgDataMsg = { payload: avgData, topic: \"AvgData\" };\nconst tempMsg = { payload: temperatureAvg, topic: \"AvgTemp\" };\nconst humMsg = { payload: humidityAvg, topic: \"AvgHum\" };\n\nreturn [avgDataMsg, tempMsg, humMsg];\n","outputs":3,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":780,"y":180,"wires":[["47249219e55b6920"],["01d5f2b84873c638"],["e9088dc392b5024f"]]},{"id":"97fb7c5e5e3f9dee","type":"function","z":"87bab898757000a2","g":"684260cd34e37219","name":"VPD Calc ","func":"function calculateVPD(luftTemperatur, blattTemperatur, relativeLuftfeuchtigkeit) {\n    // Stellen Sie sicher, dass alle Eingaben Zahlen sind\n    luftTemperatur = parseFloat(luftTemperatur);\n    blattTemperatur = parseFloat(blattTemperatur);\n    relativeLuftfeuchtigkeit = parseFloat(relativeLuftfeuchtigkeit);\n\n    // Überprüfen Sie, ob einer der Werte NaN ist\n    if (isNaN(luftTemperatur) || isNaN(blattTemperatur) || isNaN(relativeLuftfeuchtigkeit)) {\n        return NaN; // Geändert von \"unavailable\" zu NaN für bessere Handhabung in numerischen Berechnungen\n    }\n\n    // Berechnungen ohne Rundung\n    let sdpLuft = 0.6108 * Math.exp((17.27 * luftTemperatur) / (luftTemperatur + 237.3));\n    let sdpBlatt = 0.6108 * Math.exp((17.27 * blattTemperatur) / (blattTemperatur + 237.3));\n    let adp = (relativeLuftfeuchtigkeit / 100) * sdpLuft;\n    let vpd = sdpBlatt - adp;\n\n    // Rückgabe als number, nicht als string\n    return parseFloat(vpd.toFixed(2));\n}\n\n// Beispiel für die Verwendung der Funktion\nlet luftTemperatur = parseFloat(msg.payload.AvgData.AvgTempData); // Stellen Sie sicher, dass dies eine Zahl ist\nlet blattTemperatur = parseFloat(msg.payload.AvgData.AvgTempData) - parseFloat(msg.payload.LeafOffSet); // Keine Rundung, genaue Berechnung\nlet relativeLuftfeuchtigkeit = parseFloat(msg.payload.AvgData.AvgHumData); // Stellen Sie sicher, dass dies eine Zahl ist\n\nlet vpd = calculateVPD(luftTemperatur, blattTemperatur, relativeLuftfeuchtigkeit);\n\nmsg.payload = vpd; // Nun ist msg.payload eine Zahl\nmsg.topic = \"currentVPD\"\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1180,"y":120,"wires":[["eb72ffdb8d671839"]]},{"id":"c6f9196bc280b4e5","type":"comment","z":"87bab898757000a2","g":"684260cd34e37219","name":"VPD-Creation","info":"","x":750,"y":60,"wires":[]},{"id":"c1e70d8332a5d4e4","type":"join","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"VPDWish","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":2310,"y":760,"wires":[["da916caa4c612842"]]},{"id":"da916caa4c612842","type":"function","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"VPD Handler Array Value","func":"const tolerance = 0.00; // Toleranzwert für die VPD-Anpassung\n\n// Der aktuelle VPD-Wert wird aus dem Payload geholt und in eine Zahl umgewandelt.\nconst currentVPD = parseFloat(msg.payload.currentVPD);\n\n// Ziel-VPD-Bereich wird aus dem Payload geholt.\nconst targetVPDRange = msg.payload.targetVPD;\n\n// Logging der aktuellen VPD und Ziel-VPD-Bereich zur Überprüfung und Debugging.\nnode.warn(`Flower-VPD array between: ${targetVPDRange[0]} and ${targetVPDRange[1]}`);\n\n// Berechnung der prozentualen Abweichung vom Ziel-VPD und Rundung auf ganze Zahlen\nconst percentDifference = Math.round(currentVPD < targetVPDRange[0] \n    ? ((currentVPD - targetVPDRange[0]) / targetVPDRange[0]) * 100 \n    : ((currentVPD - targetVPDRange[1]) / targetVPDRange[1]) * 100);\n\n// Funktion zur Berechnung der notwendigen Anpassungen basierend auf der Differenz zum VPD-Zielbereich.\nfunction calculateAdjustment(currentVPD, targetVPDRange) {\n    // Wenn der aktuelle VPD unter dem minimalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu erhöhen.\n    if (currentVPD < targetVPDRange[0] - tolerance) {\n        node.warn(`Flower-VPD:: ${currentVPD} zu gering. Erhöhe Temp oder verringere die Feuchtigkeit`);\n        node.warn(`Flower % VPD Target: ${percentDifference} %`);\n        return {\n            exhaustSpeed: \"increased\",      // Erhöht die Abluftgeschwindigkeit, um feuchte Luft herauszuziehen\n            humidifier: \"reduced\",          // Schaltet den Luftbefeuchter aus, um Feuchtigkeit zu reduzieren\n            dehumidifier: \"increased\",       // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            heaterFan: \"increased\",         // Schaltet den Beheizer an, um die Feuchtigkeit zu reduzieren und Temp zu erhöhen\n            coolerFan: \"reduced\",           // Schaltet den Kühler an, um die Feuchtigkeit zu erhöhen und Temp zu verringern\n            ventsALL: \"increased\",          // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsTopSpeed: \"increased\",     // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsDownSpeed: \"increased\",    // Erhöht die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"increased\"     // Erhöht die Lichtintensität, um die Temperatur zu steigern (wenn das die Temperatur beeinflusst)\n        };\n        \n    }\n    // Wenn der aktuelle VPD über dem maximalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu senken.\n    else if (currentVPD > targetVPDRange[1] + tolerance) {\n        node.warn(`Flower-VPD: ${currentVPD} zu hoch. Verringere Temp oder erhöhe die Feuchtigkeit`);\n        node.warn(`Flower % VPD Target: ${percentDifference} %`);\n        return {\n            exhaustSpeed: \"reduced\",    // Reduziert die Abluftgeschwindigkeit, hält feuchte Luft im Raum\n            humidifier: \"increased\",    // Schaltet den Luftbefeuchter ein, um Feuchtigkeit zu erhöhen\n            dehumidifier: \"reduced\",    // Schaltet den Luftentfeuchter aus, um Feuchtigkeit zu erhöhen\n            heaterFan: \"reduced\",       // Schaltet den Heizer aus, um die Temperatur zu verringern\n            coolerFan: \"increased\",     // Schaltet den Kühler an, um die Temperatur zu verringern\n            ventsALL: \"reduced\",        // Reduziert die Geschwindigkeit der Belüftung, um mehr feuchte Luft zu halten\n            ventsTopSpeed: \"reduced\",   // Reduziert die Geschwindigkeit der oberen Belüftung\n            ventsDownSpeed: \"reduced\",  // Reduziert die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"reduced\"   // Verringert die Lichtintensität, um die Temperatur zu senken (wenn das die Temperatur beeinflusst)\n        };\n    }\n    // Wenn der VPD im Zielbereich liegt, sind keine Anpassungen erforderlich.\n    node.warn(`Flower-VPD: ${currentVPD} im gewünschten Bereich`);\n    return {\n        exhaustSpeed: \"unchanged\",\n        humidifier: \"unchanged\",\n        dehumidifier: \"unchanged\",    \n        heaterFan: \"unchanged\",        \n        coolerFan: \"unchanged\",        \n        ventsALL: \"unchanged\",       \n        ventsTopSpeed: \"unchanged\",\n        ventsDownSpeed: \"unchanged\",\n        lightIntensity: \"unchanged\"\n    };\n}\n\n// Entscheidungslogik zur Steuerung der Umgebungsbedingungen, nutzt die calculateAdjustment Funktion.\nconst adjustments = calculateAdjustment(currentVPD, targetVPDRange);\n\n// Berechnung der prozentualen Abweichung und Hinzufügen zum Payload\nmsg.payload = {\n    exhaustSpeed: adjustments.exhaustSpeed,\n    humidifier: adjustments.humidifier,\n    dehumidifier: adjustments.dehumidifier,\n    heaterFan: adjustments.heaterFan,\n    coolerFan: adjustments.coolerFan,\n    ventsALL: adjustments.ventsALL,\n    ventsTopSpeed: adjustments.ventsTopSpeed,\n    ventsDownSpeed: adjustments.ventsDownSpeed,\n    lightIntensity: adjustments.lightIntensity,\n    percentDifference: percentDifference\n};\n\nmsg.perfektion = \"VPDActions\";\n\n// Rückgabe des modifizierten Payloads für weitere Verwendung im Flow.\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2570,"y":760,"wires":[["a2491093273ea707","33ec8a5f3c05962b"]]},{"id":"a2491093273ea707","type":"function","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"Check What Do","func":"let outputs = [null, null, null, null, null, null, null, null, null];\n\nvar percentDifference = msg.payload.percentDifference\n\n// Abluft\nif (msg.payload.exhaustSpeed === \"unchanged\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"increased\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"reduced\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n}\n\n// Humidifier\nif (msg.payload.humidifier === \"unchanged\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"increased\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"reduced\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n}\n\n// Dehumidifier\nif (msg.payload.dehumidifier === \"unchanged\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"increased\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"reduced\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n}\n\n// HeaterFan\nif (msg.payload.heaterFan === \"unchanged\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"increased\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"reduced\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n}\n\n// CoolerFan\nif (msg.payload.coolerFan === \"unchanged\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"increased\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"reduced\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n}\n\n// LightIntensity\nif (msg.payload.lightIntensity === \"unchanged\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"increased\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"reduced\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n}\n\n// VentsALL\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"increased\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"reduced\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n}\n\n// VentsTopSpeed\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"increased\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"reduced\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n}\n\n// VentsDownSpeed\nif (msg.payload.ventsDownSpeed === \"unchanged\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"increased\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"reduced\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n}\n\n\n\nreturn outputs;\n","outputs":9,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2600,"y":860,"wires":[["b81d8ddcfd887066"],["84809bfb26038acc"],["2cab4ff46bb255d1"],["fa452f0146e78478"],["24030fcfc3c0c570"],["17ce802afe4871e3"],["8bb02e174a322903"],["8bb02e174a322903"],["8bb02e174a322903"]]},{"id":"33ec8a5f3c05962b","type":"join","z":"87bab898757000a2","g":"2a37f65b72394049","name":"perfection","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"perfection","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"3","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":2570,"y":300,"wires":[["5621782b9ee9ac2e","86b2ec1b10c4c0f3"]]},{"id":"86b2ec1b10c4c0f3","type":"function","z":"87bab898757000a2","g":"2a37f65b72394049","name":"Make Perfekt VPD","func":"const tolerance = 0.025; // Toleranzwert für die VPD-Anpassung\nnode.warn(msg.payload.currentVPD);\n// Berechnet den durchschnittlichen Wert aus zwei Zahlen im Array VPDStageValue und begrenzt das Ergebnis auf zwei Dezimalstellen\nconst averageVPD = (msg.payload.VPDStageValue[0] + msg.payload.VPDStageValue[1]) / 2;\nconst perfectVPD = parseFloat(averageVPD.toFixed(3));\n\nconst currentVPD = parseFloat(msg.payload.currentVPD);\n\n// Build increase base of State % diffrence from Current VPD to avarangeVPD\n// Berechnung der prozentualen Abweichung vom Ziel-VPD\nconst percentDifference = ((currentVPD - perfectVPD) / perfectVPD) * 100;\n\n\n\n// IF not in Range Do Nothing\nif (currentVPD < msg.payload.VPDStageValue[0] || currentVPD > msg.payload.VPDStageValue[1]){\n    return\n}\n// Warnung über die prozentuale Abweichung\nnode.warn(`Perfect-VEGGI %  ${percentDifference.toFixed(2)}%`);\nnode.warn(`Perfect-Veggi-Current VPD: ${currentVPD}`);\nnode.warn(`Perfect-Veggi-Target-VPD: ${perfectVPD} with ${tolerance} Tolerance`);\n\n\n\n// Funktion zur Berechnung der notwendigen Anpassungen basierend auf der Differenz zum VPD-Zielbereich.\nfunction calculateAdjustment(currentVPD, perfectVPD) {\n    // Wenn der aktuelle VPD unter dem minimalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu erhöhen.\n    if (currentVPD < perfectVPD - tolerance) {\n        node.warn(`Perfect-Veggi-VPD:: ${currentVPD} zu Gering Erhöe Temp oder veringere die Feuchtikeit`);\n        return {\n            exhaustSpeed: \"increased\",      // Erhöht die Abluftgeschwindigkeit, um feuchte Luft herauszuziehen\n            humidifier: \"reduced\",          // Schaltet den Luftbefeuchter aus, um Feuchtigkeit zu reduzieren\n            dehumidifier: \"increased\",       // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            heaterFan: \"increased\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Reduzieren und Temp zu erhöhen\n            coolerFan: \"reduced\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Erhöhen und Temp zu veringern\n            ventsTopSpeed: \"increased\",     // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsDownSpeed: \"increased\",    // Erhöht die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"increased\"     // Erhöht die Lichtintensität, um die Temperatur zu steigern (wenn das die Temperatur beeinflusst)\n        };\n        \n    }\n    // Wenn der aktuelle VPD über dem maximalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu senken.\n    else if (currentVPD > perfectVPD + tolerance) {\n        node.warn(`Perfect-Veggi-VPD: ${currentVPD} zu hoch verringere Temp oder erhöe die Feuchtikeit`);\n        return {\n            exhaustSpeed: \"reduced\",    // Reduziert die Abluftgeschwindigkeit, hält feuchte Luft im Raum\n            humidifier: \"increased\",           // Schaltet den Luftbefeuchter ein, um Feuchtigkeit zu erhöhen\n            dehumidifier: \"reduced\",       // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            heaterFan: \"reduced\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Reduzieren und Temp zu erhöhen\n            coolerFan: \"increased\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Erhöhen und Temp zu veringern\n            ventsTopSpeed: \"reduced\",   // Reduziert die Geschwindigkeit der oberen Belüftung\n            ventsDownSpeed: \"reduced\",  // Reduziert die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"reduced\"      // Verringert die Lichtintensität, um die Temperatur zu senken (wenn das die Temperatur beeinflusst)\n        };\n    }\n    // Wenn der VPD im Zielbereich liegt, sind keine Anpassungen erforderlich.\n             node.warn(`Perfect-Veggi-VPD: ${currentVPD} im Gewünschten Bereich`);\n    return {\n        exhaustSpeed: \"unchanged\",\n        humidifier: \"unchanged\",\n        dehumidifier: \"unchanged\",       // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n        heaterFan: \"unchanged\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Reduzieren und Temp zu erhöhen\n        coolerFan: \"unchanged\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Erhöhen und Temp zu veringern\n        ventsTopSpeed: \"unchanged\",\n        ventsDownSpeed: \"unchanged\",\n        lightIntensity: \"unchanged\"\n    };\n}\n\n// Entscheidungslogik zur Steuerung der Umgebungsbedingungen, nutzt die calculateAdjustment Funktion.\nconst adjustments = calculateAdjustment(currentVPD, perfectVPD);\nmsg.payload = {\n    exhaustSpeed: adjustments.exhaustSpeed,\n    humidifier: adjustments.humidifier,\n    dehumidifier: adjustments.dehumidifier,\n    heaterFan: adjustments.heaterFan,\n    coolerFan: adjustments.coolerFan,\n    ventsTopSpeed: adjustments.ventsTopSpeed,\n    ventsDownSpeed: adjustments.ventsDownSpeed,\n    lightIntensity: adjustments.lightIntensity,\n    percentDifference: percentDifference.toFixed(2)\n};\nmsg.perfektion = \"VPDActions\"\n\n// Rückgabe des modifizierten Payloads für weitere Verwendung im Flow.\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2770,"y":380,"wires":[["7365db5b05b0cdad","55da67fef2acad51"]]},{"id":"7365db5b05b0cdad","type":"function","z":"87bab898757000a2","g":"2a37f65b72394049","name":"Check What Do","func":"let outputs = [null, null, null, null, null, null, null, null, null];\n\nvar percentDifference = msg.payload.percentDifference\n\n// Abluft\nif (msg.payload.exhaustSpeed === \"unchanged\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"increased\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"reduced\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n}\n\n// Humidifier\nif (msg.payload.humidifier === \"unchanged\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"increased\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"reduced\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n}\n\n// Dehumidifier\nif (msg.payload.dehumidifier === \"unchanged\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"increased\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"reduced\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n}\n\n// HeaterFan\nif (msg.payload.heaterFan === \"unchanged\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"increased\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"reduced\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n}\n\n// CoolerFan\nif (msg.payload.coolerFan === \"unchanged\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"increased\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"reduced\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n}\n\n// LightIntensity\nif (msg.payload.lightIntensity === \"unchanged\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"increased\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"reduced\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n}\n\n// VentsALL\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"increased\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"reduced\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n}\n\n// VentsTopSpeed\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"increased\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"reduced\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n}\n\n// VentsDownSpeed\nif (msg.payload.ventsDownSpeed === \"unchanged\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"increased\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"reduced\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n}\n\n\n\nreturn outputs;\n","outputs":9,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2780,"y":480,"wires":[["356ce5b53838cd67"],["6b389a8ca3ee7f49"],["cee90b8566452ac8"],["037948bc84926efa"],["e1a942ad8a536ef3"],["39099da8915e29b7"],["27e01016801fc664"],["27e01016801fc664"],["27e01016801fc664"]]},{"id":"9d125ce221658824","type":"link out","z":"87bab898757000a2","name":"ExhaustData","mode":"link","links":["1aeeeda08043bd54","22de82672fafd826","7c5a646f225f4ab1","eb2c9d58dd38f1d2","4ad596727315ba0c","e705047b1a410ff1","033d8f63407adc30"],"x":585,"y":720,"wires":[]},{"id":"79bde8bec83cb56a","type":"link out","z":"87bab898757000a2","name":"HumidifierData","mode":"link","links":["9c7dd5cc1ab3a56f","cd9a328a814e5484","e3b89882bbab368d","f37287fdb9a1391c","c6952828beed3687","5250abb0abece036","b99a15275082032e"],"x":585,"y":760,"wires":[]},{"id":"bab58a1e055f1530","type":"link in","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"VPD-Perfektion","links":["e26a880fb2d24667"],"x":1965,"y":1260,"wires":[["718bc098c204f567"]]},{"id":"fb64d5b83ef0f886","type":"function","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"VPD State Values","func":"const plantStages = {\n    Germination: [0.42, 0.78], // Optimaler VPD-Bereich für Keimung bei 25-30°C\n    Clones: [0.42, 0.78],      // Optimaler VPD-Bereich für Klone bei 25-30°C\n    EarlyVeg: [0.55, 0.85],    // Optimaler VPD-Bereich für frühe Vegetation bei 20-25°C\n    MidVeg: [0.85, 1.1],      // Optimaler VPD-Bereich für mittlere Vegetation bei 20-25°C\n    LateVeg: [0.85, 1.2],     // Optimaler VPD-Bereich für späte Vegetation bei 20-25°C\n    EarlyFlower: [1, 1.25], // Optimaler VPD-Bereich für frühe Blüte bei 20-25°C\n    MidFlower: [1.1, 1.4],   // Optimaler VPD-Bereich für mittlere Blüte bei 20-25°C\n    LateFlower: [1.2, 1.6],  // Optimaler VPD-Bereich für späte Blüte bei 20-25°C\n};\n\n\n// Beispiel, wie msg.payload gesetzt wird\n// msg.payload = \"LateVeg\"; // Kommentieren Sie diese Zeile aus, um den tatsächlichen msg.payload zu verwenden\n\n// Prüfen, ob das Wachstumsstadium im plantStages-Objekt vorhanden ist\nif (plantStages.hasOwnProperty(msg.payload)) {\n    // Setzen des VPD-Wertes aus dem plantStages-Objekt\n    msg.payload = plantStages[msg.payload];\n} else {\n    // Fehlermeldung, wenn das Wachstumsstadium nicht gefunden wurde\n    msg.payload = \"Unbekanntes Wachstumsstadium\";\n\n}\nmsg.perfektion = \"VPDStageValue\"\ndelete msg.data;\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2330,"y":1260,"wires":[["cf64ead2f0f9c53f"]]},{"id":"718bc098c204f567","type":"api-current-state","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"PlantStage","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"select.flowerplantstageselect","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"targetVPD","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":2070,"y":1260,"wires":[["fb64d5b83ef0f886"]]},{"id":"1fc52b3283aabd93","type":"poll-state","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"currentVPD","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","updateInterval":"30","updateIntervalType":"num","updateIntervalUnits":"seconds","outputInitially":true,"outputOnChanged":true,"entityId":"sensor.vpd_flower","stateType":"num","ifState":"","ifStateType":"num","ifStateOperator":"is","outputs":1,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"currentVPD","valueType":"str"}],"x":2110,"y":1400,"wires":[["cf64ead2f0f9c53f"]]},{"id":"cf64ead2f0f9c53f","type":"join","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"VPDWish","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":2290,"y":1340,"wires":[["7856db1b9077bca0"]]},{"id":"7856db1b9077bca0","type":"function","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"VPD Handler Array Value","func":"const tolerance = 0.00; // Toleranzwert für die VPD-Anpassung\n\n// Der aktuelle VPD-Wert wird aus dem Payload geholt und in eine Zahl umgewandelt.\nconst currentVPD = parseFloat(msg.payload.currentVPD);\n\n// Ziel-VPD-Bereich wird aus dem Payload geholt.\nconst targetVPDRange = msg.payload.targetVPD;\n\n// Logging der aktuellen VPD und Ziel-VPD-Bereich zur Überprüfung und Debugging.\nnode.warn(`Flower-VPD array between: ${targetVPDRange[0]} and ${targetVPDRange[1]}`);\n\n// Berechnung der prozentualen Abweichung vom Ziel-VPD und Rundung auf ganze Zahlen\nconst percentDifference = Math.round(currentVPD < targetVPDRange[0] \n    ? ((currentVPD - targetVPDRange[0]) / targetVPDRange[0]) * 100 \n    : ((currentVPD - targetVPDRange[1]) / targetVPDRange[1]) * 100);\n\n// Funktion zur Berechnung der notwendigen Anpassungen basierend auf der Differenz zum VPD-Zielbereich.\nfunction calculateAdjustment(currentVPD, targetVPDRange) {\n    // Wenn der aktuelle VPD unter dem minimalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu erhöhen.\n    if (currentVPD < targetVPDRange[0] - tolerance) {\n        node.warn(`Flower-VPD:: ${currentVPD} zu gering. Erhöhe Temp oder verringere die Feuchtigkeit`);\n        node.warn(`Flower % VPD Target: ${percentDifference} %`);\n        return {\n            exhaustSpeed: \"increased\",      // Erhöht die Abluftgeschwindigkeit, um feuchte Luft herauszuziehen\n            humidifier: \"reduced\",          // Schaltet den Luftbefeuchter aus, um Feuchtigkeit zu reduzieren\n            dehumidifier: \"increased\",       // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            heaterFan: \"increased\",         // Schaltet den Beheizer an, um die Feuchtigkeit zu reduzieren und Temp zu erhöhen\n            coolerFan: \"reduced\",           // Schaltet den Kühler an, um die Feuchtigkeit zu erhöhen und Temp zu verringern\n            ventsALL: \"increased\",          // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsTopSpeed: \"increased\",     // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsDownSpeed: \"increased\",    // Erhöht die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"increased\"     // Erhöht die Lichtintensität, um die Temperatur zu steigern (wenn das die Temperatur beeinflusst)\n        };\n        \n    }\n    // Wenn der aktuelle VPD über dem maximalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu senken.\n    else if (currentVPD > targetVPDRange[1] + tolerance) {\n        node.warn(`Flower-VPD: ${currentVPD} zu hoch. Verringere Temp oder erhöhe die Feuchtigkeit`);\n        node.warn(`Flower % VPD Target: ${percentDifference} %`);\n        return {\n            exhaustSpeed: \"reduced\",    // Reduziert die Abluftgeschwindigkeit, hält feuchte Luft im Raum\n            humidifier: \"increased\",    // Schaltet den Luftbefeuchter ein, um Feuchtigkeit zu erhöhen\n            dehumidifier: \"reduced\",    // Schaltet den Luftentfeuchter aus, um Feuchtigkeit zu erhöhen\n            heaterFan: \"reduced\",       // Schaltet den Heizer aus, um die Temperatur zu verringern\n            coolerFan: \"increased\",     // Schaltet den Kühler an, um die Temperatur zu verringern\n            ventsALL: \"reduced\",        // Reduziert die Geschwindigkeit der Belüftung, um mehr feuchte Luft zu halten\n            ventsTopSpeed: \"reduced\",   // Reduziert die Geschwindigkeit der oberen Belüftung\n            ventsDownSpeed: \"reduced\",  // Reduziert die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"reduced\"   // Verringert die Lichtintensität, um die Temperatur zu senken (wenn das die Temperatur beeinflusst)\n        };\n    }\n    // Wenn der VPD im Zielbereich liegt, sind keine Anpassungen erforderlich.\n    node.warn(`Flower-VPD: ${currentVPD} im gewünschten Bereich`);\n    return {\n        exhaustSpeed: \"unchanged\",\n        humidifier: \"unchanged\",\n        dehumidifier: \"unchanged\",    \n        heaterFan: \"unchanged\",        \n        coolerFan: \"unchanged\",        \n        ventsALL: \"unchanged\",       \n        ventsTopSpeed: \"unchanged\",\n        ventsDownSpeed: \"unchanged\",\n        lightIntensity: \"unchanged\"\n    };\n}\n\n// Entscheidungslogik zur Steuerung der Umgebungsbedingungen, nutzt die calculateAdjustment Funktion.\nconst adjustments = calculateAdjustment(currentVPD, targetVPDRange);\n\n// Berechnung der prozentualen Abweichung und Hinzufügen zum Payload\nmsg.payload = {\n    exhaustSpeed: adjustments.exhaustSpeed,\n    humidifier: adjustments.humidifier,\n    dehumidifier: adjustments.dehumidifier,\n    heaterFan: adjustments.heaterFan,\n    coolerFan: adjustments.coolerFan,\n    ventsALL: adjustments.ventsALL,\n    ventsTopSpeed: adjustments.ventsTopSpeed,\n    ventsDownSpeed: adjustments.ventsDownSpeed,\n    lightIntensity: adjustments.lightIntensity,\n    percentDifference: percentDifference\n};\n\nmsg.perfektion = \"VPDActions\";\n\n// Rückgabe des modifizierten Payloads für weitere Verwendung im Flow.\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2490,"y":1300,"wires":[["5e2b8fb494e4ebfe"]]},{"id":"5e2b8fb494e4ebfe","type":"function","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"Check What Do","func":"let outputs = [null, null, null, null, null, null, null, null, null];\n\nvar percentDifference = msg.payload.percentDifference\n\n// Abluft\nif (msg.payload.exhaustSpeed === \"unchanged\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"increased\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"reduced\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n}\n\n// Humidifier\nif (msg.payload.humidifier === \"unchanged\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"increased\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"reduced\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n}\n\n// Dehumidifier\nif (msg.payload.dehumidifier === \"unchanged\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"increased\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"reduced\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n}\n\n// HeaterFan\nif (msg.payload.heaterFan === \"unchanged\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"increased\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"reduced\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n}\n\n// CoolerFan\nif (msg.payload.coolerFan === \"unchanged\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"increased\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"reduced\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n}\n\n// LightIntensity\nif (msg.payload.lightIntensity === \"unchanged\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"increased\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"reduced\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n}\n\n// VentsALL\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"increased\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"reduced\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n}\n\n// VentsTopSpeed\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"increased\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"reduced\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n}\n\n// VentsDownSpeed\nif (msg.payload.ventsDownSpeed === \"unchanged\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"increased\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"reduced\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n}\n\n\n\nreturn outputs;\n","outputs":9,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2460,"y":1400,"wires":[["7e8b342e3753e452"],["808f10a848fd1bbc"],["8478947630a71dd8"],["60320ccde9c6bb77"],["90926a27b0c54411"],["5cfa060f5b8332cf"],["e85f06938d85911a"],["e85f06938d85911a"],["e85f06938d85911a"]]},{"id":"2e49f2a877dc0908","type":"function","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"Check What Do","func":"let outputs = [null, null, null, null, null, null, null, null, null];\n\nvar percentDifference = msg.payload.percentDifference\n\n// Abluft\nif (msg.payload.exhaustSpeed === \"unchanged\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"increased\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"reduced\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n}\n\n// Humidifier\nif (msg.payload.humidifier === \"unchanged\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"increased\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"reduced\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n}\n\n// Dehumidifier\nif (msg.payload.dehumidifier === \"unchanged\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"increased\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"reduced\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n}\n\n// HeaterFan\nif (msg.payload.heaterFan === \"unchanged\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"increased\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"reduced\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n}\n\n// CoolerFan\nif (msg.payload.coolerFan === \"unchanged\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"increased\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"reduced\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n}\n\n// LightIntensity\nif (msg.payload.lightIntensity === \"unchanged\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"increased\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"reduced\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n}\n\n// VentsALL\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"increased\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"reduced\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n}\n\n// VentsTopSpeed\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"increased\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"reduced\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n}\n\n// VentsDownSpeed\nif (msg.payload.ventsDownSpeed === \"unchanged\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"increased\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"reduced\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n}\n\n\n\nreturn outputs;\n","outputs":9,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2300,"y":1920,"wires":[["e3900c6fcb1518f1"],["76500f9124621519"],["10c052baa77914bd"],["c8950634986ed39f"],["6b7c54b84d733581"],["b5790a0ccc6a2965"],["464ace433af602f5"],["464ace433af602f5"],["464ace433af602f5"]]},{"id":"5621782b9ee9ac2e","type":"debug","z":"87bab898757000a2","g":"2a37f65b72394049","name":"debug 148","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2570,"y":340,"wires":[]},{"id":"b5a693bcd77d4f80","type":"function","z":"87bab898757000a2","g":"684260cd34e37219","name":"Calc-Dewpoint","func":"// Funktion zur Berechnung des Taupunkts\nconst calculateDewPoint = (temperature, humidity) => {\n    const temp = parseFloat(temperature);\n    const hum = parseFloat(humidity);\n\n    if (isNaN(temp) || isNaN(hum)) {\n        return \"unavailable\";\n    }\n\n    const dewPoint = temp - ((100 - hum) / 5);\n    return parseFloat(dewPoint.toFixed(3));\n};\n\n// Beispielinput\nconst inputData = msg.payload;\n\n// Taupunkt berechnen\nconst temperature = parseFloat(inputData.AvgTemp);\nconst humidity = parseFloat(inputData.AvgHum);\nconst dewPoint = calculateDewPoint(temperature, humidity);\n\n// Taupunkt als Zahl zurückgeben\nmsg.payload = dewPoint;\nreturn msg\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1440,"y":200,"wires":[["54b1d8a63e1902a7"]]},{"id":"8a884fe39e4f1e3c","type":"join","z":"87bab898757000a2","g":"684260cd34e37219","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1290,"y":200,"wires":[["b5a693bcd77d4f80"]]},{"id":"54b1d8a63e1902a7","type":"ha-sensor","z":"87bab898757000a2","g":"684260cd34e37219","name":"FlowerAVGDewPoint","entityConfig":"0741c8a3236b491c","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[{"property":"topic","propertyType":"msg","value":"DryTentDewPoint","valueType":"str"}],"x":1380,"y":240,"wires":[[]]},{"id":"47249219e55b6920","type":"join","z":"87bab898757000a2","g":"684260cd34e37219","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1030,"y":140,"wires":[["97fb7c5e5e3f9dee"]]},{"id":"3d4627f3225a086b","type":"link in","z":"87bab898757000a2","g":"684260cd34e37219","name":"link in 9","links":["f0449f704d2f7c8a"],"x":875,"y":60,"wires":[["d51dc8176bf8690e"]]},{"id":"d51dc8176bf8690e","type":"function","z":"87bab898757000a2","g":"684260cd34e37219","name":"Select","func":"let outputs = [null, null];\n\nvar leafMode = msg.payload.GlobalLeafSet;\nvar leafOffSet = msg.payload.LeafOffset;\nvar flowerLeafOffset = msg.payload.FlowerLeafOffset;\nvar veggiLeafOffset = msg.payload.VeggiLeafOffset;\nvar groomLeafOffset = msg.payload.GRoomLeafOffset;\n\n// Logic to set new offset based on leaf mode\nif (leafMode === \"Default\") {\n    outputs[0] = { payload: leafOffSet, topic: \"LeafOffSet\" };\n} else if (leafMode === \"Custom\") {\n    outputs[1] = { payload: veggiLeafOffset, topic: \"LeafOffSet\" };\n}\n\nreturn outputs;  // Return the modified outputs array\n","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":910,"y":120,"wires":[["47249219e55b6920"],["47249219e55b6920"]]},{"id":"a96ccda7addd1614","type":"link out","z":"87bab898757000a2","g":"684260cd34e37219","name":"CropSteering","mode":"link","links":["96ad7357a215e3d7"],"x":1845,"y":260,"wires":[]},{"id":"e878287b07f180fd","type":"debug","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"debug 177","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2490,"y":1780,"wires":[]},{"id":"11736a563bfcb495","type":"poll-state","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"currentVPD","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","updateInterval":"30","updateIntervalType":"num","updateIntervalUnits":"seconds","outputInitially":true,"outputOnChanged":true,"entityId":"sensor.vpd_flower","stateType":"num","ifState":"","ifStateType":"num","ifStateOperator":"is","outputs":1,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"currentVPD","valueType":"str"},{"property":"perfection","propertyType":"msg","value":"currentVPD","valueType":"str"}],"x":2150,"y":880,"wires":[["c1e70d8332a5d4e4","33ec8a5f3c05962b"]]},{"id":"78d116b1f17e53a9","type":"link in","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"VPD-Perfektion","links":["464b23e70cf844c8"],"x":1965,"y":1740,"wires":[["e6b2c630db705db7"]]},{"id":"cb901688be6c0de1","type":"poll-state","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"currentVPD","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","updateInterval":"30","updateIntervalType":"num","updateIntervalUnits":"seconds","outputInitially":true,"outputOnChanged":true,"entityId":"sensor.vpd_flower","stateType":"num","ifState":"","ifStateType":"num","ifStateOperator":"is","outputs":1,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"currentVPD","valueType":"str"}],"x":2050,"y":1880,"wires":[["546819f8bcf743d9"]]},{"id":"546819f8bcf743d9","type":"join","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"VPDWish","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":2260,"y":1820,"wires":[["7b3614a53b99b56b","a7faaa78e3ab3a02"]]},{"id":"7b3614a53b99b56b","type":"function","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"VPD Handler Array Value","func":"const tolerance = 0.00; // Toleranzwert für die VPD-Anpassung\n\n// Der aktuelle VPD-Wert wird aus dem Payload geholt und in eine Zahl umgewandelt.\nconst currentVPD = parseFloat(msg.payload.currentVPD);\n\n// Ziel-VPD-Bereich wird aus dem Payload geholt.\nconst targetVPDRange = msg.payload.targetVPD;\n\n// Logging der aktuellen VPD und Ziel-VPD-Bereich zur Überprüfung und Debugging.\nnode.warn(`Flower-VPD-Target: ${targetVPDRange}`);\n\n// Funktion zur Berechnung der notwendigen Anpassungen basierend auf der Differenz zum VPD-Zielbereich.\nfunction calculateAdjustment(currentVPD, targetVPDRange) {\n    // Wenn der aktuelle VPD unter dem minimalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu erhöhen.\n    if (currentVPD < targetVPDRange - tolerance) {\n        node.warn(`Flower-VPD: ${currentVPD} zu gering. Erhöhe Temp oder verringere die Feuchtigkeit.`);\n        return {\n            exhaustSpeed: \"increased\",      // Erhöht die Abluftgeschwindigkeit, um feuchte Luft herauszuziehen\n            humidifier: \"reduced\",          // Schaltet den Luftbefeuchter aus, um Feuchtigkeit zu reduzieren\n            dehumidifier: \"increased\",      // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            heaterFan: \"increased\",         // Schaltet den Beheizer an, um die Feuchtigkeit zu reduzieren und Temp zu erhöhen\n            coolerFan: \"reduced\",           // Schaltet den Beheizer an, um die Feuchtigkeit zu erhöhen und Temp zu verringern\n            ventsALL: \"increased\",          // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsTopSpeed: \"increased\",     // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsDownSpeed: \"increased\",    // Erhöht die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"increased\"     // Erhöht die Lichtintensität, um die Temperatur zu steigern (wenn das die Temperatur beeinflusst)\n        };\n    }\n    // Wenn der aktuelle VPD über dem maximalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu senken.\n    else if (currentVPD > targetVPDRange + tolerance) {\n        node.warn(`Flower-VPD: ${currentVPD} zu hoch. Verringere Temp oder erhöhe die Feuchtigkeit.`);\n        return {\n            exhaustSpeed: \"reduced\",    // Reduziert die Abluftgeschwindigkeit, hält feuchte Luft im Raum\n            humidifier: \"increased\",    // Schaltet den Luftbefeuchter ein, um Feuchtigkeit zu erhöhen\n            dehumidifier: \"reduced\",    // Schaltet den Luftentfeuchter aus, um Feuchtigkeit zu erhöhen\n            heaterFan: \"reduced\",       // Schaltet den Beheizer aus, um die Feuchtigkeit zu erhöhen und Temp zu senken\n            coolerFan: \"increased\",     // Schaltet den Kühler an, um die Feuchtigkeit zu erhöhen und Temp zu verringern\n            ventsALL: \"reduced\",        // Reduziert die Geschwindigkeit der Belüftung, um mehr feuchte Luft zu halten\n            ventsTopSpeed: \"reduced\",   // Reduziert die Geschwindigkeit der oberen Belüftung\n            ventsDownSpeed: \"reduced\",  // Reduziert die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"reduced\"   // Verringert die Lichtintensität, um die Temperatur zu senken (wenn das die Temperatur beeinflusst)\n        };\n    }\n    // Wenn der VPD im Zielbereich liegt, sind keine Anpassungen erforderlich.\n    node.warn(`Flower-VPD: ${currentVPD} im gewünschten Bereich.`);\n    return {\n        exhaustSpeed: \"unchanged\",\n        humidifier: \"unchanged\",\n        dehumidifier: \"unchanged\",\n        heaterFan: \"unchanged\",\n        coolerFan: \"unchanged\",\n        ventsALL: \"unchanged\",\n        ventsTopSpeed: \"unchanged\",\n        ventsDownSpeed: \"unchanged\",\n        lightIntensity: \"unchanged\"\n    };\n}\n\n// Funktion zur Berechnung der prozentualen Abweichung\nfunction calculatePercentDifference(currentVPD, targetVPD) {\n    return ((currentVPD - targetVPD) / targetVPD) * 100;\n}\n\n// Entscheidungslogik zur Steuerung der Umgebungsbedingungen, nutzt die calculateAdjustment Funktion.\nconst adjustments = calculateAdjustment(currentVPD, targetVPDRange);\nconst percentDifference = calculatePercentDifference(currentVPD, targetVPDRange);\n\nmsg.payload = {\n    exhaustSpeed: adjustments.exhaustSpeed,\n    humidifier: adjustments.humidifier,\n    dehumidifier: adjustments.dehumidifier,\n    heaterFan: adjustments.heaterFan,\n    coolerFan: adjustments.coolerFan,\n    ventsALL: adjustments.ventsALL,\n    ventsTopSpeed: adjustments.ventsTopSpeed,\n    ventsDownSpeed: adjustments.ventsDownSpeed,\n    lightIntensity: adjustments.lightIntensity,\n    percentDifference: percentDifference.toFixed(2) // Prozentuale Abweichung auf 2 Dezimalstellen gerundet\n};\n\nmsg.perfektion = \"VPDActions\";\n// Rückgabe des modifizierten Payloads für weitere Verwendung im Flow.\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2480,"y":1820,"wires":[["2e49f2a877dc0908","e878287b07f180fd"]]},{"id":"e6b2c630db705db7","type":"api-current-state","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"PlantStage","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"select.flowerplantstageselect","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"targetVPD","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":2090,"y":1740,"wires":[["546819f8bcf743d9"]]},{"id":"a7faaa78e3ab3a02","type":"debug","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"debug 176","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2340,"y":1740,"wires":[]},{"id":"6cabaff09a9fa85a","type":"ha-sensor","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerCO2","entityConfig":"4c5909d829f0f2cf","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1010,"y":700,"wires":[[]]},{"id":"8ba8b97980f98d4e","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"CO2-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Finden des Objekts, das eine der gewünschten Teilzeichenfolgen im entity_id enthält\nconst co2Object = sensors.find(sensor => \n    sensor.entity_id.includes(\"carbon\") || \n    sensor.entity_id.includes(\"carbondioxide\")\n);\n\n// Extrahieren des Wertes, wenn das Objekt gefunden wurde, sonst null setzen\nconst co2Value = co2Object ? co2Object.value : null;\n\n// Ausgabe des CO2-Wertes zur Überprüfung\n// node.warn(`CO2-Wert: ${co2Value}`);\n\n// Optional: Speichern des CO2-Wertes in msg.co2Value oder einem anderen Feld zur weiteren Verwendung\nmsg.payload = co2Value;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":720,"y":700,"wires":[["6cabaff09a9fa85a"]]},{"id":"24cec488a394f147","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"Pressure-Get","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Luftdruck-Wertes\nfunction findPressureValue(sensors) {\n    const pressureObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"pressure\") ||\n        sensor.entity_id.includes(\"barometer\") ||\n        sensor.entity_id.includes(\"luftdruck\")\n    );\n    return pressureObject ? pressureObject.value : null;\n}\n\n// Finden des Luftdruck-Wertes\nconst pressureValue = findPressureValue(sensors);\n\n// Ausgabe des Luftdruck-Wertes zur Überprüfung\n// node.warn(`Luftdruck-Wert: ${pressureValue}`);\n\n// Optional: Speichern des Luftdruck-Wertes in msg zur weiteren Verwendung\nmsg.payload = pressureValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":730,"y":640,"wires":[["3dbeae382f71f092"]]},{"id":"cdabbf668a463011","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"Moisture-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Moisture-Wertes\nfunction findMoistureValue(sensors) {\n    const moistureObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"moisture\") ||\n        sensor.entity_id.includes(\"humidity\") ||\n        sensor.entity_id.includes(\"wetness\")\n    );\n    return moistureObject ? moistureObject.value : null;\n}\n\n// Finden des Moisture-Wertes\nconst moistureValue = findMoistureValue(sensors);\n\n// Ausgabe des Moisture-Wertes zur Überprüfung\n// node.warn(`Moisture-Wert: ${moistureValue}`);\n\n// Optional: Speichern des Moisture-Wertes in msg zur weiteren Verwendung\nmsg.payload = moistureValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":740,"y":460,"wires":[["ea181fad67e4609d"]]},{"id":"7b1434a24c5c2d0a","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"SOIL-EC-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des EC- oder Conductivity-Wertes\nfunction findECValue(sensors) {\n    const ecObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"ec\") ||\n        sensor.entity_id.includes(\"conductivity\")\n    );\n    return ecObject ? ecObject.value : null;\n}\n\n// Finden des EC- oder Conductivity-Wertes\nconst ecValue = findECValue(sensors);\n\n// Ausgabe des EC- oder Conductivity-Wertes zur Überprüfung\n// node.warn(`EC-Wert: ${ecValue}`);\n\n// Optional: Speichern des EC- oder Conductivity-Wertes in msg zur weiteren Verwendung\nmsg.payload = ecValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":740,"y":580,"wires":[["6077fa1071b64972"]]},{"id":"6dc8f908895b8048","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"PowerConsum-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Stromverbrauch-Wertes\nfunction findPowerConsumptionValue(sensors) {\n    const powerConsumptionObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"energy_power\") || \n        sensor.entity_id.includes(\"consumption\") || \n        sensor.entity_id.includes(\"watt\") || \n        sensor.entity_id.includes(\"electricity\")\n    );\n    return powerConsumptionObject ? powerConsumptionObject.value : null;\n}\n\n// Finden des Stromverbrauch-Wertes\nconst powerConsumptionValue = findPowerConsumptionValue(sensors);\n\n// Ausgabe des Stromverbrauch-Wertes zur Überprüfung\n// node.warn(`Stromverbrauch-Wert: ${powerConsumptionValue}`);\n\n// Optional: Speichern des Stromverbrauch-Wertes in msg zur weiteren Verwendung\nmsg.payload = powerConsumptionValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":760,"y":880,"wires":[["34b3481968acc628"]]},{"id":"24a35980a67b1b86","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"Battery-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Batterie-Wertes\nfunction findBatteryValue(sensors) {\n    const batteryObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"battery\") || \n        sensor.entity_id.includes(\"batt\")\n    );\n    return batteryObject ? batteryObject.value : null;\n}\n\n// Finden des Batterie-Wertes\nconst batteryValue = findBatteryValue(sensors);\n\n// Ausgabe des Batterie-Wertes zur Überprüfung\n// node.warn(`Batterie-Wert: ${batteryValue}`);\n\n// Optional: Speichern des Batterie-Wertes in msg zur weiteren Verwendung\nmsg.payload = batteryValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":730,"y":820,"wires":[["330a5b405ad89acf"]]},{"id":"b5fcb9fc8354bcab","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"Root-Temp-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Root-Temperature-Wertes\nfunction findRootTempValue(sensors) {\n    const rootTempObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"root_temp\") || \n        sensor.entity_id.includes(\"roottemperature\") || \n        sensor.entity_id.includes(\"soiltemp\") || \n        sensor.entity_id.includes(\"root_temp\")\n    );\n    return rootTempObject ? rootTempObject.value : null;\n}\n\n// Finden des Root-Temperature-Wertes\nconst rootTempValue = findRootTempValue(sensors);\n\n// Ausgabe des Root-Temperature-Wertes zur Überprüfung\n// node.warn(`Root-Temperature-Wert: ${rootTempValue}`);\n\n// Optional: Speichern des Root-Temperature-Wertes in msg zur weiteren Verwendung\nmsg.payload = rootTempValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":740,"y":520,"wires":[["4071ade6426af61b"]]},{"id":"ce4696697eb9cc47","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"Exhaust-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Abluft-Zustands\nfunction findExhaustState(sensors) {\n    const exhaustStateObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"exhaust\") ||\n        sensor.entity_id.includes(\"abluft\") ||\n        sensor.entity_id.includes(\"ventilation\") ||\n        sensor.entity_id.includes(\"fan\")\n    );\n    return exhaustStateObject ? exhaustStateObject.value : null;\n}\n\n// Funktion zum Finden des Dutycycle-Wertes\nfunction findDutyCycleValue(sensors) {\n    const dutyCycleObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"airctr\") ||\n        sensor.entity_id.includes(\"dutycycle\") ||\n        sensor.entity_id.includes(\"cycle\")\n    );\n    return dutyCycleObject ? dutyCycleObject.value : null;\n}\n\n// Finden des Abluft-Zustands\nconst exhaustState = findExhaustState(sensors);\n\n// Finden des Dutycycle-Wertes\nconst dutyCycleValue = findDutyCycleValue(sensors);\n\n// Ausgabe der Werte zur Überprüfung\n// node.warn(`Abluft-Zustand: ${exhaustState}`);\n// node.warn(`Dutycycle-Wert: ${dutyCycleValue}`);\n\n// Setzen der Outputs\nlet outputs = [\n    { payload: exhaustState }, // Output 1: Zustand (on/off)\n    { payload: dutyCycleValue } // Output 2: Dutycycle\n];\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn outputs;\n","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":730,"y":1060,"wires":[["194edf344188f8d1"],["f1ea259d4cd1ad73"]]},{"id":"fc7309bac2a5580d","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"Humidifier-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Humidifier-Wertes\nfunction findHumidifierValue(sensors) {\n    const humidifierObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"humidifier\") || \n        sensor.entity_id.includes(\"humidity\")\n    );\n    return humidifierObject ? humidifierObject.value : null;\n}\n\n// Finden des Humidifier-Wertes\nconst humidifierValue = findHumidifierValue(sensors);\n\n// Ausgabe des Humidifier-Wertes zur Überprüfung\n// node.warn(`Humidifier-Wert: ${humidifierValue}`);\n\n// Optional: Speichern des Humidifier-Wertes in msg zur weiteren Verwendung\nmsg.payload = humidifierValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":740,"y":1120,"wires":[[]]},{"id":"56aa552840d3803d","type":"function","z":"87bab898757000a2","name":"Sort Sensor Types","func":"let data = msg.payload;\n\n// Arrays für verschiedene Sensortypen initialisieren\nlet wish = [];\nlet temperatures = [];\nlet humidity = [];\nlet dewpoints = [];\nlet moisture = [];\nlet pressures = [];\nlet battery = [];\nlet power = [];\nlet co2 = [];\nlet lumen = [];\nlet conductivity = [];\nlet switches = [];\nlet dutyCycleExhaust = [];\nlet vents = [];\nlet humidifier = [];\nlet dehumidifier = [];\nlet root = [];\nlet cooler = [];\nlet heater = [];\nlet pump = [];\n\n// Durchlaufe alle Schlüssel im data-Objekt und sortiere sie nach bestimmten Sensortypen\nfor (let key in data) {\n    if (data.hasOwnProperty(key)) {\n        let entity_id = key.toLowerCase();\n        let entity = { entity_id: key, value: data[key] };\n\n        // Prioritize to ensure it is captured first\n        if (entity_id.includes('wish') || entity_id.includes('avg') || entity_id.includes('target')) {\n            wish.push(entity);\n        } else if (entity_id.includes('root') || entity_id.includes('wurzel')) {\n            root.push(entity);\n        }\n        // ENVIORMENT\n        else if (entity_id.includes('temperature') || entity_id.includes('tempe')) {\n            temperatures.push(entity);\n        } else if (entity_id.includes('humidity') || entity_id.includes('feuchtigkeit') || entity_id.includes('rh')) {\n            humidity.push(entity);\n        } else if (entity_id.includes('dewpoint') || entity_id.includes('dew')) {\n            dewpoints.push(entity);\n        } else if (entity_id.includes('moisture') || entity_id.includes('mois')) {\n            moisture.push(entity);\n        } else if (entity_id.includes('pressure') || entity_id.includes('press')) {\n            pressures.push(entity);\n        } else if (entity_id.includes('carbondioxide') || entity_id.includes('co2') || entity_id.includes('carbon')) {\n            co2.push(entity);\n        } else if (entity_id.includes('conductivity')) {\n            conductivity.push(entity);\n        } else if (entity_id.includes('illuminance') || entity_id.includes('light') || entity_id.includes('licht')) {\n            lumen.push(entity);\n        }\n        // Devices\n        else if (entity_id.includes('dehumidifier') || entity_id.includes('entfeuchter')) {\n            dehumidifier.push(entity);\n        } else if (entity_id.includes('humidifier') || entity_id.includes('befeuchter')) {\n            humidifier.push(entity);\n        } else if (entity_id.includes('cooler') || entity_id.includes('klima')) {\n            cooler.push(entity);\n        } else if (entity_id.includes('heater') || entity_id.includes('Heizung')) {\n            heater.push(entity);\n        } else if (entity_id.includes('pump') || entity_id.includes('pumping')) {\n            pump.push(entity);\n        }else if (entity_id.includes('ruck') || entity_id.includes('airctr') || entity_id.includes('exhaust') || entity_id.includes('abluft')) {\n            dutyCycleExhaust.push(entity);\n        } else if (entity_id.includes('vent')) {\n            vents.push(entity);\n        } else if (entity_id.includes('switch')) {\n            switches.push(entity);\n        } else if (entity_id.includes('power') || entity_id.includes('energy')) {\n            power.push(entity);\n        }\n\n        // ADDONS\n        else if (entity_id.includes('battery') || entity_id.includes('batt')) {\n            battery.push(entity);\n        }\n    }\n}\n\n// Nachrichtenausgabe auf verschiedenen Outputs\nreturn [\n    // ENVIORMENT\n    { payload: wish, topic: 'Wish' },\n    { payload: temperatures, topic: 'temperature' },\n    { payload: humidity, topic: 'humidity' },\n    { payload: dewpoints, topic: 'dewpoint' },\n    { payload: moisture, topic: 'moisture' },\n    { payload: root, topic: 'roottemp' },\n    { payload: conductivity, topic: 'conductivity' },\n    { payload: pressures, topic: 'pressure' },\n    { payload: co2, topic: 'carbon_dioxide' },\n    { payload: lumen, topic: 'illuminance' },\n    // DEVICEINFO\n    { payload: battery, topic: 'battery' },\n    { payload: power, topic: 'power' },\n    // DEVICES\n    { payload: switches, topic: 'switch' },\n    { payload: vents, topic: 'Vents' },\n    { payload: dutyCycleExhaust, topic: 'Exhaust' },\n    { payload: humidifier, topic: 'humidifier' },\n    { payload: dehumidifier, topic: 'dehumidifier' },\n    { payload: cooler, topic: 'cooler' },\n    { payload: heater, topic: 'heater' },\n    { payload: pump, topic: 'pump' }\n];\n","outputs":20,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":210,"y":260,"wires":[["1ded9b8984de496a"],["ad196bb7c36068ab"],["b769596a4bbc4607"],["8b78835f54a976ce"],["802c582eb02146c9"],["7b717655bc69afdc"],["a0aeced795617438"],["ae7ddd31bbfb2985"],["310608ec1d45fcb2"],["b8d42bdbb97224c9"],["dd5b4ad7e458c3f6"],["72f71ec5f3b106d5"],["95cfd8479db6cdb6"],["e6c1ccc1e8bf4243"],["ad366fe75322e5d3"],["006d6dc52bbe29da"],["709f15e79c3e231e"],["8f454b2610cab17e"],["eab7247edeede781"],["523867b5f2762731"]]},{"id":"4302d5e5f0144f64","type":"debug","z":"87bab898757000a2","name":"Temperatures","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":480,"y":160,"wires":[]},{"id":"5974b167ebb2f9e4","type":"debug","z":"87bab898757000a2","name":"Humidity","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":460,"y":200,"wires":[]},{"id":"9f322326faf32502","type":"debug","z":"87bab898757000a2","name":"Dewpoints","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":240,"wires":[]},{"id":"9865254487956201","type":"debug","z":"87bab898757000a2","name":"Pressures","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":460,"y":400,"wires":[]},{"id":"18c34d8b20c39f73","type":"debug","z":"87bab898757000a2","name":"Battery","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":460,"y":540,"wires":[]},{"id":"e4b5460d3febe1a2","type":"debug","z":"87bab898757000a2","name":"Power","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":450,"y":580,"wires":[]},{"id":"0d29d605591497f4","type":"debug","z":"87bab898757000a2","name":"CO2","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":450,"y":440,"wires":[]},{"id":"cee884061f3f2261","type":"debug","z":"87bab898757000a2","name":"Light","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":480,"wires":[]},{"id":"0a1295920208c384","type":"debug","z":"87bab898757000a2","name":"Switches","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":460,"y":640,"wires":[]},{"id":"1d22f5d38d2f029b","type":"debug","z":"87bab898757000a2","name":"Conductivity","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":360,"wires":[]},{"id":"79fa901ba76691b8","type":"debug","z":"87bab898757000a2","name":"Moisture","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":460,"y":280,"wires":[]},{"id":"349dcfebcd7877da","type":"debug","z":"87bab898757000a2","name":"Exhasut","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":460,"y":720,"wires":[]},{"id":"dfe1f213a50dabe8","type":"debug","z":"87bab898757000a2","name":"WISH","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":120,"wires":[]},{"id":"f400654d457ab0af","type":"debug","z":"87bab898757000a2","name":"Humidifier","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":760,"wires":[]},{"id":"8d95d41fedb12bda","type":"debug","z":"87bab898757000a2","name":"Vents","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":680,"wires":[]},{"id":"a46594e2514f068e","type":"debug","z":"87bab898757000a2","name":"RootTemp","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":320,"wires":[]},{"id":"6f852176198d67b8","type":"debug","z":"87bab898757000a2","name":"Dehumidifier","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":800,"wires":[]},{"id":"3dbeae382f71f092","type":"ha-sensor","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerPressure","entityConfig":"ee6603a7841f90d7","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1020,"y":640,"wires":[[]]},{"id":"ea181fad67e4609d","type":"ha-sensor","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerMoisture","entityConfig":"b48068e2b6382f35","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1020,"y":460,"wires":[["bf6ad6f294b897f5"]]},{"id":"330a5b405ad89acf","type":"ha-sensor","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerBatterieDevices","entityConfig":"2150742022321ba4","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1040,"y":820,"wires":[[]]},{"id":"4071ade6426af61b","type":"ha-sensor","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerRootTemp","entityConfig":"6938113c94cc6c5d","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1030,"y":520,"wires":[[]]},{"id":"6077fa1071b64972","type":"ha-sensor","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerEC","entityConfig":"2acab65eb8c7d7db","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1000,"y":580,"wires":[["bf6ad6f294b897f5"]]},{"id":"a057a5f182e73de8","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"LightIntense_GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Licht-Wertes (Lumen oder Lux)\nfunction findLightValue(sensors) {\n    const lightObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"lumen\") || \n        sensor.entity_id.includes(\"lux\") || \n        sensor.entity_id.includes(\"light\") ||\n        sensor.entity_id.includes(\"illuminance\")\n    );\n    return lightObject ? lightObject.value : null;\n}\n\n// Finden des Licht-Wertes\nconst lightValue = findLightValue(sensors);\n\n// Ausgabe des Licht-Wertes zur Überprüfung\n// node.warn(`Licht-Wert: ${lightValue}`);\n\n// Optional: Speichern des Licht-Wertes in msg zur weiteren Verwendung\nmsg.payload = lightValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":750,"y":760,"wires":[["de57249fcd512509"]]},{"id":"de57249fcd512509","type":"ha-sensor","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FLowerLightIntense","entityConfig":"6584d61dadd6110e","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1030,"y":760,"wires":[[]]},{"id":"c4d9642cd60ee3b5","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"Switch-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Switch-Wertes\nfunction findSwitchValue(sensors) {\n    const switchObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"switch\") || \n        sensor.entity_id.includes(\"toggle\")\n    );\n    return switchObject ? switchObject.state : null;\n}\n\n// Finden des Switch-Wertes\nconst switchValue = findSwitchValue(sensors);\n\n// Ausgabe des Switch-Wertes zur Überprüfung\n// node.warn(`Switch-Wert: ${switchValue}`);\n\n// Optional: Speichern des Switch-Wertes in msg zur weiteren Verwendung\nmsg.payload = switchValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":730,"y":940,"wires":[[]]},{"id":"34b3481968acc628","type":"ha-sensor","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerPowerConsume","entityConfig":"0628161aa905c63c","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1040,"y":880,"wires":[[]]},{"id":"f76573c680abe051","type":"link out","z":"87bab898757000a2","name":"Vents","mode":"link","links":[],"x":585,"y":680,"wires":[]},{"id":"0d648d1a287b160d","type":"link out","z":"87bab898757000a2","name":"Dehumidifier","mode":"link","links":["76fcaf89b2120d63"],"x":585,"y":800,"wires":[]},{"id":"55da67fef2acad51","type":"debug","z":"87bab898757000a2","g":"2a37f65b72394049","name":"debug 193","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2810,"y":340,"wires":[]},{"id":"5f10e37424012087","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"Vents-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Ventilation-Wertes\nfunction findVentilationValue(sensors) {\n    const ventilationObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"ventilation\") ||\n        sensor.entity_id.includes(\"fan\") ||\n        sensor.entity_id.includes(\"exhaust\") ||\n        sensor.entity_id.includes(\"airflow\")\n    );\n    return ventilationObject ? ventilationObject.value : null;\n}\n\n// Finden des Ventilation-Wertes\nconst ventilationValue = findVentilationValue(sensors);\n\n// Ausgabe des Ventilation-Wertes zur Überprüfung\n// node.warn(`Ventilation-Wert: ${ventilationValue}`);\n\n// Optional: Speichern des Ventilation-Wertes in msg zur weiteren Verwendung\nmsg.payload = ventilationValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":730,"y":1000,"wires":[[]]},{"id":"7b33e1fa9654de02","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"Dehumidifier-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Dehumidifier-Wertes\nfunction findDehumidifierValue(sensors) {\n    const dehumidifierObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"dehumidifier\") || \n        sensor.entity_id.includes(\"humidity\")\n    );\n    return dehumidifierObject ? dehumidifierObject.value : null;\n}\n\n// Finden des Dehumidifier-Wertes\nconst dehumidifierValue = findDehumidifierValue(sensors);\n\n// Ausgabe des Dehumidifier-Wertes zur Überprüfung\n// node.warn(`Dehumidifier-Wert: ${dehumidifierValue}`);\n\n// Optional: Speichern des Dehumidifier-Wertes in msg zur weiteren Verwendung\nmsg.payload = dehumidifierValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":750,"y":1180,"wires":[[]]},{"id":"194edf344188f8d1","type":"ha-sensor","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerExhaustState","entityConfig":"87469d8744ed20ba","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1040,"y":1020,"wires":[[]]},{"id":"f1ea259d4cd1ad73","type":"ha-sensor","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerExhaustDutyCycle","entityConfig":"96027b4729ff7383","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1050,"y":1080,"wires":[[]]},{"id":"90e7d66de4e646ed","type":"inject","z":"87bab898757000a2","g":"952a4bc7dff3f66a","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"300","crontab":"","once":true,"onceDelay":"15","topic":"","payload":"","payloadType":"date","x":2030,"y":140,"wires":[["ea836fad7734354a"]]},{"id":"dcc4f2b4266ce2c9","type":"ha-sensor","z":"87bab898757000a2","g":"952a4bc7dff3f66a","name":"DLI","entityConfig":"10a55acc5911459b","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":2670,"y":180,"wires":[["f2d5e7c61c28de89"]]},{"id":"75cd81ac71068cbe","type":"ha-sensor","z":"87bab898757000a2","g":"952a4bc7dff3f66a","name":"PPFDFLower","entityConfig":"c58623d735fb8295","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":2670,"y":100,"wires":[["f2d5e7c61c28de89"]]},{"id":"f2d5e7c61c28de89","type":"debug","z":"87bab898757000a2","g":"952a4bc7dff3f66a","name":"debug 39","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2800,"y":140,"wires":[]},{"id":"34e2ea1867e751f9","type":"function","z":"87bab898757000a2","g":"952a4bc7dff3f66a","name":"Calculate PPFD / DLI Sanlight","func":"// Beispiel für die Eingangsnachricht: { payload: 250 }\n\nconst maxPower = 380;            // Maximale Leistung in Watt\nconst maxPPFD = 1000;            // Maximaler PPFD bei 380 Watt\n\n// PPFD berechnen basierend auf dem aktuellen Wattwert\nconst ppfd = (msg.payload / maxPower) * maxPPFD;\n\n// PPFD auf zwei Nachkommastellen runden\nconst roundedPPFD = parseFloat(ppfd.toFixed(2));\n\n// Berechnung von DLI\nconst secondsPerHour = 3600;\nconst hoursPerDay = 12; // Anzahl der Stunden pro Tag, die das Licht an ist\nlet dli = roundedPPFD * secondsPerHour * hoursPerDay / 1e6;\n\n// DLI auf zwei Nachkommastellen runden\ndli = parseFloat(dli.toFixed(2));\n\n// Erstellen Sie zwei separate Nachrichtenobjekte für die Ausgänge\nconst msg1 = { payload: roundedPPFD }; // für den ersten Output (PPFD), gerundet auf zwei Nachkommastellen\nconst msg2 = { payload: dli };         // für den zweiten Output (DLI), gerundet auf zwei Nachkommastellen\n\n// Rückgabe der Nachrichten in einem Array, wobei jeder Index dem entsprechenden Output entspricht\nreturn [msg1, msg2];","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2430,"y":160,"wires":[["1f21fdc068ba4fdd","75cd81ac71068cbe"],["1f21fdc068ba4fdd","dcc4f2b4266ce2c9"]]},{"id":"ea836fad7734354a","type":"api-current-state","z":"87bab898757000a2","g":"952a4bc7dff3f66a","name":"Flower-LX","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"sensor.flowerlightintense","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":2180,"y":140,"wires":[["34e2ea1867e751f9","1f21fdc068ba4fdd"]]},{"id":"1f21fdc068ba4fdd","type":"debug","z":"87bab898757000a2","g":"952a4bc7dff3f66a","name":"debug 57","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2380,"y":100,"wires":[]},{"id":"61afd7503e71f62c","type":"link in","z":"87bab898757000a2","name":"Env","links":["265fe00ebc822be2"],"x":185,"y":1240,"wires":[[]]},{"id":"169da9767a08464e","type":"comment","z":"87bab898757000a2","name":"Cropsteering","info":"","x":190,"y":4760,"wires":[]},{"id":"96ad7357a215e3d7","type":"link in","z":"87bab898757000a2","name":"link in 11","links":["a96ccda7addd1614"],"x":155,"y":4820,"wires":[[]]},{"id":"b81d8ddcfd887066","type":"link out","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"ExhaustCtrlFlower","mode":"link","links":["90d00cec7854934c","b9fb8641ac981f23"],"x":2825,"y":780,"wires":[]},{"id":"84809bfb26038acc","type":"link out","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"HumidifierCtrlFlower","mode":"link","links":["85c3440005e758b3"],"x":2825,"y":820,"wires":[]},{"id":"2cab4ff46bb255d1","type":"link out","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"DeHumidifierCtrlFlower","mode":"link","links":["211a33b6ee23cb2a"],"x":2825,"y":860,"wires":[]},{"id":"fa452f0146e78478","type":"link out","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"HeaterCtrlFlower","mode":"link","links":["f8c71d23e8b2d7d4"],"x":2825,"y":900,"wires":[]},{"id":"24030fcfc3c0c570","type":"link out","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"CoolerCtrlFlower","mode":"link","links":["a8f4aa363971a87e"],"x":2825,"y":940,"wires":[]},{"id":"17ce802afe4871e3","type":"link out","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"LightsCtrlFlower","mode":"link","links":["42b00b5b259da75d"],"x":2825,"y":980,"wires":[]},{"id":"8bb02e174a322903","type":"link out","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"VentsCtrlFlower","mode":"link","links":["bddb396981a46ba6"],"x":2825,"y":1020,"wires":[]},{"id":"2998d9a1245dddc9","type":"function","z":"87bab898757000a2","g":"e571ea1d17733f37","name":"BefeuchterSetup","func":"let outputs = [null, null, null];\n\nlet humidifierState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.humidifier.length; i++) {\n    if (msg.payload.humidifier[i].entity_id.includes('humidifier')) {\n        humidifierState = msg.payload.humidifier[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.humidifierSet.value === \"increased\" && humidifierState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.humidifierSet.value === \"reduced\" && humidifierState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun oder ausschalten bei unverändertem Zustand\nif (msg.payload.humidifierSet.value === \"unchanged\") {\n    if (humidifierState === \"on\") {\n        // Wenn der Befeuchter im Zelt an ist und kein Wechsel angefordert wird, sende \"off\"\n        outputs[0] = { payload: \"off\", topic: \"Humidifier\" };\n    } else {\n        // Wenn der Befeuchter bereits aus ist oder nicht geändert werden soll\n        outputs[1] = { payload: \"Humidifier already stopped, nothing to do! Waiting for changes.\", topic: \"Humidifier\" };\n    }\n}\n\n// Nichts tun (detaillierte Information)\nif (msg.payload.humidifierSet.value === \"unchanged\" && humidifierState !== \"on\" && humidifierState !== \"off\") {\n    outputs[2] = { payload: \"Befeuchter unverändert, keine Aktion erforderlich\", data: msg.payload, topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3610,"y":1000,"wires":[["00bda2dbce1f7cc7"],["e84f5a714316bb95"],["99eed7784fee4257"],[]]},{"id":"f902a5ba1e7c93b5","type":"join","z":"87bab898757000a2","g":"e571ea1d17733f37","name":"HumidityData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":3380,"y":1020,"wires":[["2998d9a1245dddc9"]]},{"id":"99eed7784fee4257","type":"link out","z":"87bab898757000a2","g":"e571ea1d17733f37","name":"HumidityMode","mode":"link","links":[],"x":3895,"y":1020,"wires":[]},{"id":"00bda2dbce1f7cc7","type":"link out","z":"87bab898757000a2","g":"e571ea1d17733f37","name":"FlowerHumidifierON","mode":"link","links":["acb0f5addd129adf"],"x":3825,"y":960,"wires":[]},{"id":"e84f5a714316bb95","type":"link out","z":"87bab898757000a2","g":"e571ea1d17733f37","name":"FlowerHumidifierOFF","mode":"link","links":["38a12a509a13d715"],"x":3885,"y":980,"wires":[]},{"id":"1a5f158673e007b2","type":"function","z":"87bab898757000a2","g":"9b20a372abab7583","name":"Exhaust Setup","func":"// Hilfsfunktion zur Überprüfung, ob ein Wert numerisch ist\nconst isNumeric = (value) => {\n    return !isNaN(parseFloat(value)) && isFinite(value);\n};\n\n// Funktion zur Bestimmung des dutyCycle-Werts\nconst findDutyCycle = (exhaustArray) => {\n    if (exhaustArray.length === 0) {\n        return null; // Keine Werte zu verarbeiten, wenn das Array leer ist\n    }\n    for (let i = 0; i < exhaustArray.length; i++) {\n        if (isNumeric(exhaustArray[i].value)) {\n            return parseInt(exhaustArray[i].value, 10);\n        }\n    }\n    return null; // Falls kein numerischer Wert gefunden wurde\n};\n\nlet outputs = [null, null, null, null]; // Array für vier Ausgänge\n\n// Zustand der Abluft und Geschwindigkeit aus der Payload extrahieren\nconst exhaustSpeed = msg.payload.exhaustSet.value; // Anpassung hier\nlet exhaustState = 'off'; // Standardwert setzen, falls kein Zustand gefunden wird\nif (msg.payload.Exhaust && msg.payload.Exhaust.length > 0) {\n    const exhaustSwitch = msg.payload.Exhaust.find(e => e.entity_id && e.entity_id.toLowerCase().includes(\"switch\"));\n    if (exhaustSwitch && exhaustSwitch.value) {\n        exhaustState = exhaustSwitch.value;\n    }\n}\n\nconst dutyCycle = findDutyCycle(msg.payload.Exhaust) || 0 ;\n\n// Prüfen, ob ein dutyCycle vorhanden ist\nif (dutyCycle === null) {\n    return outputs; // Kein dutyCycle gefunden, keine Aktion erforderlich\n}\n\nconst percentDifference = parseFloat(msg.payload.exhaustSet.percentDifference);\nlet newDutyCycle = dutyCycle;\n\n// Berechnung des neuen Duty Cycle basierend auf der prozentualen Abweichung\nif (percentDifference !== 0) {\n    if (percentDifference < 0) {\n        // Wenn der Wert negativ ist, erhöhen wir den Duty Cycle\n        newDutyCycle = dutyCycle + Math.abs(percentDifference);\n    } else {\n        // Wenn der Wert positiv ist, verringern wir den Duty Cycle\n        newDutyCycle = dutyCycle - percentDifference;\n    }\n\n    // Stellen Sie sicher, dass der neue Duty Cycle innerhalb der Grenzen liegt\n    newDutyCycle = Math.min(95, Math.max(10, Math.round(newDutyCycle)));\n}\n\n// Abluft starten auf dem ersten Ausgang, wenn sie aus ist und erhöht werden muss\nif (exhaustSpeed === \"increased\" && exhaustState === \"off\") {\n    outputs[0] = { payload: \"Starte Abluft\", topic: \"Start\" };\n    return outputs;\n}\n\n// Abluft-Geschwindigkeit erhöhen, wenn sie bereits eingeschaltet ist\nif (exhaustSpeed === \"increased\" && exhaustState === \"on\") {\n    outputs[2] = { payload: newDutyCycle.toString(), topic: \"Increase\" };\n    return outputs;\n}\n\n// Abluft stoppen auf dem zweiten Ausgang, wenn die Geschwindigkeit reduziert wird und der Duty Cycle sehr niedrig ist\nif (exhaustSpeed === \"reduced\" && exhaustState === \"on\" && newDutyCycle <= 10) {\n    outputs[1] = { payload: \"Stoppe Abluft\", topic: \"Stop\" };\n    return outputs;\n} else if (exhaustSpeed === \"reduced\" && exhaustState === \"on\") {\n    outputs[2] = { payload: newDutyCycle.toString(), topic: \"Decrease\" };\n    return outputs;\n}\n\n// Warnung ausgeben, wenn versucht wird, die Abluftgeschwindigkeit zu reduzieren, obwohl sie bereits aus ist\nif (exhaustSpeed === \"reduced\" && exhaustState === \"off\") {\n    outputs[1] = { payload: \"Abluft bereits gestoppt, kann nicht weiter reduziert werden\", topic: \"AlreadyStopped\" };\n    return outputs;\n}\n\n// Nichts tun, wenn keine Änderung erforderlich ist\nif (exhaustSpeed === \"unchanged\") {\n    outputs[3] = { payload: \"Abluft unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n    return outputs;\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3820,"y":740,"wires":[["7233a2912b7504c9","21e006a3e8bc99c8"],["7233a2912b7504c9","4810fb25535f84fe"],["909f9b28f49204e5","7233a2912b7504c9"],["7233a2912b7504c9"]]},{"id":"73a743c68faf5f1e","type":"http request","z":"87bab898757000a2","g":"9b20a372abab7583","name":"DutyPostChange","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.234:5533/air/ctrl","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":4070,"y":820,"wires":[[]]},{"id":"909f9b28f49204e5","type":"function","z":"87bab898757000a2","g":"9b20a372abab7583","name":"DutyChanger","func":"\nconst NewDuty = msg.payload\n\nmsg.payload = { \"newDuty\": NewDuty}\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":4090,"y":780,"wires":[["73a743c68faf5f1e"]]},{"id":"f0b5ee67a8063949","type":"join","z":"87bab898757000a2","g":"9b20a372abab7583","name":"exhasutData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":3620,"y":820,"wires":[["1a5f158673e007b2","7233a2912b7504c9","327c5de2023af8c2"]]},{"id":"21e006a3e8bc99c8","type":"link out","z":"87bab898757000a2","g":"9b20a372abab7583","name":"ExhaustVeggiON","mode":"link","links":["55acda8e6f953bc1"],"x":3985,"y":700,"wires":[]},{"id":"4810fb25535f84fe","type":"link out","z":"87bab898757000a2","g":"9b20a372abab7583","name":"ExhaustVeggiOFF","mode":"link","links":["23d01364d3856db1"],"x":4035,"y":720,"wires":[]},{"id":"7233a2912b7504c9","type":"debug","z":"87bab898757000a2","g":"9b20a372abab7583","name":"debug 270","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":3810,"y":680,"wires":[]},{"id":"327c5de2023af8c2","type":"debug","z":"87bab898757000a2","g":"9b20a372abab7583","name":"debug 271","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":3820,"y":820,"wires":[]},{"id":"ba01f54da92cb494","type":"join","z":"87bab898757000a2","g":"7ffeaeb39befbd13","name":"VentsData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"4","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"num","reduceFixup":"","x":3430,"y":2180,"wires":[["a5e76ce616ccd09b"]]},{"id":"6e54d03748788ac3","type":"link in","z":"87bab898757000a2","g":"7ffeaeb39befbd13","name":"link in 87","links":[],"x":3385,"y":2120,"wires":[["ba01f54da92cb494"]]},{"id":"a5e76ce616ccd09b","type":"function","z":"87bab898757000a2","g":"7ffeaeb39befbd13","name":"VentsSetup","func":"let outputs = [null, null, null];\n\nlet ventsState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.vents.length; i++) {\n    if (msg.payload.vents[i].entity_id.includes('vents')) {\n        ventsState = msg.payload.vents[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.ventsSet.value === \"increased\" && ventsState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.ventsSet.value === \"reduced\" && ventsState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.ventsSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Befeuchter unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3630,"y":2180,"wires":[["73c9321033ae54ac"],["5c5b756c6fed2199"],["40cd9e275785f068"],[]]},{"id":"73c9321033ae54ac","type":"link out","z":"87bab898757000a2","g":"7ffeaeb39befbd13","name":"link out 267","mode":"link","links":[],"x":3815,"y":2140,"wires":[]},{"id":"5c5b756c6fed2199","type":"link out","z":"87bab898757000a2","g":"7ffeaeb39befbd13","name":"link out 268","mode":"link","links":[],"x":3875,"y":2160,"wires":[]},{"id":"40cd9e275785f068","type":"link out","z":"87bab898757000a2","g":"7ffeaeb39befbd13","name":"link out 269","mode":"link","links":[],"x":3915,"y":2200,"wires":[]},{"id":"45acfdd0b6e88579","type":"comment","z":"87bab898757000a2","g":"7ffeaeb39befbd13","name":"NOT READY","info":"","x":3550,"y":2180,"wires":[]},{"id":"9dbb816d3dd0bfa8","type":"join","z":"87bab898757000a2","g":"09296d5bd2225e88","name":"LightData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":3390,"y":1980,"wires":[["f22e390bd2f006e9"]]},{"id":"32d42160c20106c8","type":"link in","z":"87bab898757000a2","g":"09296d5bd2225e88","name":"CoolerFlower","links":["fc12515c1658f1b9"],"x":3325,"y":1920,"wires":[["9dbb816d3dd0bfa8"]]},{"id":"f22e390bd2f006e9","type":"function","z":"87bab898757000a2","g":"09296d5bd2225e88","name":"LightSetup","func":"let outputs = [null, null, null];\n\nlet lightState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.light.length; i++) {\n    if (msg.payload.light[i].entity_id.includes('light')) {\n        lightState = msg.payload.light[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.lightSet.value === \"increased\" && lightState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.lightSet.value === \"reduced\" && lightState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.lightSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Befeuchter unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3590,"y":1980,"wires":[["6ed3e5d973b389c5"],["0a6c31cfdc8d2520"],["8a2ad5076a271f6e"],[]]},{"id":"6ed3e5d973b389c5","type":"link out","z":"87bab898757000a2","g":"09296d5bd2225e88","name":"link out 270","mode":"link","links":[],"x":3795,"y":1940,"wires":[]},{"id":"0a6c31cfdc8d2520","type":"link out","z":"87bab898757000a2","g":"09296d5bd2225e88","name":"link out 271","mode":"link","links":[],"x":3855,"y":1960,"wires":[]},{"id":"8a2ad5076a271f6e","type":"link out","z":"87bab898757000a2","g":"09296d5bd2225e88","name":"link out 272","mode":"link","links":[],"x":3895,"y":2000,"wires":[]},{"id":"db41548602716d21","type":"comment","z":"87bab898757000a2","g":"09296d5bd2225e88","name":"NOT IMPLEMNTED RIGHT NOW","info":"","x":3470,"y":1980,"wires":[]},{"id":"a0e539be6495156a","type":"join","z":"87bab898757000a2","g":"5d46755c395cc634","name":"CoolerData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":3410,"y":1420,"wires":[["01417a0b06b01a47"]]},{"id":"49c9a1e109c2af12","type":"link in","z":"87bab898757000a2","g":"5d46755c395cc634","name":"link in 89","links":["fc12515c1658f1b9"],"x":3305,"y":1380,"wires":[["a0e539be6495156a"]]},{"id":"01417a0b06b01a47","type":"function","z":"87bab898757000a2","g":"5d46755c395cc634","name":"CoolerSetup","func":"let outputs = [null, null, null];\n\nlet coolerState = null;\n\n// Schleife, um den Zustand des Cooler zu finden\nfor (let i = 0; i < msg.payload.cooler.length; i++) {\n    if (msg.payload.cooler[i].entity_id.includes('cooler')) {\n        coolerState = msg.payload.cooler[i].value;\n        break;\n    }\n}\n\n// Cooler starten\nif (msg.payload.coolerSet.value === \"increased\" && coolerState === \"off\") {\n    outputs[0] = { payload: \"Start Cooler\", topic: \"Start\" };\n}\n\n// Cooler stoppen\nif (msg.payload.coolerSet.value === \"reduced\" && coolerState === \"on\") {\n    outputs[1] = { payload: \"Stop Cooler\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.coolerSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Cooler unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3610,"y":1420,"wires":[["3081bbc3923d74d6"],["145ff0f6e90930a9"],["ce08bd17130ae3da"],[]]},{"id":"3081bbc3923d74d6","type":"link out","z":"87bab898757000a2","g":"5d46755c395cc634","name":"FlowerCoolerON","mode":"link","links":["5a5614359d863721"],"x":3805,"y":1380,"wires":[]},{"id":"145ff0f6e90930a9","type":"link out","z":"87bab898757000a2","g":"5d46755c395cc634","name":"FlowerCoolerOFF","mode":"link","links":["54ac3c52a83ae28a"],"x":3865,"y":1400,"wires":[]},{"id":"ce08bd17130ae3da","type":"link out","z":"87bab898757000a2","g":"5d46755c395cc634","name":"link out 273","mode":"link","links":[],"x":3905,"y":1440,"wires":[]},{"id":"9930181e9729f506","type":"join","z":"87bab898757000a2","g":"1f1393384d8b6026","name":"HeaterData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":3350,"y":1640,"wires":[["1e4955e3e9e67ced"]]},{"id":"c7d049bd4613032b","type":"link in","z":"87bab898757000a2","g":"1f1393384d8b6026","name":"HeaterFlower","links":["0109c4d9ec4db16e"],"x":3285,"y":1580,"wires":[["9930181e9729f506"]]},{"id":"1e4955e3e9e67ced","type":"function","z":"87bab898757000a2","g":"1f1393384d8b6026","name":"HeaterSetup","func":"let outputs = [null, null, null];\n\nlet heaterState = null;\n\n// Schleife, um den Zustand des Heater zu finden\nfor (let i = 0; i < msg.payload.heater.length; i++) {\n    if (msg.payload.heater[i].entity_id.includes('heater')) {\n        heaterState = msg.payload.heater[i].value;\n        break;\n    }\n}\n\n// Heater starten\nif (msg.payload.heaterSet.value === \"increased\" && heaterState === \"off\") {\n    outputs[0] = { payload: \"Start Heater\", topic: \"Start\" };\n}\n\n// Heater stoppen\nif (msg.payload.heaterSet.value === \"reduced\" && heaterState === \"on\") {\n    outputs[1] = { payload: \"Stop Heater\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.heaterSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Heater unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3590,"y":1640,"wires":[["24cc65d018bd1921"],["d0cc247c71edd2bd"],["c3dcc7c02b588f54"],[]]},{"id":"24cc65d018bd1921","type":"link out","z":"87bab898757000a2","g":"1f1393384d8b6026","name":"FlowerHeaterON","mode":"link","links":["958127653d74be3f"],"x":3805,"y":1600,"wires":[]},{"id":"d0cc247c71edd2bd","type":"link out","z":"87bab898757000a2","g":"1f1393384d8b6026","name":"FlowerHeaterOFF","mode":"link","links":["4cbea83396a0f0ac"],"x":3865,"y":1620,"wires":[]},{"id":"c3dcc7c02b588f54","type":"link out","z":"87bab898757000a2","g":"1f1393384d8b6026","name":"link out 274","mode":"link","links":[],"x":3905,"y":1660,"wires":[]},{"id":"f6801c858c320ca9","type":"join","z":"87bab898757000a2","g":"6b79b465bd6d66fa","name":"DehumidifierData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":3370,"y":1220,"wires":[["b29b71f5b5f8f403"]]},{"id":"b29b71f5b5f8f403","type":"function","z":"87bab898757000a2","g":"6b79b465bd6d66fa","name":"DehumidifierSetup","func":"let outputs = [null, null, null];\n\nlet dehumidifierState = null;\n\n// Schleife, um den Zustand des Dehumidifier zu finden\nfor (let i = 0; i < msg.payload.dehumidifier.length; i++) {\n    if (msg.payload.dehumidifier[i].entity_id.includes('dehumidifier')) {\n        dehumidifierState = msg.payload.dehumidifier[i].value;\n        break;\n    }\n}\n\n// Dehumidifier starten\nif (msg.payload.dehumidifierSet.value === \"increased\" && dehumidifierState === \"off\") {\n    outputs[0] = { payload: \"Starte Dehumidifier\", topic: \"Start\" };\n}\n\n// Dehumidifier stoppen\nif (msg.payload.dehumidifierSet.value === \"reduced\" && dehumidifierState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Dehumidifier\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.dehumidifierSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Dehumidifier unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3590,"y":1220,"wires":[["ef1e7f1156daa588"],["d0914064742b75a7"],["15a20f16124069a7"],[]]},{"id":"ef1e7f1156daa588","type":"link out","z":"87bab898757000a2","g":"6b79b465bd6d66fa","name":"FlowerDefhumidiferON","mode":"link","links":["99832bcde6aaec0d"],"x":3805,"y":1180,"wires":[]},{"id":"d0914064742b75a7","type":"link out","z":"87bab898757000a2","g":"6b79b465bd6d66fa","name":"FlowerDefhumidiferOFF","mode":"link","links":["b576fb3aef39185a"],"x":3865,"y":1200,"wires":[]},{"id":"15a20f16124069a7","type":"link out","z":"87bab898757000a2","g":"6b79b465bd6d66fa","name":"link out 275","mode":"link","links":[],"x":3905,"y":1240,"wires":[]},{"id":"42b00b5b259da75d","type":"link in","z":"87bab898757000a2","g":"09296d5bd2225e88","name":"LightsCtrlFlower","links":["17ce802afe4871e3","39099da8915e29b7","5cfa060f5b8332cf","b5790a0ccc6a2965","19a1901c9f0a5068"],"x":3235,"y":1980,"wires":[["9dbb816d3dd0bfa8"]]},{"id":"bddb396981a46ba6","type":"link in","z":"87bab898757000a2","g":"7ffeaeb39befbd13","name":"VentsCtrlFlower","links":["8bb02e174a322903","27e01016801fc664","e85f06938d85911a","464ace433af602f5","826202dc11bee1f5"],"x":3235,"y":2180,"wires":[["ba01f54da92cb494"]]},{"id":"76fcaf89b2120d63","type":"link in","z":"87bab898757000a2","g":"6b79b465bd6d66fa","name":"DehumidifierFlower","links":["0d648d1a287b160d"],"x":3305,"y":1160,"wires":[["f6801c858c320ca9"]]},{"id":"b99a15275082032e","type":"link in","z":"87bab898757000a2","g":"e571ea1d17733f37","name":"HumidifierFlower","links":["79bde8bec83cb56a"],"x":3315,"y":960,"wires":[["f902a5ba1e7c93b5"]]},{"id":"033d8f63407adc30","type":"link in","z":"87bab898757000a2","g":"9b20a372abab7583","name":"ExhaustFlower","links":["9d125ce221658824"],"x":3565,"y":740,"wires":[["f0b5ee67a8063949"]]},{"id":"a8f4aa363971a87e","type":"link in","z":"87bab898757000a2","g":"5d46755c395cc634","name":"CoolerCtrlFlower","links":["24030fcfc3c0c570","e1a942ad8a536ef3","90926a27b0c54411","6b7c54b84d733581","19041c3acf996191"],"x":3205,"y":1420,"wires":[["a0e539be6495156a"]]},{"id":"f8c71d23e8b2d7d4","type":"link in","z":"87bab898757000a2","g":"1f1393384d8b6026","name":"HeaterCtrlFlower","links":["fa452f0146e78478","037948bc84926efa","60320ccde9c6bb77","c8950634986ed39f","0c8fd16eaa00dc9d"],"x":3205,"y":1640,"wires":[["9930181e9729f506"]]},{"id":"85c3440005e758b3","type":"link in","z":"87bab898757000a2","g":"e571ea1d17733f37","name":"HumidifierCtrlFlower","links":["84809bfb26038acc","6b389a8ca3ee7f49","808f10a848fd1bbc","76500f9124621519","5f0a4677256d0755"],"x":3205,"y":1020,"wires":[["f902a5ba1e7c93b5"]]},{"id":"90d00cec7854934c","type":"link in","z":"87bab898757000a2","g":"9b20a372abab7583","name":"ExhaustCtrlFlower","links":["b81d8ddcfd887066","356ce5b53838cd67","7e8b342e3753e452","e3900c6fcb1518f1","9419716a0fc2ef01"],"x":3445,"y":820,"wires":[["f0b5ee67a8063949"]]},{"id":"211a33b6ee23cb2a","type":"link in","z":"87bab898757000a2","g":"6b79b465bd6d66fa","name":"DeHumidifierCtrlFlower","links":["2cab4ff46bb255d1","cee90b8566452ac8","8478947630a71dd8","10c052baa77914bd","39c090597c2e675a"],"x":3205,"y":1220,"wires":[["f6801c858c320ca9"]]},{"id":"356ce5b53838cd67","type":"link out","z":"87bab898757000a2","g":"2a37f65b72394049","name":"ExhaustCtrlFlower","mode":"link","links":["90d00cec7854934c","b9fb8641ac981f23"],"x":2975,"y":320,"wires":[]},{"id":"6b389a8ca3ee7f49","type":"link out","z":"87bab898757000a2","g":"2a37f65b72394049","name":"HumidifierCtrlFlower","mode":"link","links":["85c3440005e758b3"],"x":2975,"y":360,"wires":[]},{"id":"cee90b8566452ac8","type":"link out","z":"87bab898757000a2","g":"2a37f65b72394049","name":"DeHumidifierCtrlFlower","mode":"link","links":["211a33b6ee23cb2a"],"x":2975,"y":400,"wires":[]},{"id":"037948bc84926efa","type":"link out","z":"87bab898757000a2","g":"2a37f65b72394049","name":"HeaterCtrlFlower","mode":"link","links":["f8c71d23e8b2d7d4"],"x":2975,"y":440,"wires":[]},{"id":"e1a942ad8a536ef3","type":"link out","z":"87bab898757000a2","g":"2a37f65b72394049","name":"CoolerCtrlFlower","mode":"link","links":["a8f4aa363971a87e"],"x":2975,"y":480,"wires":[]},{"id":"39099da8915e29b7","type":"link out","z":"87bab898757000a2","g":"2a37f65b72394049","name":"LightsCtrlFlower","mode":"link","links":["42b00b5b259da75d"],"x":2975,"y":520,"wires":[]},{"id":"27e01016801fc664","type":"link out","z":"87bab898757000a2","g":"2a37f65b72394049","name":"VentsCtrlFlower","mode":"link","links":["bddb396981a46ba6"],"x":2975,"y":560,"wires":[]},{"id":"7e8b342e3753e452","type":"link out","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"ExhaustCtrlFlower","mode":"link","links":["90d00cec7854934c","b9fb8641ac981f23"],"x":2665,"y":1260,"wires":[]},{"id":"808f10a848fd1bbc","type":"link out","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"HumidifierCtrlFlower","mode":"link","links":["85c3440005e758b3"],"x":2665,"y":1300,"wires":[]},{"id":"8478947630a71dd8","type":"link out","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"DeHumidifierCtrlFlower","mode":"link","links":["211a33b6ee23cb2a"],"x":2665,"y":1340,"wires":[]},{"id":"60320ccde9c6bb77","type":"link out","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"HeaterCtrlFlower","mode":"link","links":["f8c71d23e8b2d7d4"],"x":2665,"y":1380,"wires":[]},{"id":"90926a27b0c54411","type":"link out","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"CoolerCtrlFlower","mode":"link","links":["a8f4aa363971a87e"],"x":2665,"y":1420,"wires":[]},{"id":"5cfa060f5b8332cf","type":"link out","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"LightsCtrlFlower","mode":"link","links":["42b00b5b259da75d"],"x":2665,"y":1460,"wires":[]},{"id":"e85f06938d85911a","type":"link out","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"VentsCtrlFlower","mode":"link","links":["bddb396981a46ba6"],"x":2665,"y":1500,"wires":[]},{"id":"e3900c6fcb1518f1","type":"link out","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"ExhaustCtrlFlower","mode":"link","links":["90d00cec7854934c","b9fb8641ac981f23"],"x":2665,"y":1760,"wires":[]},{"id":"76500f9124621519","type":"link out","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"HumidifierCtrlFlower","mode":"link","links":["85c3440005e758b3"],"x":2665,"y":1800,"wires":[]},{"id":"10c052baa77914bd","type":"link out","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"DeHumidifierCtrlFlower","mode":"link","links":["211a33b6ee23cb2a"],"x":2665,"y":1840,"wires":[]},{"id":"c8950634986ed39f","type":"link out","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"HeaterCtrlFlower","mode":"link","links":["f8c71d23e8b2d7d4"],"x":2665,"y":1880,"wires":[]},{"id":"6b7c54b84d733581","type":"link out","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"CoolerCtrlFlower","mode":"link","links":["a8f4aa363971a87e"],"x":2665,"y":1920,"wires":[]},{"id":"b5790a0ccc6a2965","type":"link out","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"LightsCtrlFlower","mode":"link","links":["42b00b5b259da75d"],"x":2665,"y":1960,"wires":[]},{"id":"464ace433af602f5","type":"link out","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"VentsCtrlFlower","mode":"link","links":["bddb396981a46ba6"],"x":2665,"y":2000,"wires":[]},{"id":"09eb94f26d493e8b","type":"function","z":"87bab898757000a2","g":"13fe4471abdc9eb6","name":"Exhaust Setup","func":"// Hilfsfunktion zur Überprüfung, ob ein Wert numerisch ist\nconst isNumeric = (value) => {\n    return !isNaN(parseFloat(value)) && isFinite(value);\n};\n\n// Funktion zur Bestimmung des dutyCycle-Werts\nconst findDutyCycle = (exhaustArray) => {\n    if (exhaustArray.length === 0) {\n        return null; // Keine Werte zu verarbeiten, wenn das Array leer ist\n    }\n    for (let i = 0; i < exhaustArray.length; i++) {\n        if (isNumeric(exhaustArray[i].value)) {\n            return parseInt(exhaustArray[i].value, 10);\n        }\n    }\n    return null; // Falls kein numerischer Wert gefunden wurde\n};\n\nlet outputs = [null, null, null, null]; // Array für vier Ausgänge\n\n// Zustand der Abluft und Geschwindigkeit aus der Payload extrahieren\nconst exhaustSpeed = msg.payload.exhaustSet.value || 'unchanged'; // Anpassung hier: falls kein Wert vorhanden ist, setze auf 'unchanged'\nlet exhaustState = 'off'; // Standardwert setzen, falls kein Zustand gefunden wird\nif (msg.payload.Exhaust && msg.payload.Exhaust.length > 0) {\n    const exhaustSwitch = msg.payload.Exhaust.find(e => e.entity_id && e.entity_id.toLowerCase().includes(\"switch\"));\n    if (exhaustSwitch && exhaustSwitch.value) {\n        exhaustState = exhaustSwitch.value;\n    }\n}\n\nconst dutyCycle = findDutyCycle(msg.payload.Exhaust) || 10; // Anpassung hier: falls kein Wert vorhanden ist, setze auf 10\n\nlet newDutyCycle = dutyCycle;\n\n// Berechnung des neuen Duty Cycle basierend auf festen Schritten\nif (exhaustSpeed === 'increased') {\n    newDutyCycle = dutyCycle + 5;\n} else if (exhaustSpeed === 'reduced') {\n    newDutyCycle = dutyCycle - 5;\n}\n\n// Stellen Sie sicher, dass der neue Duty Cycle innerhalb der Grenzen liegt\nnewDutyCycle = Math.min(95, Math.max(10, newDutyCycle));\n\n// Abluft starten auf dem ersten Ausgang, wenn sie aus ist und erhöht werden muss\nif (exhaustSpeed === \"increased\" && exhaustState === \"off\") {\n    outputs[0] = { payload: \"Starte Abluft\", topic: \"Start\" };\n    return outputs;\n}\n\n// Abluft-Geschwindigkeit erhöhen, wenn sie bereits eingeschaltet ist\nif (exhaustSpeed === \"increased\" && exhaustState === \"on\") {\n    outputs[2] = { payload: newDutyCycle.toString(), topic: \"Increase\" };\n    return outputs;\n}\n\n// Abluft stoppen auf dem zweiten Ausgang, wenn die Geschwindigkeit reduziert wird und der Duty Cycle sehr niedrig ist\nif (exhaustSpeed === \"reduced\" && exhaustState === \"on\" && newDutyCycle <= 10) {\n    outputs[1] = { payload: \"Stoppe Abluft\", topic: \"Stop\" };\n    return outputs;\n} else if (exhaustSpeed === \"reduced\" && exhaustState === \"on\") {\n    outputs[2] = { payload: newDutyCycle.toString(), topic: \"Decrease\" };\n    return outputs;\n}\n\n// Warnung ausgeben, wenn versucht wird, die Abluftgeschwindigkeit zu reduzieren, obwohl sie bereits aus ist\nif (exhaustSpeed === \"reduced\" && exhaustState === \"off\") {\n    outputs[1] = { payload: \"Abluft bereits gestoppt, kann nicht weiter reduziert werden\", topic: \"AlreadyStopped\" };\n    return outputs;\n}\n\n// Nichts tun, wenn keine Änderung erforderlich ist\nif (exhaustSpeed === \"unchanged\") {\n    outputs[3] = { payload: \"Abluft unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n    return outputs;\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3800,"y":460,"wires":[["96276016bab2e1aa","62497009f7293fbd"],["96276016bab2e1aa","f13854017a1084f1"],["dd0baa65bd4228de","96276016bab2e1aa"],["96276016bab2e1aa"]]},{"id":"df48cf3d2f7eba94","type":"http request","z":"87bab898757000a2","g":"13fe4471abdc9eb6","name":"DutyPostChange","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.235:5533/air/ctrl","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":4190,"y":480,"wires":[[]]},{"id":"dd0baa65bd4228de","type":"function","z":"87bab898757000a2","g":"13fe4471abdc9eb6","name":"DutyChanger","func":"\nconst NewDuty = msg.payload\n\nmsg.payload = { \"newDuty\": NewDuty}\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":4010,"y":480,"wires":[["df48cf3d2f7eba94"]]},{"id":"4e6d8c2f1c6a02f4","type":"join","z":"87bab898757000a2","g":"13fe4471abdc9eb6","name":"exhasutData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":3600,"y":540,"wires":[["09eb94f26d493e8b","96276016bab2e1aa","46b63c5a93a0813a"]]},{"id":"c7678607425efafe","type":"link in","z":"87bab898757000a2","g":"13fe4471abdc9eb6","name":"ExhasutFlower","links":[],"x":3545,"y":460,"wires":[["4e6d8c2f1c6a02f4"]]},{"id":"62497009f7293fbd","type":"link out","z":"87bab898757000a2","g":"13fe4471abdc9eb6","name":"ExhaustVeggiON","mode":"link","links":["55acda8e6f953bc1"],"x":3965,"y":420,"wires":[]},{"id":"f13854017a1084f1","type":"link out","z":"87bab898757000a2","g":"13fe4471abdc9eb6","name":"ExhaustVeggiOFF","mode":"link","links":["23d01364d3856db1"],"x":4015,"y":440,"wires":[]},{"id":"96276016bab2e1aa","type":"debug","z":"87bab898757000a2","g":"13fe4471abdc9eb6","name":"debug 182","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":3790,"y":400,"wires":[]},{"id":"46b63c5a93a0813a","type":"debug","z":"87bab898757000a2","g":"13fe4471abdc9eb6","name":"debug 214","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":3800,"y":540,"wires":[]},{"id":"5369d1e3838faa76","type":"comment","z":"87bab898757000a2","g":"13fe4471abdc9eb6","name":"Steped Increase Disabled BY default ","info":"\nSteps by 5% increase on any input  - & + ","x":3360,"y":380,"wires":[]},{"id":"b9fb8641ac981f23","type":"link in","z":"87bab898757000a2","g":"13fe4471abdc9eb6","name":"ExhaustCtrlFlower","links":["b81d8ddcfd887066","356ce5b53838cd67","7e8b342e3753e452","e3900c6fcb1518f1","9419716a0fc2ef01"],"x":3455,"y":540,"wires":[["4e6d8c2f1c6a02f4"]]},{"id":"7f00e431b1de7652","type":"comment","z":"87bab898757000a2","g":"13fe4471abdc9eb6","name":"change this to the other if you want stepped","info":"","x":3350,"y":460,"wires":[]},{"id":"cb4f634c782f0c95","type":"comment","z":"87bab898757000a2","g":"9b20a372abab7583","name":"change this to the other if you want stepped","info":"","x":3350,"y":740,"wires":[]},{"id":"b86eac9a31fb568d","type":"comment","z":"87bab898757000a2","g":"9b20a372abab7583","name":"Percent Increase","info":"\nIncrease by calculated % Difference to target","x":3480,"y":680,"wires":[]},{"id":"2402aa0c07cdcf6c","type":"comment","z":"87bab898757000a2","g":"b758b53640d466a4","name":"Next work on This","info":"","x":3290,"y":1800,"wires":[]},{"id":"c06f47080f347a58","type":"debug","z":"87bab898757000a2","name":"Cooler","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":840,"wires":[]},{"id":"2ca4f310b0d6f11e","type":"debug","z":"87bab898757000a2","name":"Heater","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":880,"wires":[]},{"id":"fc12515c1658f1b9","type":"link out","z":"87bab898757000a2","name":"CoolerVeggi","mode":"link","links":["32d42160c20106c8","49c9a1e109c2af12"],"x":585,"y":840,"wires":[]},{"id":"0109c4d9ec4db16e","type":"link out","z":"87bab898757000a2","name":"HeaterVeggi","mode":"link","links":["c7d049bd4613032b"],"x":585,"y":880,"wires":[]},{"id":"bf6ad6f294b897f5","type":"join","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"SoilData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","useparts":false,"accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1230,"y":520,"wires":[["1a62dd0247f36369"]]},{"id":"7da08f37d75439f9","type":"link out","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"SoilDataFlower","mode":"link","links":["31650adf036ee4e6"],"x":1475,"y":520,"wires":[]},{"id":"5a8503d8043c102d","type":"link out","z":"87bab898757000a2","name":"FlowerSwitches","mode":"link","links":["964569060d8af164"],"x":585,"y":640,"wires":[]},{"id":"964569060d8af164","type":"link in","z":"87bab898757000a2","name":"FlowerSwitches","links":["5a8503d8043c102d"],"x":195,"y":1280,"wires":[["e1f158d01f036857"]]},{"id":"e1f158d01f036857","type":"debug","z":"87bab898757000a2","name":"debug 276","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":310,"y":1280,"wires":[]},{"id":"e17fb27d24007412","type":"debug","z":"87bab898757000a2","name":"Pump","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":920,"wires":[]},{"id":"5577f18e1e52d1e5","type":"link out","z":"87bab898757000a2","name":"FlowerPump","mode":"link","links":["714e9287a08ac98b","538bb8e26676f039"],"x":585,"y":920,"wires":[]},{"id":"131a14af0d07fc04","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"Heater-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Dehumidifier-Wertes\nfunction findDehumidifierValue(sensors) {\n    const dehumidifierObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"dehumidifier\") || \n        sensor.entity_id.includes(\"humidity\")\n    );\n    return dehumidifierObject ? dehumidifierObject.value : null;\n}\n\n// Finden des Dehumidifier-Wertes\nconst dehumidifierValue = findDehumidifierValue(sensors);\n\n// Ausgabe des Dehumidifier-Wertes zur Überprüfung\n// node.warn(`Dehumidifier-Wert: ${dehumidifierValue}`);\n\n// Optional: Speichern des Dehumidifier-Wertes in msg zur weiteren Verwendung\nmsg.payload = dehumidifierValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":730,"y":1260,"wires":[[]]},{"id":"8da0a29a26edb00a","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"Cooler-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Dehumidifier-Wertes\nfunction findDehumidifierValue(sensors) {\n    const dehumidifierObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"dehumidifier\") || \n        sensor.entity_id.includes(\"humidity\")\n    );\n    return dehumidifierObject ? dehumidifierObject.value : null;\n}\n\n// Finden des Dehumidifier-Wertes\nconst dehumidifierValue = findDehumidifierValue(sensors);\n\n// Ausgabe des Dehumidifier-Wertes zur Überprüfung\n// node.warn(`Dehumidifier-Wert: ${dehumidifierValue}`);\n\n// Optional: Speichern des Dehumidifier-Wertes in msg zur weiteren Verwendung\nmsg.payload = dehumidifierValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":730,"y":1220,"wires":[[]]},{"id":"550fce3496e09f58","type":"link in","z":"87bab898757000a2","name":"SoilDataVeggi","links":["ca916a4137a667fb"],"x":175,"y":1720,"wires":[["6606587d24a48ae0"]]},{"id":"538bb8e26676f039","type":"link in","z":"87bab898757000a2","name":"VegPump","links":["163e27575fa2333d","5577f18e1e52d1e5"],"x":175,"y":1640,"wires":[["6606587d24a48ae0"]]},{"id":"6606587d24a48ae0","type":"join","z":"87bab898757000a2","name":"WatteringData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","useparts":false,"accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":340,"y":1680,"wires":[["93eb8855b9623018","77919fecf60613f9"]]},{"id":"93eb8855b9623018","type":"debug","z":"87bab898757000a2","name":"debug 281","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":610,"y":1680,"wires":[]},{"id":"77919fecf60613f9","type":"function","z":"87bab898757000a2","name":"MinMax_SoilWattering","func":"// Function Node\nconst nextPump = parseInt(msg.payload.pump[0].value); // In Minuten bis zur nächsten Bewässerung\nconst pumpingLeftTime = parseInt(msg.payload.pump[1].value); // Verbleibende Zeit der Pumpenphase\n\nconst isPumpOn = msg.payload.pump[3].value === 'on'; // Pumpe an oder aus\nconst isAutoRunOn = msg.payload.pump[4].value === 'on'; // Automatischer Modus an oder aus\n\nconst wateringDuration = parseInt(msg.payload.pump[5].value); // Bewässerungsdauer in Minuten\nconst wateringInterval = parseInt(msg.payload.pump[6].value) * 60; // Bewässerungsintervall in Minuten (umgerechnet in Stunden)\n\nconst soilMoisture = parseInt(msg.payload.SoilData.moisture); // Bodenfeuchtigkeit\nconst soilEC = parseInt(msg.payload.SoilData.conductivity); // Leitfähigkeit des Bodens\n\nconst minSoilMoisture = 10; // Mindestbodenfeuchtigkeit für sofortige Bewässerung\nconst maxSoilMoisture = 50; // Maximale Bodenfeuchtigkeit zum Stoppen der Bewässerung\n\nlet command = 'OFF'; // Standardkommando\nlet newAutoRunOn = isAutoRunOn; // Standardmäßig aktueller Auto-Run-Zustand\n\nif (isAutoRunOn) {\n    // Automatischer Modus ist aktiv\n    if (soilMoisture < minSoilMoisture) {\n        command = 'ON'; // Sofort bewässern\n    } else if (soilMoisture >= maxSoilMoisture && isPumpOn) {\n        command = 'OFF'; // Bewässerung stoppen, wenn Bodenfeuchtigkeit ausreichend ist\n    }\n} else {\n    // Automatischer Modus ist nicht aktiv\n    if (soilMoisture < minSoilMoisture) {\n        command = 'ON'; // Sofort bewässern\n        newAutoRunOn = true; // Auto-Modus nach Bewässerung aktivieren\n    }\n}\n\nmsg.payload = {\n    soilMoisture,\n    soilEC,\n    command: command,\n    nextPump: nextPump,\n    pumpingLeftTime: pumpingLeftTime,\n    wateringDuration: wateringDuration,\n    wateringInterval: wateringInterval,\n    isAutoRunOn: newAutoRunOn ? 'on' : 'off'\n};\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":440,"y":1720,"wires":[["93eb8855b9623018"]]},{"id":"3aca6f019e165f50","type":"comment","z":"87bab898757000a2","name":"WateringModule","info":"","x":220,"y":1580,"wires":[]},{"id":"1a62dd0247f36369","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"SetTopic","func":"msg.topic = \"SoilData\"\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1380,"y":520,"wires":[["7da08f37d75439f9"]]},{"id":"696e41e72b6d87c3","type":"ha-number","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerWateringIntervall","version":1,"debugenabled":false,"inputs":1,"outputs":1,"entityConfig":"9552f58a69089ac1","mode":"set","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"}],"x":1220,"y":1620,"wires":[[]]},{"id":"a243b16f3d00fcf3","type":"ha-number","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerWateringDuration","version":1,"debugenabled":false,"inputs":1,"outputs":1,"entityConfig":"9fdb5c51a50f9202","mode":"set","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"}],"x":1230,"y":1560,"wires":[[]]},{"id":"a0cd0a8e16bb7a99","type":"ha-text","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerNextPumpingIntervall","version":1,"debugenabled":false,"inputs":1,"outputs":1,"entityConfig":"59a771a312d7a309","mode":"set","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"}],"x":1240,"y":1320,"wires":[[]]},{"id":"88cd27695c982e3d","type":"ha-switch","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerAutoPump","version":0,"debugenabled":false,"inputs":1,"outputs":2,"entityConfig":"62093afc01cbef1b","enableInput":true,"outputOnStateChange":true,"outputProperties":[{"property":"outputType","propertyType":"msg","value":"state change","valueType":"str"},{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"}],"x":1200,"y":1500,"wires":[[],[]]},{"id":"0adb7ded56f4f452","type":"ha-switch","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerPumpOn","version":0,"debugenabled":false,"inputs":1,"outputs":2,"entityConfig":"8ea86451b7d0f88d","enableInput":true,"outputOnStateChange":true,"outputProperties":[{"property":"outputType","propertyType":"msg","value":"state change","valueType":"str"},{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"}],"x":1200,"y":1440,"wires":[[],[]]},{"id":"fb159f67322d5374","type":"ha-text","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerPumpingDuration","version":1,"debugenabled":false,"inputs":1,"outputs":1,"entityConfig":"2a036f3fe25e5b96","mode":"set","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"}],"x":1230,"y":1380,"wires":[[]]},{"id":"ea4a919972365159","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"Pump-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Sensorwertes\nfunction findSensorValue(sensors, filter) {\n    const sensorObject = sensors.find(sensor =>\n        sensor.entity_id.includes(filter)\n    );\n    return sensorObject ? sensorObject.value : null;\n}\n\n// Funktion zum Konvertieren des Sensorwertes in den entsprechenden Typ\nfunction convertType(value, type) {\n    switch (type) {\n        case \"number\":\n            return Number(value);\n        case \"boolean\":\n            return value === \"on\" || value === \"true\";\n        case \"string\":\n            return String(value);\n        default:\n            return value;\n    }\n}\n\n// Filterwerte und zugehörige Typen für die einzelnen Sensoren\nconst filterValues = [\n    { filter: \"nextpumpingaction\", type: \"number\" },\n    { filter: \"pumpinglefttime\", type: \"number\" },\n    { filter: \"pumpon\", type: \"boolean\" },\n    { filter: \"pumpautorun\", type: \"boolean\" },\n    { filter: \"pumpwatteringduration\", type: \"number\" },\n    { filter: \"pumpinghours\", type: \"number\" }\n];\n\n// Erstellen eines Arrays von Nachrichten für die verschiedenen Ausgänge\nlet outputMsgs = filterValues.map(item => {\n    const value = findSensorValue(sensors, item.filter);\n    // Node.warn kann verwendet werden, um den Wert vor der Umwandlung zu überprüfen\n    //node.warn(`Filter: ${item.filter}, Value: ${value}, Type: ${item.type}`);\n    return { payload: convertType(value, item.type) };\n});\n\n// Rückgabe der Nachrichten zur Weiterverarbeitung im Flow\nreturn outputMsgs;\n","outputs":6,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":730,"y":1380,"wires":[["69ee865c7f63151e","6205e0cbac912f90"],["69ee865c7f63151e","b02e18c123139623"],["69ee865c7f63151e","7f1e779d5b8c5471"],["69ee865c7f63151e","82f4857b20be7401"],["69ee865c7f63151e","a243b16f3d00fcf3"],["69ee865c7f63151e","696e41e72b6d87c3"]]},{"id":"69ee865c7f63151e","type":"debug","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"debug 283","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":730,"y":1300,"wires":[]},{"id":"6205e0cbac912f90","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"Add Min String","func":"let data = msg.payload\n\nmsg.payload = `${data} Minutes`\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1000,"y":1320,"wires":[["a0cd0a8e16bb7a99"]]},{"id":"b02e18c123139623","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"Add Sec String","func":"let data = msg.payload\n\nmsg.payload = `${data} Seconds`\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1000,"y":1380,"wires":[["fb159f67322d5374"]]},{"id":"7f1e779d5b8c5471","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"set Enable","func":"msg.enable = msg.payload\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":990,"y":1440,"wires":[["0adb7ded56f4f452"]]},{"id":"82f4857b20be7401","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"set Enable","func":"msg.enable = msg.payload\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":990,"y":1480,"wires":[["88cd27695c982e3d"]]},{"id":"a34b894b03b36458","type":"link in","z":"3752d27d7587c957","name":"VeggiLiveData","links":["e84242346557dbcb"],"x":35,"y":60,"wires":[["0b3cb88f4a5201ce","ff0f10e0360a6aef"]]},{"id":"0b3cb88f4a5201ce","type":"debug","z":"3752d27d7587c957","name":"VeggiLiveData","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":200,"y":60,"wires":[]},{"id":"8c9088a88c067085","type":"link in","z":"3752d27d7587c957","name":"VeggiCtrl","links":["094a8eca640c4e2d","96234401e3328f98"],"x":35,"y":20,"wires":[["c9ccfd1214ea1094"]]},{"id":"c9ccfd1214ea1094","type":"debug","z":"3752d27d7587c957","name":"VegiTentData","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":130,"y":20,"wires":[]},{"id":"ccdccc414634ff7d","type":"ha-sensor","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"currentVPD","entityConfig":"5de3d083be69c9ff","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1450,"y":120,"wires":[["c9b790e0fa1dbc49"]]},{"id":"6348b269079bfa32","type":"ha-sensor","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"VegiAVGTemp","entityConfig":"fbd2ef51e597d808","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1240,"y":160,"wires":[["8d38db5fb60c01a9"]]},{"id":"82a3c89470307c7b","type":"ha-sensor","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"VegiAVGHum","entityConfig":"c918d481d80ee2dc","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1240,"y":220,"wires":[["8d38db5fb60c01a9"]]},{"id":"dd1ef50d40a2e8fa","type":"function","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"VPD Calc ","func":"function calculateVPD(luftTemperatur, blattTemperatur, relativeLuftfeuchtigkeit) {\n    // Stellen Sie sicher, dass alle Eingaben Zahlen sind\n    luftTemperatur = parseFloat(luftTemperatur);\n    blattTemperatur = parseFloat(blattTemperatur);\n    relativeLuftfeuchtigkeit = parseFloat(relativeLuftfeuchtigkeit);\n\n    // Überprüfen Sie, ob einer der Werte NaN ist\n    if (isNaN(luftTemperatur) || isNaN(blattTemperatur) || isNaN(relativeLuftfeuchtigkeit)) {\n        return NaN; // Geändert von \"unavailable\" zu NaN für bessere Handhabung in numerischen Berechnungen\n    }\n\n    // Berechnungen ohne Rundung\n    let sdpLuft = 0.6108 * Math.exp((17.27 * luftTemperatur) / (luftTemperatur + 237.3));\n    let sdpBlatt = 0.6108 * Math.exp((17.27 * blattTemperatur) / (blattTemperatur + 237.3));\n    let adp = (relativeLuftfeuchtigkeit / 100) * sdpLuft;\n    let vpd = sdpBlatt - adp;\n\n    // Rückgabe als number, nicht als string\n    return parseFloat(vpd.toFixed(2));\n}\n\n// Beispiel für die Verwendung der Funktion\nlet luftTemperatur = parseFloat(msg.payload.AvgData.AvgTempData); // Stellen Sie sicher, dass dies eine Zahl ist\nlet blattTemperatur = parseFloat(msg.payload.AvgData.AvgTempData) - parseFloat(msg.payload.LeafOffSet); // Keine Rundung, genaue Berechnung\nlet relativeLuftfeuchtigkeit = parseFloat(msg.payload.AvgData.AvgHumData); // Stellen Sie sicher, dass dies eine Zahl ist\n\nlet vpd = calculateVPD(luftTemperatur, blattTemperatur, relativeLuftfeuchtigkeit);\n\nmsg.payload = vpd; // Nun ist msg.payload eine Zahl\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1280,"y":120,"wires":[["ccdccc414634ff7d"]]},{"id":"623fb660cf22ede4","type":"function","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"Calc-AVG","func":"// Funktion zur Berechnung des Durchschnitts\nconst AvgTemp = (temps) => {\n    let sum = 0;\n    let count = 0;\n\n    temps.forEach((entry) => {\n        const temp = parseFloat(entry.value);\n        if (!isNaN(temp)) {\n            sum += temp;\n            count++;\n        }\n    });\n\n    if (count === 0) {\n        return \"unavailable\";\n    }\n\n    const avg = sum / count;\n    return avg.toFixed(2);\n};\n\n// Durchschnittstemperatur für jede Temperaturkategorie berechnen\nconst temperatureAvg = AvgTemp(msg.payload.temperature);\nconst humidityAvg = AvgTemp(msg.payload.humidity);\n\n// Objekt mit den Durchschnittswerten erstellen\nconst avgData = {\n    AvgTempData: temperatureAvg,\n    AvgHumData: humidityAvg\n};\n\n// Nachrichten erstellen und zurückgeben\nconst avgDataMsg = { payload: avgData, topic: \"AvgData\" };\nconst tempMsg = { payload: temperatureAvg, topic: \"AvgTemp\" };\nconst humMsg = { payload: humidityAvg, topic: \"AvgHum\" };\n\nreturn [avgDataMsg, tempMsg, humMsg];\n","outputs":3,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":940,"y":140,"wires":[["9e679a1a5777db44"],["6348b269079bfa32"],["82a3c89470307c7b"]]},{"id":"66898e3bde87b1c4","type":"comment","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"VPD-Creation","info":"","x":1150,"y":80,"wires":[]},{"id":"b4ffc7429cc6d314","type":"function","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"TentModesSetup","func":"// Initialisiert das Array für die Ausgänge mit Nullen\nlet outputs = [null, null, null, null, null ];\n\n// Überprüft den Zustand des eingehenden Payloads und setzt den entsprechenden Ausgang\nif (msg.payload === \"VPD Perfection\") {\n    return [{ payload: msg.payload, topic: \"Perfection\" }, null, null, null,null];\n}\nelse if (msg.payload === \"IN-VPD-Range\") {\n    return [null, { payload: msg.payload, topic: \"AutoAvgVPD\" }, null, null, null];\n}\nelse if (msg.payload === \"Targeted VPD\") {\n    return [null, null, { payload: msg.payload, topic: \"TargetedVPD\" }, null, null];\n}\nelse if (msg.payload === \"CropSteering\") {\n    return [null, null, null, { payload: msg.payload, topic: \"ModeDisabeld\" }, null ];\n}\nelse if (msg.payload === \"Disabled\") {\n    return [null, null, null, null, { payload: msg.payload, topic: \"ModeDisabeld\" }];\n}\n\n// Wenn keine Bedingungen zutreffen, sendet nichts\nreturn [null, null, null, null,null];\n","outputs":5,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1770,"y":200,"wires":[["128a30397aed36be"],["2da69194534ed372"],["68225790c0cb82bc"],["8efbc7331afa5d51"],["08f0fa9570535866"]]},{"id":"08f0fa9570535866","type":"function","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"DISABLED AUTO","func":"msg.payload=\"DISABLED VEGGI\"\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1770,"y":260,"wires":[["243e4dc964a7dbf4"]]},{"id":"243e4dc964a7dbf4","type":"debug","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"debug 123","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1770,"y":300,"wires":[]},{"id":"128a30397aed36be","type":"link out","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"VPD-Perfektion","mode":"link","links":["a0b3236b810a1d68"],"x":1915,"y":140,"wires":[]},{"id":"2da69194534ed372","type":"link out","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"IN-Range-VPD","mode":"link","links":["7e18ed0416316f92","10975d949b78c673"],"x":1915,"y":180,"wires":[]},{"id":"68225790c0cb82bc","type":"link out","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"TargetedVPD","mode":"link","links":["474c1b1dab6d9b7f","4a116bed2a39fb84","f409e7c8d74372fc"],"x":1915,"y":220,"wires":[]},{"id":"b1dbc5b52ddb3d1b","type":"comment","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"TentModes","info":"","x":1800,"y":140,"wires":[]},{"id":"c9b790e0fa1dbc49","type":"api-current-state","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"TentMode","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"select.vegitentmodes","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"TentMode","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1620,"y":120,"wires":[["b4ffc7429cc6d314"]]},{"id":"bcc5756283e66c56","type":"join","z":"3752d27d7587c957","g":"077c0666ef9f39f6","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"perfektion","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"3","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":2670,"y":540,"wires":[["db64f19844a45a25"]]},{"id":"db64f19844a45a25","type":"function","z":"3752d27d7587c957","g":"077c0666ef9f39f6","name":"Make Perfekt VPD","func":"const tolerance = 0.025; // Toleranzwert für die VPD-Anpassung\n\n// Berechnet den durchschnittlichen Wert aus zwei Zahlen im Array VPDStageValue und begrenzt das Ergebnis auf zwei Dezimalstellen\nconst averageVPD = (msg.payload.VPDStageValue[0] + msg.payload.VPDStageValue[1]) / 2;\nconst perfectVPD = parseFloat(averageVPD.toFixed(3));\n\nconst currentVPD = parseFloat(msg.payload.currentVPD);\n\n// Build increase base of State % diffrence from Current VPD to avarangeVPD\n// Berechnung der prozentualen Abweichung vom Ziel-VPD\nconst percentDifference = ((currentVPD - perfectVPD) / perfectVPD) * 100;\n\n\n\n// IF not in Range Do Nothing\nif (currentVPD < msg.payload.VPDStageValue[0] || currentVPD > msg.payload.VPDStageValue[1]){\n    return\n}\n// Warnung über die prozentuale Abweichung\nnode.warn(`Perfect-VEGGI % : ${percentDifference.toFixed(2)}%`);\nnode.warn(`Perfect-Veggi-Current VPD: ${currentVPD}`);\nnode.warn(`Perfect-Veggi-Target-VPD: ${perfectVPD} with ${tolerance} Tolerance`);\n\n\n\n// Funktion zur Berechnung der notwendigen Anpassungen basierend auf der Differenz zum VPD-Zielbereich.\nfunction calculateAdjustment(currentVPD, perfectVPD) {\n    // Wenn der aktuelle VPD unter dem minimalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu erhöhen.\n    if (currentVPD < perfectVPD - tolerance) {\n        node.warn(`Perfect-Veggi-VPD:: ${currentVPD} zu Gering Erhöe Temp oder veringere die Feuchtikeit`);\n        return {\n            exhaustSpeed: \"increased\",      // Erhöht die Abluftgeschwindigkeit, um feuchte Luft herauszuziehen\n            humidifier: \"reduced\",          // Schaltet den Luftbefeuchter aus, um Feuchtigkeit zu reduzieren\n            dehumidifier: \"increased\",       // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            heaterFan: \"increased\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Reduzieren und Temp zu erhöhen\n            coolerFan: \"reduced\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Erhöhen und Temp zu veringern\n            ventsTopSpeed: \"increased\",     // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsDownSpeed: \"increased\",    // Erhöht die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"increased\"     // Erhöht die Lichtintensität, um die Temperatur zu steigern (wenn das die Temperatur beeinflusst)\n        };\n        \n    }\n    // Wenn der aktuelle VPD über dem maximalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu senken.\n    else if (currentVPD > perfectVPD + tolerance) {\n        node.warn(`Perfect-Veggi-VPD: ${currentVPD} zu hoch verringere Temp oder erhöe die Feuchtikeit`);\n        return {\n            exhaustSpeed: \"reduced\",    // Reduziert die Abluftgeschwindigkeit, hält feuchte Luft im Raum\n            humidifier: \"increased\",           // Schaltet den Luftbefeuchter ein, um Feuchtigkeit zu erhöhen\n            dehumidifier: \"reduced\",       // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            heaterFan: \"reduced\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Reduzieren und Temp zu erhöhen\n            coolerFan: \"increased\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Erhöhen und Temp zu veringern\n            ventsTopSpeed: \"reduced\",   // Reduziert die Geschwindigkeit der oberen Belüftung\n            ventsDownSpeed: \"reduced\",  // Reduziert die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"reduced\"      // Verringert die Lichtintensität, um die Temperatur zu senken (wenn das die Temperatur beeinflusst)\n        };\n    }\n    // Wenn der VPD im Zielbereich liegt, sind keine Anpassungen erforderlich.\n             node.warn(`Perfect-Veggi-VPD: ${currentVPD} im Gewünschten Bereich`);\n    return {\n        exhaustSpeed: \"unchanged\",\n        humidifier: \"unchanged\",\n        dehumidifier: \"unchanged\",       // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n        heaterFan: \"unchanged\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Reduzieren und Temp zu erhöhen\n        coolerFan: \"unchanged\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Erhöhen und Temp zu veringern\n        ventsTopSpeed: \"unchanged\",\n        ventsDownSpeed: \"unchanged\",\n        lightIntensity: \"unchanged\"\n    };\n}\n\n// Entscheidungslogik zur Steuerung der Umgebungsbedingungen, nutzt die calculateAdjustment Funktion.\nconst adjustments = calculateAdjustment(currentVPD, perfectVPD);\nmsg.payload = {\n    exhaustSpeed: adjustments.exhaustSpeed,\n    humidifier: adjustments.humidifier,\n    dehumidifier: adjustments.dehumidifier,\n    heaterFan: adjustments.heaterFan,\n    coolerFan: adjustments.coolerFan,\n    ventsTopSpeed: adjustments.ventsTopSpeed,\n    ventsDownSpeed: adjustments.ventsDownSpeed,\n    lightIntensity: adjustments.lightIntensity,\n    percentDifference: percentDifference.toFixed(2)\n};\nmsg.perfektion = \"VPDActions\"\n\n// Rückgabe des modifizierten Payloads für weitere Verwendung im Flow.\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2690,"y":580,"wires":[["c97d86f4eb3827ad"]]},{"id":"c97d86f4eb3827ad","type":"function","z":"3752d27d7587c957","g":"077c0666ef9f39f6","name":"Check What Do","func":"let outputs = [null, null, null, null, null, null, null, null, null];\n\nvar percentDifference = msg.payload.percentDifference\n\n// Abluft\nif (msg.payload.exhaustSpeed === \"unchanged\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"increased\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"reduced\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n}\n\n// Humidifier\nif (msg.payload.humidifier === \"unchanged\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"increased\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"reduced\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n}\n\n// Dehumidifier\nif (msg.payload.dehumidifier === \"unchanged\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"increased\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"reduced\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n}\n\n// HeaterFan\nif (msg.payload.heaterFan === \"unchanged\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"increased\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"reduced\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n}\n\n// CoolerFan\nif (msg.payload.coolerFan === \"unchanged\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"increased\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"reduced\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n}\n\n// LightIntensity\nif (msg.payload.lightIntensity === \"unchanged\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"increased\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"reduced\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n}\n\n// VentsALL\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"increased\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"reduced\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n}\n\n// VentsTopSpeed\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"increased\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"reduced\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n}\n\n// VentsDownSpeed\nif (msg.payload.ventsDownSpeed === \"unchanged\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"increased\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"reduced\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n}\n\n\n\nreturn outputs;\n","outputs":9,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2900,"y":600,"wires":[["825ed8cac87f6ba8"],["f58811e4189b45cc"],["3084915b3c3153eb"],["228540ed8dcab290"],["95ed2ef55d637d57"],["44c482979d3323d4"],["fba3fd82020bcd3e"],["fba3fd82020bcd3e"],["fba3fd82020bcd3e"]]},{"id":"0a28b21d3b4a4f2b","type":"comment","z":"3752d27d7587c957","g":"6dd36616a92a87a4","name":"IN-RANGE-VPD","info":"","x":1880,"y":900,"wires":[]},{"id":"68a16773bf83b16c","type":"comment","z":"3752d27d7587c957","g":"d14fa664d0413a5c","name":"Targeted-VPD","info":"","x":1890,"y":1340,"wires":[]},{"id":"e52f426c3a45d473","type":"link out","z":"3752d27d7587c957","name":"ExhaustData","mode":"link","links":["155cb7e4a436ab9f","f9d66aa02cde8cbc","418a4427dfb8d6af","44d0938e5407b630","cfee122ef13568d8","38dec2c32136830f","4c2f7e58d2747c89"],"x":575,"y":680,"wires":[]},{"id":"2190d00a05105c37","type":"function","z":"3752d27d7587c957","g":"8ecdceb2353f84e1","name":"Exhaust Setup","func":"// Hilfsfunktion zur Überprüfung, ob ein Wert numerisch ist\nconst isNumeric = (value) => {\n    return !isNaN(parseFloat(value)) && isFinite(value);\n};\n\n// Funktion zur Bestimmung des dutyCycle-Werts\nconst findDutyCycle = (exhaustArray) => {\n    if (exhaustArray.length === 0) {\n        return null; // Keine Werte zu verarbeiten, wenn das Array leer ist\n    }\n    for (let i = 0; i < exhaustArray.length; i++) {\n        if (isNumeric(exhaustArray[i].value)) {\n            return parseInt(exhaustArray[i].value, 10);\n        }\n    }\n    return null; // Falls kein numerischer Wert gefunden wurde\n};\n\nlet outputs = [null, null, null, null]; // Array für vier Ausgänge\n\n// Zustand der Abluft und Geschwindigkeit aus der Payload extrahieren\nconst exhaustSpeed = msg.payload.exhaustSet.value; // Anpassung hier\nlet exhaustState = 'off'; // Standardwert setzen, falls kein Zustand gefunden wird\nif (msg.payload.Exhaust && msg.payload.Exhaust.length > 0) {\n    const exhaustSwitch = msg.payload.Exhaust.find(e => e.entity_id && e.entity_id.toLowerCase().includes(\"switch\"));\n    if (exhaustSwitch && exhaustSwitch.value) {\n        exhaustState = exhaustSwitch.value;\n    }\n}\n\nconst dutyCycle = findDutyCycle(msg.payload.Exhaust) || 0 ;\n\n// Prüfen, ob ein dutyCycle vorhanden ist\nif (dutyCycle === null) {\n    return outputs; // Kein dutyCycle gefunden, keine Aktion erforderlich\n}\n\nconst percentDifference = parseFloat(msg.payload.exhaustSet.percentDifference);\nlet newDutyCycle = dutyCycle;\n\n// Berechnung des neuen Duty Cycle basierend auf der prozentualen Abweichung\nif (percentDifference !== 0) {\n    if (percentDifference < 0) {\n        // Wenn der Wert negativ ist, erhöhen wir den Duty Cycle\n        newDutyCycle = dutyCycle + Math.abs(percentDifference);\n    } else {\n        // Wenn der Wert positiv ist, verringern wir den Duty Cycle\n        newDutyCycle = dutyCycle - percentDifference;\n    }\n\n    // Stellen Sie sicher, dass der neue Duty Cycle innerhalb der Grenzen liegt\n    newDutyCycle = Math.min(95, Math.max(10, Math.round(newDutyCycle)));\n}\n\n// Abluft starten auf dem ersten Ausgang, wenn sie aus ist und erhöht werden muss\nif (exhaustSpeed === \"increased\" && exhaustState === \"off\") {\n    outputs[0] = { payload: \"Starte Abluft\", topic: \"Start\" };\n    return outputs;\n}\n\n// Abluft-Geschwindigkeit erhöhen, wenn sie bereits eingeschaltet ist\nif (exhaustSpeed === \"increased\" && exhaustState === \"on\") {\n    outputs[2] = { payload: newDutyCycle.toString(), topic: \"Increase\" };\n    return outputs;\n}\n\n// Abluft stoppen auf dem zweiten Ausgang, wenn die Geschwindigkeit reduziert wird und der Duty Cycle sehr niedrig ist\nif (exhaustSpeed === \"reduced\" && exhaustState === \"on\" && newDutyCycle <= 10) {\n    outputs[1] = { payload: \"Stoppe Abluft\", topic: \"Stop\" };\n    return outputs;\n} else if (exhaustSpeed === \"reduced\" && exhaustState === \"on\") {\n    outputs[2] = { payload: newDutyCycle.toString(), topic: \"Decrease\" };\n    return outputs;\n}\n\n// Warnung ausgeben, wenn versucht wird, die Abluftgeschwindigkeit zu reduzieren, obwohl sie bereits aus ist\nif (exhaustSpeed === \"reduced\" && exhaustState === \"off\") {\n    outputs[1] = { payload: \"Abluft bereits gestoppt, kann nicht weiter reduziert werden\", topic: \"AlreadyStopped\" };\n    return outputs;\n}\n\n// Nichts tun, wenn keine Änderung erforderlich ist\nif (exhaustSpeed === \"unchanged\") {\n    outputs[3] = { payload: \"Abluft unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n    return outputs;\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3920,"y":600,"wires":[["9ee872c8de807c68","d1ba22a962408cbd"],["9ee872c8de807c68","068b8e7a89eef1ba"],["64311156e04065be","9ee872c8de807c68"],["9ee872c8de807c68"]]},{"id":"032ae17ffae61c84","type":"http request","z":"3752d27d7587c957","g":"8ecdceb2353f84e1","name":"DutyPostChange","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.235:5533/air/ctrl","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":4370,"y":620,"wires":[[]]},{"id":"64311156e04065be","type":"function","z":"3752d27d7587c957","g":"8ecdceb2353f84e1","name":"DutyChanger","func":"\nconst NewDuty = msg.payload\n\nmsg.payload = { \"newDuty\": NewDuty}\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":4130,"y":620,"wires":[["032ae17ffae61c84"]]},{"id":"49c6e2de0f1b0630","type":"link out","z":"3752d27d7587c957","name":"Humidifier","mode":"link","links":["209b5f3139ea01b4","6f8118f3fa861377","5373a6c3f26af0c7","741c0ac411bcbcec","35533e64c19a08ec","8c9e965122e60702","7e0384d9297a7e91"],"x":575,"y":720,"wires":[]},{"id":"e67e4105200aba9a","type":"join","z":"3752d27d7587c957","g":"8ecdceb2353f84e1","name":"exhasutData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":3720,"y":680,"wires":[["2190d00a05105c37","9ee872c8de807c68","db06e129a47a81f9"]]},{"id":"418a4427dfb8d6af","type":"link in","z":"3752d27d7587c957","g":"8ecdceb2353f84e1","name":"ExhasutData","links":["e52f426c3a45d473"],"x":3655,"y":620,"wires":[["e67e4105200aba9a"]]},{"id":"38a22324d2ddeb2e","type":"function","z":"3752d27d7587c957","g":"2651868e58bb1778","name":"BefeuchterSetup","func":"let outputs = [null, null, null];\n\nlet humidifierState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.humidifier.length; i++) {\n    if (msg.payload.humidifier[i].entity_id.includes('humidifier')) {\n        humidifierState = msg.payload.humidifier[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.humidifierSet.value === \"increased\" && humidifierState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.humidifierSet.value === \"reduced\" && humidifierState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun oder ausschalten bei unverändertem Zustand\nif (msg.payload.humidifierSet.value === \"unchanged\") {\n    if (humidifierState === \"on\") {\n        // Wenn der Befeuchter im Zelt an ist und kein Wechsel angefordert wird, sende \"off\"\n        outputs[0] = { payload: \"off\", topic: \"Humidifier\" };\n    } else {\n        // Wenn der Befeuchter bereits aus ist oder nicht geändert werden soll\n        outputs[1] = { payload: \"Humidifier already stopped, nothing to do! Waiting for changes.\", topic: \"Humidifier\" };\n    }\n}\n\n// Nichts tun (detaillierte Information)\nif (msg.payload.humidifierSet.value === \"unchanged\" && humidifierState !== \"on\" && humidifierState !== \"off\") {\n    outputs[2] = { payload: \"Befeuchter unverändert, keine Aktion erforderlich\", data: msg.payload, topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3890,"y":840,"wires":[["fb9d3843392773d1"],["d2b8b521e6d704e6"],["317e9ec8876608ff"],[]]},{"id":"0eca8b29f89f4926","type":"join","z":"3752d27d7587c957","g":"2651868e58bb1778","name":"HumidityData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":3660,"y":860,"wires":[["38a22324d2ddeb2e"]]},{"id":"5373a6c3f26af0c7","type":"link in","z":"3752d27d7587c957","g":"2651868e58bb1778","name":"HumidifierData","links":["49c6e2de0f1b0630"],"x":3595,"y":800,"wires":[["0eca8b29f89f4926"]]},{"id":"10975d949b78c673","type":"link in","z":"3752d27d7587c957","g":"6dd36616a92a87a4","name":"VPD-Perfektion","links":["2da69194534ed372"],"x":1825,"y":960,"wires":[["df5e74c7f7712579"]]},{"id":"2afcbf200982e39e","type":"function","z":"3752d27d7587c957","g":"6dd36616a92a87a4","name":"VPD State Values","func":"const plantStages = {\n    Germination: [0.42, 0.78], // Optimaler VPD-Bereich für Keimung bei 25-30°C\n    Clones: [0.42, 0.78],      // Optimaler VPD-Bereich für Klone bei 25-30°C\n    EarlyVeg: [0.55, 0.85],    // Optimaler VPD-Bereich für frühe Vegetation bei 20-25°C\n    MidVeg: [0.85, 1.1],      // Optimaler VPD-Bereich für mittlere Vegetation bei 20-25°C\n    LateVeg: [0.85, 1.2],     // Optimaler VPD-Bereich für späte Vegetation bei 20-25°C\n    EarlyFlower: [1, 1.25], // Optimaler VPD-Bereich für frühe Blüte bei 20-25°C\n    MidFlower: [1.1, 1.4],   // Optimaler VPD-Bereich für mittlere Blüte bei 20-25°C\n    LateFlower: [1.2, 1.6],  // Optimaler VPD-Bereich für späte Blüte bei 20-25°C\n};\n\n\n\n// Beispiel, wie msg.payload gesetzt wird\n// msg.payload = \"LateVeg\"; // Kommentieren Sie diese Zeile aus, um den tatsächlichen msg.payload zu verwenden\n\n// Prüfen, ob das Wachstumsstadium im plantStages-Objekt vorhanden ist\nif (plantStages.hasOwnProperty(msg.payload)) {\n    // Setzen des VPD-Wertes aus dem plantStages-Objekt\n    msg.payload = plantStages[msg.payload];\n} else {\n    // Fehlermeldung, wenn das Wachstumsstadium nicht gefunden wurde\n    msg.payload = \"Unbekanntes Wachstumsstadium\";\n\n}\nmsg.perfektion = \"VPDStageValue\"\ndelete msg.data;\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2150,"y":960,"wires":[["9ac8cca8bbd8cc26"]]},{"id":"9ac8cca8bbd8cc26","type":"join","z":"3752d27d7587c957","g":"6dd36616a92a87a4","name":"VPDWish","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":2060,"y":1040,"wires":[["07308f4728d5980a"]]},{"id":"07308f4728d5980a","type":"function","z":"3752d27d7587c957","g":"6dd36616a92a87a4","name":"VPD Handler Array Value","func":"const tolerance = 0.00; // Toleranzwert für die VPD-Anpassung\n\n// Der aktuelle VPD-Wert wird aus dem Payload geholt und in eine Zahl umgewandelt.\nconst currentVPD = parseFloat(msg.payload.currentVPD);\n\n// Ziel-VPD-Bereich wird aus dem Payload geholt.\nconst targetVPDRange = msg.payload.targetVPD;\n\n// Logging der aktuellen VPD und Ziel-VPD-Bereich zur Überprüfung und Debugging.\nnode.warn(`Veggi-VPD array between: ${targetVPDRange[0]} and ${targetVPDRange[1]}`);\n\n// Berechnung der prozentualen Abweichung vom Ziel-VPD und Rundung auf ganze Zahlen\nconst percentDifference = Math.round(currentVPD < targetVPDRange[0] \n    ? ((currentVPD - targetVPDRange[0]) / targetVPDRange[0]) * 100 \n    : ((currentVPD - targetVPDRange[1]) / targetVPDRange[1]) * 100);\n\n// Funktion zur Berechnung der notwendigen Anpassungen basierend auf der Differenz zum VPD-Zielbereich.\nfunction calculateAdjustment(currentVPD, targetVPDRange) {\n    // Wenn der aktuelle VPD unter dem minimalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu erhöhen.\n    if (currentVPD < targetVPDRange[0] - tolerance) {\n        node.warn(`Veggi-VPD:: ${currentVPD} zu gering. Erhöhe Temp oder verringere die Feuchtigkeit`);\n        node.warn(`Veggi % VPD Target --> ${percentDifference} %`);\n        return {\n            exhaustSpeed: \"increased\",      // Erhöht die Abluftgeschwindigkeit, um feuchte Luft herauszuziehen\n            humidifier: \"reduced\",          // Schaltet den Luftbefeuchter aus, um Feuchtigkeit zu reduzieren\n            dehumidifier: \"increased\",       // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            heaterFan: \"increased\",         // Schaltet den Beheizer an, um die Feuchtigkeit zu reduzieren und Temp zu erhöhen\n            coolerFan: \"reduced\",           // Schaltet den Kühler an, um die Feuchtigkeit zu erhöhen und Temp zu verringern\n            ventsALL: \"increased\",          // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsTopSpeed: \"increased\",     // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsDownSpeed: \"increased\",    // Erhöht die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"increased\"     // Erhöht die Lichtintensität, um die Temperatur zu steigern (wenn das die Temperatur beeinflusst)\n        };\n        \n    }\n    // Wenn der aktuelle VPD über dem maximalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu senken.\n    else if (currentVPD > targetVPDRange[1] + tolerance) {\n        node.warn(`Veggi-VPD: ${currentVPD} zu hoch. Verringere Temp oder erhöhe die Feuchtigkeit`);\n        node.warn(`Veggi % VPD Target --> ${percentDifference} %`);\n        return {\n            exhaustSpeed: \"reduced\",    // Reduziert die Abluftgeschwindigkeit, hält feuchte Luft im Raum\n            humidifier: \"increased\",    // Schaltet den Luftbefeuchter ein, um Feuchtigkeit zu erhöhen\n            dehumidifier: \"reduced\",    // Schaltet den Luftentfeuchter aus, um Feuchtigkeit zu erhöhen\n            heaterFan: \"reduced\",       // Schaltet den Heizer aus, um die Temperatur zu verringern\n            coolerFan: \"increased\",     // Schaltet den Kühler an, um die Temperatur zu verringern\n            ventsALL: \"reduced\",        // Reduziert die Geschwindigkeit der Belüftung, um mehr feuchte Luft zu halten\n            ventsTopSpeed: \"reduced\",   // Reduziert die Geschwindigkeit der oberen Belüftung\n            ventsDownSpeed: \"reduced\",  // Reduziert die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"reduced\"   // Verringert die Lichtintensität, um die Temperatur zu senken (wenn das die Temperatur beeinflusst)\n        };\n    }\n    // Wenn der VPD im Zielbereich liegt, sind keine Anpassungen erforderlich.\n    node.warn(`Veggi-VPD: ${currentVPD} im gewünschten Bereich`);\n    return {\n        exhaustSpeed: \"unchanged\",\n        humidifier: \"unchanged\",\n        dehumidifier: \"unchanged\",    \n        heaterFan: \"unchanged\",        \n        coolerFan: \"unchanged\",        \n        ventsALL: \"unchanged\",       \n        ventsTopSpeed: \"unchanged\",\n        ventsDownSpeed: \"unchanged\",\n        lightIntensity: \"unchanged\"\n    };\n}\n\n// Entscheidungslogik zur Steuerung der Umgebungsbedingungen, nutzt die calculateAdjustment Funktion.\nconst adjustments = calculateAdjustment(currentVPD, targetVPDRange);\n\n// Berechnung der prozentualen Abweichung und Hinzufügen zum Payload\nmsg.payload = {\n    exhaustSpeed: adjustments.exhaustSpeed,\n    humidifier: adjustments.humidifier,\n    dehumidifier: adjustments.dehumidifier,\n    heaterFan: adjustments.heaterFan,\n    coolerFan: adjustments.coolerFan,\n    ventsALL: adjustments.ventsALL,\n    ventsTopSpeed: adjustments.ventsTopSpeed,\n    ventsDownSpeed: adjustments.ventsDownSpeed,\n    lightIntensity: adjustments.lightIntensity,\n    percentDifference: percentDifference\n};\n\nmsg.perfektion = \"VPDActions\";\n\n// Rückgabe des modifizierten Payloads für weitere Verwendung im Flow.\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2270,"y":1040,"wires":[["61d3b1e40e8a29c1"]]},{"id":"61d3b1e40e8a29c1","type":"function","z":"3752d27d7587c957","g":"6dd36616a92a87a4","name":"Check What Do","func":"let outputs = [null, null, null, null, null, null, null, null, null];\n\nvar percentDifference = msg.payload.percentDifference\n\n// Abluft\nif (msg.payload.exhaustSpeed === \"unchanged\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"increased\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"reduced\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n}\n\n// Humidifier\nif (msg.payload.humidifier === \"unchanged\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"increased\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"reduced\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n}\n\n// Dehumidifier\nif (msg.payload.dehumidifier === \"unchanged\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"increased\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"reduced\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n}\n\n// HeaterFan\nif (msg.payload.heaterFan === \"unchanged\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"increased\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"reduced\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n}\n\n// CoolerFan\nif (msg.payload.coolerFan === \"unchanged\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"increased\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"reduced\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n}\n\n// LightIntensity\nif (msg.payload.lightIntensity === \"unchanged\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"increased\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"reduced\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n}\n\n// VentsALL\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"increased\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"reduced\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n}\n\n// VentsTopSpeed\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"increased\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"reduced\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n}\n\n// VentsDownSpeed\nif (msg.payload.ventsDownSpeed === \"unchanged\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"increased\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"reduced\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n}\n\n\n\nreturn outputs;\n","outputs":9,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2300,"y":1140,"wires":[["138c5865040f68a3"],["a47d72d27f76363f"],["3c8af30af5e1621b"],["15554571e89dc2d6"],["70c88c449da62baf"],["67864bb87afa5ecf"],["c07c821dd022801c"],["c07c821dd022801c"],["c07c821dd022801c"]]},{"id":"b7f3ca5cd432bab5","type":"poll-state","z":"3752d27d7587c957","g":"6dd36616a92a87a4","name":"currentVPD","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","updateInterval":"30","updateIntervalType":"num","updateIntervalUnits":"seconds","outputInitially":true,"outputOnChanged":true,"entityId":"sensor.vpdvegi","stateType":"num","ifState":"","ifStateType":"num","ifStateOperator":"is","outputs":1,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"currentVPD","valueType":"str"}],"x":1930,"y":1100,"wires":[["9ac8cca8bbd8cc26"]]},{"id":"df5e74c7f7712579","type":"api-current-state","z":"3752d27d7587c957","g":"6dd36616a92a87a4","name":"PlantState","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"select.veggiplantstageselect","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"targetVPD","valueType":"str"},{"property":"perfektion","propertyType":"msg","value":"targetVPD","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1940,"y":960,"wires":[["2afcbf200982e39e"]]},{"id":"f5fe0d1d1e07c638","type":"function","z":"3752d27d7587c957","g":"d14fa664d0413a5c","name":"Check What Do","func":"let outputs = [null, null, null, null, null, null, null, null, null];\n\nvar percentDifference = msg.payload.percentDifference\n\n// Abluft\nif (msg.payload.exhaustSpeed === \"unchanged\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"increased\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"reduced\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n}\n\n// Humidifier\nif (msg.payload.humidifier === \"unchanged\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"increased\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"reduced\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n}\n\n// Dehumidifier\nif (msg.payload.dehumidifier === \"unchanged\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"increased\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"reduced\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n}\n\n// HeaterFan\nif (msg.payload.heaterFan === \"unchanged\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"increased\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"reduced\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n}\n\n// CoolerFan\nif (msg.payload.coolerFan === \"unchanged\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"increased\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"reduced\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n}\n\n// LightIntensity\nif (msg.payload.lightIntensity === \"unchanged\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"increased\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"reduced\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n}\n\n// VentsALL\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"increased\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"reduced\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n}\n\n// VentsTopSpeed\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"increased\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"reduced\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n}\n\n// VentsDownSpeed\nif (msg.payload.ventsDownSpeed === \"unchanged\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"increased\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"reduced\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n}\n\n\n\nreturn outputs;\n","outputs":9,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2320,"y":1620,"wires":[["2236e755ab8aaf88"],["1bb3dfe91ae46289"],["b0f6711d749c2fd9"],["d01d126af31e972b"],["03c00d49f67a6651"],["a6c380ef2d09a380"],["eb30bf3343a316af"],["eb30bf3343a316af"],["eb30bf3343a316af"]]},{"id":"80b9933fc37e57a6","type":"function","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"Calc-Dewpoint","func":"// Funktion zur Berechnung des Taupunkts\nconst calculateDewPoint = (temperature, humidity) => {\n    const temp = parseFloat(temperature);\n    const hum = parseFloat(humidity);\n\n    if (isNaN(temp) || isNaN(hum)) {\n        return \"unavailable\";\n    }\n\n    const dewPoint = temp - ((100 - hum) / 5);\n    return parseFloat(dewPoint.toFixed(3));\n};\n\n// Beispielinput\nconst inputData = msg.payload;\n\n// Taupunkt berechnen\nconst temperature = parseFloat(inputData.AvgTemp);\nconst humidity = parseFloat(inputData.AvgHum);\nconst dewPoint = calculateDewPoint(temperature, humidity);\n\n// Taupunkt als Zahl zurückgeben\nmsg.payload = dewPoint;\nreturn msg\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1540,"y":180,"wires":[["91e45ccb74a35800"]]},{"id":"8d38db5fb60c01a9","type":"join","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1390,"y":180,"wires":[["80b9933fc37e57a6"]]},{"id":"91e45ccb74a35800","type":"ha-sensor","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"VeggiAVGDewPoint","entityConfig":"bb585a7e9b14d52e","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[{"property":"topic","propertyType":"msg","value":"DryTentDewPoint","valueType":"str"}],"x":1510,"y":240,"wires":[[]]},{"id":"9e679a1a5777db44","type":"join","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1150,"y":120,"wires":[["dd1ef50d40a2e8fa"]]},{"id":"6225380f219a0d41","type":"link in","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"link in 8","links":["f0449f704d2f7c8a"],"x":895,"y":80,"wires":[["18a47541cb144519"]]},{"id":"18a47541cb144519","type":"function","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"Select","func":"let outputs = [null, null];\n\nvar leafMode = msg.payload.GlobalLeafSet;\nvar leafOffSet = msg.payload.LeafOffset;\nvar flowerLeafOffset = msg.payload.FlowerLeafOffset;\nvar veggiLeafOffset = msg.payload.VeggiLeafOffset;\nvar groomLeafOffset = msg.payload.GRoomLeafOffset;\n\n// Logic to set new offset based on leaf mode\nif (leafMode === \"Default\") {\n    outputs[0] = { payload: leafOffSet, topic: \"LeafOffSet\" };\n} else if (leafMode === \"Custom\") {\n    outputs[1] = { payload: veggiLeafOffset, topic: \"LeafOffSet\" };\n}\n\nreturn outputs;  // Return the modified outputs array\n","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":990,"y":80,"wires":[["9e679a1a5777db44"],["9e679a1a5777db44"]]},{"id":"157fdad538b46545","type":"join","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"VpdNeeds","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":740,"y":100,"wires":[["623fb660cf22ede4"]]},{"id":"8efbc7331afa5d51","type":"link out","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"CropSteering","mode":"link","links":[],"x":1915,"y":260,"wires":[]},{"id":"f409e7c8d74372fc","type":"link in","z":"3752d27d7587c957","g":"d14fa664d0413a5c","name":"VPD-Perfektion","links":["68225790c0cb82bc"],"x":1825,"y":1400,"wires":[["d12e6221a51af518"]]},{"id":"95d7e3e76993cfba","type":"poll-state","z":"3752d27d7587c957","g":"d14fa664d0413a5c","name":"currentVPD","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","updateInterval":"30","updateIntervalType":"num","updateIntervalUnits":"seconds","outputInitially":true,"outputOnChanged":true,"entityId":"sensor.vpdvegi","stateType":"num","ifState":"","ifStateType":"num","ifStateOperator":"is","outputs":1,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"currentVPD","valueType":"str"}],"x":1970,"y":1540,"wires":[["2fc57bbeab61d575"]]},{"id":"2fc57bbeab61d575","type":"join","z":"3752d27d7587c957","g":"d14fa664d0413a5c","name":"VPDWish","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":2130,"y":1480,"wires":[["d630bdaf19da0309","01cd46160592fe21"]]},{"id":"d630bdaf19da0309","type":"function","z":"3752d27d7587c957","g":"d14fa664d0413a5c","name":"VPD Handler Array Value","func":"const tolerance = 0.00; // Toleranzwert für die VPD-Anpassung\n\n// Der aktuelle VPD-Wert wird aus dem Payload geholt und in eine Zahl umgewandelt.\nconst currentVPD = parseFloat(msg.payload.currentVPD);\n\n// Ziel-VPD-Bereich wird aus dem Payload geholt.\nconst targetVPDRange = msg.payload.targetVPD;\n\n// Logging der aktuellen VPD und Ziel-VPD-Bereich zur Überprüfung und Debugging.\nnode.warn(`Flower-VPD-Target: ${targetVPDRange}`);\n\n// Funktion zur Berechnung der notwendigen Anpassungen basierend auf der Differenz zum VPD-Zielbereich.\nfunction calculateAdjustment(currentVPD, targetVPDRange) {\n    // Wenn der aktuelle VPD unter dem minimalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu erhöhen.\n    if (currentVPD < targetVPDRange - tolerance) {\n        node.warn(`Flower-VPD: ${currentVPD} zu gering. Erhöhe Temp oder verringere die Feuchtigkeit.`);\n        return {\n            exhaustSpeed: \"increased\",      // Erhöht die Abluftgeschwindigkeit, um feuchte Luft herauszuziehen\n            humidifier: \"reduced\",          // Schaltet den Luftbefeuchter aus, um Feuchtigkeit zu reduzieren\n            dehumidifier: \"increased\",      // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            heaterFan: \"increased\",         // Schaltet den Beheizer an, um die Feuchtigkeit zu reduzieren und Temp zu erhöhen\n            coolerFan: \"reduced\",           // Schaltet den Beheizer an, um die Feuchtigkeit zu erhöhen und Temp zu verringern\n            ventsALL: \"increased\",          // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsTopSpeed: \"increased\",     // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsDownSpeed: \"increased\",    // Erhöht die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"increased\"     // Erhöht die Lichtintensität, um die Temperatur zu steigern (wenn das die Temperatur beeinflusst)\n        };\n    }\n    // Wenn der aktuelle VPD über dem maximalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu senken.\n    else if (currentVPD > targetVPDRange + tolerance) {\n        node.warn(`Flower-VPD: ${currentVPD} zu hoch. Verringere Temp oder erhöhe die Feuchtigkeit.`);\n        return {\n            exhaustSpeed: \"reduced\",    // Reduziert die Abluftgeschwindigkeit, hält feuchte Luft im Raum\n            humidifier: \"increased\",    // Schaltet den Luftbefeuchter ein, um Feuchtigkeit zu erhöhen\n            dehumidifier: \"reduced\",    // Schaltet den Luftentfeuchter aus, um Feuchtigkeit zu erhöhen\n            heaterFan: \"reduced\",       // Schaltet den Beheizer aus, um die Feuchtigkeit zu erhöhen und Temp zu senken\n            coolerFan: \"increased\",     // Schaltet den Kühler an, um die Feuchtigkeit zu erhöhen und Temp zu verringern\n            ventsALL: \"reduced\",        // Reduziert die Geschwindigkeit der Belüftung, um mehr feuchte Luft zu halten\n            ventsTopSpeed: \"reduced\",   // Reduziert die Geschwindigkeit der oberen Belüftung\n            ventsDownSpeed: \"reduced\",  // Reduziert die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"reduced\"   // Verringert die Lichtintensität, um die Temperatur zu senken (wenn das die Temperatur beeinflusst)\n        };\n    }\n    // Wenn der VPD im Zielbereich liegt, sind keine Anpassungen erforderlich.\n    node.warn(`Flower-VPD: ${currentVPD} im gewünschten Bereich.`);\n    return {\n        exhaustSpeed: \"unchanged\",\n        humidifier: \"unchanged\",\n        dehumidifier: \"unchanged\",\n        heaterFan: \"unchanged\",\n        coolerFan: \"unchanged\",\n        ventsALL: \"unchanged\",\n        ventsTopSpeed: \"unchanged\",\n        ventsDownSpeed: \"unchanged\",\n        lightIntensity: \"unchanged\"\n    };\n}\n\n// Funktion zur Berechnung der prozentualen Abweichung\nfunction calculatePercentDifference(currentVPD, targetVPD) {\n    return ((currentVPD - targetVPD) / targetVPD) * 100;\n}\n\n// Entscheidungslogik zur Steuerung der Umgebungsbedingungen, nutzt die calculateAdjustment Funktion.\nconst adjustments = calculateAdjustment(currentVPD, targetVPDRange);\nconst percentDifference = calculatePercentDifference(currentVPD, targetVPDRange);\n\nmsg.payload = {\n    exhaustSpeed: adjustments.exhaustSpeed,\n    humidifier: adjustments.humidifier,\n    dehumidifier: adjustments.dehumidifier,\n    heaterFan: adjustments.heaterFan,\n    coolerFan: adjustments.coolerFan,\n    ventsALL: adjustments.ventsALL,\n    ventsTopSpeed: adjustments.ventsTopSpeed,\n    ventsDownSpeed: adjustments.ventsDownSpeed,\n    lightIntensity: adjustments.lightIntensity,\n    percentDifference: percentDifference.toFixed(0) // Prozentuale Abweichung auf 2 Dezimalstellen gerundet\n};\n\nmsg.perfektion = \"VPDActions\";\n// Rückgabe des modifizierten Payloads für weitere Verwendung im Flow.\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2350,"y":1480,"wires":[["f5fe0d1d1e07c638"]]},{"id":"d12e6221a51af518","type":"api-current-state","z":"3752d27d7587c957","g":"d14fa664d0413a5c","name":"PlantState","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"select.veggiplantstageselect","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"targetVPD","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1970,"y":1400,"wires":[["2fc57bbeab61d575"]]},{"id":"01cd46160592fe21","type":"debug","z":"3752d27d7587c957","g":"d14fa664d0413a5c","name":"debug 181","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2210,"y":1400,"wires":[]},{"id":"ff0f10e0360a6aef","type":"function","z":"3752d27d7587c957","name":"Sort Sensor Types","func":"let data = msg.payload;\n\n// Arrays für verschiedene Sensortypen initialisieren\nlet wish = [];\nlet temperatures = [];\nlet humidity = [];\nlet dewpoints = [];\nlet moisture = [];\nlet pressures = [];\nlet battery = [];\nlet power = [];\nlet co2 = [];\nlet lumen = [];\nlet conductivity = [];\nlet switches = [];\nlet dutyCycleExhaust = [];\nlet vents = [];\nlet humidifier = [];\nlet dehumidifier = [];\nlet root = [];\nlet cooler = [];\nlet heater = [];\nlet pump = [];\n\n// Durchlaufe alle Schlüssel im data-Objekt und sortiere sie nach bestimmten Sensortypen\nfor (let key in data) {\n    if (data.hasOwnProperty(key)) {\n        let entity_id = key.toLowerCase();\n        let entity = { entity_id: key, value: data[key] };\n\n        // Prioritize to ensure it is captured first\n        if (entity_id.includes('wish') || entity_id.includes('avg') || entity_id.includes('target')) {\n            wish.push(entity);\n        } else if (entity_id.includes('root') || entity_id.includes('wurzel')) {\n            root.push(entity);\n        }\n        // ENVIORMENT\n        else if (entity_id.includes('temperature') || entity_id.includes('tempe')) {\n            temperatures.push(entity);\n        } else if (entity_id.includes('humidity') || entity_id.includes('feuchtigkeit') || entity_id.includes('rh')) {\n            humidity.push(entity);\n        } else if (entity_id.includes('dewpoint') || entity_id.includes('dew')) {\n            dewpoints.push(entity);\n        } else if (entity_id.includes('moisture') || entity_id.includes('mois')) {\n            moisture.push(entity);\n        } else if (entity_id.includes('pressure') || entity_id.includes('press')) {\n            pressures.push(entity);\n        } else if (entity_id.includes('carbondioxide') || entity_id.includes('co2') || entity_id.includes('carbon')) {\n            co2.push(entity);\n        } else if (entity_id.includes('conductivity')) {\n            conductivity.push(entity);\n        } else if (entity_id.includes('illuminance') || entity_id.includes('light') || entity_id.includes('licht')) {\n            lumen.push(entity);\n        }\n        // Devices\n        else if (entity_id.includes('dehumidifier') || entity_id.includes('entfeuchter')) {\n            dehumidifier.push(entity);\n        } else if (entity_id.includes('humidifier') || entity_id.includes('befeuchter')) {\n            humidifier.push(entity);\n        } else if (entity_id.includes('cooler') || entity_id.includes('klima')) {\n            cooler.push(entity);\n        } else if (entity_id.includes('heater') || entity_id.includes('Heizung')) {\n            heater.push(entity);\n        } else if (entity_id.includes('pump') || entity_id.includes('pumping')) {\n            pump.push(entity);\n        }else if (entity_id.includes('ruck') || entity_id.includes('airctr') || entity_id.includes('exhaust') || entity_id.includes('abluft')) {\n            dutyCycleExhaust.push(entity);\n        } else if (entity_id.includes('vent')) {\n            vents.push(entity);\n        } else if (entity_id.includes('switch')) {\n            switches.push(entity);\n        } else if (entity_id.includes('power') || entity_id.includes('energy')) {\n            power.push(entity);\n        }\n\n        // ADDONS\n        else if (entity_id.includes('battery') || entity_id.includes('batt')) {\n            battery.push(entity);\n        }\n    }\n}\n\n// Nachrichtenausgabe auf verschiedenen Outputs\nreturn [\n    // ENVIORMENT\n    { payload: wish, topic: 'Wish' },\n    { payload: temperatures, topic: 'temperature' },\n    { payload: humidity, topic: 'humidity' },\n    { payload: dewpoints, topic: 'dewpoint' },\n    { payload: moisture, topic: 'moisture' },\n    { payload: root, topic: 'roottemp' },\n    { payload: conductivity, topic: 'conductivity' },\n    { payload: pressures, topic: 'pressure' },\n    { payload: co2, topic: 'carbon_dioxide' },\n    { payload: lumen, topic: 'illuminance' },\n    // DEVICEINFO\n    { payload: battery, topic: 'battery' },\n    { payload: power, topic: 'power' },\n    // DEVICES\n    { payload: switches, topic: 'switch' },\n    { payload: vents, topic: 'Vents' },\n    { payload: dutyCycleExhaust, topic: 'Exhaust' },\n    { payload: humidifier, topic: 'humidifier' },\n    { payload: dehumidifier, topic: 'dehumidifier' },\n    { payload: cooler, topic: 'cooler' },\n    { payload: heater, topic: 'heater' },\n    { payload: pump, topic: 'pump' }\n];\n","outputs":20,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":190,"y":240,"wires":[["4699a341c0e525a1"],["d6b7596272b92fd6"],["a8d42f450f5ec3bf"],["82b3968d5e1d0b1a"],["716d0ea3761ab229"],["455ed3c6930adfe0"],["1beade2ff5ca5212"],["3b25550daaa0d938"],["628eb0efdd45d47f"],["02199cb92b1a3f32"],["85a703016b798065"],["edeead31dd6a80b8"],["8c0773acdba0ce48"],["3aa5bb36956938c6"],["724dfeb83c172e7d"],["bd65fa0bcf194b27"],["7e5df50c6683b600"],["7c35ebcfdd9a14f4"],["856cb32d12870716"],["aca8b2391f7c4b40"]]},{"id":"d0fa75ce32c2b2ec","type":"debug","z":"3752d27d7587c957","name":"Temperatures","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":460,"y":120,"wires":[]},{"id":"37a0cd0ecce69585","type":"debug","z":"3752d27d7587c957","name":"Humidity","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":440,"y":160,"wires":[]},{"id":"b01cc8b798cf40db","type":"debug","z":"3752d27d7587c957","name":"Dewpoints","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":200,"wires":[]},{"id":"6e29c36400302613","type":"debug","z":"3752d27d7587c957","name":"Pressures","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":440,"y":360,"wires":[]},{"id":"c8ac68f99c237d2c","type":"debug","z":"3752d27d7587c957","name":"Battery","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":440,"y":500,"wires":[]},{"id":"c82ef6e4f9fa3159","type":"debug","z":"3752d27d7587c957","name":"Power","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":430,"y":540,"wires":[]},{"id":"eb850d44242cc6c6","type":"debug","z":"3752d27d7587c957","name":"CO2","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":430,"y":400,"wires":[]},{"id":"3b9ddcea592dfa6c","type":"debug","z":"3752d27d7587c957","name":"Light","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":430,"y":440,"wires":[]},{"id":"472539b957b3d55c","type":"debug","z":"3752d27d7587c957","name":"Switches","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":440,"y":600,"wires":[]},{"id":"38cd4d82cd0fd287","type":"debug","z":"3752d27d7587c957","name":"Conductivity","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":320,"wires":[]},{"id":"a0b65bcedc96a0fe","type":"debug","z":"3752d27d7587c957","name":"Moisture","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":440,"y":240,"wires":[]},{"id":"fea31e55b74e768b","type":"debug","z":"3752d27d7587c957","name":"Exhasut","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":440,"y":680,"wires":[]},{"id":"a02e58aa1b5be4d9","type":"debug","z":"3752d27d7587c957","name":"WISH","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":430,"y":80,"wires":[]},{"id":"65ac2cfaa7ba045c","type":"debug","z":"3752d27d7587c957","name":"Humidifier","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":720,"wires":[]},{"id":"cab823730c4a70a7","type":"debug","z":"3752d27d7587c957","name":"Vents","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":430,"y":640,"wires":[]},{"id":"42ff7b7243adac0b","type":"debug","z":"3752d27d7587c957","name":"RootTemp","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":280,"wires":[]},{"id":"89391fcf7fa2d9dc","type":"debug","z":"3752d27d7587c957","name":"Dehumidifier","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":760,"wires":[]},{"id":"d1ba22a962408cbd","type":"link out","z":"3752d27d7587c957","g":"8ecdceb2353f84e1","name":"ExhaustVeggiON","mode":"link","links":["09f51aa364202656"],"x":4095,"y":540,"wires":[]},{"id":"068b8e7a89eef1ba","type":"link out","z":"3752d27d7587c957","g":"8ecdceb2353f84e1","name":"ExhaustVeggiOFF","mode":"link","links":["95404f058f30b296"],"x":4135,"y":580,"wires":[]},{"id":"669616aead0ef19f","type":"link out","z":"3752d27d7587c957","name":"Dehumidifier","mode":"link","links":["9743d50e741ac49e"],"x":575,"y":760,"wires":[]},{"id":"5f82452669bf7cb1","type":"link out","z":"3752d27d7587c957","name":"Vents","mode":"link","links":[],"x":575,"y":640,"wires":[]},{"id":"9ee872c8de807c68","type":"debug","z":"3752d27d7587c957","g":"8ecdceb2353f84e1","name":"debug 182","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":3910,"y":540,"wires":[]},{"id":"f81d8c962ee7f1d5","type":"join","z":"3752d27d7587c957","g":"ecb02d38c4118377","name":"DehumidifierData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":3650,"y":1020,"wires":[["ba354dc96e68c583"]]},{"id":"9743d50e741ac49e","type":"link in","z":"3752d27d7587c957","g":"ecb02d38c4118377","name":"Dehumidifier","links":["669616aead0ef19f"],"x":3585,"y":960,"wires":[["f81d8c962ee7f1d5"]]},{"id":"ba354dc96e68c583","type":"function","z":"3752d27d7587c957","g":"ecb02d38c4118377","name":"DehumidifierSetup","func":"let outputs = [null, null, null];\n\nlet dehumidifierState = null;\n\n// Schleife, um den Zustand des Dehumidifier zu finden\nfor (let i = 0; i < msg.payload.dehumidifier.length; i++) {\n    if (msg.payload.dehumidifier[i].entity_id.includes('dehumidifier')) {\n        dehumidifierState = msg.payload.dehumidifier[i].value;\n        break;\n    }\n}\n\n// Dehumidifier starten\nif (msg.payload.dehumidifierSet.value === \"increased\" && dehumidifierState === \"off\") {\n    outputs[0] = { payload: \"Starte Dehumidifier\", topic: \"Start\" };\n}\n\n// Dehumidifier stoppen\nif (msg.payload.dehumidifierSet.value === \"reduced\" && dehumidifierState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Dehumidifier\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.dehumidifierSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Dehumidifier unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3870,"y":1020,"wires":[["09de5509dbd47ef7"],["fa4182f14e046b55"],["3905f327349462e9"],[]]},{"id":"2fe236b6ecf4be1a","type":"join","z":"3752d27d7587c957","g":"082054cd4a9a0dc1","name":"HeaterData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":3630,"y":1400,"wires":[["dec304f413eef635"]]},{"id":"548fd1b0ea533144","type":"link in","z":"3752d27d7587c957","g":"082054cd4a9a0dc1","name":"link in 37","links":["9cebbdc13963270f"],"x":3565,"y":1340,"wires":[["2fe236b6ecf4be1a"]]},{"id":"dec304f413eef635","type":"function","z":"3752d27d7587c957","g":"082054cd4a9a0dc1","name":"HeaterSetup","func":"let outputs = [null, null, null];\n\nlet heaterState = null;\n\n// Schleife, um den Zustand des Heater zu finden\nfor (let i = 0; i < msg.payload.heater.length; i++) {\n    if (msg.payload.heater[i].entity_id.includes('heater')) {\n        heaterState = msg.payload.heater[i].value;\n        break;\n    }\n}\n\n// Heater starten\nif (msg.payload.heaterSet.value === \"increased\" && heaterState === \"off\") {\n    outputs[0] = { payload: \"Start Heater\", topic: \"Start\" };\n}\n\n// Heater stoppen\nif (msg.payload.heaterSet.value === \"reduced\" && heaterState === \"on\") {\n    outputs[1] = { payload: \"Stop Heater\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.heaterSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Heater unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3830,"y":1400,"wires":[["1c021da55d25e11a"],["7fda7edaf7e5818c"],["4c6249a89c9f8505"],[]]},{"id":"f0d2d59e9fb71a11","type":"join","z":"3752d27d7587c957","g":"d634b49c93972c8c","name":"CoolerData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":3690,"y":1200,"wires":[["4f8602da2d439cb1"]]},{"id":"695c16207afdcdaa","type":"link in","z":"3752d27d7587c957","g":"d634b49c93972c8c","name":"link in 38","links":["53744e9d23f8df14"],"x":3625,"y":1140,"wires":[["f0d2d59e9fb71a11"]]},{"id":"4f8602da2d439cb1","type":"function","z":"3752d27d7587c957","g":"d634b49c93972c8c","name":"CoolerSetup","func":"let outputs = [null, null, null];\n\nlet coolerState = null;\n\n// Schleife, um den Zustand des Cooler zu finden\nfor (let i = 0; i < msg.payload.cooler.length; i++) {\n    if (msg.payload.cooler[i].entity_id.includes('cooler')) {\n        coolerState = msg.payload.cooler[i].value;\n        break;\n    }\n}\n\n// Cooler starten\nif (msg.payload.coolerSet.value === \"increased\" && coolerState === \"off\") {\n    outputs[0] = { payload: \"Start Cooler\", topic: \"Start\" };\n}\n\n// Cooler stoppen\nif (msg.payload.coolerSet.value === \"reduced\" && coolerState === \"on\") {\n    outputs[1] = { payload: \"Stop Cooler\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.coolerSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Cooler unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3890,"y":1200,"wires":[["ccb808bba5fe34af"],["1fc079df5d0649cc"],["795027dc6079bbcd"],[]]},{"id":"bf178d140cd3a947","type":"join","z":"3752d27d7587c957","g":"c91e1e1018209c58","name":"LightData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":3670,"y":1720,"wires":[["b05f07a1e755da48"]]},{"id":"0970ba51c7fda08e","type":"link in","z":"3752d27d7587c957","g":"c91e1e1018209c58","name":"link in 39","links":[],"x":3615,"y":1660,"wires":[["bf178d140cd3a947"]]},{"id":"b05f07a1e755da48","type":"function","z":"3752d27d7587c957","g":"c91e1e1018209c58","name":"LightSetup","func":"let outputs = [null, null, null];\n\nlet lightState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.light.length; i++) {\n    if (msg.payload.light[i].entity_id.includes('light')) {\n        lightState = msg.payload.light[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.lightSet.value === \"increased\" && lightState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.lightSet.value === \"reduced\" && lightState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.lightSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Befeuchter unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3870,"y":1720,"wires":[["dad47ea322ec8b37"],["28c6b5d7d65acfac"],["bc2bedc4446fe072"],[]]},{"id":"15db15c7e2de4370","type":"join","z":"3752d27d7587c957","g":"9309ba9f15bdd552","name":"VentsData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"4","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"num","reduceFixup":"","x":3710,"y":1900,"wires":[["13559ea87af327af"]]},{"id":"f8f91e027dfc8333","type":"link in","z":"3752d27d7587c957","g":"9309ba9f15bdd552","name":"link in 40","links":[],"x":3665,"y":1840,"wires":[["15db15c7e2de4370"]]},{"id":"13559ea87af327af","type":"function","z":"3752d27d7587c957","g":"9309ba9f15bdd552","name":"VentsSetup","func":"let outputs = [null, null, null];\n\nlet ventsState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.vents.length; i++) {\n    if (msg.payload.vents[i].entity_id.includes('vents')) {\n        ventsState = msg.payload.vents[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.ventsSet.value === \"increased\" && ventsState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.ventsSet.value === \"reduced\" && ventsState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.ventsSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Befeuchter unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3910,"y":1900,"wires":[["bda808f336509948"],["64e65d877d2f6338"],["61af123542cf6443"],[]]},{"id":"09de5509dbd47ef7","type":"link out","z":"3752d27d7587c957","g":"ecb02d38c4118377","name":"VeggiDefhumidiferON","mode":"link","links":["4c88812165b09b0e"],"x":4035,"y":980,"wires":[]},{"id":"fa4182f14e046b55","type":"link out","z":"3752d27d7587c957","g":"ecb02d38c4118377","name":"VeggiDefhumidiferOFF","mode":"link","links":["2b8233e8bb0edf47"],"x":4095,"y":1000,"wires":[]},{"id":"3905f327349462e9","type":"link out","z":"3752d27d7587c957","g":"ecb02d38c4118377","name":"link out 15","mode":"link","links":[],"x":4135,"y":1040,"wires":[]},{"id":"1c021da55d25e11a","type":"link out","z":"3752d27d7587c957","g":"082054cd4a9a0dc1","name":"VeggiHeaterON","mode":"link","links":["1be287d67694b336"],"x":4015,"y":1360,"wires":[]},{"id":"7fda7edaf7e5818c","type":"link out","z":"3752d27d7587c957","g":"082054cd4a9a0dc1","name":"VeggiHeaterOFF","mode":"link","links":["593f0c0e52db1610"],"x":4075,"y":1380,"wires":[]},{"id":"4c6249a89c9f8505","type":"link out","z":"3752d27d7587c957","g":"082054cd4a9a0dc1","name":"link out 27","mode":"link","links":[],"x":4115,"y":1420,"wires":[]},{"id":"ccb808bba5fe34af","type":"link out","z":"3752d27d7587c957","g":"d634b49c93972c8c","name":"VeggiCoolerON","mode":"link","links":["cc608f4009e112e6"],"x":4085,"y":1160,"wires":[]},{"id":"1fc079df5d0649cc","type":"link out","z":"3752d27d7587c957","g":"d634b49c93972c8c","name":"VeggiCoolerOFF","mode":"link","links":["eabb7d61eeb2383f"],"x":4145,"y":1180,"wires":[]},{"id":"795027dc6079bbcd","type":"link out","z":"3752d27d7587c957","g":"d634b49c93972c8c","name":"link out 30","mode":"link","links":[],"x":4185,"y":1220,"wires":[]},{"id":"dad47ea322ec8b37","type":"link out","z":"3752d27d7587c957","g":"c91e1e1018209c58","name":"link out 31","mode":"link","links":[],"x":4075,"y":1680,"wires":[]},{"id":"28c6b5d7d65acfac","type":"link out","z":"3752d27d7587c957","g":"c91e1e1018209c58","name":"link out 32","mode":"link","links":[],"x":4135,"y":1700,"wires":[]},{"id":"bc2bedc4446fe072","type":"link out","z":"3752d27d7587c957","g":"c91e1e1018209c58","name":"link out 33","mode":"link","links":[],"x":4175,"y":1740,"wires":[]},{"id":"bda808f336509948","type":"link out","z":"3752d27d7587c957","g":"9309ba9f15bdd552","name":"link out 34","mode":"link","links":[],"x":4095,"y":1860,"wires":[]},{"id":"64e65d877d2f6338","type":"link out","z":"3752d27d7587c957","g":"9309ba9f15bdd552","name":"link out 35","mode":"link","links":[],"x":4155,"y":1880,"wires":[]},{"id":"61af123542cf6443","type":"link out","z":"3752d27d7587c957","g":"9309ba9f15bdd552","name":"link out 36","mode":"link","links":[],"x":4195,"y":1920,"wires":[]},{"id":"317e9ec8876608ff","type":"link out","z":"3752d27d7587c957","g":"2651868e58bb1778","name":"link out 124","mode":"link","links":[],"x":4095,"y":860,"wires":[]},{"id":"fb9d3843392773d1","type":"link out","z":"3752d27d7587c957","g":"2651868e58bb1778","name":"VeggiHumidifierON","mode":"link","links":["1be287d67694b336"],"x":4025,"y":800,"wires":[]},{"id":"d2b8b521e6d704e6","type":"link out","z":"3752d27d7587c957","g":"2651868e58bb1778","name":"VeggiHumidifierOFF","mode":"link","links":["7deddc1b5d29a51e"],"x":4085,"y":820,"wires":[]},{"id":"61d447a8dd2039a2","type":"ha-sensor","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"VeggiCO2","entityConfig":"3bf46a3f240b688e","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1160,"y":620,"wires":[[]]},{"id":"883e53c619710a5c","type":"function","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"CO2-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Finden des Objekts, das eine der gewünschten Teilzeichenfolgen im entity_id enthält\nconst co2Object = sensors.find(sensor => \n    sensor.entity_id.includes(\"carbon\") || \n    sensor.entity_id.includes(\"carbondioxide\")\n);\n\n// Extrahieren des Wertes, wenn das Objekt gefunden wurde, sonst null setzen\nconst co2Value = co2Object ? co2Object.value : null;\n\n// Ausgabe des CO2-Wertes zur Überprüfung\n// node.warn(`CO2-Wert: ${co2Value}`);\n\n// Optional: Speichern des CO2-Wertes in msg.co2Value oder einem anderen Feld zur weiteren Verwendung\nmsg.payload = co2Value;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":880,"y":620,"wires":[["61d447a8dd2039a2"]]},{"id":"d63dfedba31e6c03","type":"function","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"Pressure-Get","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Luftdruck-Wertes\nfunction findPressureValue(sensors) {\n    const pressureObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"pressure\") ||\n        sensor.entity_id.includes(\"barometer\") ||\n        sensor.entity_id.includes(\"luftdruck\")\n    );\n    return pressureObject ? pressureObject.value : null;\n}\n\n// Finden des Luftdruck-Wertes\nconst pressureValue = findPressureValue(sensors);\n\n// Ausgabe des Luftdruck-Wertes zur Überprüfung\n// node.warn(`Luftdruck-Wert: ${pressureValue}`);\n\n// Optional: Speichern des Luftdruck-Wertes in msg zur weiteren Verwendung\nmsg.payload = pressureValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":890,"y":560,"wires":[["921cb4af51950c56"]]},{"id":"d667e426b36be2c9","type":"function","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"Moisture-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Moisture-Wertes\nfunction findMoistureValue(sensors) {\n    const moistureObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"moisture\") ||\n        sensor.entity_id.includes(\"humidity\") ||\n        sensor.entity_id.includes(\"wetness\")\n    );\n    return moistureObject ? moistureObject.value : null;\n}\n\n// Finden des Moisture-Wertes\nconst moistureValue = findMoistureValue(sensors);\n\n// Ausgabe des Moisture-Wertes zur Überprüfung\n// node.warn(`Moisture-Wert: ${moistureValue}`);\n\n// Optional: Speichern des Moisture-Wertes in msg zur weiteren Verwendung\nmsg.payload = moistureValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":900,"y":380,"wires":[["0a775ad93eb0201a"]]},{"id":"03170a055dee0c18","type":"function","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"SOIL-EC-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des EC- oder Conductivity-Wertes\nfunction findECValue(sensors) {\n    const ecObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"ec\") ||\n        sensor.entity_id.includes(\"conductivity\")\n    );\n    return ecObject ? ecObject.value : null;\n}\n\n// Finden des EC- oder Conductivity-Wertes\nconst ecValue = findECValue(sensors);\n\n// Ausgabe des EC- oder Conductivity-Wertes zur Überprüfung\n// node.warn(`EC-Wert: ${ecValue}`);\n\n// Optional: Speichern des EC- oder Conductivity-Wertes in msg zur weiteren Verwendung\nmsg.payload = ecValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":900,"y":500,"wires":[["0b48f34fdeeadbd4"]]},{"id":"bb53d025f4d0e3fa","type":"function","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"PowerConsum-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Stromverbrauch-Wertes\nfunction findPowerConsumptionValue(sensors) {\n    const powerConsumptionObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"energy_power\") || \n        sensor.entity_id.includes(\"consumption\") || \n        sensor.entity_id.includes(\"watt\") || \n        sensor.entity_id.includes(\"electricity\")\n    );\n    return powerConsumptionObject ? powerConsumptionObject.value : null;\n}\n\n// Finden des Stromverbrauch-Wertes\nconst powerConsumptionValue = findPowerConsumptionValue(sensors);\n\n// Ausgabe des Stromverbrauch-Wertes zur Überprüfung\n// node.warn(`Stromverbrauch-Wert: ${powerConsumptionValue}`);\n\n// Optional: Speichern des Stromverbrauch-Wertes in msg zur weiteren Verwendung\nmsg.payload = powerConsumptionValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":920,"y":800,"wires":[["a968aa9eccbf2d79"]]},{"id":"b0d376be03892225","type":"function","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"Battery-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Batterie-Wertes\nfunction findBatteryValue(sensors) {\n    const batteryObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"battery\") || \n        sensor.entity_id.includes(\"batt\")\n    );\n    return batteryObject ? batteryObject.value : null;\n}\n\n// Finden des Batterie-Wertes\nconst batteryValue = findBatteryValue(sensors);\n\n// Ausgabe des Batterie-Wertes zur Überprüfung\n// node.warn(`Batterie-Wert: ${batteryValue}`);\n\n// Optional: Speichern des Batterie-Wertes in msg zur weiteren Verwendung\nmsg.payload = batteryValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":890,"y":740,"wires":[["32558d701303ef20"]]},{"id":"71bbf76e3992257f","type":"function","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"Root-Temp-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Root-Temperature-Wertes\nfunction findRootTempValue(sensors) {\n    const rootTempObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"root_temp\") || \n        sensor.entity_id.includes(\"roottemperature\") || \n        sensor.entity_id.includes(\"soiltemp\") || \n        sensor.entity_id.includes(\"root_temp\")\n    );\n    return rootTempObject ? rootTempObject.value : null;\n}\n\n// Finden des Root-Temperature-Wertes\nconst rootTempValue = findRootTempValue(sensors);\n\n// Ausgabe des Root-Temperature-Wertes zur Überprüfung\n// node.warn(`Root-Temperature-Wert: ${rootTempValue}`);\n\n// Optional: Speichern des Root-Temperature-Wertes in msg zur weiteren Verwendung\nmsg.payload = rootTempValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":900,"y":440,"wires":[["c3cdc89fea6e66dd"]]},{"id":"b2cb416cb6617c7b","type":"function","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"Exhaust-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Abluft-Zustands\nfunction findExhaustState(sensors) {\n    const exhaustStateObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"exhaust\") ||\n        sensor.entity_id.includes(\"abluft\") ||\n        sensor.entity_id.includes(\"ventilation\") ||\n        sensor.entity_id.includes(\"fan\")\n    );\n    return exhaustStateObject ? exhaustStateObject.value : null;\n}\n\n// Funktion zum Finden des Dutycycle-Wertes\nfunction findDutyCycleValue(sensors) {\n    const dutyCycleObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"airctr\") ||\n        sensor.entity_id.includes(\"dutycycle\") ||\n        sensor.entity_id.includes(\"cycle\")\n    );\n    return dutyCycleObject ? dutyCycleObject.value : null;\n}\n\n// Finden des Abluft-Zustands\nconst exhaustState = findExhaustState(sensors);\n\n// Finden des Dutycycle-Wertes\nconst dutyCycleValue = findDutyCycleValue(sensors);\n\n// Ausgabe der Werte zur Überprüfung\n// node.warn(`Abluft-Zustand: ${exhaustState}`);\n// node.warn(`Dutycycle-Wert: ${dutyCycleValue}`);\n\n// Setzen der Outputs\nlet outputs = [\n    { payload: exhaustState }, // Output 1: Zustand (on/off)\n    { payload: dutyCycleValue } // Output 2: Dutycycle\n];\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn outputs;\n","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":890,"y":980,"wires":[["41834d3741e6a772"],["20ed8422cf5c2d23"]]},{"id":"3f02c178f632f85b","type":"function","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"Humidifier-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Humidifier-Wertes\nfunction findHumidifierValue(sensors) {\n    const humidifierObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"humidifier\") || \n        sensor.entity_id.includes(\"humidity\")\n    );\n    return humidifierObject ? humidifierObject.value : null;\n}\n\n// Finden des Humidifier-Wertes\nconst humidifierValue = findHumidifierValue(sensors);\n\n// Ausgabe des Humidifier-Wertes zur Überprüfung\n// node.warn(`Humidifier-Wert: ${humidifierValue}`);\n\n// Optional: Speichern des Humidifier-Wertes in msg zur weiteren Verwendung\nmsg.payload = humidifierValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":900,"y":1040,"wires":[[]]},{"id":"921cb4af51950c56","type":"ha-sensor","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"VeggiPressure","entityConfig":"6aeda981e19a8694","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1180,"y":560,"wires":[[]]},{"id":"0a775ad93eb0201a","type":"ha-sensor","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"VeggiMoisture","entityConfig":"fdc22e77b0c5dbe3","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1180,"y":380,"wires":[["1124f430fe2c02cc"]]},{"id":"32558d701303ef20","type":"ha-sensor","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"VeggiBatterieDevices","entityConfig":"3f8ce21d326f8670","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1200,"y":740,"wires":[[]]},{"id":"c3cdc89fea6e66dd","type":"ha-sensor","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"VeggiRootTemp","entityConfig":"68810d13c01a98ba","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1180,"y":440,"wires":[[]]},{"id":"0b48f34fdeeadbd4","type":"ha-sensor","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"VeggiEC","entityConfig":"0a689f654f6cfecb","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1160,"y":500,"wires":[["1124f430fe2c02cc"]]},{"id":"09388aae1c81e85e","type":"function","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"LightIntense_GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Licht-Wertes (Lumen oder Lux)\nfunction findLightValue(sensors) {\n    const lightObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"lumen\") || \n        sensor.entity_id.includes(\"lux\") || \n        sensor.entity_id.includes(\"light\") ||\n        sensor.entity_id.includes(\"illuminance\")\n    );\n    return lightObject ? lightObject.value : null;\n}\n\n// Finden des Licht-Wertes\nconst lightValue = findLightValue(sensors);\n\n// Ausgabe des Licht-Wertes zur Überprüfung\n// node.warn(`Licht-Wert: ${lightValue}`);\n\n// Optional: Speichern des Licht-Wertes in msg zur weiteren Verwendung\nmsg.payload = lightValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":910,"y":680,"wires":[["502bf442461b61cd"]]},{"id":"502bf442461b61cd","type":"ha-sensor","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"VeggiLightIntense","entityConfig":"d3a9b3e22cb3c349","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1190,"y":680,"wires":[[]]},{"id":"42ab596fae23920e","type":"function","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"Switch-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Switch-Wertes\nfunction findSwitchValue(sensors) {\n    const switchObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"switch\") || \n        sensor.entity_id.includes(\"toggle\")\n    );\n    return switchObject ? switchObject.state : null;\n}\n\n// Finden des Switch-Wertes\nconst switchValue = findSwitchValue(sensors);\n\n// Ausgabe des Switch-Wertes zur Überprüfung\n// node.warn(`Switch-Wert: ${switchValue}`);\n\n// Optional: Speichern des Switch-Wertes in msg zur weiteren Verwendung\nmsg.payload = switchValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":890,"y":860,"wires":[[]]},{"id":"a968aa9eccbf2d79","type":"ha-sensor","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"VeggiPowerConsume","entityConfig":"cd5681d147a94f3e","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1200,"y":800,"wires":[[]]},{"id":"409a33744f657fd1","type":"function","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"Vents-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Ventilation-Wertes\nfunction findVentilationValue(sensors) {\n    const ventilationObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"ventilation\") ||\n        sensor.entity_id.includes(\"fan\") ||\n        sensor.entity_id.includes(\"exhaust\") ||\n        sensor.entity_id.includes(\"airflow\")\n    );\n    return ventilationObject ? ventilationObject.value : null;\n}\n\n// Finden des Ventilation-Wertes\nconst ventilationValue = findVentilationValue(sensors);\n\n// Ausgabe des Ventilation-Wertes zur Überprüfung\n// node.warn(`Ventilation-Wert: ${ventilationValue}`);\n\n// Optional: Speichern des Ventilation-Wertes in msg zur weiteren Verwendung\nmsg.payload = ventilationValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":890,"y":920,"wires":[[]]},{"id":"2ec8b29e881e1150","type":"function","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"Dehumidifier-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Dehumidifier-Wertes\nfunction findDehumidifierValue(sensors) {\n    const dehumidifierObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"dehumidifier\") || \n        sensor.entity_id.includes(\"humidity\")\n    );\n    return dehumidifierObject ? dehumidifierObject.value : null;\n}\n\n// Finden des Dehumidifier-Wertes\nconst dehumidifierValue = findDehumidifierValue(sensors);\n\n// Ausgabe des Dehumidifier-Wertes zur Überprüfung\n// node.warn(`Dehumidifier-Wert: ${dehumidifierValue}`);\n\n// Optional: Speichern des Dehumidifier-Wertes in msg zur weiteren Verwendung\nmsg.payload = dehumidifierValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":910,"y":1100,"wires":[[]]},{"id":"20ed8422cf5c2d23","type":"ha-sensor","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"VeggiExhaustDuty","entityConfig":"ba8566e09903f293","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1190,"y":1000,"wires":[[]]},{"id":"41834d3741e6a772","type":"ha-sensor","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"VeggiExhaustState","entityConfig":"c8a22cfdbd11971c","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1190,"y":940,"wires":[[]]},{"id":"b15af587e5fdd218","type":"inject","z":"3752d27d7587c957","g":"fb83b7a26af05fdc","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"300","crontab":"","once":true,"onceDelay":"15","topic":"","payload":"","payloadType":"date","x":2150,"y":160,"wires":[["7cea495731d0be12"]]},{"id":"0249561a3fec1f56","type":"ha-sensor","z":"3752d27d7587c957","g":"fb83b7a26af05fdc","name":"DLI","entityConfig":"a5f1cc19016994d1","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":2750,"y":220,"wires":[["fa1ac2acc7e0b33d"]]},{"id":"4514863886914953","type":"ha-sensor","z":"3752d27d7587c957","g":"fb83b7a26af05fdc","name":"PPFDVegi","entityConfig":"351be2fcdaadc9bd","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":2760,"y":120,"wires":[["fa1ac2acc7e0b33d"]]},{"id":"fa1ac2acc7e0b33d","type":"debug","z":"3752d27d7587c957","g":"fb83b7a26af05fdc","name":"debug 51","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2920,"y":160,"wires":[]},{"id":"d6870c9a6b9ceba0","type":"function","z":"3752d27d7587c957","g":"fb83b7a26af05fdc","name":"Calculate PPFD / DLI GCX4 ","func":"// Der function-Node empfängt eine Nachricht mit einem Watt-Wert\n// Beispiel für die Eingangsnachricht: { payload: 120 } // das entspricht 100% Leistung\n\n// PPF bei 100% Leistung (120 Watt)\nconst fullPowerPPF = 342; // PPF in Mikromol pro Sekunde (μmol/s)\n// Die Fläche, über die der PPF verteilt ist\nconst area = 0.36; // Fläche in Quadratmetern (m²) für eine Fläche von 60x60 cm\n// Maximale Wattzahl für die 100% Leistung\nconst maxWatt = 120;\n// Verlustfaktor (10% Verlust)\nconst lossFactor = 0.9;\n\n// PPFD berechnen basierend auf dem aktuellen Wattwert\nlet ppfd = (msg.payload / maxWatt) * fullPowerPPF / area;\n\n// Berücksichtigung des Verlustes von 10%\nppfd *= lossFactor;\n\n// PPFD auf zwei Nachkommastellen runden\nconst roundedPPFD = parseFloat(ppfd.toFixed(2));\n\n// Berechnung von DLI\nconst secondsPerHour = 3600;\nconst hoursPerDay = 18; // Anzahl der Stunden pro Tag, die das Licht an ist\nlet dli = roundedPPFD * secondsPerHour * hoursPerDay;\n\n// Umrechnung von Mikromol pro Sekunde in Mol pro Tag\ndli /= 1e6;\n\n// DLI auf zwei Nachkommastellen runden\ndli = parseFloat(dli.toFixed(2));\n\n// Erstellen Sie zwei separate Nachrichtenobjekte für die Ausgänge\nconst msg1 = { payload: roundedPPFD }; // für den ersten Output (PPFD), gerundet auf zwei Nachkommastellen\nconst msg2 = { payload: dli };         // für den zweiten Output (DLI), gerundet auf zwei Nachkommastellen\n\n// Rückgabe der Nachrichten in einem Array, wobei jeder Index dem entsprechenden Output entspricht\nreturn [msg1, msg2];\n","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2540,"y":180,"wires":[["ad4ab75f382b18f8","4514863886914953"],["ad4ab75f382b18f8","0249561a3fec1f56"]]},{"id":"ad4ab75f382b18f8","type":"debug","z":"3752d27d7587c957","g":"fb83b7a26af05fdc","name":"debug 58","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2500,"y":120,"wires":[]},{"id":"7cea495731d0be12","type":"api-current-state","z":"3752d27d7587c957","g":"fb83b7a26af05fdc","name":"Veggi LX","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"sensor.veggilightintense","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":2300,"y":160,"wires":[["d6870c9a6b9ceba0"]]},{"id":"38358691bf1511a9","type":"comment","z":"3752d27d7587c957","g":"c91e1e1018209c58","name":"NOT IMPLEMNTED RIGHT NOW","info":"","x":3750,"y":1720,"wires":[]},{"id":"fbba94c4d9cbdadb","type":"comment","z":"3752d27d7587c957","g":"9309ba9f15bdd552","name":"NOT READY","info":"","x":3830,"y":1900,"wires":[]},{"id":"db06e129a47a81f9","type":"debug","z":"3752d27d7587c957","g":"8ecdceb2353f84e1","name":"debug 214","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":3920,"y":680,"wires":[]},{"id":"c9de3550e05cf591","type":"link in","z":"3752d27d7587c957","name":"Env","links":["265fe00ebc822be2"],"x":125,"y":1060,"wires":[[]]},{"id":"2f7f44cc5475aa9e","type":"comment","z":"3752d27d7587c957","g":"2f16034c5088356b","name":"VPD-Perfektion","info":"","x":1880,"y":440,"wires":[]},{"id":"a0b3236b810a1d68","type":"link in","z":"3752d27d7587c957","g":"2f16034c5088356b","name":"VPD-Perfektion","links":["128a30397aed36be"],"x":1805,"y":480,"wires":[["b4d17b12450acac5"]]},{"id":"89b4bb0beb9173d1","type":"function","z":"3752d27d7587c957","g":"2f16034c5088356b","name":"VPD State Values","func":"const plantStages = {\n    Germination: [0.42, 0.78], // Optimaler VPD-Bereich für Keimung bei 25-30°C\n    Clones: [0.42, 0.78],      // Optimaler VPD-Bereich für Klone bei 25-30°C\n    EarlyVeg: [0.55, 0.85],    // Optimaler VPD-Bereich für frühe Vegetation bei 20-25°C\n    MidVeg: [0.85, 1.1],      // Optimaler VPD-Bereich für mittlere Vegetation bei 20-25°C\n    LateVeg: [0.85, 1.2],     // Optimaler VPD-Bereich für späte Vegetation bei 20-25°C\n    EarlyFlower: [1, 1.25], // Optimaler VPD-Bereich für frühe Blüte bei 20-25°C\n    MidFlower: [1.1, 1.4],   // Optimaler VPD-Bereich für mittlere Blüte bei 20-25°C\n    LateFlower: [1.2, 1.6],  // Optimaler VPD-Bereich für späte Blüte bei 20-25°C\n};\n\n\n\n// Beispiel, wie msg.payload gesetzt wird\n// msg.payload = \"LateVeg\"; // Kommentieren Sie diese Zeile aus, um den tatsächlichen msg.payload zu verwenden\n\n// Prüfen, ob das Wachstumsstadium im plantStages-Objekt vorhanden ist\nif (plantStages.hasOwnProperty(msg.payload)) {\n    // Setzen des VPD-Wertes aus dem plantStages-Objekt\n    msg.payload = plantStages[msg.payload];\n} else {\n    // Fehlermeldung, wenn das Wachstumsstadium nicht gefunden wurde\n    msg.payload = \"Unbekanntes Wachstumsstadium\";\n\n}\nmsg.perfektion = \"VPDStageValue\"\ndelete msg.data;\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2170,"y":480,"wires":[["b41b4e4f56a8bfdd","bcc5756283e66c56"]]},{"id":"b41b4e4f56a8bfdd","type":"join","z":"3752d27d7587c957","g":"2f16034c5088356b","name":"VPDWish","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":2050,"y":580,"wires":[["97bb26a5c0f5bb2b"]]},{"id":"97bb26a5c0f5bb2b","type":"function","z":"3752d27d7587c957","g":"2f16034c5088356b","name":"VPD Handler Array Value","func":"const tolerance = 0.00; // Toleranzwert für die VPD-Anpassung\n\n// Der aktuelle VPD-Wert wird aus dem Payload geholt und in eine Zahl umgewandelt.\nconst currentVPD = parseFloat(msg.payload.currentVPD);\n\n// Ziel-VPD-Bereich wird aus dem Payload geholt.\nconst targetVPDRange = msg.payload.targetVPD;\n\n// Logging der aktuellen VPD und Ziel-VPD-Bereich zur Überprüfung und Debugging.\nnode.warn(`Veggi-VPD array between: ${targetVPDRange[0]} and ${targetVPDRange[1]}`);\n\n// Berechnung der prozentualen Abweichung vom Ziel-VPD und Rundung auf ganze Zahlen\nconst percentDifference = Math.round(currentVPD < targetVPDRange[0] \n    ? ((currentVPD - targetVPDRange[0]) / targetVPDRange[0]) * 100 \n    : ((currentVPD - targetVPDRange[1]) / targetVPDRange[1]) * 100);\n\n// Funktion zur Berechnung der notwendigen Anpassungen basierend auf der Differenz zum VPD-Zielbereich.\nfunction calculateAdjustment(currentVPD, targetVPDRange) {\n    // Wenn der aktuelle VPD unter dem minimalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu erhöhen.\n    if (currentVPD < targetVPDRange[0] - tolerance) {\n        node.warn(`Veggi-VPD:: ${currentVPD} zu gering. Erhöhe Temp oder verringere die Feuchtigkeit`);\n        node.warn(`Veggi % VPD Target: ${percentDifference} %`);\n        return {\n            exhaustSpeed: \"increased\",      // Erhöht die Abluftgeschwindigkeit, um feuchte Luft herauszuziehen\n            humidifier: \"reduced\",          // Schaltet den Luftbefeuchter aus, um Feuchtigkeit zu reduzieren\n            dehumidifier: \"increased\",       // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            heaterFan: \"increased\",         // Schaltet den Beheizer an, um die Feuchtigkeit zu reduzieren und Temp zu erhöhen\n            coolerFan: \"reduced\",           // Schaltet den Kühler an, um die Feuchtigkeit zu erhöhen und Temp zu verringern\n            ventsALL: \"increased\",          // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsTopSpeed: \"increased\",     // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsDownSpeed: \"increased\",    // Erhöht die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"increased\"     // Erhöht die Lichtintensität, um die Temperatur zu steigern (wenn das die Temperatur beeinflusst)\n        };\n        \n    }\n    // Wenn der aktuelle VPD über dem maximalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu senken.\n    else if (currentVPD > targetVPDRange[1] + tolerance) {\n        node.warn(`Veggi-VPD: ${currentVPD} zu hoch. Verringere Temp oder erhöhe die Feuchtigkeit`);\n        node.warn(`Veggi % VPD Target: ${percentDifference} %`);\n        return {\n            exhaustSpeed: \"reduced\",    // Reduziert die Abluftgeschwindigkeit, hält feuchte Luft im Raum\n            humidifier: \"increased\",    // Schaltet den Luftbefeuchter ein, um Feuchtigkeit zu erhöhen\n            dehumidifier: \"reduced\",    // Schaltet den Luftentfeuchter aus, um Feuchtigkeit zu erhöhen\n            heaterFan: \"reduced\",       // Schaltet den Heizer aus, um die Temperatur zu verringern\n            coolerFan: \"increased\",     // Schaltet den Kühler an, um die Temperatur zu verringern\n            ventsALL: \"reduced\",        // Reduziert die Geschwindigkeit der Belüftung, um mehr feuchte Luft zu halten\n            ventsTopSpeed: \"reduced\",   // Reduziert die Geschwindigkeit der oberen Belüftung\n            ventsDownSpeed: \"reduced\",  // Reduziert die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"reduced\"   // Verringert die Lichtintensität, um die Temperatur zu senken (wenn das die Temperatur beeinflusst)\n        };\n    }\n    // Wenn der VPD im Zielbereich liegt, sind keine Anpassungen erforderlich.\n    node.warn(`Veggi-VPD: ${currentVPD} im gewünschten Bereich`);\n    return {\n        exhaustSpeed: \"unchanged\",\n        humidifier: \"unchanged\",\n        dehumidifier: \"unchanged\",    \n        heaterFan: \"unchanged\",        \n        coolerFan: \"unchanged\",        \n        ventsALL: \"unchanged\",       \n        ventsTopSpeed: \"unchanged\",\n        ventsDownSpeed: \"unchanged\",\n        lightIntensity: \"unchanged\"\n    };\n}\n\n// Entscheidungslogik zur Steuerung der Umgebungsbedingungen, nutzt die calculateAdjustment Funktion.\nconst adjustments = calculateAdjustment(currentVPD, targetVPDRange);\n\n// Berechnung der prozentualen Abweichung und Hinzufügen zum Payload\nmsg.payload = {\n    exhaustSpeed: adjustments.exhaustSpeed,\n    humidifier: adjustments.humidifier,\n    dehumidifier: adjustments.dehumidifier,\n    heaterFan: adjustments.heaterFan,\n    coolerFan: adjustments.coolerFan,\n    ventsALL: adjustments.ventsALL,\n    ventsTopSpeed: adjustments.ventsTopSpeed,\n    ventsDownSpeed: adjustments.ventsDownSpeed,\n    lightIntensity: adjustments.lightIntensity,\n    percentDifference: percentDifference\n};\n\nmsg.perfektion = \"VPDActions\";\n\n// Rückgabe des modifizierten Payloads für weitere Verwendung im Flow.\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2250,"y":580,"wires":[["50586f7873597b1b","bcc5756283e66c56","792c2d12847b3c30"]]},{"id":"50586f7873597b1b","type":"function","z":"3752d27d7587c957","g":"2f16034c5088356b","name":"Check What Do","func":"let outputs = [null, null, null, null, null, null, null, null, null];\n\nvar percentDifference = msg.payload.percentDifference\n\n// Abluft\nif (msg.payload.exhaustSpeed === \"unchanged\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"increased\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"reduced\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n}\n\n// Humidifier\nif (msg.payload.humidifier === \"unchanged\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"increased\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"reduced\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n}\n\n// Dehumidifier\nif (msg.payload.dehumidifier === \"unchanged\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"increased\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"reduced\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n}\n\n// HeaterFan\nif (msg.payload.heaterFan === \"unchanged\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"increased\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"reduced\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n}\n\n// CoolerFan\nif (msg.payload.coolerFan === \"unchanged\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"increased\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"reduced\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n}\n\n// LightIntensity\nif (msg.payload.lightIntensity === \"unchanged\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"increased\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"reduced\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n}\n\n// VentsALL\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"increased\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"reduced\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n}\n\n// VentsTopSpeed\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"increased\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"reduced\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n}\n\n// VentsDownSpeed\nif (msg.payload.ventsDownSpeed === \"unchanged\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"increased\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"reduced\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n}\n\n\n\nreturn outputs;\n","outputs":9,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2240,"y":680,"wires":[["f67b812477b0ee36"],["b418161007dfaaea"],["a41d99da1a516c1a"],["cf371755340339d9"],["f2dbe7f4fc63732c"],["0146bdd163646e65"],["944e631d1a25585e"],["944e631d1a25585e"],["944e631d1a25585e"]]},{"id":"d8ca44ad455dbdcc","type":"poll-state","z":"3752d27d7587c957","g":"2f16034c5088356b","name":"currentVPD","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","updateInterval":"30","updateIntervalType":"num","updateIntervalUnits":"seconds","outputInitially":true,"outputOnChanged":true,"entityId":"sensor.vpdvegi","stateType":"num","ifState":"","ifStateType":"num","ifStateOperator":"is","outputs":1,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"currentVPD","valueType":"str"},{"property":"perfektion","propertyType":"msg","value":"currentVPD","valueType":"str"}],"x":1970,"y":640,"wires":[["b41b4e4f56a8bfdd","bcc5756283e66c56"]]},{"id":"b4d17b12450acac5","type":"api-current-state","z":"3752d27d7587c957","g":"2f16034c5088356b","name":"PlantState","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"select.veggiplantstageselect","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"targetVPD","valueType":"str"},{"property":"perfektion","propertyType":"msg","value":"targetVPD","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1930,"y":480,"wires":[["89b4bb0beb9173d1","c75be806c71aae08"]]},{"id":"792c2d12847b3c30","type":"debug","z":"3752d27d7587c957","g":"2f16034c5088356b","name":"debug 201","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2290,"y":540,"wires":[]},{"id":"825ed8cac87f6ba8","type":"link out","z":"3752d27d7587c957","g":"077c0666ef9f39f6","name":"ExhaustCtrlVeggi","mode":"link","links":["9f42bb9bae27290b","bfaa49e536cfc79a","74627de8274cdc7c"],"x":3075,"y":460,"wires":[]},{"id":"9f42bb9bae27290b","type":"link in","z":"3752d27d7587c957","g":"8ecdceb2353f84e1","name":"ExhaustCtrlVeggi","links":["138c5865040f68a3","2236e755ab8aaf88","825ed8cac87f6ba8","f2f78b1b519cfec4","f67b812477b0ee36"],"x":3535,"y":680,"wires":[["e67e4105200aba9a"]]},{"id":"f67b812477b0ee36","type":"link out","z":"3752d27d7587c957","g":"2f16034c5088356b","name":"ExhaustCtrlVeggi","mode":"link","links":["9f42bb9bae27290b","bfaa49e536cfc79a","74627de8274cdc7c"],"x":2515,"y":560,"wires":[]},{"id":"138c5865040f68a3","type":"link out","z":"3752d27d7587c957","g":"6dd36616a92a87a4","name":"ExhaustCtrlVeggi","mode":"link","links":["9f42bb9bae27290b","bfaa49e536cfc79a","74627de8274cdc7c"],"x":2505,"y":960,"wires":[]},{"id":"2236e755ab8aaf88","type":"link out","z":"3752d27d7587c957","g":"d14fa664d0413a5c","name":"ExhaustCtrlVeggi","mode":"link","links":["9f42bb9bae27290b","bfaa49e536cfc79a","74627de8274cdc7c"],"x":2525,"y":1520,"wires":[]},{"id":"a47d72d27f76363f","type":"link out","z":"3752d27d7587c957","g":"6dd36616a92a87a4","name":"HumidifierCtrlVeggi","mode":"link","links":["a8254bcb0725889b","44693abeb1238a60","78de3f8a44f2643f"],"x":2505,"y":1000,"wires":[]},{"id":"3c8af30af5e1621b","type":"link out","z":"3752d27d7587c957","g":"6dd36616a92a87a4","name":"DeHumidifierCtrlVeggi","mode":"link","links":["9137501bc6555693","f466171fb84cbf4e"],"x":2505,"y":1040,"wires":[]},{"id":"a8254bcb0725889b","type":"link in","z":"3752d27d7587c957","g":"2651868e58bb1778","name":"HumidifierCtrlVeggi","links":["1bb3dfe91ae46289","a47d72d27f76363f","b418161007dfaaea","b9ad6351e42daadf","f58811e4189b45cc","f782f6849722df96"],"x":3475,"y":860,"wires":[["0eca8b29f89f4926"]]},{"id":"f58811e4189b45cc","type":"link out","z":"3752d27d7587c957","g":"077c0666ef9f39f6","name":"HumidifierCtrlVeggi","mode":"link","links":["a8254bcb0725889b","44693abeb1238a60","78de3f8a44f2643f"],"x":3075,"y":500,"wires":[]},{"id":"b418161007dfaaea","type":"link out","z":"3752d27d7587c957","g":"2f16034c5088356b","name":"HumidifierCtrlVeggi","mode":"link","links":["a8254bcb0725889b","44693abeb1238a60","78de3f8a44f2643f"],"x":2515,"y":600,"wires":[]},{"id":"1bb3dfe91ae46289","type":"link out","z":"3752d27d7587c957","g":"d14fa664d0413a5c","name":"HumidifierCtrlVeggi","mode":"link","links":["a8254bcb0725889b","44693abeb1238a60","78de3f8a44f2643f"],"x":2525,"y":1560,"wires":[]},{"id":"3084915b3c3153eb","type":"link out","z":"3752d27d7587c957","g":"077c0666ef9f39f6","name":"DeHumidifierCtrlVeggi","mode":"link","links":["9137501bc6555693","f466171fb84cbf4e"],"x":3075,"y":540,"wires":[]},{"id":"a41d99da1a516c1a","type":"link out","z":"3752d27d7587c957","g":"2f16034c5088356b","name":"DeHumidifierCtrlVeggi","mode":"link","links":["9137501bc6555693","f466171fb84cbf4e"],"x":2515,"y":640,"wires":[]},{"id":"9137501bc6555693","type":"link in","z":"3752d27d7587c957","g":"ecb02d38c4118377","name":"DeHumidifierCtrlVeggi","links":["0bc7a561ce1902e2","3084915b3c3153eb","3c8af30af5e1621b","9d8c7dcd95cc9c41","a41d99da1a516c1a","b0f6711d749c2fd9"],"x":3475,"y":1020,"wires":[["f81d8c962ee7f1d5"]]},{"id":"b0f6711d749c2fd9","type":"link out","z":"3752d27d7587c957","g":"d14fa664d0413a5c","name":"DeHumidifierCtrlVeggi","mode":"link","links":["9137501bc6555693","f466171fb84cbf4e"],"x":2525,"y":1600,"wires":[]},{"id":"228540ed8dcab290","type":"link out","z":"3752d27d7587c957","g":"077c0666ef9f39f6","name":"HeaterCtrlVeggi","mode":"link","links":["d204071a89b51356","f3640ede9c1581a9"],"x":3075,"y":580,"wires":[]},{"id":"d204071a89b51356","type":"link in","z":"3752d27d7587c957","g":"082054cd4a9a0dc1","name":"HeaterCtrlVeggi","links":["15554571e89dc2d6","228540ed8dcab290","24cc24d1f793a1cb","285d7443a92664d8","cf371755340339d9","d01d126af31e972b"],"x":3475,"y":1400,"wires":[["2fe236b6ecf4be1a"]]},{"id":"cf371755340339d9","type":"link out","z":"3752d27d7587c957","g":"2f16034c5088356b","name":"HeaterCtrlVeggi","mode":"link","links":["d204071a89b51356","f3640ede9c1581a9"],"x":2515,"y":680,"wires":[]},{"id":"15554571e89dc2d6","type":"link out","z":"3752d27d7587c957","g":"6dd36616a92a87a4","name":"HeaterCtrlVeggi","mode":"link","links":["d204071a89b51356","f3640ede9c1581a9"],"x":2505,"y":1080,"wires":[]},{"id":"d01d126af31e972b","type":"link out","z":"3752d27d7587c957","g":"d14fa664d0413a5c","name":"HeaterCtrlVeggi","mode":"link","links":["d204071a89b51356","f3640ede9c1581a9"],"x":2525,"y":1640,"wires":[]},{"id":"95ed2ef55d637d57","type":"link out","z":"3752d27d7587c957","g":"077c0666ef9f39f6","name":"CoolerCtrlVeggi","mode":"link","links":["9e528fbb25e69fba"],"x":3075,"y":620,"wires":[]},{"id":"9e528fbb25e69fba","type":"link in","z":"3752d27d7587c957","g":"d634b49c93972c8c","name":"CoolerCtrlVeggi","links":["95ed2ef55d637d57","03c00d49f67a6651","70c88c449da62baf","f2dbe7f4fc63732c"],"x":3475,"y":1200,"wires":[["f0d2d59e9fb71a11"]]},{"id":"70c88c449da62baf","type":"link out","z":"3752d27d7587c957","g":"6dd36616a92a87a4","name":"CoolerCtrlVeggi","mode":"link","links":["9e528fbb25e69fba"],"x":2505,"y":1120,"wires":[]},{"id":"03c00d49f67a6651","type":"link out","z":"3752d27d7587c957","g":"d14fa664d0413a5c","name":"CoolerCtrlVeggi","mode":"link","links":["9e528fbb25e69fba"],"x":2525,"y":1680,"wires":[]},{"id":"7968566b6c484c08","type":"link in","z":"3752d27d7587c957","g":"c91e1e1018209c58","name":"LightsCtrlVeggi","links":["0146bdd163646e65","44c482979d3323d4","67864bb87afa5ecf","a6c380ef2d09a380"],"x":3495,"y":1720,"wires":[["bf178d140cd3a947"]]},{"id":"cc32bf965e21b62c","type":"link in","z":"3752d27d7587c957","g":"9309ba9f15bdd552","name":"VentsCtrlVeggi","links":["944e631d1a25585e","c07c821dd022801c","eb30bf3343a316af","fba3fd82020bcd3e"],"x":3495,"y":1900,"wires":[["15db15c7e2de4370"]]},{"id":"67864bb87afa5ecf","type":"link out","z":"3752d27d7587c957","g":"6dd36616a92a87a4","name":"LightsCtrlVeggi","mode":"link","links":["e7617027bfc9e06c","7968566b6c484c08"],"x":2505,"y":1180,"wires":[]},{"id":"a6c380ef2d09a380","type":"link out","z":"3752d27d7587c957","g":"d14fa664d0413a5c","name":"LightsCtrlVeggi","mode":"link","links":["e7617027bfc9e06c","7968566b6c484c08"],"x":2525,"y":1720,"wires":[]},{"id":"f2dbe7f4fc63732c","type":"link out","z":"3752d27d7587c957","g":"2f16034c5088356b","name":"ColerCtrlVeggi","mode":"link","links":["9e528fbb25e69fba"],"x":2515,"y":720,"wires":[]},{"id":"44c482979d3323d4","type":"link out","z":"3752d27d7587c957","g":"077c0666ef9f39f6","name":"LightsCtrlVeggi","mode":"link","links":["e7617027bfc9e06c","7968566b6c484c08"],"x":3075,"y":660,"wires":[]},{"id":"eb30bf3343a316af","type":"link out","z":"3752d27d7587c957","g":"d14fa664d0413a5c","name":"VentsCtrlVeggi","mode":"link","links":["396daedee0600b1e","cc32bf965e21b62c"],"x":2525,"y":1760,"wires":[]},{"id":"c07c821dd022801c","type":"link out","z":"3752d27d7587c957","g":"6dd36616a92a87a4","name":"VentsCtrlVeggi","mode":"link","links":["396daedee0600b1e","cc32bf965e21b62c"],"x":2505,"y":1240,"wires":[]},{"id":"944e631d1a25585e","type":"link out","z":"3752d27d7587c957","g":"2f16034c5088356b","name":"VentsCtrlVeggi","mode":"link","links":["cc32bf965e21b62c"],"x":2515,"y":800,"wires":[]},{"id":"fba3fd82020bcd3e","type":"link out","z":"3752d27d7587c957","g":"077c0666ef9f39f6","name":"VentsCtrlVeggi","mode":"link","links":["396daedee0600b1e","cc32bf965e21b62c"],"x":3075,"y":700,"wires":[]},{"id":"0146bdd163646e65","type":"link out","z":"3752d27d7587c957","g":"2f16034c5088356b","name":"LightsCtrlVeggi","mode":"link","links":["e7617027bfc9e06c","7968566b6c484c08"],"x":2515,"y":760,"wires":[]},{"id":"a9ce176894e4219e","type":"comment","z":"3752d27d7587c957","g":"8ecdceb2353f84e1","name":"change this to the other if you want stepped","info":"","x":3630,"y":560,"wires":[]},{"id":"297a909f94262fbd","type":"comment","z":"3752d27d7587c957","g":"8ecdceb2353f84e1","name":"Percent Increase","info":"\nIncrease by calculated % Difference to target","x":3740,"y":500,"wires":[]},{"id":"18cbb2d076da7f4e","type":"function","z":"3752d27d7587c957","g":"b377a7d2d8154846","name":"Exhaust Setup","func":"// Hilfsfunktion zur Überprüfung, ob ein Wert numerisch ist\nconst isNumeric = (value) => {\n    return !isNaN(parseFloat(value)) && isFinite(value);\n};\n\n// Funktion zur Bestimmung des dutyCycle-Werts\nconst findDutyCycle = (exhaustArray) => {\n    if (exhaustArray.length === 0) {\n        return null; // Keine Werte zu verarbeiten, wenn das Array leer ist\n    }\n    for (let i = 0; i < exhaustArray.length; i++) {\n        if (isNumeric(exhaustArray[i].value)) {\n            return parseInt(exhaustArray[i].value, 10);\n        }\n    }\n    return null; // Falls kein numerischer Wert gefunden wurde\n};\n\nlet outputs = [null, null, null, null]; // Array für vier Ausgänge\n\n// Zustand der Abluft und Geschwindigkeit aus der Payload extrahieren\nconst exhaustSpeed = msg.payload.exhaustSet.value || 'unchanged'; // Anpassung hier: falls kein Wert vorhanden ist, setze auf 'unchanged'\nlet exhaustState = 'off'; // Standardwert setzen, falls kein Zustand gefunden wird\nif (msg.payload.Exhaust && msg.payload.Exhaust.length > 0) {\n    const exhaustSwitch = msg.payload.Exhaust.find(e => e.entity_id && e.entity_id.toLowerCase().includes(\"switch\"));\n    if (exhaustSwitch && exhaustSwitch.value) {\n        exhaustState = exhaustSwitch.value;\n    }\n}\n\nconst dutyCycle = findDutyCycle(msg.payload.Exhaust) || 10; // Anpassung hier: falls kein Wert vorhanden ist, setze auf 10\n\nlet newDutyCycle = dutyCycle;\n\n// Berechnung des neuen Duty Cycle basierend auf festen Schritten\nif (exhaustSpeed === 'increased') {\n    newDutyCycle = dutyCycle + 5;\n} else if (exhaustSpeed === 'reduced') {\n    newDutyCycle = dutyCycle - 5;\n}\n\n// Stellen Sie sicher, dass der neue Duty Cycle innerhalb der Grenzen liegt\nnewDutyCycle = Math.min(95, Math.max(10, newDutyCycle));\n\n// Abluft starten auf dem ersten Ausgang, wenn sie aus ist und erhöht werden muss\nif (exhaustSpeed === \"increased\" && exhaustState === \"off\") {\n    outputs[0] = { payload: \"Starte Abluft\", topic: \"Start\" };\n    return outputs;\n}\n\n// Abluft-Geschwindigkeit erhöhen, wenn sie bereits eingeschaltet ist\nif (exhaustSpeed === \"increased\" && exhaustState === \"on\") {\n    outputs[2] = { payload: newDutyCycle.toString(), topic: \"Increase\" };\n    return outputs;\n}\n\n// Abluft stoppen auf dem zweiten Ausgang, wenn die Geschwindigkeit reduziert wird und der Duty Cycle sehr niedrig ist\nif (exhaustSpeed === \"reduced\" && exhaustState === \"on\" && newDutyCycle <= 10) {\n    outputs[1] = { payload: \"Stoppe Abluft\", topic: \"Stop\" };\n    return outputs;\n} else if (exhaustSpeed === \"reduced\" && exhaustState === \"on\") {\n    outputs[2] = { payload: newDutyCycle.toString(), topic: \"Decrease\" };\n    return outputs;\n}\n\n// Warnung ausgeben, wenn versucht wird, die Abluftgeschwindigkeit zu reduzieren, obwohl sie bereits aus ist\nif (exhaustSpeed === \"reduced\" && exhaustState === \"off\") {\n    outputs[1] = { payload: \"Abluft bereits gestoppt, kann nicht weiter reduziert werden\", topic: \"AlreadyStopped\" };\n    return outputs;\n}\n\n// Nichts tun, wenn keine Änderung erforderlich ist\nif (exhaustSpeed === \"unchanged\") {\n    outputs[3] = { payload: \"Abluft unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n    return outputs;\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":4100,"y":300,"wires":[["8670816afac14164","72f5c3bdfb3190bc"],["8670816afac14164","533b7f798734327f"],["edf09569bc23fb4f","8670816afac14164"],["8670816afac14164"]]},{"id":"25559f8f74dbacc5","type":"http request","z":"3752d27d7587c957","g":"b377a7d2d8154846","name":"DutyPostChange","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.235:5533/air/ctrl","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":4510,"y":320,"wires":[[]]},{"id":"edf09569bc23fb4f","type":"function","z":"3752d27d7587c957","g":"b377a7d2d8154846","name":"DutyChanger","func":"\nconst NewDuty = msg.payload\n\nmsg.payload = { \"newDuty\": NewDuty}\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":4310,"y":320,"wires":[["25559f8f74dbacc5"]]},{"id":"b4d4b90fe3a6ec9c","type":"join","z":"3752d27d7587c957","g":"b377a7d2d8154846","name":"exhasutData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":3900,"y":380,"wires":[["18cbb2d076da7f4e","8670816afac14164","d952d70aed5c4421"]]},{"id":"01b7df04eed13a74","type":"link in","z":"3752d27d7587c957","g":"b377a7d2d8154846","name":"ExhasutData","links":[],"x":3845,"y":300,"wires":[["b4d4b90fe3a6ec9c"]]},{"id":"72f5c3bdfb3190bc","type":"link out","z":"3752d27d7587c957","g":"b377a7d2d8154846","name":"ExhaustVeggiON","mode":"link","links":["09f51aa364202656"],"x":4265,"y":260,"wires":[]},{"id":"533b7f798734327f","type":"link out","z":"3752d27d7587c957","g":"b377a7d2d8154846","name":"ExhaustVeggiOFF","mode":"link","links":["95404f058f30b296"],"x":4315,"y":280,"wires":[]},{"id":"8670816afac14164","type":"debug","z":"3752d27d7587c957","g":"b377a7d2d8154846","name":"debug 272","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":4090,"y":240,"wires":[]},{"id":"d952d70aed5c4421","type":"debug","z":"3752d27d7587c957","g":"b377a7d2d8154846","name":"debug 273","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":4100,"y":380,"wires":[]},{"id":"2e2215015fc0b3bd","type":"comment","z":"3752d27d7587c957","g":"b377a7d2d8154846","name":"change this to the other if you want stepped","info":"","x":3630,"y":280,"wires":[]},{"id":"74627de8274cdc7c","type":"link in","z":"3752d27d7587c957","g":"b377a7d2d8154846","name":"ExhaustCtrlVeggi","links":["138c5865040f68a3","2236e755ab8aaf88","825ed8cac87f6ba8","f2f78b1b519cfec4","f67b812477b0ee36"],"x":3705,"y":380,"wires":[["b4d4b90fe3a6ec9c"]]},{"id":"e51b97599d8ebb10","type":"comment","z":"3752d27d7587c957","g":"b377a7d2d8154846","name":"Steped Increase Disabled BY default ","info":"\nSteps by 5% increase on any input  - & + ","x":3700,"y":200,"wires":[]},{"id":"f7adc2a82d261c1c","type":"debug","z":"3752d27d7587c957","name":"Cooler","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":430,"y":800,"wires":[]},{"id":"406716c4908964f0","type":"debug","z":"3752d27d7587c957","name":"Heater","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":430,"y":840,"wires":[]},{"id":"53744e9d23f8df14","type":"link out","z":"3752d27d7587c957","name":"Cooler","mode":"link","links":["695c16207afdcdaa"],"x":575,"y":800,"wires":[]},{"id":"9cebbdc13963270f","type":"link out","z":"3752d27d7587c957","name":"Heater","mode":"link","links":["548fd1b0ea533144"],"x":575,"y":840,"wires":[]},{"id":"1124f430fe2c02cc","type":"join","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"SoilDataFlower","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","useparts":false,"accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1370,"y":400,"wires":[["ec6f92f6a77bd82b"]]},{"id":"d062b4edfee7bd40","type":"link out","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"SoilDataVeggi","mode":"link","links":["0b16177f66a2192b"],"x":1665,"y":400,"wires":[]},{"id":"0b16177f66a2192b","type":"link in","z":"3752d27d7587c957","name":"SoilDataVeggi","links":["d062b4edfee7bd40"],"x":65,"y":1320,"wires":[["056d5cc6f75ccd6a"]]},{"id":"2d1d43cca2adc804","type":"link out","z":"3752d27d7587c957","name":"VeggiSwitches","mode":"link","links":["e4376c576a7cc952"],"x":575,"y":600,"wires":[]},{"id":"e4376c576a7cc952","type":"link in","z":"3752d27d7587c957","name":"VeggiSwitches","links":["2d1d43cca2adc804"],"x":125,"y":1140,"wires":[["28aadf7d5abb0caa"]]},{"id":"28aadf7d5abb0caa","type":"debug","z":"3752d27d7587c957","name":"debug 277","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":250,"y":1140,"wires":[]},{"id":"b5f61a40cd90bf16","type":"debug","z":"3752d27d7587c957","name":"Pump","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":430,"y":880,"wires":[]},{"id":"f3a93cd22e692bd5","type":"link out","z":"3752d27d7587c957","name":"VegPump","mode":"link","links":["6c16f887274bdb5a"],"x":575,"y":880,"wires":[]},{"id":"6c16f887274bdb5a","type":"link in","z":"3752d27d7587c957","name":"VegPump","links":["f3a93cd22e692bd5"],"x":65,"y":1280,"wires":[["056d5cc6f75ccd6a"]]},{"id":"81252048b9753437","type":"function","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"Heater-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Dehumidifier-Wertes\nfunction findDehumidifierValue(sensors) {\n    const dehumidifierObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"dehumidifier\") || \n        sensor.entity_id.includes(\"humidity\")\n    );\n    return dehumidifierObject ? dehumidifierObject.value : null;\n}\n\n// Finden des Dehumidifier-Wertes\nconst dehumidifierValue = findDehumidifierValue(sensors);\n\n// Ausgabe des Dehumidifier-Wertes zur Überprüfung\n// node.warn(`Dehumidifier-Wert: ${dehumidifierValue}`);\n\n// Optional: Speichern des Dehumidifier-Wertes in msg zur weiteren Verwendung\nmsg.payload = dehumidifierValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":890,"y":1180,"wires":[[]]},{"id":"174996762a37d6ac","type":"function","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"Cooler-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Dehumidifier-Wertes\nfunction findDehumidifierValue(sensors) {\n    const dehumidifierObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"dehumidifier\") || \n        sensor.entity_id.includes(\"humidity\")\n    );\n    return dehumidifierObject ? dehumidifierObject.value : null;\n}\n\n// Finden des Dehumidifier-Wertes\nconst dehumidifierValue = findDehumidifierValue(sensors);\n\n// Ausgabe des Dehumidifier-Wertes zur Überprüfung\n// node.warn(`Dehumidifier-Wert: ${dehumidifierValue}`);\n\n// Optional: Speichern des Dehumidifier-Wertes in msg zur weiteren Verwendung\nmsg.payload = dehumidifierValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":890,"y":1140,"wires":[[]]},{"id":"54915a0b42cbb531","type":"function","z":"3752d27d7587c957","g":"1cba63e6b0ed1282","name":"Pump-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Sensorwertes\nfunction findSensorValue(sensors, filter) {\n    const sensorObject = sensors.find(sensor =>\n        sensor.entity_id.includes(filter)\n    );\n    return sensorObject ? sensorObject.value : null;\n}\n\n// Funktion zum Konvertieren des Sensorwertes in den entsprechenden Typ\nfunction convertType(value, type) {\n    switch (type) {\n        case \"number\":\n            return Number(value);\n        case \"boolean\":\n            return value === \"on\" || value === \"true\";\n        case \"string\":\n            return String(value);\n        default:\n            return value;\n    }\n}\n\n// Filterwerte und zugehörige Typen für die einzelnen Sensoren\nconst filterValues = [\n    { filter: \"nextpumpingaction\", type: \"number\" },\n    { filter: \"pumpinglefttime\", type: \"number\" },\n    { filter: \"pumpon\", type: \"boolean\" },\n    { filter: \"pumpautorun\", type: \"boolean\" },\n    { filter: \"pumpwatteringduration\", type: \"number\" },\n    { filter: \"pumpinghours\", type: \"number\" }\n];\n\n// Erstellen eines Arrays von Nachrichten für die verschiedenen Ausgänge\nlet outputMsgs = filterValues.map(item => {\n    const value = findSensorValue(sensors, item.filter);\n    // Node.warn kann verwendet werden, um den Wert vor der Umwandlung zu überprüfen\n    //node.warn(`Filter: ${item.filter}, Value: ${value}, Type: ${item.type}`);\n    return { payload: convertType(value, item.type) };\n});\n\n// Rückgabe der Nachrichten zur Weiterverarbeitung im Flow\nreturn outputMsgs;\n","outputs":6,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":890,"y":1360,"wires":[["b5493a3f55459205","55581d4b6f9bb716"],["b5493a3f55459205","836058dea98edfbb"],["b5493a3f55459205","1b2af9e442403c55"],["b5493a3f55459205","c2dafe1ccb11a237"],["b5493a3f55459205","f84213a3ac3c506d"],["b5493a3f55459205","9f481796c50b24ca"]]},{"id":"b5493a3f55459205","type":"debug","z":"3752d27d7587c957","g":"1cba63e6b0ed1282","name":"debug 282","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":930,"y":1460,"wires":[]},{"id":"9f481796c50b24ca","type":"ha-number","z":"3752d27d7587c957","g":"1cba63e6b0ed1282","name":"VeggiWateringIntervall","version":1,"debugenabled":false,"inputs":1,"outputs":1,"entityConfig":"48655aeb6b0aa1e8","mode":"set","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"}],"x":1360,"y":1580,"wires":[[]]},{"id":"f84213a3ac3c506d","type":"ha-number","z":"3752d27d7587c957","g":"1cba63e6b0ed1282","name":"VeggiWateringDuration","version":1,"debugenabled":false,"inputs":1,"outputs":1,"entityConfig":"e447ef302f778fa1","mode":"set","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"}],"x":1360,"y":1520,"wires":[[]]},{"id":"eed4272deb53836f","type":"ha-switch","z":"3752d27d7587c957","g":"1cba63e6b0ed1282","name":"VeggiAutoPump","version":0,"debugenabled":false,"inputs":1,"outputs":2,"entityConfig":"23c38aaab340822f","enableInput":true,"outputOnStateChange":false,"outputProperties":[{"property":"outputType","propertyType":"msg","value":"state change","valueType":"str"},{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"}],"x":1340,"y":1460,"wires":[[],[]]},{"id":"063773e3770ed023","type":"ha-switch","z":"3752d27d7587c957","g":"1cba63e6b0ed1282","name":"VeggiPumpOn","version":0,"debugenabled":false,"inputs":1,"outputs":2,"entityConfig":"97a4402c3b7ed861","enableInput":true,"outputOnStateChange":false,"outputProperties":[{"property":"outputType","propertyType":"msg","value":"state change","valueType":"str"},{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"}],"x":1330,"y":1400,"wires":[[],[]]},{"id":"0045e4e34e996967","type":"ha-text","z":"3752d27d7587c957","g":"1cba63e6b0ed1282","name":"VeggiNextPumpingIntervall","version":1,"debugenabled":false,"inputs":1,"outputs":1,"entityConfig":"a10204452fe11d95","mode":"set","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"}],"x":1370,"y":1280,"wires":[[]]},{"id":"bb4422cb843fa184","type":"ha-text","z":"3752d27d7587c957","g":"1cba63e6b0ed1282","name":"VeggiPumpingDuration","version":1,"debugenabled":false,"inputs":1,"outputs":1,"entityConfig":"af44ccc93e488cc4","mode":"set","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"}],"x":1360,"y":1340,"wires":[[]]},{"id":"55581d4b6f9bb716","type":"function","z":"3752d27d7587c957","g":"1cba63e6b0ed1282","name":"Add Min String","func":"let data = msg.payload\n\nmsg.payload = `${data} Minutes`\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1120,"y":1280,"wires":[["0045e4e34e996967"]]},{"id":"836058dea98edfbb","type":"function","z":"3752d27d7587c957","g":"1cba63e6b0ed1282","name":"Add Sec String","func":"let data = msg.payload\n\nmsg.payload = `${data} Seconds`\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1120,"y":1340,"wires":[["bb4422cb843fa184"]]},{"id":"1b2af9e442403c55","type":"function","z":"3752d27d7587c957","g":"1cba63e6b0ed1282","name":"set Enable","func":"msg.enable = msg.payload\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1110,"y":1380,"wires":[["063773e3770ed023"]]},{"id":"c2dafe1ccb11a237","type":"function","z":"3752d27d7587c957","g":"1cba63e6b0ed1282","name":"set Enable","func":"msg.enable = msg.payload\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1110,"y":1420,"wires":[["eed4272deb53836f"]]},{"id":"ec6f92f6a77bd82b","type":"function","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"SetTopic","func":"msg.topic = \"SoilData\"\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1560,"y":400,"wires":[["d062b4edfee7bd40"]]},{"id":"056d5cc6f75ccd6a","type":"join","z":"3752d27d7587c957","name":"WatteringData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","useparts":false,"accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":240,"y":1300,"wires":[["f406cd1624d2e03f","eac37633fbb21e3c"]]},{"id":"f406cd1624d2e03f","type":"debug","z":"3752d27d7587c957","name":"debug 284","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":510,"y":1360,"wires":[]},{"id":"eac37633fbb21e3c","type":"function","z":"3752d27d7587c957","name":"MinMax_SoilWattering","func":"// Function Node\nconst nextPump = parseInt(msg.payload.pump[0].value); // In Minuten bis zur nächsten Bewässerung\nconst pumpingLeftTime = parseInt(msg.payload.pump[1].value); // Verbleibende Zeit der Pumpenphase\n\nconst isPumpOn = msg.payload.pump[3].value === 'on'; // Pumpe an oder aus\nconst isAutoRunOn = msg.payload.pump[4].value === 'on'; // Automatischer Modus an oder aus\n\nconst wateringDuration = parseInt(msg.payload.pump[5].value); // Bewässerungsdauer in Minuten\nconst wateringInterval = parseInt(msg.payload.pump[6].value) * 60; // Bewässerungsintervall in Minuten (umgerechnet in Stunden)\n\nconst soilMoisture = parseInt(msg.payload.SoilData.moisture); // Bodenfeuchtigkeit\nconst soilEC = parseInt(msg.payload.SoilData.conductivity); // Leitfähigkeit des Bodens\n\nconst minSoilMoisture = 10; // Mindestbodenfeuchtigkeit für sofortige Bewässerung\nconst maxSoilMoisture = 50; // Maximale Bodenfeuchtigkeit zum Stoppen der Bewässerung\n\nlet command = 'OFF'; // Standardkommando\nlet newAutoRunOn = isAutoRunOn; // Standardmäßig aktueller Auto-Run-Zustand\n\nif (isAutoRunOn) {\n    // Automatischer Modus ist aktiv\n    if (soilMoisture < minSoilMoisture) {\n        command = 'ON'; // Sofort bewässern\n    } else if (soilMoisture >= maxSoilMoisture && isPumpOn) {\n        command = 'OFF'; // Bewässerung stoppen, wenn Bodenfeuchtigkeit ausreichend ist\n    }\n} else {\n    // Automatischer Modus ist nicht aktiv\n    if (soilMoisture < minSoilMoisture) {\n        command = 'ON'; // Sofort bewässern\n        newAutoRunOn = true; // Auto-Modus nach Bewässerung aktivieren\n    }\n}\n\nmsg.payload = {\n    soilMoisture,\n    soilEC,\n    command: command,\n    nextPump: nextPump,\n    pumpingLeftTime: pumpingLeftTime,\n    wateringDuration: wateringDuration,\n    wateringInterval: wateringInterval,\n    isAutoRunOn: newAutoRunOn ? 'on' : 'off'\n};\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":340,"y":1400,"wires":[["f406cd1624d2e03f"]]},{"id":"c75be806c71aae08","type":"debug","z":"3752d27d7587c957","g":"2f16034c5088356b","name":"debug 285","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1890,"y":520,"wires":[]},{"id":"94739891644f4858","type":"link in","z":"d95a2d1f80d65696","name":"DryingCtrl","links":["f639a305698026d1"],"x":45,"y":40,"wires":[["3e898afb61360a99"]]},{"id":"3e898afb61360a99","type":"debug","z":"d95a2d1f80d65696","name":"DryingTentData","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":160,"y":20,"wires":[]},{"id":"57de3d43cbc5c4fa","type":"link in","z":"d95a2d1f80d65696","name":"DryingTentLiveData","links":["854a899b81ae0da3"],"x":45,"y":80,"wires":[["7e373c1b659a7560","81ae18ff2d1ba76c"]]},{"id":"7e373c1b659a7560","type":"debug","z":"d95a2d1f80d65696","name":"DryingTentLiveData","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":170,"y":60,"wires":[]},{"id":"4283f043fbd1a875","type":"link out","z":"d95a2d1f80d65696","name":"Exhaust","mode":"link","links":["829849bec6a54514","ea7632f875a34c08"],"x":605,"y":700,"wires":[]},{"id":"5e184e56c9a47ec2","type":"join","z":"d95a2d1f80d65696","name":"VpdNeeds","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":450,"y":60,"wires":[["e75e84faafeb206a"]]},{"id":"2999018347a0a92b","type":"debug","z":"d95a2d1f80d65696","name":"Temperatures","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":460,"y":140,"wires":[]},{"id":"db99e2b9dd4a5875","type":"debug","z":"d95a2d1f80d65696","name":"Humidity","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":440,"y":180,"wires":[]},{"id":"c107273eef1e4eb5","type":"debug","z":"d95a2d1f80d65696","name":"Dewpoints","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":220,"wires":[]},{"id":"6eb18246e138dc9f","type":"debug","z":"d95a2d1f80d65696","name":"Pressures","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":440,"y":380,"wires":[]},{"id":"8530a7a2c1934af3","type":"debug","z":"d95a2d1f80d65696","name":"Battery","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":440,"y":520,"wires":[]},{"id":"240a49a3805024f1","type":"debug","z":"d95a2d1f80d65696","name":"Power","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":430,"y":560,"wires":[]},{"id":"4dd7ac73e73f1e4c","type":"debug","z":"d95a2d1f80d65696","name":"CO2","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":430,"y":420,"wires":[]},{"id":"54c53ccb105fef3e","type":"debug","z":"d95a2d1f80d65696","name":"Light","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":430,"y":460,"wires":[]},{"id":"04d9aa778913bdfb","type":"debug","z":"d95a2d1f80d65696","name":"Switches","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":440,"y":620,"wires":[]},{"id":"c507f6fd66cb5ace","type":"debug","z":"d95a2d1f80d65696","name":"Conductivity","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":340,"wires":[]},{"id":"8bd0deae8ad2bf46","type":"debug","z":"d95a2d1f80d65696","name":"Moisture","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":440,"y":260,"wires":[]},{"id":"3997e496b928bfd1","type":"debug","z":"d95a2d1f80d65696","name":"Exhasut","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":440,"y":700,"wires":[]},{"id":"4dc46ce5f9f3b35c","type":"debug","z":"d95a2d1f80d65696","name":"WISH","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":430,"y":100,"wires":[]},{"id":"503692ccb4fc3cd7","type":"debug","z":"d95a2d1f80d65696","name":"Humidifier","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":740,"wires":[]},{"id":"5b97a07be9780c5a","type":"debug","z":"d95a2d1f80d65696","name":"Vents","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":430,"y":660,"wires":[]},{"id":"d12ee96a6dcfa11c","type":"debug","z":"d95a2d1f80d65696","name":"RootTemp","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":300,"wires":[]},{"id":"72ce70122a4b5a96","type":"debug","z":"d95a2d1f80d65696","name":"Dehumidifier","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":780,"wires":[]},{"id":"81ae18ff2d1ba76c","type":"function","z":"d95a2d1f80d65696","name":"Sort Sensor Types","func":"let data = msg.payload;\n\n// Arrays für verschiedene Sensortypen initialisieren\nlet wish = [];\nlet temperatures = [];\nlet humidity = [];\nlet dewpoints = [];\nlet moisture = [];\nlet pressures = [];\nlet battery = [];\nlet power = [];\nlet co2 = [];\nlet lumen = [];\nlet conductivity = [];\nlet switches = [];\nlet dutyCycleExhaust = [];\nlet vents = [];\nlet humidifier = [];\nlet dehumidifier = [];\nlet root = [];\nlet cooler = [];\nlet heater = [];\nlet pump = [];\n\n// Durchlaufe alle Schlüssel im data-Objekt und sortiere sie nach bestimmten Sensortypen\nfor (let key in data) {\n    if (data.hasOwnProperty(key)) {\n        let entity_id = key.toLowerCase();\n        let entity = { entity_id: key, value: data[key] };\n\n        // Prioritize to ensure it is captured first\n        if (entity_id.includes('wish') || entity_id.includes('avg') || entity_id.includes('target')) {\n            wish.push(entity);\n        } else if (entity_id.includes('root') || entity_id.includes('wurzel')) {\n            root.push(entity);\n        }\n        // ENVIORMENT\n        else if (entity_id.includes('temperature') || entity_id.includes('tempe')) {\n            temperatures.push(entity);\n        } else if (entity_id.includes('humidity') || entity_id.includes('feuchtigkeit') || entity_id.includes('rh')) {\n            humidity.push(entity);\n        } else if (entity_id.includes('dewpoint') || entity_id.includes('dew')) {\n            dewpoints.push(entity);\n        } else if (entity_id.includes('moisture') || entity_id.includes('mois')) {\n            moisture.push(entity);\n        } else if (entity_id.includes('pressure') || entity_id.includes('press')) {\n            pressures.push(entity);\n        } else if (entity_id.includes('carbondioxide') || entity_id.includes('co2') || entity_id.includes('carbon')) {\n            co2.push(entity);\n        } else if (entity_id.includes('conductivity')) {\n            conductivity.push(entity);\n        } else if (entity_id.includes('illuminance') || entity_id.includes('light') || entity_id.includes('licht')) {\n            lumen.push(entity);\n        }\n        // Devices\n        else if (entity_id.includes('dehumidifier') || entity_id.includes('entfeuchter')) {\n            dehumidifier.push(entity);\n        } else if (entity_id.includes('humidifier') || entity_id.includes('befeuchter')) {\n            humidifier.push(entity);\n        } else if (entity_id.includes('cooler') || entity_id.includes('klima')) {\n            cooler.push(entity);\n        } else if (entity_id.includes('heater') || entity_id.includes('Heizung')) {\n            heater.push(entity);\n        } else if (entity_id.includes('pump') || entity_id.includes('pumping')) {\n            pump.push(entity);\n        }else if (entity_id.includes('ruck') || entity_id.includes('airctr') || entity_id.includes('exhaust') || entity_id.includes('abluft')) {\n            dutyCycleExhaust.push(entity);\n        } else if (entity_id.includes('vent')) {\n            vents.push(entity);\n        } else if (entity_id.includes('switch')) {\n            switches.push(entity);\n        } else if (entity_id.includes('power') || entity_id.includes('energy')) {\n            power.push(entity);\n        }\n\n        // ADDONS\n        else if (entity_id.includes('battery') || entity_id.includes('batt')) {\n            battery.push(entity);\n        }\n    }\n}\n\n// Nachrichtenausgabe auf verschiedenen Outputs\nreturn [\n    // ENVIORMENT\n    { payload: wish, topic: 'Wish' },\n    { payload: temperatures, topic: 'temperature' },\n    { payload: humidity, topic: 'humidity' },\n    { payload: dewpoints, topic: 'dewpoint' },\n    { payload: moisture, topic: 'moisture' },\n    { payload: root, topic: 'roottemp' },\n    { payload: conductivity, topic: 'conductivity' },\n    { payload: pressures, topic: 'pressure' },\n    { payload: co2, topic: 'carbon_dioxide' },\n    { payload: lumen, topic: 'illuminance' },\n    // DEVICEINFO\n    { payload: battery, topic: 'battery' },\n    { payload: power, topic: 'power' },\n    // DEVICES\n    { payload: switches, topic: 'switch' },\n    { payload: vents, topic: 'Vents' },\n    { payload: dutyCycleExhaust, topic: 'Exhaust' },\n    { payload: humidifier, topic: 'humidifier' },\n    { payload: dehumidifier, topic: 'dehumidifier' },\n    { payload: cooler, topic: 'cooler' },\n    { payload: heater, topic: 'heater' },\n    { payload: pump, topic: 'pump' }\n];\n","outputs":20,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":150,"y":240,"wires":[["fd840d8e89f4a1a9"],["788ff18f453cb71a"],["4ac178982831a199"],["279b0b2a0bc504ca"],["02f348d35ebc626a"],["4a7711999961f732"],["dcc4f38f63e30a93"],["b3f3c8e097e9deab"],["910e0521f19bc495"],["fd5b01301f4c127b"],["c3cb5ccd349e588a"],["a6ffbd85ba34d697"],["3592de82d318bcc3"],["f17ce61aa53f8de1"],["1b4109565dd32a64"],["75e4dd66180fefe6"],["e0089b76e9b07458"],["4d0555b9231bf39c"],["2a688d0ab481b42b"],[]]},{"id":"7316af7c4211ddef","type":"link out","z":"d95a2d1f80d65696","name":"Humidifier","mode":"link","links":["27ad1f432dcc7dfc","a7442e288be67768"],"x":605,"y":740,"wires":[]},{"id":"6619d22506855909","type":"link out","z":"d95a2d1f80d65696","name":"Dehumidifier","mode":"link","links":["1136a49332e1678a"],"x":605,"y":780,"wires":[]},{"id":"6a27dc258154d174","type":"link out","z":"d95a2d1f80d65696","name":"Vents","mode":"link","links":[],"x":605,"y":660,"wires":[]},{"id":"38dbfc42067a545a","type":"ha-sensor","z":"d95a2d1f80d65696","name":"DryingAVGHUM","entityConfig":"21f77f51eed89bc1","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[{"property":"topic","propertyType":"msg","value":"DryTentHum","valueType":"str"}],"x":940,"y":160,"wires":[["fdca92a0aa4e6cd2","076ecef3fc67db9e","948ad699c26c15c1"]]},{"id":"a0a9554edcb2f04b","type":"ha-sensor","z":"d95a2d1f80d65696","name":"DryingAVGTemp","entityConfig":"f4caa1d3cf2afd02","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[{"property":"topic","propertyType":"msg","value":"DryTentTemp","valueType":"str"}],"x":940,"y":240,"wires":[["fdca92a0aa4e6cd2","4ec3e03005965dca","948ad699c26c15c1"]]},{"id":"e75e84faafeb206a","type":"function","z":"d95a2d1f80d65696","name":"Calc-AVG","func":"// Funktion zur Berechnung des Durchschnitts\nconst AvgTemp = (temps) => {\n    let sum = 0;\n    let count = 0;\n\n    temps.forEach((entry) => {\n        const temp = parseFloat(entry.value);\n        if (!isNaN(temp)) {\n            sum += temp;\n            count++;\n        }\n    });\n\n    if (count === 0) {\n        return \"unavailable\";\n    }\n\n    const avg = sum / count;\n    return avg.toFixed(2);\n};\n\n// Durchschnittstemperatur für jede Temperaturkategorie berechnen\nconst temperatureAvg = AvgTemp(msg.payload.temperature);\nconst humidityAvg = AvgTemp(msg.payload.humidity);\n\n// Objekt mit den Durchschnittswerten erstellen\nconst avgData = {\n    AvgTempData: temperatureAvg,\n    AvgHumData: humidityAvg\n};\n\n// Nachrichten erstellen und zurückgeben\nconst avgDataMsg = { payload: avgData, topic: \"AvgData\" };\nconst tempMsg = { payload: temperatureAvg, topic: \"AvgTemp\" };\nconst humMsg = { payload: humidityAvg, topic: \"AvgHum\" };\n\nreturn [humMsg, tempMsg, avgDataMsg];\n","outputs":3,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":720,"y":200,"wires":[["38dbfc42067a545a"],["a0a9554edcb2f04b"],["53e5f7d07471afde"]]},{"id":"28c64e78ac65f78a","type":"comment","z":"d95a2d1f80d65696","name":"VPD-Creation","info":"","x":730,"y":40,"wires":[]},{"id":"e9bb83f7c17df4fb","type":"ha-sensor","z":"d95a2d1f80d65696","name":"WaterActivityTent","entityConfig":"c4dd8cf5329e0b68","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1370,"y":80,"wires":[[]]},{"id":"68e215c7fea3bbc2","type":"function","z":"d95a2d1f80d65696","name":"Drying-VPD-DewPoint","func":"function calculateVPD(luftTemperatur, dewPoint) {\n    // Stellen Sie sicher, dass alle Eingaben Zahlen sind\n    luftTemperatur = parseFloat(luftTemperatur);\n    dewPoint = parseFloat(dewPoint);\n\n    // Überprüfen Sie, ob einer der Werte NaN ist\n    if (isNaN(luftTemperatur) || isNaN(dewPoint)) {\n        return \"unavailable\";\n    }\n\n    // Berechnung des Sättigungsdampfdrucks (SDP) für Lufttemperatur\n    let sdpLuft = 0.6108 * Math.exp((17.27 * luftTemperatur) / (luftTemperatur + 237.3));\n    // Berechnung des tatsächlichen Dampfdrucks (ADP) am Taupunkt\n    let adp = 0.6108 * Math.exp((17.27 * dewPoint) / (dewPoint + 237.3));\n\n    // Berechnung des VPD\n    let vpd = sdpLuft - adp;\n\n    return vpd.toFixed(2);  // Rundet den VPD-Wert auf zwei Dezimalstellen\n}\n\n// Beispiel für die Verwendung der Funktion\nlet luftTemperatur = parseFloat(msg.payload.DryTentTemp); // Stellen Sie sicher, dass dies eine Zahl ist\nlet dewPoint = parseFloat(msg.payload.DryTentDewPoint); // Stellen Sie sicher, dass dies eine Zahl ist\n\n// Überprüfen Sie, ob die Eingaben gültig sind\nif (isNaN(luftTemperatur) || isNaN(dewPoint)) {\n    msg.payload = \"Invalid input values\";\n    return msg;\n}\n\nlet vpd = calculateVPD(luftTemperatur, dewPoint);\n\nmsg.payload = vpd;\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1380,"y":240,"wires":[["24ab89a5c32e70ea","bda5d878aa6e98a0"]]},{"id":"4ec3e03005965dca","type":"join","z":"d95a2d1f80d65696","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1190,"y":240,"wires":[["68e215c7fea3bbc2","8e01eedce665b25a","3e5d8f81e32292cc"]]},{"id":"9d5266f245d63e25","type":"debug","z":"d95a2d1f80d65696","name":"debug 76","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1400,"y":440,"wires":[]},{"id":"bda5d878aa6e98a0","type":"ha-sensor","z":"d95a2d1f80d65696","name":"VPD-DRYING-Tent-Dewpoint","entityConfig":"7adf25576d4cdadb","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[{"property":"topic","propertyType":"msg","value":"currentVPD","valueType":"str"}],"x":1660,"y":240,"wires":[[]]},{"id":"8e01eedce665b25a","type":"function","z":"d95a2d1f80d65696","name":"Drying-VaporPressure","func":"function calculateVaporPressure(dewPoint) {\n    // Ensure input is a number\n    dewPoint = parseFloat(dewPoint);\n\n    // Check for NaN values\n    if (isNaN(dewPoint)) {\n        return \"unavailable\";\n    }\n\n    // Calculate vapor pressure using the formula (in mb)\n    let vaporPressure_mb = 6.11 * Math.pow(10, (7.5 * dewPoint) / (237.3 + dewPoint));\n\n    return vaporPressure_mb.toFixed(2);  // Round the vapor pressure to two decimal places\n}\n\nfunction calculateSaturationVaporPressure(temperature) {\n    // Ensure input is a number\n    temperature = parseFloat(temperature);\n\n    // Check for NaN values\n    if (isNaN(temperature)) {\n        return \"unavailable\";\n    }\n\n    // Calculate saturation vapor pressure using the formula (in mb)\n    let saturationVaporPressure_mb = 6.11 * Math.pow(10, (7.5 * temperature) / (237.3 + temperature));\n\n    return saturationVaporPressure_mb.toFixed(2);  // Round the vapor pressure to two decimal places\n}\n\n// Example usage of the function with debug logging\nlet temperature = parseFloat(msg.payload.DryTentTemp); // Ensure this is a number\nlet dewPoint = parseFloat(msg.payload.DryTentDewPoint); // Ensure this is a number\n\n// Debug logging for inputs\n//node.warn(`Raw inputs - Temperature: ${temperature}, Dew Point: ${dewPoint}`);\n\n// Check if inputs are valid numbers\nif (isNaN(temperature) || isNaN(dewPoint)) {\n    //node.warn(\"Invalid input values\");\n    return [null, null]; // Return null for both outputs\n}\n\nlet saturationVaporPressure = calculateSaturationVaporPressure(temperature);\nlet actualVaporPressure = calculateVaporPressure(dewPoint);\n\n// Return the results as numeric values for each output\nreturn [\n    { payload: parseFloat(saturationVaporPressure) }, // First output: Saturation Vapor Pressure\n    { payload: parseFloat(actualVaporPressure) }      // Second output: Actual Vapor Pressure\n];\n","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1360,"y":360,"wires":[["9d5266f245d63e25","14681bef6f1cb273"],["9d5266f245d63e25","cfa627826d7cf6f8"]]},{"id":"24ab89a5c32e70ea","type":"debug","z":"d95a2d1f80d65696","name":"debug 84","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1420,"y":280,"wires":[]},{"id":"14681bef6f1cb273","type":"ha-sensor","z":"d95a2d1f80d65696","name":"VaporPressure-Saturation-mbar","entityConfig":"73b7a7323e840e31","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1670,"y":320,"wires":[[]]},{"id":"cfa627826d7cf6f8","type":"ha-sensor","z":"d95a2d1f80d65696","name":"VaporPressure-Actual-mbar","entityConfig":"c9b08ec4b93dfab7","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[{"property":"topic","propertyType":"msg","value":"currentVP","valueType":"str"}],"x":1660,"y":400,"wires":[["948ad699c26c15c1","daa2b632ad4e60ed"]]},{"id":"076ecef3fc67db9e","type":"function","z":"d95a2d1f80d65696","name":"WaterActivityWish","func":"// Input RH\nlet relativeHumidity = parseFloat(msg.payload);\n\n// Check if input is valid\nif (isNaN(relativeHumidity) || relativeHumidity < 0 || relativeHumidity > 100) {\n    msg.payload = \"Invalid RH value\";\n    return msg;\n}\n\n// Calculate water activity (aw)\nlet waterActivity = relativeHumidity / 100;\n\n// Output the result\nmsg.payload = waterActivity.toFixed(2); // Round to 2 decimal places\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1170,"y":80,"wires":[["e9bb83f7c17df4fb"]]},{"id":"161cf403a7c862c7","type":"function","z":"d95a2d1f80d65696","name":"Calc-Dewpoint","func":"// Funktion zur Berechnung des Taupunkts\nconst calculateDewPoint = (temperature, humidity) => {\n    const temp = parseFloat(temperature);\n    const hum = parseFloat(humidity);\n\n    if (isNaN(temp) || isNaN(hum)) {\n        return \"unavailable\";\n    }\n\n    const dewPoint = temp - ((100 - hum) / 5);\n    return parseFloat(dewPoint.toFixed(3));\n};\n\n// Beispielinput\nconst inputData = msg.payload;\n\n// Taupunkt berechnen\nconst temperature = parseFloat(inputData.DryTentTemp);\nconst humidity = parseFloat(inputData.DryTentHum);\nconst dewPoint = calculateDewPoint(temperature, humidity);\n\n// Taupunkt als Zahl zurückgeben\nmsg.payload = dewPoint;\nmsg.topic = \"DryTentDewpoint\"\nreturn msg\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1300,"y":160,"wires":[["9d42b8567c2703bc"]]},{"id":"fdca92a0aa4e6cd2","type":"join","z":"d95a2d1f80d65696","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1130,"y":160,"wires":[["161cf403a7c862c7","dbc6c83798648f53"]]},{"id":"9d42b8567c2703bc","type":"ha-sensor","z":"d95a2d1f80d65696","name":"DryingAVGDewpoint","entityConfig":"4725cf9d34fa649f","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[{"property":"topic","propertyType":"msg","value":"DryTentDewPoint","valueType":"str"}],"x":1500,"y":160,"wires":[["948ad699c26c15c1","4ec3e03005965dca"]]},{"id":"3e5d8f81e32292cc","type":"debug","z":"d95a2d1f80d65696","name":"debug 215","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1170,"y":280,"wires":[]},{"id":"dbc6c83798648f53","type":"debug","z":"d95a2d1f80d65696","name":"debug 216","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1150,"y":120,"wires":[]},{"id":"f079f4cd774ac619","type":"function","z":"d95a2d1f80d65696","name":"TentModesSetup","func":"// Initialisiert das Array für die Ausgänge mit Nullen\nlet outputs = [null, null, null, null,null];\n\n// Überprüft den Zustand des eingehenden Payloads und setzt den entsprechenden Ausgang\nif (msg.payload === \"DarkRoom\") {\n    return [{ payload: msg.payload, topic: \"DarkRoomMode\" }, null, null, null, null,];\n}\nelse if (msg.payload === \"Drying\") {\n    return [null, { payload: msg.payload, topic: \"DryingMode\" }, null, null, null,];\n}\nelse if (msg.payload === \"Curing\") {\n    return [null, null, { payload: msg.payload, topic: \"CuringMode\" }, null, null];\n}\nelse if (msg.payload === \"Holding\") {\n    return [null, null, null, { payload: msg.payload, topic: \"StorageMode\" }, null];\n}\n\nelse if (msg.payload === \"Disabled\") {\n    return [null, null, null, null, { payload: msg.payload, topic: \"ModeDisabeld\" }];\n}\n\n// Wenn keine Bedingungen zutreffen, sendet nichts\nreturn [null, null, null, null];\n","outputs":5,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2370,"y":220,"wires":[["e81af5c35829308e","f3e9bf9dc57e6156"],["e81af5c35829308e","444383a46862b747"],["e81af5c35829308e","323037a57f0fe482"],["e81af5c35829308e","bcce67ceac122d4f"],["e81af5c35829308e"]]},{"id":"daa2b632ad4e60ed","type":"api-current-state","z":"d95a2d1f80d65696","name":"DreyTentType","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"select.drytentcana","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"TentMode","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":2180,"y":220,"wires":[["f079f4cd774ac619"]]},{"id":"e81af5c35829308e","type":"debug","z":"d95a2d1f80d65696","name":"debug 219","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2390,"y":280,"wires":[]},{"id":"f3e9bf9dc57e6156","type":"link out","z":"d95a2d1f80d65696","name":"DarkRoom","mode":"link","links":["b33726c812d39d0a","5b3914166f276ba3","f1e2e18a0f5ca6fd","2f979e30a72b2210"],"x":2625,"y":120,"wires":[]},{"id":"444383a46862b747","type":"link out","z":"d95a2d1f80d65696","name":"Drying","mode":"link","links":["cb2d48217c936482"],"x":2625,"y":200,"wires":[]},{"id":"323037a57f0fe482","type":"link out","z":"d95a2d1f80d65696","name":"Curing","mode":"link","links":["a172054a22685836"],"x":2625,"y":280,"wires":[]},{"id":"bcce67ceac122d4f","type":"link out","z":"d95a2d1f80d65696","name":"Hold","mode":"link","links":["7a66743a709ccc67"],"x":2625,"y":340,"wires":[]},{"id":"cb2d48217c936482","type":"link in","z":"d95a2d1f80d65696","name":" Dry","links":["444383a46862b747"],"x":845,"y":1020,"wires":[["aec9a5f0a9e9fe5b"]]},{"id":"a172054a22685836","type":"link in","z":"d95a2d1f80d65696","name":"Curing","links":["323037a57f0fe482"],"x":845,"y":1220,"wires":[["859b31d9b8bf4477"]]},{"id":"7a66743a709ccc67","type":"link in","z":"d95a2d1f80d65696","name":"Storage","links":["bcce67ceac122d4f"],"x":845,"y":820,"wires":[["6b3f75c162fa62fc"]]},{"id":"53e5f7d07471afde","type":"function","z":"d95a2d1f80d65696","name":"VPD Calc ","func":"function calculateVPD(luftTemperatur, blattTemperatur, relativeLuftfeuchtigkeit) {\n    // Stellen Sie sicher, dass alle Eingaben Zahlen sind\n    luftTemperatur = parseFloat(luftTemperatur);\n    blattTemperatur = parseFloat(blattTemperatur);\n    relativeLuftfeuchtigkeit = parseFloat(relativeLuftfeuchtigkeit);\n\n    // Überprüfen Sie, ob einer der Werte NaN ist\n    if (isNaN(luftTemperatur) || isNaN(blattTemperatur) || isNaN(relativeLuftfeuchtigkeit)) {\n        return \"unavailable\";\n    }\n\n    // Berechnungen wie zuvor\n    let sdpLuft = 0.6108 * Math.exp((17.27 * luftTemperatur) / (luftTemperatur + 237.3));\n    let sdpBlatt = 0.6108 * Math.exp((17.27 * blattTemperatur) / (blattTemperatur + 237.3));\n    let adp = (relativeLuftfeuchtigkeit / 100) * sdpLuft;\n    let vpd = sdpBlatt - adp;\n\n    return vpd.toFixed(2);\n}\n\n// Beispiel für die Verwendung der Funktion\nlet luftTemperatur = msg.payload.AvgTempData; // Stellen Sie sicher, dass dies eine Zahl ist\nlet blattTemperatur = parseFloat(luftTemperatur) - 2; // Keine Rundung, genaue Berechnung\nlet relativeLuftfeuchtigkeit = msg.payload.AvgHumData; // Stellen Sie sicher, dass dies eine Zahl ist\n\nlet vpd = calculateVPD(luftTemperatur, blattTemperatur, relativeLuftfeuchtigkeit);\n\nmsg.payload = vpd;\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":780,"y":100,"wires":[["d605da94668dcc2c"]]},{"id":"d605da94668dcc2c","type":"ha-sensor","z":"d95a2d1f80d65696","name":"vpdDrying","entityConfig":"4f7f25d7aed69b8a","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":930,"y":100,"wires":[[]]},{"id":"315c367123aae08a","type":"ha-select","z":"d95a2d1f80d65696","name":"DryTentMaster","version":1,"debugenabled":false,"inputs":1,"outputs":1,"entityConfig":"5e8e4b22b2382ebb","mode":"set","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"},{"property":"topic","propertyType":"msg","value":"ChangePlanteState","valueType":"str"}],"x":1980,"y":220,"wires":[["daa2b632ad4e60ed"]]},{"id":"3dd759b2e74f2aac","type":"link in","z":"d95a2d1f80d65696","name":"ModeChange","links":["ae1927c618f3e107","2a50c13bb93249fb"],"x":1845,"y":220,"wires":[["315c367123aae08a"]]},{"id":"ac11b417e222aa9c","type":"link out","z":"d95a2d1f80d65696","name":"DryingTargets","mode":"link","links":["2448f2af4159d8f6","12f1c17ecdc5b413","44e030e36f215422","87bb1c1e71e1e778","2823d304d5378185","11b7b29bccc1a54c","c82eece625cfb949","de920b535cbd82f5"],"x":2115,"y":180,"wires":[]},{"id":"6b3f75c162fa62fc","type":"join","z":"d95a2d1f80d65696","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"4","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"num","reduceFixup":"","x":990,"y":880,"wires":[["9f0f129e0cacbf83","22efd312e63cf496"]]},{"id":"9f0f129e0cacbf83","type":"debug","z":"d95a2d1f80d65696","name":"debug 233","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1010,"y":800,"wires":[]},{"id":"948ad699c26c15c1","type":"join","z":"d95a2d1f80d65696","name":"TentDataDry","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"4","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1780,"y":180,"wires":[["e8de80ead07ad099","1bd0d476d1d2cebf"]]},{"id":"859b31d9b8bf4477","type":"join","z":"d95a2d1f80d65696","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"4","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"num","reduceFixup":"","x":990,"y":1280,"wires":[["559cb37a5af7cb77","1f1beb34e151ced8"]]},{"id":"aec9a5f0a9e9fe5b","type":"join","z":"d95a2d1f80d65696","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"4","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"num","reduceFixup":"","x":990,"y":1080,"wires":[["820d5d62dd712d5f","947331172e5c9d8d"]]},{"id":"820d5d62dd712d5f","type":"debug","z":"d95a2d1f80d65696","name":"debug 235","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1020,"y":1000,"wires":[]},{"id":"559cb37a5af7cb77","type":"debug","z":"d95a2d1f80d65696","name":"debug 236","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1010,"y":1220,"wires":[]},{"id":"2f979e30a72b2210","type":"link in","z":"d95a2d1f80d65696","name":"link in 85","links":["f3e9bf9dc57e6156"],"x":845,"y":600,"wires":[["4040b30dc189553d","97cb8c8b06b9d896"]]},{"id":"31de0899bee44a27","type":"link in","z":"d95a2d1f80d65696","name":"DryingTargets","links":["1128c0f84c04d183"],"x":845,"y":660,"wires":[["4040b30dc189553d","97cb8c8b06b9d896"]]},{"id":"2823d304d5378185","type":"link in","z":"d95a2d1f80d65696","name":"TentData","links":["ac11b417e222aa9c"],"x":845,"y":700,"wires":[["4040b30dc189553d","97cb8c8b06b9d896"]]},{"id":"4040b30dc189553d","type":"join","z":"d95a2d1f80d65696","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"4","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"num","reduceFixup":"","x":990,"y":660,"wires":[["d5ee610af291b3ad","43e60410d9fdd926"]]},{"id":"d5ee610af291b3ad","type":"debug","z":"d95a2d1f80d65696","name":"debug 239","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1170,"y":620,"wires":[]},{"id":"96b5d48b9bbcf78a","type":"link in","z":"d95a2d1f80d65696","name":"EnvData","links":["265fe00ebc822be2"],"x":845,"y":860,"wires":[["6b3f75c162fa62fc"]]},{"id":"d37b94da4dec65f6","type":"link in","z":"d95a2d1f80d65696","name":"DryingTargets","links":["1128c0f84c04d183"],"x":845,"y":940,"wires":[["6b3f75c162fa62fc"]]},{"id":"11b7b29bccc1a54c","type":"link in","z":"d95a2d1f80d65696","name":"TentData","links":["ac11b417e222aa9c"],"x":845,"y":900,"wires":[["6b3f75c162fa62fc"]]},{"id":"cf3d7c529e315591","type":"link in","z":"d95a2d1f80d65696","name":"EnvData","links":["265fe00ebc822be2"],"x":845,"y":1060,"wires":[["aec9a5f0a9e9fe5b"]]},{"id":"035fc7c7ac4cfd65","type":"link in","z":"d95a2d1f80d65696","name":"DryingTargets","links":["1128c0f84c04d183"],"x":845,"y":1140,"wires":[["aec9a5f0a9e9fe5b"]]},{"id":"c82eece625cfb949","type":"link in","z":"d95a2d1f80d65696","name":"TentData","links":["ac11b417e222aa9c"],"x":845,"y":1100,"wires":[["aec9a5f0a9e9fe5b"]]},{"id":"e811d0b3ccda053e","type":"link in","z":"d95a2d1f80d65696","name":"EnvData","links":["265fe00ebc822be2"],"x":845,"y":1260,"wires":[["859b31d9b8bf4477"]]},{"id":"57af34c8042aba4f","type":"link in","z":"d95a2d1f80d65696","name":"DryingTargets","links":["1128c0f84c04d183"],"x":845,"y":1340,"wires":[["859b31d9b8bf4477"]]},{"id":"de920b535cbd82f5","type":"link in","z":"d95a2d1f80d65696","name":"TentData","links":["ac11b417e222aa9c"],"x":845,"y":1300,"wires":[["859b31d9b8bf4477"]]},{"id":"e8de80ead07ad099","type":"function","z":"d95a2d1f80d65696","name":"CollectData","func":"// Define the target variables\nconst dryTemp = parseFloat(msg.payload.DryTentTemp);\nconst dryHum = parseFloat(msg.payload.DryTentHum);\nconst dryDewPoint = parseFloat(msg.payload.DryTentDewPoint);\nconst dryVP = parseFloat(msg.payload.currentVP);\n\n// Create an object to store the collected values\nconst collectedData = {\n    dryTemp: dryTemp,\n    dryHum: dryHum,\n    dryDewPoint: dryDewPoint,\n    dryVP: dryVP\n};\n\n// Check if any of the collected data is undefined or NaN\nif (\n    isNaN(collectedData.dryTemp) || collectedData.dryTemp === undefined ||\n    isNaN(collectedData.dryHum) || collectedData.dryHum === undefined ||\n    isNaN(collectedData.dryDewPoint) || collectedData.dryDewPoint === undefined ||\n    isNaN(collectedData.dryVP) || collectedData.dryVP === undefined\n) {\n    return msg;\n}\n\n// Set the collected data as the payload\nmsg.payload = collectedData;\nmsg.topic = \"dryData\";\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1970,"y":180,"wires":[["ac11b417e222aa9c","e3f2fb970a98653f"]]},{"id":"e3f2fb970a98653f","type":"debug","z":"d95a2d1f80d65696","name":"debug 240","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1990,"y":140,"wires":[]},{"id":"1bd0d476d1d2cebf","type":"debug","z":"d95a2d1f80d65696","name":"debug 241","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1770,"y":140,"wires":[]},{"id":"43e60410d9fdd926","type":"function","z":"d95a2d1f80d65696","name":"DryingHandler","func":"const outputs = [null, null, null, null];\n\nconst tolerance = 0.3\nconst dewpointTolerance = 2.0; // Toleranzwert für Taupunkt in Grad Celsius\n\nconst outdoortemp = msg.payload[\"sensor.tempoutdoor\"];\n\nconst targetHum = msg.payload.TargetDryData.TargetDryHum;\nconst targetTemp = msg.payload.TargetDryData.TargetDryTemp;\nconst targetDewpoint = msg.payload.TargetDryData.TargetDryDew;\nconst targetVP = msg.payload.TargetDryData.targetVP;\n\nconst currentHum = msg.payload.dryData.dryHum;\nconst currentTemp = msg.payload.dryData.dryTemp;\nconst currentDewpoint = msg.payload.dryData.dryDewPoint;\nconst currentVP = msg.payload.dryData.dryVP;\n\n// Logging der aktuellen VP und Ziel-VP-Bereich zur Überprüfung und Debugging.\nnode.warn(`Drying-VP target: ${targetVP}`);\n\nfunction calculateAdjustmentBasedOnConditions() {\n    const adjustments = {\n        exhaustSpeed: \"unchanged\",\n        humidifier: \"unchanged\",\n        dehumidifier: \"unchanged\",\n        heaterFan: \"unchanged\",\n        coolerFan: \"unchanged\",\n        ventsALL: \"unchanged\",\n    };\n\n    // Taupunkt Anpassung\n    if (currentVP > targetVP + tolerance) {\n        node.warn(`Drying-VP: ${currentVP} zu hoch an Target: ${targetVP}.`);\n        return {\n            exhaustSpeed: \"increased\",      // Erhöht die Abluftgeschwindigkeit, um feuchte Luft herauszuziehen\n            humidifier: \"reduced\",          // Schaltet den Luftbefeuchter aus, um Feuchtigkeit zu reduzieren\n            dehumidifier: \"increased\",      // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            coolerFan: \"reduced\",           // Verringert die Kühlleistung, um die Temperatur zu erhöhen\n        };\n    } else if (currentVP < targetVP - tolerance) {\n        node.warn(`Drying-VP: ${currentVP} zu gering an Target:${targetVP}. `);\n        return {\n            exhaustSpeed: \"reduced\",    // Reduziert die Abluftgeschwindigkeit, hält feuchte Luft im Raum\n            humidifier: \"increased\",    // Schaltet den Luftbefeuchter ein, um Feuchtigkeit zu erhöhen\n            dehumidifier: \"reduced\",    // Schaltet den Luftentfeuchter aus, um Feuchtigkeit zu erhöhen\n            coolerFan: \"increased\",     // Erhöht die Kühlleistung, um die Temperatur zu verringern\n        };\n    } else {\n        node.warn(`Drying-VP: ${currentVP} im gewünschten Bereich`);\n        return {\n            exhaustSpeed: \"unchanged\",\n            humidifier: \"unchanged\",\n            dehumidifier: \"unchanged\",\n            coolerFan: \"unchanged\",\n        };\n    }\n}\n\n// Entscheidungslogik zur Steuerung der Umgebungsbedingungen, nutzt die calculateAdjustmentBasedOnConditions Funktion.\nconst adjustments = calculateAdjustmentBasedOnConditions();\n\n// Hinzufügen der Anpassungen zum Payload\nmsg.payload = {\n    exhaustSpeed: adjustments.exhaustSpeed,\n    humidifier: adjustments.humidifier,\n    dehumidifier: adjustments.dehumidifier,\n    heaterFan: adjustments.heaterFan,\n    coolerFan: adjustments.coolerFan,\n};\n\n\n// Rückgabe des modifizierten Payloads für weitere Verwendung im Flow.\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1160,"y":680,"wires":[["48c586de4b0046b1","0724818ae0171d24"]]},{"id":"97cb8c8b06b9d896","type":"debug","z":"d95a2d1f80d65696","name":"debug 251","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":990,"y":580,"wires":[]},{"id":"48c586de4b0046b1","type":"function","z":"d95a2d1f80d65696","name":"Check What Do","func":"let outputs = [null, null, null, null, null, null, null, null, null];\n\nvar percentDifference = msg.payload.percentDifference\n\n// Abluft\nif (msg.payload.exhaustSpeed === \"unchanged\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"increased\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"reduced\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n}\n\n// Humidifier\nif (msg.payload.humidifier === \"unchanged\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"increased\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"reduced\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n}\n\n// Dehumidifier\nif (msg.payload.dehumidifier === \"unchanged\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"increased\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"reduced\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n}\n\n// HeaterFan\nif (msg.payload.heaterFan === \"unchanged\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"increased\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"reduced\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n}\n\n// CoolerFan\nif (msg.payload.coolerFan === \"unchanged\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"increased\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"reduced\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n}\n\n// LightIntensity\nif (msg.payload.lightIntensity === \"unchanged\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"increased\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"reduced\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n}\n\n// VentsALL\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"increased\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"reduced\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n}\n\n// VentsTopSpeed\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"increased\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"reduced\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n}\n\n// VentsDownSpeed\nif (msg.payload.ventsDownSpeed === \"unchanged\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"increased\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"reduced\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n}\n\n\n\nreturn outputs;\n","outputs":9,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1520,"y":940,"wires":[["61c8e4bc0fb9f598"],["85576630d2685b3e"],["9e7bc6d79550445b"],[],["13dd6ae7815b011d"],[],[],[],[]]},{"id":"acbb671a920e1204","type":"function","z":"d95a2d1f80d65696","g":"39650dd0d506b2d1","name":"Exhaust Setup","func":"// Hilfsfunktion zur Überprüfung, ob ein Wert numerisch ist\nconst isNumeric = (value) => {\n    return !isNaN(parseFloat(value)) && isFinite(value);\n};\n\n// Funktion zur Bestimmung des dutyCycle-Werts\nconst findDutyCycle = (exhaustArray) => {\n    if (exhaustArray.length === 0) {\n        return null; // Keine Werte zu verarbeiten, wenn das Array leer ist\n    }\n    for (let i = 0; i < exhaustArray.length; i++) {\n        if (isNumeric(exhaustArray[i].value)) {\n            return parseInt(exhaustArray[i].value, 10);\n        }\n    }\n    return null; // Falls kein numerischer Wert gefunden wurde\n};\n\nlet outputs = [null, null, null, null]; // Array für vier Ausgänge\n\n// Zustand der Abluft und Geschwindigkeit aus der Payload extrahieren\nconst exhaustSpeed = msg.payload.exhaustSet.value || 'unchanged'; // Anpassung hier: falls kein Wert vorhanden ist, setze auf 'unchanged'\nlet exhaustState = 'off'; // Standardwert setzen, falls kein Zustand gefunden wird\nif (msg.payload.Exhaust && msg.payload.Exhaust.length > 0) {\n    const exhaustSwitch = msg.payload.Exhaust.find(e => e.entity_id && e.entity_id.toLowerCase().includes(\"switch\"));\n    if (exhaustSwitch && exhaustSwitch.value) {\n        exhaustState = exhaustSwitch.value;\n    }\n}\n\nconst dutyCycle = findDutyCycle(msg.payload.Exhaust) || 10; // Anpassung hier: falls kein Wert vorhanden ist, setze auf 10\n\nlet newDutyCycle = dutyCycle;\n\n// Berechnung des neuen Duty Cycle basierend auf festen Schritten\nif (exhaustSpeed === 'increased') {\n    newDutyCycle = dutyCycle + 5;\n} else if (exhaustSpeed === 'reduced') {\n    newDutyCycle = dutyCycle - 5;\n}\n\n// Stellen Sie sicher, dass der neue Duty Cycle innerhalb der Grenzen liegt\nnewDutyCycle = Math.min(95, Math.max(10, newDutyCycle));\n\n// Abluft starten auf dem ersten Ausgang, wenn sie aus ist und erhöht werden muss\nif (exhaustSpeed === \"increased\" && exhaustState === \"off\") {\n    outputs[0] = { payload: \"Starte Abluft\", topic: \"Start\" };\n    return outputs;\n}\n\n// Abluft-Geschwindigkeit erhöhen, wenn sie bereits eingeschaltet ist\nif (exhaustSpeed === \"increased\" && exhaustState === \"on\") {\n    outputs[2] = { payload: newDutyCycle.toString(), topic: \"Increase\" };\n    return outputs;\n}\n\n// Abluft stoppen auf dem zweiten Ausgang, wenn die Geschwindigkeit reduziert wird und der Duty Cycle sehr niedrig ist\nif (exhaustSpeed === \"reduced\" && exhaustState === \"on\" && newDutyCycle <= 10) {\n    outputs[1] = { payload: \"Stoppe Abluft\", topic: \"Stop\" };\n    return outputs;\n} else if (exhaustSpeed === \"reduced\" && exhaustState === \"on\") {\n    outputs[2] = { payload: newDutyCycle.toString(), topic: \"Decrease\" };\n    return outputs;\n}\n\n// Warnung ausgeben, wenn versucht wird, die Abluftgeschwindigkeit zu reduzieren, obwohl sie bereits aus ist\nif (exhaustSpeed === \"reduced\" && exhaustState === \"off\") {\n    outputs[1] = { payload: \"Abluft bereits gestoppt, kann nicht weiter reduziert werden\", topic: \"AlreadyStopped\" };\n    return outputs;\n}\n\n// Nichts tun, wenn keine Änderung erforderlich ist\nif (exhaustSpeed === \"unchanged\") {\n    outputs[3] = { payload: \"Abluft unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n    return outputs;\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2140,"y":700,"wires":[["ed48bd245e4075d8"],["ed48bd245e4075d8"],["a3cfacc22ceb6aee","ed48bd245e4075d8"],["ed48bd245e4075d8"]]},{"id":"2db70e9c77512cd5","type":"http request","z":"d95a2d1f80d65696","g":"39650dd0d506b2d1","name":"DutyPostChange","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.235:5544/air/ctrl","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":2430,"y":760,"wires":[["91a1ad1cbe0b7c09"]]},{"id":"a3cfacc22ceb6aee","type":"function","z":"d95a2d1f80d65696","g":"39650dd0d506b2d1","name":"DutyChanger","func":"\nconst NewDuty = msg.payload\n\nmsg.payload = { \"newDuty\": NewDuty}\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":2270,"y":800,"wires":[["2db70e9c77512cd5","91a1ad1cbe0b7c09"]]},{"id":"61c8e4bc0fb9f598","type":"join","z":"d95a2d1f80d65696","g":"39650dd0d506b2d1","name":"exhasutData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1940,"y":680,"wires":[["acbb671a920e1204","ee92038496ac7849"]]},{"id":"ea7632f875a34c08","type":"link in","z":"d95a2d1f80d65696","g":"39650dd0d506b2d1","name":"ExhaustData","links":["4283f043fbd1a875"],"x":1885,"y":640,"wires":[["61c8e4bc0fb9f598"]]},{"id":"4423ab9f0a3a7051","type":"link out","z":"d95a2d1f80d65696","g":"39650dd0d506b2d1","name":"ExhaustFlowerON","mode":"link","links":["450d50f88a446fed"],"x":2325,"y":640,"wires":[]},{"id":"4355525d0b4b8c51","type":"link out","z":"d95a2d1f80d65696","g":"39650dd0d506b2d1","name":"ExhaustDryerOFF","mode":"link","links":["3508a307ab2b868f"],"x":2325,"y":680,"wires":[]},{"id":"ed48bd245e4075d8","type":"debug","z":"d95a2d1f80d65696","g":"39650dd0d506b2d1","name":"debug 252","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2090,"y":760,"wires":[]},{"id":"ee92038496ac7849","type":"debug","z":"d95a2d1f80d65696","g":"39650dd0d506b2d1","name":"debug 253","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2110,"y":640,"wires":[]},{"id":"91a1ad1cbe0b7c09","type":"debug","z":"d95a2d1f80d65696","g":"39650dd0d506b2d1","name":"debug 254","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2450,"y":800,"wires":[]},{"id":"a337b42e213aa3d0","type":"function","z":"d95a2d1f80d65696","g":"9f5e15c59748e483","name":"BefeuchterSetup","func":"let outputs = [null, null, null];\n\nlet humidifierState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.humidifier.length; i++) {\n    if (msg.payload.humidifier[i].entity_id.includes('humidifier')) {\n        humidifierState = msg.payload.humidifier[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.humidifierSet.value === \"increased\" && humidifierState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.humidifierSet.value === \"reduced\" && humidifierState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.humidifierSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Befeuchter unverändert, keine Aktion erforderlich\",data:msg.payload, topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2190,"y":960,"wires":[["1e3ba145f83bde83"],["be27891ec0917324"],["2cc85d66331ad017","f3356508ddab7974"],[]]},{"id":"85576630d2685b3e","type":"join","z":"d95a2d1f80d65696","g":"9f5e15c59748e483","name":"HumidityData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1940,"y":960,"wires":[["a337b42e213aa3d0","d24528c2638458fa"]]},{"id":"a7442e288be67768","type":"link in","z":"d95a2d1f80d65696","g":"9f5e15c59748e483","name":"HumidifierData","links":["7316af7c4211ddef"],"x":1875,"y":920,"wires":[["85576630d2685b3e"]]},{"id":"d24528c2638458fa","type":"debug","z":"d95a2d1f80d65696","g":"9f5e15c59748e483","name":"debug 255","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2100,"y":900,"wires":[]},{"id":"2cc85d66331ad017","type":"debug","z":"d95a2d1f80d65696","g":"9f5e15c59748e483","name":"debug 256","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2090,"y":1020,"wires":[]},{"id":"1e3ba145f83bde83","type":"link out","z":"d95a2d1f80d65696","g":"9f5e15c59748e483","name":"DryingHumidifierON","mode":"link","links":["acb0f5addd129adf","f101e0061d61ac8d"],"x":2345,"y":920,"wires":[]},{"id":"be27891ec0917324","type":"link out","z":"d95a2d1f80d65696","g":"9f5e15c59748e483","name":"DryingHumidifierOFF","mode":"link","links":["711d5e9407680562"],"x":2405,"y":940,"wires":[]},{"id":"f3356508ddab7974","type":"link out","z":"d95a2d1f80d65696","g":"9f5e15c59748e483","name":"HumidifierMode","mode":"link","links":[],"x":2435,"y":980,"wires":[]},{"id":"0724818ae0171d24","type":"debug","z":"d95a2d1f80d65696","name":"debug 257","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1170,"y":740,"wires":[]},{"id":"6644813d9eaf280d","type":"function","z":"d95a2d1f80d65696","g":"cc8c0cb779e05053","name":"DehumidifierSetup","func":"let outputs = [null, null, null];\n\nlet dehumidifierState = null;\n\n// Schleife, um den Zustand des Dehumidifier zu finden\nfor (let i = 0; i < msg.payload.dehumidifier.length; i++) {\n    if (msg.payload.dehumidifier[i].entity_id.includes('dehumidifier')) {\n        dehumidifierState = msg.payload.dehumidifier[i].value;\n        break;\n    }\n}\n\n// Dehumidifier starten\nif (msg.payload.dehumidifierSet.value === \"increased\" && dehumidifierState === \"off\") {\n    outputs[0] = { payload: \"Starte Dehumidifier\", topic: \"Start\" };\n}\n\n// Dehumidifier stoppen\nif (msg.payload.dehumidifierSet.value === \"reduced\" && dehumidifierState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Dehumidifier\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.dehumidifierSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Dehumidifier unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2190,"y":1180,"wires":[["96a3a134f4100677"],["a2343e8d5b5a2cfe"],["811f01977939a2aa"],[]]},{"id":"9e7bc6d79550445b","type":"join","z":"d95a2d1f80d65696","g":"cc8c0cb779e05053","name":"DehumidifierData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1970,"y":1180,"wires":[["6644813d9eaf280d"]]},{"id":"1136a49332e1678a","type":"link in","z":"d95a2d1f80d65696","g":"cc8c0cb779e05053","name":"Dehumidifier","links":["6619d22506855909"],"x":1875,"y":1120,"wires":[["9e7bc6d79550445b"]]},{"id":"96a3a134f4100677","type":"link out","z":"d95a2d1f80d65696","g":"cc8c0cb779e05053","name":"DryDehumidiferON","mode":"link","links":["99832bcde6aaec0d"],"x":2345,"y":1140,"wires":[]},{"id":"a2343e8d5b5a2cfe","type":"link out","z":"d95a2d1f80d65696","g":"cc8c0cb779e05053","name":"DryDehumidiferOFF","mode":"link","links":["b576fb3aef39185a"],"x":2395,"y":1160,"wires":[]},{"id":"811f01977939a2aa","type":"link out","z":"d95a2d1f80d65696","g":"cc8c0cb779e05053","name":"link out 264","mode":"link","links":[],"x":2445,"y":1200,"wires":[]},{"id":"13dd6ae7815b011d","type":"join","z":"d95a2d1f80d65696","g":"6e865cec49167337","name":"CoolerData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","useparts":true,"accumulate":false,"timeout":"","count":"1","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1950,"y":1360,"wires":[["c915062c9362e93a"]]},{"id":"aad3dbd470556729","type":"link in","z":"d95a2d1f80d65696","g":"6e865cec49167337","name":"link in 86","links":["ef8d063b02d2d6fa"],"x":1875,"y":1300,"wires":[["13dd6ae7815b011d"]]},{"id":"c915062c9362e93a","type":"function","z":"d95a2d1f80d65696","g":"6e865cec49167337","name":"CoolerSetup","func":"let outputs = [null, null, null];\n\nlet coolerState = null;\n\n// Schleife, um den Zustand des Cooler zu finden\nfor (let i = 0; i < msg.payload.cooler.length; i++) {\n    if (msg.payload.cooler[i].entity_id.includes('cooler')) {\n        coolerState = msg.payload.cooler[i].value;\n        break;\n    }\n}\n\n// Cooler starten\nif (msg.payload.coolerSet.value === \"increased\" && coolerState === \"off\") {\n    outputs[0] = { payload: \"Start Cooler\", topic: \"Start\" };\n}\n\n// Cooler stoppen\nif (msg.payload.coolerSet.value === \"reduced\" && coolerState === \"on\") {\n    outputs[1] = { payload: \"Stop Cooler\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.coolerSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Cooler unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2210,"y":1360,"wires":[["6f79edbf657fb486"],["2392fac8ee3c6abf"],["0a35d57f04cf3e61"],[]]},{"id":"6f79edbf657fb486","type":"link out","z":"d95a2d1f80d65696","g":"6e865cec49167337","name":"DryCoolerON","mode":"link","links":["5a5614359d863721"],"x":2325,"y":1320,"wires":[]},{"id":"2392fac8ee3c6abf","type":"link out","z":"d95a2d1f80d65696","g":"6e865cec49167337","name":"DryCoolerOFF","mode":"link","links":["54ac3c52a83ae28a"],"x":2375,"y":1340,"wires":[]},{"id":"0a35d57f04cf3e61","type":"link out","z":"d95a2d1f80d65696","g":"6e865cec49167337","name":"link out 265","mode":"link","links":[],"x":2430,"y":1380,"wires":[]},{"id":"35de4279c266e8c0","type":"link in","z":"d95a2d1f80d65696","name":"Env","links":["265fe00ebc822be2"],"x":75,"y":420,"wires":[[]]},{"id":"a55a43734b865a7c","type":"comment","z":"d95a2d1f80d65696","name":"FIX THIS !!!!","info":"","x":1030,"y":540,"wires":[]},{"id":"22efd312e63cf496","type":"function","z":"d95a2d1f80d65696","name":"DryingHandler","func":"const outputs = [null, null, null, null];\n\nconst tolerance = 0.3\nconst dewpointTolerance = 2.0; // Toleranzwert für Taupunkt in Grad Celsius\n\nconst outdoortemp = msg.payload[\"sensor.tempoutdoor\"];\n\nconst targetHum = msg.payload.TargetDryData.TargetDryHum;\nconst targetTemp = msg.payload.TargetDryData.TargetDryTemp;\nconst targetDewpoint = msg.payload.TargetDryData.TargetDryDew;\nconst targetVP = msg.payload.TargetDryData.targetVP;\n\nconst currentHum = msg.payload.dryData.dryHum;\nconst currentTemp = msg.payload.dryData.dryTemp;\nconst currentDewpoint = msg.payload.dryData.dryDewPoint;\nconst currentVP = msg.payload.dryData.dryVP;\n\n// Logging der aktuellen VP und Ziel-VP-Bereich zur Überprüfung und Debugging.\nnode.warn(`Drying-VP target: ${targetVP}`);\n\nfunction calculateAdjustmentBasedOnConditions() {\n    const adjustments = {\n        exhaustSpeed: \"unchanged\",\n        humidifier: \"unchanged\",\n        dehumidifier: \"unchanged\",\n        heaterFan: \"unchanged\",\n        coolerFan: \"unchanged\",\n        ventsALL: \"unchanged\",\n    };\n\n    // Taupunkt Anpassung\n    if (currentVP > targetVP + tolerance) {\n        node.warn(`Drying-VP: ${currentVP} zu hoch an Target: ${targetVP}.`);\n        return {\n            exhaustSpeed: \"increased\",      // Erhöht die Abluftgeschwindigkeit, um feuchte Luft herauszuziehen\n            humidifier: \"reduced\",          // Schaltet den Luftbefeuchter aus, um Feuchtigkeit zu reduzieren\n            dehumidifier: \"increased\",      // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            coolerFan: \"reduced\",           // Verringert die Kühlleistung, um die Temperatur zu erhöhen\n        };\n    } else if (currentVP < targetVP - tolerance) {\n        node.warn(`Drying-VP: ${currentVP} zu gering an Target:${targetVP}. `);\n        return {\n            exhaustSpeed: \"reduced\",    // Reduziert die Abluftgeschwindigkeit, hält feuchte Luft im Raum\n            humidifier: \"increased\",    // Schaltet den Luftbefeuchter ein, um Feuchtigkeit zu erhöhen\n            dehumidifier: \"reduced\",    // Schaltet den Luftentfeuchter aus, um Feuchtigkeit zu erhöhen\n            coolerFan: \"increased\",     // Erhöht die Kühlleistung, um die Temperatur zu verringern\n        };\n    } else {\n        node.warn(`Drying-VP: ${currentVP} im gewünschten Bereich`);\n        return {\n            exhaustSpeed: \"unchanged\",\n            humidifier: \"unchanged\",\n            dehumidifier: \"unchanged\",\n            coolerFan: \"unchanged\",\n        };\n    }\n}\n\n// Entscheidungslogik zur Steuerung der Umgebungsbedingungen, nutzt die calculateAdjustmentBasedOnConditions Funktion.\nconst adjustments = calculateAdjustmentBasedOnConditions();\n\n// Hinzufügen der Anpassungen zum Payload\nmsg.payload = {\n    exhaustSpeed: adjustments.exhaustSpeed,\n    humidifier: adjustments.humidifier,\n    dehumidifier: adjustments.dehumidifier,\n    heaterFan: adjustments.heaterFan,\n    coolerFan: adjustments.coolerFan,\n};\n\n\n// Rückgabe des modifizierten Payloads für weitere Verwendung im Flow.\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1180,"y":880,"wires":[["48c586de4b0046b1"]]},{"id":"947331172e5c9d8d","type":"function","z":"d95a2d1f80d65696","name":"DryingHandler","func":"const outputs = [null, null, null, null];\n\nconst tolerance = 0.3\nconst dewpointTolerance = 2.0; // Toleranzwert für Taupunkt in Grad Celsius\n\nconst outdoortemp = msg.payload[\"sensor.tempoutdoor\"];\n\nconst targetHum = msg.payload.TargetDryData.TargetDryHum;\nconst targetTemp = msg.payload.TargetDryData.TargetDryTemp;\nconst targetDewpoint = msg.payload.TargetDryData.TargetDryDew;\nconst targetVP = msg.payload.TargetDryData.targetVP;\n\nconst currentHum = msg.payload.dryData.dryHum;\nconst currentTemp = msg.payload.dryData.dryTemp;\nconst currentDewpoint = msg.payload.dryData.dryDewPoint;\nconst currentVP = msg.payload.dryData.dryVP;\n\n// Logging der aktuellen VP und Ziel-VP-Bereich zur Überprüfung und Debugging.\nnode.warn(`Drying-VP target: ${targetVP}`);\n\nfunction calculateAdjustmentBasedOnConditions() {\n    const adjustments = {\n        exhaustSpeed: \"unchanged\",\n        humidifier: \"unchanged\",\n        dehumidifier: \"unchanged\",\n        heaterFan: \"unchanged\",\n        coolerFan: \"unchanged\",\n        ventsALL: \"unchanged\",\n    };\n\n    // Taupunkt Anpassung\n    if (currentVP > targetVP + tolerance) {\n        node.warn(`Drying-VP: ${currentVP} zu hoch an Target: ${targetVP}.`);\n        return {\n            exhaustSpeed: \"increased\",      // Erhöht die Abluftgeschwindigkeit, um feuchte Luft herauszuziehen\n            humidifier: \"reduced\",          // Schaltet den Luftbefeuchter aus, um Feuchtigkeit zu reduzieren\n            dehumidifier: \"increased\",      // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            coolerFan: \"reduced\",           // Verringert die Kühlleistung, um die Temperatur zu erhöhen\n        };\n    } else if (currentVP < targetVP - tolerance) {\n        node.warn(`Drying-VP: ${currentVP} zu gering an Target:${targetVP}. `);\n        return {\n            exhaustSpeed: \"reduced\",    // Reduziert die Abluftgeschwindigkeit, hält feuchte Luft im Raum\n            humidifier: \"increased\",    // Schaltet den Luftbefeuchter ein, um Feuchtigkeit zu erhöhen\n            dehumidifier: \"reduced\",    // Schaltet den Luftentfeuchter aus, um Feuchtigkeit zu erhöhen\n            coolerFan: \"increased\",     // Erhöht die Kühlleistung, um die Temperatur zu verringern\n        };\n    } else {\n        node.warn(`Drying-VP: ${currentVP} im gewünschten Bereich`);\n        return {\n            exhaustSpeed: \"unchanged\",\n            humidifier: \"unchanged\",\n            dehumidifier: \"unchanged\",\n            coolerFan: \"unchanged\",\n        };\n    }\n}\n\n// Entscheidungslogik zur Steuerung der Umgebungsbedingungen, nutzt die calculateAdjustmentBasedOnConditions Funktion.\nconst adjustments = calculateAdjustmentBasedOnConditions();\n\n// Hinzufügen der Anpassungen zum Payload\nmsg.payload = {\n    exhaustSpeed: adjustments.exhaustSpeed,\n    humidifier: adjustments.humidifier,\n    dehumidifier: adjustments.dehumidifier,\n    heaterFan: adjustments.heaterFan,\n    coolerFan: adjustments.coolerFan,\n};\n\n\n// Rückgabe des modifizierten Payloads für weitere Verwendung im Flow.\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1200,"y":1080,"wires":[["48c586de4b0046b1"]]},{"id":"1f1beb34e151ced8","type":"function","z":"d95a2d1f80d65696","name":"DryingHandler","func":"const outputs = [null, null, null, null];\n\nconst tolerance = 0.3\nconst dewpointTolerance = 2.0; // Toleranzwert für Taupunkt in Grad Celsius\n\nconst outdoortemp = msg.payload[\"sensor.tempoutdoor\"];\n\nconst targetHum = msg.payload.TargetDryData.TargetDryHum;\nconst targetTemp = msg.payload.TargetDryData.TargetDryTemp;\nconst targetDewpoint = msg.payload.TargetDryData.TargetDryDew;\nconst targetVP = msg.payload.TargetDryData.targetVP;\n\nconst currentHum = msg.payload.dryData.dryHum;\nconst currentTemp = msg.payload.dryData.dryTemp;\nconst currentDewpoint = msg.payload.dryData.dryDewPoint;\nconst currentVP = msg.payload.dryData.dryVP;\n\n// Logging der aktuellen VP und Ziel-VP-Bereich zur Überprüfung und Debugging.\nnode.warn(`Drying-VP target: ${targetVP}`);\n\nfunction calculateAdjustmentBasedOnConditions() {\n    const adjustments = {\n        exhaustSpeed: \"unchanged\",\n        humidifier: \"unchanged\",\n        dehumidifier: \"unchanged\",\n        heaterFan: \"unchanged\",\n        coolerFan: \"unchanged\",\n        ventsALL: \"unchanged\",\n    };\n\n    // Taupunkt Anpassung\n    if (currentVP > targetVP + tolerance) {\n        node.warn(`Drying-VP: ${currentVP} zu hoch an Target: ${targetVP}.`);\n        return {\n            exhaustSpeed: \"increased\",      // Erhöht die Abluftgeschwindigkeit, um feuchte Luft herauszuziehen\n            humidifier: \"reduced\",          // Schaltet den Luftbefeuchter aus, um Feuchtigkeit zu reduzieren\n            dehumidifier: \"increased\",      // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            coolerFan: \"reduced\",           // Verringert die Kühlleistung, um die Temperatur zu erhöhen\n        };\n    } else if (currentVP < targetVP - tolerance) {\n        node.warn(`Drying-VP: ${currentVP} zu gering an Target:${targetVP}. `);\n        return {\n            exhaustSpeed: \"reduced\",    // Reduziert die Abluftgeschwindigkeit, hält feuchte Luft im Raum\n            humidifier: \"increased\",    // Schaltet den Luftbefeuchter ein, um Feuchtigkeit zu erhöhen\n            dehumidifier: \"reduced\",    // Schaltet den Luftentfeuchter aus, um Feuchtigkeit zu erhöhen\n            coolerFan: \"increased\",     // Erhöht die Kühlleistung, um die Temperatur zu verringern\n        };\n    } else {\n        node.warn(`Drying-VP: ${currentVP} im gewünschten Bereich`);\n        return {\n            exhaustSpeed: \"unchanged\",\n            humidifier: \"unchanged\",\n            dehumidifier: \"unchanged\",\n            coolerFan: \"unchanged\",\n        };\n    }\n}\n\n// Entscheidungslogik zur Steuerung der Umgebungsbedingungen, nutzt die calculateAdjustmentBasedOnConditions Funktion.\nconst adjustments = calculateAdjustmentBasedOnConditions();\n\n// Hinzufügen der Anpassungen zum Payload\nmsg.payload = {\n    exhaustSpeed: adjustments.exhaustSpeed,\n    humidifier: adjustments.humidifier,\n    dehumidifier: adjustments.dehumidifier,\n    heaterFan: adjustments.heaterFan,\n    coolerFan: adjustments.coolerFan,\n};\n\n\n// Rückgabe des modifizierten Payloads für weitere Verwendung im Flow.\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1200,"y":1280,"wires":[["48c586de4b0046b1"]]},{"id":"3614513fa9c5b0f7","type":"debug","z":"d95a2d1f80d65696","name":"Cooler","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":430,"y":820,"wires":[]},{"id":"aff5cab903300a7c","type":"debug","z":"d95a2d1f80d65696","name":"Heater","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":430,"y":860,"wires":[]},{"id":"ef8d063b02d2d6fa","type":"link out","z":"d95a2d1f80d65696","name":"Cooler","mode":"link","links":["aad3dbd470556729"],"x":605,"y":820,"wires":[]},{"id":"2c58a65cb77f695b","type":"link out","z":"d95a2d1f80d65696","name":"Heater","mode":"link","links":[],"x":605,"y":860,"wires":[]},{"id":"35bd5fd65c9a0879","type":"http request","z":"3eced32f6afec9ad","g":"e3ae47face506c41","name":"DutyPostChange","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.253:5533/air/ctrl","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":1810,"y":220,"wires":[["f91c7f698a26dd0e"]]},{"id":"9e723e7f476ea8f8","type":"function","z":"3eced32f6afec9ad","g":"e3ae47face506c41","name":"DutyChanger","func":"\nconst NewDuty = msg.newDuty\n\nmsg.payload = { \"newDuty\": NewDuty}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1610,"y":220,"wires":[["35bd5fd65c9a0879"]]},{"id":"cb63b224171d1a61","type":"inject","z":"3eced32f6afec9ad","g":"e3ae47face506c41","name":"PWM_SETTER","props":[{"p":"newDuty","v":"5","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":1400,"y":220,"wires":[["9e723e7f476ea8f8"]]},{"id":"f91c7f698a26dd0e","type":"debug","z":"3eced32f6afec9ad","g":"e3ae47face506c41","name":"debug 7","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2000,"y":260,"wires":[]},{"id":"6f6a1483bb727dc8","type":"http request","z":"3eced32f6afec9ad","g":"e3ae47face506c41","name":"DutyPostStart","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.253:5533/air/start","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":1780,"y":280,"wires":[["f91c7f698a26dd0e"]]},{"id":"726ff0be82ad7423","type":"http request","z":"3eced32f6afec9ad","g":"e3ae47face506c41","name":"DutyPostStop","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.253:5533/air/stop","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":1780,"y":340,"wires":[["f91c7f698a26dd0e"]]},{"id":"ac45c928935c7dfb","type":"inject","z":"3eced32f6afec9ad","g":"e3ae47face506c41","name":"Start","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":1370,"y":280,"wires":[["6f6a1483bb727dc8"]]},{"id":"b5421e42b33902bc","type":"inject","z":"3eced32f6afec9ad","g":"e3ae47face506c41","name":"Stop","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":1370,"y":340,"wires":[["726ff0be82ad7423"]]},{"id":"839a471f41870830","type":"http request","z":"3eced32f6afec9ad","g":"7881c1d5756a95f9","name":"ECAbluftState","method":"GET","ret":"obj","paytoqs":"ignore","url":"http://10.1.1.253:5533/","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":380,"y":240,"wires":[["aab3cfc0c8cefa14","73f2abed6d5c9e36"]]},{"id":"aab3cfc0c8cefa14","type":"function","z":"3eced32f6afec9ad","g":"7881c1d5756a95f9","name":"Check DutyCycle","func":"msg.payload = msg.payload.data.DutyCycle\nmsg.topic = \"DutyCycle\"\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":590,"y":240,"wires":[["c29833ece0d282ba"]]},{"id":"c29833ece0d282ba","type":"ha-number","z":"3eced32f6afec9ad","g":"7881c1d5756a95f9","name":"Air Controller","version":1,"debugenabled":false,"inputs":1,"outputs":1,"entityConfig":"a9a93d97bbb7b04a","mode":"set","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"},{"property":"topic","propertyType":"msg","value":"DutyCycle","valueType":"str"}],"x":770,"y":240,"wires":[["e7c6436ff95e88f6"]]},{"id":"edc6b2118761154c","type":"http request","z":"3eced32f6afec9ad","g":"7881c1d5756a95f9","name":"DutyPostChange","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.253:5533/air/ctrl","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":730,"y":400,"wires":[[]]},{"id":"b72f611d8f79f840","type":"function","z":"3eced32f6afec9ad","g":"7881c1d5756a95f9","name":"DutyChanger","func":"\nconst NewDuty = msg.payload\n\nmsg.payload = { \"newDuty\": NewDuty }\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":630,"y":360,"wires":[["edc6b2118761154c"]]},{"id":"fdf1bd6dd1070fbc","type":"inject","z":"3eced32f6afec9ad","g":"7881c1d5756a95f9","name":"Start","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"5","crontab":"","once":true,"onceDelay":"5","topic":"","payload":"","payloadType":"date","x":190,"y":240,"wires":[["839a471f41870830"]]},{"id":"cea6f508110a5b62","type":"ha-switch","z":"3eced32f6afec9ad","g":"7881c1d5756a95f9","name":"ECRuckFlower","version":0,"debugenabled":false,"inputs":1,"outputs":2,"entityConfig":"9cc6832db356ad2f","enableInput":true,"outputOnStateChange":true,"outputProperties":[{"property":"outputType","propertyType":"msg","value":"state change","valueType":"str"},{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"}],"x":820,"y":180,"wires":[["23b54df21007e20e"],["0744b0e547eb2565"]]},{"id":"23b54df21007e20e","type":"http request","z":"3eced32f6afec9ad","g":"7881c1d5756a95f9","name":"DutyPostStart","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.253:5533/air/start","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":1060,"y":120,"wires":[[]]},{"id":"0744b0e547eb2565","type":"http request","z":"3eced32f6afec9ad","g":"7881c1d5756a95f9","name":"DutyPostStop","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.253:5533/air/stop","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":1060,"y":180,"wires":[[]]},{"id":"e7c6436ff95e88f6","type":"join","z":"3eced32f6afec9ad","g":"7881c1d5756a95f9","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":330,"y":320,"wires":[["794c44658f6efede"]]},{"id":"794c44658f6efede","type":"function","z":"3eced32f6afec9ad","g":"7881c1d5756a95f9","name":"CompareDuty","func":"let lastState = msg.payload.DutyCycle\nlet newState = msg.payload.DutyChangedTo\n\nif(newState === lastState){\n    msg.payload = \"Abluft: Same State Nothing to Do\"\n    return [msg,null];\n}else{\n    msg.payload = newState\n    return  [null,msg];\n}","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":480,"y":320,"wires":[["e8bc2512eed39252"],["b72f611d8f79f840"]]},{"id":"a1dd8f98197e0a14","type":"ha-number","z":"3eced32f6afec9ad","g":"7881c1d5756a95f9","name":"Air Controller","version":1,"debugenabled":false,"inputs":0,"outputs":1,"entityConfig":"a9a93d97bbb7b04a","mode":"listen","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"},{"property":"topic","propertyType":"msg","value":"DutyChangedTo","valueType":"str"}],"x":170,"y":320,"wires":[["e7c6436ff95e88f6"]]},{"id":"e8bc2512eed39252","type":"debug","z":"3eced32f6afec9ad","g":"7881c1d5756a95f9","name":"debug 28","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":720,"y":300,"wires":[]},{"id":"a2de9fd6d2f557ef","type":"http request","z":"3eced32f6afec9ad","g":"cc0c7ed9ea21cf9b","name":"ECAbluftState","method":"GET","ret":"obj","paytoqs":"ignore","url":"http://10.1.1.235:5533/","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":360,"y":660,"wires":[["ec9710af1d0cd050","6aee30ba173d3e3e"]]},{"id":"ec9710af1d0cd050","type":"function","z":"3eced32f6afec9ad","g":"cc0c7ed9ea21cf9b","name":"Check DutyCycle","func":"msg.payload = msg.payload.data.DutyCycle\nmsg.topic = \"DutyCycle\"\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":550,"y":700,"wires":[["04c8a1a466a2f268"]]},{"id":"04c8a1a466a2f268","type":"ha-number","z":"3eced32f6afec9ad","g":"cc0c7ed9ea21cf9b","name":"Air Controller Vegi","version":1,"debugenabled":false,"inputs":1,"outputs":1,"entityConfig":"b923911d032dc0de","mode":"set","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"},{"property":"topic","propertyType":"msg","value":"DutyCycle","valueType":"str"}],"x":750,"y":700,"wires":[["7a518a1d9ab5d941"]]},{"id":"68456ed3d9470423","type":"http request","z":"3eced32f6afec9ad","g":"cc0c7ed9ea21cf9b","name":"DutyPostChange","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.234:5533/air/ctrl","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":790,"y":820,"wires":[["489db73ee0cfb6ef"]]},{"id":"90d994698db057fa","type":"function","z":"3eced32f6afec9ad","g":"cc0c7ed9ea21cf9b","name":"DutyChanger","func":"\nconst NewDuty = msg.payload\n\nmsg.payload = { \"newDuty\": NewDuty }\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":590,"y":820,"wires":[["68456ed3d9470423"]]},{"id":"35452893dd38f293","type":"inject","z":"3eced32f6afec9ad","g":"cc0c7ed9ea21cf9b","name":"Start","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"5","crontab":"","once":true,"onceDelay":"5","topic":"","payload":"","payloadType":"date","x":190,"y":660,"wires":[["a2de9fd6d2f557ef"]]},{"id":"7a518a1d9ab5d941","type":"join","z":"3eced32f6afec9ad","g":"cc0c7ed9ea21cf9b","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":370,"y":780,"wires":[["078b870bf2716503"]]},{"id":"078b870bf2716503","type":"function","z":"3eced32f6afec9ad","g":"cc0c7ed9ea21cf9b","name":"CompareDuty","func":"let lastState = msg.payload.DutyCycle\nlet newState = msg.payload.DutyChangedTo\n\nif(newState === lastState){\n    msg.payload = \"Abluft: Same State Nothing to Do\"\n    return [msg,null];\n}else{\n    msg.payload = newState\n    return  [null,msg];\n}","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":520,"y":780,"wires":[["ddab435427260de1"],["90d994698db057fa"]]},{"id":"6f4f9bdcba616abb","type":"ha-number","z":"3eced32f6afec9ad","g":"cc0c7ed9ea21cf9b","name":"Air Controller Vegi","version":1,"debugenabled":false,"inputs":0,"outputs":1,"entityConfig":"b923911d032dc0de","mode":"listen","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"},{"property":"topic","propertyType":"msg","value":"DutyChangedTo","valueType":"str"}],"x":190,"y":780,"wires":[["7a518a1d9ab5d941"]]},{"id":"ddab435427260de1","type":"debug","z":"3eced32f6afec9ad","g":"cc0c7ed9ea21cf9b","name":"debug 53","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":720,"y":780,"wires":[]},{"id":"3162e0a1ac83930b","type":"ha-switch","z":"3eced32f6afec9ad","g":"cc0c7ed9ea21cf9b","name":"ECRuckVegi","version":0,"debugenabled":false,"inputs":1,"outputs":2,"entityConfig":"9e27ae392ae6bf01","enableInput":true,"outputOnStateChange":true,"outputProperties":[{"property":"outputType","propertyType":"msg","value":"state change","valueType":"str"},{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"}],"x":770,"y":620,"wires":[["b10430d6eae75417"],["c977b318830b9344"]]},{"id":"b10430d6eae75417","type":"http request","z":"3eced32f6afec9ad","g":"cc0c7ed9ea21cf9b","name":"DutyPostStart","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.234:5533/air/start","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":1040,"y":560,"wires":[[]]},{"id":"c977b318830b9344","type":"http request","z":"3eced32f6afec9ad","g":"cc0c7ed9ea21cf9b","name":"DutyPostStop","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.234:5533/air/stop","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":1040,"y":640,"wires":[[]]},{"id":"d4ee50c361aa4ca9","type":"http request","z":"3eced32f6afec9ad","g":"d3018dd6637a17e7","name":"DutyPostChange","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.235:5533/air/ctrl","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":1790,"y":640,"wires":[["fd9dc73ed7f6f02c"]]},{"id":"4a009cfd840e08ec","type":"function","z":"3eced32f6afec9ad","g":"d3018dd6637a17e7","name":"DutyChanger","func":"\nconst NewDuty = msg.newDuty\n\nmsg.payload = { \"newDuty\": NewDuty}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1590,"y":640,"wires":[["d4ee50c361aa4ca9"]]},{"id":"b2c1303d977cf4c8","type":"inject","z":"3eced32f6afec9ad","g":"d3018dd6637a17e7","name":"PWM_SETTER","props":[{"p":"newDuty","v":"100","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":1380,"y":640,"wires":[["4a009cfd840e08ec"]]},{"id":"fd9dc73ed7f6f02c","type":"debug","z":"3eced32f6afec9ad","g":"d3018dd6637a17e7","name":"debug 54","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1980,"y":680,"wires":[]},{"id":"32822402a46d0257","type":"http request","z":"3eced32f6afec9ad","g":"d3018dd6637a17e7","name":"DutyPostStart","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.235:5533/air/start","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":1760,"y":700,"wires":[["fd9dc73ed7f6f02c"]]},{"id":"614ca3bfbf9e4df5","type":"http request","z":"3eced32f6afec9ad","g":"d3018dd6637a17e7","name":"DutyPostStop","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.235:5533/air/stop","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":1760,"y":760,"wires":[["fd9dc73ed7f6f02c"]]},{"id":"578c2c0a69835a12","type":"inject","z":"3eced32f6afec9ad","g":"d3018dd6637a17e7","name":"Start","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":1350,"y":700,"wires":[["32822402a46d0257"]]},{"id":"b838e1bb8d2f4a8d","type":"inject","z":"3eced32f6afec9ad","g":"d3018dd6637a17e7","name":"Stop","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":1350,"y":760,"wires":[["614ca3bfbf9e4df5"]]},{"id":"f0ff0a0fb1975a69","type":"http request","z":"3eced32f6afec9ad","g":"d0184e748701da52","name":"ECAbluftState","method":"GET","ret":"obj","paytoqs":"ignore","url":"http://10.1.1.235:5544/","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":360,"y":1080,"wires":[["72f80534f0857440","59a56b421d022487"]]},{"id":"72f80534f0857440","type":"function","z":"3eced32f6afec9ad","g":"d0184e748701da52","name":"Check DutyCycle","func":"msg.payload = msg.payload.data.DutyCycle\nmsg.topic = \"DutyCycle\"\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":610,"y":1120,"wires":[["442464aa9abec787"]]},{"id":"442464aa9abec787","type":"ha-number","z":"3eced32f6afec9ad","g":"d0184e748701da52","name":"Air Controller Dryer","version":1,"debugenabled":false,"inputs":1,"outputs":1,"entityConfig":"51482df92d2f1f29","mode":"set","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"},{"property":"topic","propertyType":"msg","value":"DutyCycle","valueType":"str"}],"x":830,"y":1120,"wires":[["61205c55b28599ab"]]},{"id":"7f83211f1adf1085","type":"http request","z":"3eced32f6afec9ad","g":"d0184e748701da52","name":"DutyPostChange","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.234:5533/air/ctrl","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":890,"y":1240,"wires":[[]]},{"id":"df129d682c7098c7","type":"function","z":"3eced32f6afec9ad","g":"d0184e748701da52","name":"DutyChanger","func":"\nconst NewDuty = msg.payload\n\nmsg.payload = { \"newDuty\": NewDuty }\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":710,"y":1240,"wires":[["7f83211f1adf1085"]]},{"id":"73f7f8508dfc837b","type":"inject","z":"3eced32f6afec9ad","g":"d0184e748701da52","name":"Start","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"7","crontab":"","once":true,"onceDelay":"10","topic":"","payload":"","payloadType":"date","x":190,"y":1080,"wires":[["f0ff0a0fb1975a69"]]},{"id":"61205c55b28599ab","type":"join","z":"3eced32f6afec9ad","g":"d0184e748701da52","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":390,"y":1220,"wires":[["1f730adffd496dc4"]]},{"id":"1f730adffd496dc4","type":"function","z":"3eced32f6afec9ad","g":"d0184e748701da52","name":"CompareDuty","func":"let lastState = msg.payload.DutyCycle\nlet newState = msg.payload.DutyChangedTo\n\nif(newState === lastState){\n    msg.payload = \"Abluft: Same State Nothing to Do\"\n    return [msg,null];\n}else{\n    msg.payload = newState\n    return  [null,msg];\n}","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":540,"y":1220,"wires":[["30fde43e19631bb1"],["df129d682c7098c7"]]},{"id":"70c691cb77d35316","type":"ha-number","z":"3eced32f6afec9ad","g":"d0184e748701da52","name":"Air Controller Dryer","version":1,"debugenabled":false,"inputs":0,"outputs":1,"entityConfig":"51482df92d2f1f29","mode":"listen","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"},{"property":"topic","propertyType":"msg","value":"DutyChangedTo","valueType":"str"}],"x":210,"y":1220,"wires":[["61205c55b28599ab"]]},{"id":"30fde43e19631bb1","type":"debug","z":"3eced32f6afec9ad","g":"d0184e748701da52","name":"debug 74","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":780,"y":1200,"wires":[]},{"id":"7d39d0224f4376fc","type":"ha-switch","z":"3eced32f6afec9ad","g":"d0184e748701da52","name":"ECRuckDryer","version":0,"debugenabled":false,"inputs":1,"outputs":2,"entityConfig":"52b8c46d1aea9a62","enableInput":true,"outputOnStateChange":true,"outputProperties":[{"property":"outputType","propertyType":"msg","value":"state change","valueType":"str"},{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"}],"x":870,"y":1040,"wires":[["c033c6d42954ef22"],["be6bba3d99543c18"]]},{"id":"c033c6d42954ef22","type":"http request","z":"3eced32f6afec9ad","g":"d0184e748701da52","name":"DutyPostStart","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.235:5544/air/start","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":1080,"y":1020,"wires":[[]]},{"id":"be6bba3d99543c18","type":"http request","z":"3eced32f6afec9ad","g":"d0184e748701da52","name":"DutyPostStop","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.235:5544/air/stop","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":1080,"y":1080,"wires":[[]]},{"id":"89bbe2fb835eb83b","type":"http request","z":"3eced32f6afec9ad","g":"f0d791250ce3cb79","name":"DutyPostChange","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.235:5544/air/ctrl","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":1770,"y":1080,"wires":[["972077a0dd65535b"]]},{"id":"93ef8584d57fe5b7","type":"function","z":"3eced32f6afec9ad","g":"f0d791250ce3cb79","name":"DutyChanger","func":"\nconst NewDuty = msg.newDuty\n\nmsg.payload = { \"newDuty\": NewDuty}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1550,"y":1080,"wires":[["89bbe2fb835eb83b"]]},{"id":"8aa103c983aeac9d","type":"inject","z":"3eced32f6afec9ad","g":"f0d791250ce3cb79","name":"PWM_SETTER","props":[{"p":"newDuty","v":"5","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":1380,"y":1080,"wires":[["93ef8584d57fe5b7"]]},{"id":"972077a0dd65535b","type":"debug","z":"3eced32f6afec9ad","g":"f0d791250ce3cb79","name":"debug 75","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1980,"y":1120,"wires":[]},{"id":"ea91907ac588be23","type":"http request","z":"3eced32f6afec9ad","g":"f0d791250ce3cb79","name":"DutyPostStart","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.235:5544/air/start","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":1760,"y":1140,"wires":[["972077a0dd65535b"]]},{"id":"dddac41b1a6ed6aa","type":"http request","z":"3eced32f6afec9ad","g":"f0d791250ce3cb79","name":"DutyPostStop","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.235:5544/air/stop","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":1760,"y":1200,"wires":[["972077a0dd65535b"]]},{"id":"cfe2eb1863b1949c","type":"inject","z":"3eced32f6afec9ad","g":"f0d791250ce3cb79","name":"Start","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":1350,"y":1140,"wires":[["ea91907ac588be23"]]},{"id":"4ac4c49a4e3014c1","type":"inject","z":"3eced32f6afec9ad","g":"f0d791250ce3cb79","name":"Stop","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":1350,"y":1200,"wires":[["dddac41b1a6ed6aa"]]},{"id":"ef306e0bb8574cf7","type":"comment","z":"3eced32f6afec9ad","g":"e3ae47face506c41","name":"DEBUG ","info":"","x":1330,"y":160,"wires":[]},{"id":"6d7d082f99808488","type":"comment","z":"3eced32f6afec9ad","g":"cc0c7ed9ea21cf9b","name":"Veggi Exhaust","info":"","x":170,"y":600,"wires":[]},{"id":"e6d61ecc778b733a","type":"comment","z":"3eced32f6afec9ad","g":"7881c1d5756a95f9","name":"Flower Exhaust","info":"","x":180,"y":200,"wires":[]},{"id":"227574f9468de816","type":"comment","z":"3eced32f6afec9ad","g":"d3018dd6637a17e7","name":"DEBUG ","info":"","x":1310,"y":600,"wires":[]},{"id":"de8180bd72a13fca","type":"comment","z":"3eced32f6afec9ad","g":"f0d791250ce3cb79","name":"DEBUG ","info":"","x":1330,"y":1020,"wires":[]},{"id":"7102b1e4cc6e2cd2","type":"comment","z":"3eced32f6afec9ad","g":"d0184e748701da52","name":"Drying Exhaust","info":"","x":180,"y":1040,"wires":[]},{"id":"489db73ee0cfb6ef","type":"debug","z":"3eced32f6afec9ad","g":"cc0c7ed9ea21cf9b","name":"debug 268","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":990,"y":820,"wires":[]},{"id":"6aee30ba173d3e3e","type":"function","z":"3eced32f6afec9ad","g":"cc0c7ed9ea21cf9b","name":"Check RunningState","func":"msg.payload = msg.payload.data.isRunning\nmsg.topic = \"RunningState\"\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":560,"y":620,"wires":[[]]},{"id":"59a56b421d022487","type":"function","z":"3eced32f6afec9ad","g":"d0184e748701da52","name":"Check RunningState","func":"msg.payload = msg.payload.data.isRunning\nmsg.topic = \"LastRunningState\"\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":600,"y":1020,"wires":[["90293cf01cb8e88d"]]},{"id":"73f2abed6d5c9e36","type":"function","z":"3eced32f6afec9ad","g":"7881c1d5756a95f9","name":"Check RunningState","func":"msg.payload = msg.payload.data.isRunning\nmsg.topic = \"RunningState\"\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":600,"y":180,"wires":[[]]},{"id":"7424b2d7730c5815","type":"poll-state","z":"3eced32f6afec9ad","g":"d0184e748701da52","name":"ECRuckDryer","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","updateInterval":"60","updateIntervalType":"num","updateIntervalUnits":"seconds","outputInitially":true,"outputOnChanged":true,"entityId":"switch.ecruckdryer","stateType":"str","ifState":"","ifStateType":"str","ifStateOperator":"is","outputs":1,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"","valueType":"triggerId"}],"x":250,"y":980,"wires":[["90293cf01cb8e88d"]]},{"id":"90293cf01cb8e88d","type":"join","z":"3eced32f6afec9ad","g":"d0184e748701da52","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","useparts":false,"accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":810,"y":980,"wires":[["a5789763092ca2ce"]]},{"id":"a5789763092ca2ce","type":"debug","z":"3eced32f6afec9ad","g":"d0184e748701da52","name":"debug 269","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":960,"y":980,"wires":[]},{"id":"06dc9b45852019fe","type":"link in","z":"837562a29cc16bf1","name":"DryingCtrl","links":["f639a305698026d1"],"x":45,"y":40,"wires":[["30ac7a0c8fcf2fb8"]]},{"id":"30ac7a0c8fcf2fb8","type":"debug","z":"837562a29cc16bf1","name":"TentData","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":140,"y":20,"wires":[]},{"id":"ebd19d5b7f79749d","type":"link in","z":"837562a29cc16bf1","name":"DryingTentLiveData","links":["854a899b81ae0da3"],"x":45,"y":80,"wires":[["168d26b6e04d5457","4bc992af7e8eeb3b"]]},{"id":"168d26b6e04d5457","type":"debug","z":"837562a29cc16bf1","name":"TentLiveData","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":150,"y":60,"wires":[]},{"id":"2e58ca36e4975292","type":"link out","z":"837562a29cc16bf1","name":"Exhaust","mode":"link","links":[],"x":575,"y":700,"wires":[]},{"id":"f10df41350b98c50","type":"join","z":"837562a29cc16bf1","name":"VpdNeeds","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":460,"y":60,"wires":[[]]},{"id":"a42167d7f369149a","type":"debug","z":"837562a29cc16bf1","name":"Temperatures","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":460,"y":140,"wires":[]},{"id":"eb74c53d01b97ace","type":"debug","z":"837562a29cc16bf1","name":"Humidity","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":440,"y":180,"wires":[]},{"id":"52fdbd67490934c4","type":"debug","z":"837562a29cc16bf1","name":"Dewpoints","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":220,"wires":[]},{"id":"022c729507aff6df","type":"debug","z":"837562a29cc16bf1","name":"Pressures","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":440,"y":380,"wires":[]},{"id":"33d2df760c249443","type":"debug","z":"837562a29cc16bf1","name":"Battery","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":440,"y":520,"wires":[]},{"id":"3011ac99935058fc","type":"debug","z":"837562a29cc16bf1","name":"Power","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":430,"y":560,"wires":[]},{"id":"f3be4872d689a0ca","type":"debug","z":"837562a29cc16bf1","name":"CO2","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":430,"y":420,"wires":[]},{"id":"7f77813b91965276","type":"debug","z":"837562a29cc16bf1","name":"Light","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":430,"y":460,"wires":[]},{"id":"0aa762f5f80712c8","type":"debug","z":"837562a29cc16bf1","name":"Switches","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":440,"y":620,"wires":[]},{"id":"afeeb2589c30fa74","type":"debug","z":"837562a29cc16bf1","name":"Conductivity","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":340,"wires":[]},{"id":"e29616dda5bc78bb","type":"debug","z":"837562a29cc16bf1","name":"Moisture","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":440,"y":260,"wires":[]},{"id":"4ff3d1707695e0f6","type":"debug","z":"837562a29cc16bf1","name":"Exhasut","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":440,"y":700,"wires":[]},{"id":"0214db4988ac22b5","type":"debug","z":"837562a29cc16bf1","name":"WISH","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":430,"y":100,"wires":[]},{"id":"d8f2fcca50f43695","type":"debug","z":"837562a29cc16bf1","name":"Humidifier","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":740,"wires":[]},{"id":"738cf6c13d34f5ac","type":"debug","z":"837562a29cc16bf1","name":"Vents","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":430,"y":660,"wires":[]},{"id":"caf859c3f933940e","type":"debug","z":"837562a29cc16bf1","name":"RootTemp","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":300,"wires":[]},{"id":"1feef4e361d6f4ab","type":"debug","z":"837562a29cc16bf1","name":"Dehumidifier","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":780,"wires":[]},{"id":"4bc992af7e8eeb3b","type":"function","z":"837562a29cc16bf1","name":"Sort Sensor Types","func":"let data = msg.payload;\n\n// Arrays für verschiedene Sensortypen initialisieren\nlet wish = [];\nlet temperatures = [];\nlet humidity = [];\nlet dewpoints = [];\nlet moisture = [];\nlet pressures = [];\nlet battery = [];\nlet power = [];\nlet co2 = [];\nlet lumen = [];\nlet conductivity = [];\nlet switches = [];\nlet dutyCycleExhaust = [];\nlet vents = [];\nlet humidifier = [];\nlet dehumidifier = [];\nlet root = [];\n\n// Durchlaufe alle Schlüssel im data-Objekt und sortiere sie nach bestimmten Sensortypen\nfor (let key in data) {\n    if (data.hasOwnProperty(key)) {\n        let entity_id = key.toLowerCase();\n        let entity = { entity_id: key, value: data[key] };\n\n        // Prioritize to ensure it is captured first\n        if (entity_id.includes('wish') || entity_id.includes('avg') || entity_id.includes('target')) {\n            wish.push(entity);\n        } else if (entity_id.includes('root') || entity_id.includes('wurzel') || entity_id.includes('water')) {\n            root.push(entity);\n        }\n        // ENVIORMENT\n        else if (entity_id.includes('temperature') || entity_id.includes('temp')) {\n            temperatures.push(entity);\n        } else if (entity_id.includes('humidity') || entity_id.includes('feuchtigkeit') || entity_id.includes('rh')) {\n            humidity.push(entity);\n        } else if (entity_id.includes('dewpoint') || entity_id.includes('dew')) {\n            dewpoints.push(entity);\n        } else if (entity_id.includes('moisture') || entity_id.includes('mois')) {\n            moisture.push(entity);\n        } else if (entity_id.includes('pressure') || entity_id.includes('press')) {\n            pressures.push(entity);\n        } else if (entity_id.includes('carbondioxide') || entity_id.includes('co2') || entity_id.includes('carbon')) {\n            co2.push(entity);\n        } else if (entity_id.includes('conductivity')) {\n            conductivity.push(entity);\n        } else if (entity_id.includes('illuminance') || entity_id.includes('light') || entity_id.includes('licht')) {\n            lumen.push(entity);\n        }\n        // Devices\n        else if (entity_id.includes('dehumidifier') || entity_id.includes('entfeuchter')) {\n            dehumidifier.push(entity);\n        } else if (entity_id.includes('humidifier') || entity_id.includes('befeuchter')) {\n            humidifier.push(entity);\n        } else if (entity_id.includes('ruckec') || entity_id.includes('airctr') || entity_id.includes('exhaust') || entity_id.includes('abluft')) {\n            dutyCycleExhaust.push(entity);\n        } else if (entity_id.includes('vent')) {\n            vents.push(entity);\n        } else if (entity_id.includes('switch')) {\n            switches.push(entity);\n        } else if (entity_id.includes('power') || entity_id.includes('energy')) {\n            power.push(entity);\n        }\n\n        // ADDONS\n        else if (entity_id.includes('battery') || entity_id.includes('batt')) {\n            battery.push(entity);\n        }\n    }\n}\n\n// Nachrichtenausgabe auf verschiedenen Outputs\nreturn [\n    // ENVIORMENT\n    { payload: wish, topic: 'Wish' },\n    { payload: temperatures, topic: 'temperature' },\n    { payload: humidity, topic: 'humidity' },\n    { payload: dewpoints, topic: 'dewpoint' },\n    { payload: moisture, topic: 'moisture' },\n    { payload: root, topic: 'roottemp' },\n    { payload: conductivity, topic: 'conductivity' },\n    { payload: pressures, topic: 'pressure' },\n    { payload: co2, topic: 'carbon_dioxide' },\n    { payload: lumen, topic: 'illuminance' },\n    // DEVICEINFO\n    { payload: battery, topic: 'battery' },\n    { payload: power, topic: 'power' },\n    // DEVICES\n    { payload: switches, topic: 'switch' },\n    { payload: vents, topic: 'Vents' },\n    { payload: dutyCycleExhaust, topic: 'Exhaust' },\n    { payload: humidifier, topic: 'humidifier' },\n    { payload: dehumidifier, topic: 'dehumidifier' }\n\n\n];\n","outputs":19,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":150,"y":280,"wires":[["e7d85836d6efff20"],["d2502e609aee86c4"],["894e3f2d417270a1"],["cd2ee8affa561b9c"],["3deecb435aa812f2"],["75f661a92ec9a9bc"],["237aa8a46cf62248"],["4babf1f954c3e57b"],["884cf8a2633214fe"],["e474bc581931075b"],["2600ce922720d165"],["d807c37c87e52fb7"],["0b97ef72d268e742"],["f2f13c248e0b8c38"],["7a29d65c56ea38ce"],["06a8234a0e50da53"],["820f24819599c56d"],[],[]]},{"id":"b08769debd37ea42","type":"link out","z":"837562a29cc16bf1","name":"Humidifier","mode":"link","links":[],"x":575,"y":740,"wires":[]},{"id":"6a53a1d5b542ad0d","type":"link out","z":"837562a29cc16bf1","name":"Dehumidifier","mode":"link","links":[],"x":575,"y":780,"wires":[]},{"id":"b29f1ccf177ca9bc","type":"link out","z":"837562a29cc16bf1","name":"Vents","mode":"link","links":[],"x":575,"y":660,"wires":[]},{"id":"27fb8455692b36be","type":"function","z":"837562a29cc16bf1","name":"VP_Soil_Saturation","func":"// Parameter für lehmigen Boden\nconst theta_s = 0.45;\nconst theta_r = 0.05;\nconst alpha = 0.075;\nconst n = 1.89;\nconst m = 1 - 1/n;\n\n// Funktion zur Berechnung der van Genuchten Gleichung\nfunction vanGenuchten(psi, theta) {\n    return theta_r + (theta_s - theta_r) / Math.pow((1 + Math.pow(alpha * Math.abs(psi), n)), m) - theta;\n}\n\n// Ableitung der van Genuchten Gleichung\nfunction vanGenuchtenDerivative(psi) {\n    const term = Math.pow(1 + Math.pow(alpha * Math.abs(psi), n), m);\n    const derivative = -m * n * alpha * Math.pow(alpha * Math.abs(psi), n - 1) * (theta_s - theta_r) * Math.pow(term, -m - 1);\n    return derivative;\n}\n\n// Numerische Lösung für psi finden (Newton-Raphson-Verfahren)\nfunction findPsi(theta) {\n    let psi = 1; // Startwert, versuche positiven Startwert\n    let tolerance = 1e-6;\n    let maxIterations = 100;\n    let iter = 0;\n\n    while (Math.abs(vanGenuchten(psi, theta)) > tolerance && iter < maxIterations) {\n        let f = vanGenuchten(psi, theta);\n        let f_prime = vanGenuchtenDerivative(psi);\n        if (f_prime === 0) break; // Vermeide Division durch Null\n        psi = psi - f / f_prime;\n        iter++;\n    }\n\n    return psi;\n}\n\n// Eingabe der Bodenfeuchtigkeit in Prozent\nlet inputTheta = msg.payload / 100; // Annahme: msg.payload enthält den Feuchtigkeitswert in %\n\nlet psi_kPa = findPsi(inputTheta);\n\n// Umrechnen von kPa in mbar (1 kPa = 10 mbar)\nlet psi_mbar = psi_kPa * 10;\n\nmsg.debug = {\n    inputTheta: inputTheta,\n    psi_kPa: psi_kPa,\n    psi_mbar: psi_mbar\n};\n\nmsg.payload = psi_mbar;\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1190,"y":120,"wires":[["f117d6e1c132a667"]]},{"id":"f117d6e1c132a667","type":"debug","z":"837562a29cc16bf1","name":"debug 217","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1330,"y":180,"wires":[]},{"id":"50e075c956eea28d","type":"inject","z":"837562a29cc16bf1","name":"","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"45","payloadType":"num","x":1070,"y":80,"wires":[["27fb8455692b36be"]]}]