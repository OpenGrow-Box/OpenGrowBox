[{"id":"7dbb001f4a12c33e","type":"tab","label":"Master","disabled":false,"info":"","env":[]},{"id":"06acd4b20e43ebca","type":"tab","label":"Globals","disabled":false,"info":"","env":[]},{"id":"f5216914e209e4aa","type":"tab","label":"TargetDevices","disabled":false,"info":"","env":[]},{"id":"87bab898757000a2","type":"tab","label":"FlowerCtrl","disabled":false,"info":"","env":[]},{"id":"3752d27d7587c957","type":"tab","label":"VeggiCtrl","disabled":false,"info":"","env":[]},{"id":"6fcb82f207901f17","type":"tab","label":"GrowRoomCtrl","disabled":false,"info":"","env":[]},{"id":"d28a10efe1bd691a","type":"tab","label":"DryingCtrl","disabled":false,"info":"","env":[]},{"id":"3eced32f6afec9ad","type":"tab","label":"RuckECControll","disabled":false,"info":"","env":[]},{"id":"837562a29cc16bf1","type":"tab","label":"Template","disabled":false,"info":"","env":[]},{"id":"0dd1d006a8b8f409","type":"subflow","name":"[DC] AC Control","info":"","category":"","in":[{"x":80,"y":140,"wires":[{"id":"9afc0850d308ec1d"}]}],"out":[],"env":[],"meta":{},"color":"#DDAA99"},{"id":"4fa2fd5f290d5aa6","type":"subflow","name":"[AC] Static Mode","info":"","category":"","in":[{"x":60,"y":100,"wires":[]}],"out":[],"env":[],"meta":{"module":"Static Mode","author":"GrowBot Open Source","license":"MIT"},"color":"#DDAA99"},{"id":"e3ae47face506c41","type":"group","z":"3eced32f6afec9ad","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["35bd5fd65c9a0879","9e723e7f476ea8f8","cb63b224171d1a61","f91c7f698a26dd0e","6f6a1483bb727dc8","726ff0be82ad7423","ac45c928935c7dfb","b5421e42b33902bc","ef306e0bb8574cf7"],"x":894,"y":19,"w":852,"h":262},{"id":"d3018dd6637a17e7","type":"group","z":"3eced32f6afec9ad","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["d4ee50c361aa4ca9","4a009cfd840e08ec","b2c1303d977cf4c8","fd9dc73ed7f6f02c","32822402a46d0257","614ca3bfbf9e4df5","578c2c0a69835a12","b838e1bb8d2f4a8d","227574f9468de816"],"x":934,"y":359,"w":852,"h":242},{"id":"f0d791250ce3cb79","type":"group","z":"3eced32f6afec9ad","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["89bbe2fb835eb83b","93ef8584d57fe5b7","8aa103c983aeac9d","972077a0dd65535b","ea91907ac588be23","dddac41b1a6ed6aa","cfe2eb1863b1949c","4ac4c49a4e3014c1","de8180bd72a13fca"],"x":934,"y":719,"w":832,"h":262},{"id":"7236f08e93d54df7","type":"group","z":"7dbb001f4a12c33e","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["2d557ea78433109d","8d9fd654ae8aaec2","4d54e84af3d4b81c","9aee886e8e0fa11b","78f51155f8c50460","0a30a4555f40a167","dd6b14b460dab075","2ba711e98d827f28","5016bb031906d635","22a1d3e6ac107c3f","01cce3f8bf2a66d3","c561d85b1dda300e","fd2b9c6859eb1484","f0449f704d2f7c8a","da6c2e0c92ff7e70","311ee520c3f61f77","b221316ab2b19880","e2a9c4cfd27a3aa1","2f4fb16684615c04","9f67d85122ac891e"],"x":14,"y":1059,"w":1392,"h":422},{"id":"28b0d068c70f684b","type":"group","z":"06acd4b20e43ebca","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["7133652db17a3480","342da06502c76007","d6e04975e1781dab","e0f06675a0f57c06"],"x":274,"y":79,"w":302,"h":162},{"id":"404d0274840916c7","type":"group","z":"06acd4b20e43ebca","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["8d521c0ad25a2741","498b420139c68178","a0636a9942a1768d","eb1e14424fc44d32"],"x":654,"y":79,"w":282,"h":162},{"id":"62ca1cbb1c008521","type":"group","z":"06acd4b20e43ebca","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["95db941af194b00a","162f081b218ae942","c87afd2db176106e","1140eef97cbe8d07"],"x":1014,"y":79,"w":302,"h":162},{"id":"2ed032bcd8d8fc97","type":"group","z":"06acd4b20e43ebca","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["ca0d96c34b0b2594","fbe145fbf1efc03b","fe6c5b1df641bf24"],"x":14,"y":139,"w":212,"h":202},{"id":"7881c1d5756a95f9","type":"group","z":"3eced32f6afec9ad","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["839a471f41870830","aab3cfc0c8cefa14","c29833ece0d282ba","edc6b2118761154c","b72f611d8f79f840","fdf1bd6dd1070fbc","cea6f508110a5b62","23b54df21007e20e","0744b0e547eb2565","e7c6436ff95e88f6","794c44658f6efede","a1dd8f98197e0a14","e8bc2512eed39252","e6d61ecc778b733a"],"x":14,"y":19,"w":792,"h":322},{"id":"cc0c7ed9ea21cf9b","type":"group","z":"3eced32f6afec9ad","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["a2de9fd6d2f557ef","ec9710af1d0cd050","04c8a1a466a2f268","68456ed3d9470423","90d994698db057fa","35452893dd38f293","7a518a1d9ab5d941","078b870bf2716503","6f4f9bdcba616abb","ddab435427260de1","3162e0a1ac83930b","b10430d6eae75417","c977b318830b9344","6d7d082f99808488"],"x":14,"y":359,"w":852,"h":342},{"id":"d0184e748701da52","type":"group","z":"3eced32f6afec9ad","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["f0ff0a0fb1975a69","72f80534f0857440","442464aa9abec787","7f83211f1adf1085","df129d682c7098c7","73f7f8508dfc837b","61205c55b28599ab","1f730adffd496dc4","70c691cb77d35316","30fde43e19631bb1","7d39d0224f4376fc","c033c6d42954ef22","be6bba3d99543c18","7102b1e4cc6e2cd2"],"x":-6,"y":719,"w":932,"h":322},{"id":"0963c29ce537e39b","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["180eab0539ef4f5b","1e5ab4d1f342f560","78de53c8bb55e403","d37ecd3c5f82cdbc","c1e70d8332a5d4e4","da916caa4c612842","a2491093273ea707","d7c32aa823e497df","11736a563bfcb495"],"x":24,"y":1279,"w":802,"h":462},{"id":"4befb05d0b17e374","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["3dc9161dfd6e5534","98e42d2ad5e5912a","5e18db466a3e6872","06e8d2e8f44c934e","22de82672fafd826","e1181ae60d3e758c","fe43d7cf9ec8a24d","c5cca71c144d6253","8c80439016556aa3","a141a10ad2f010bb"],"x":1714,"y":999,"w":692,"h":242},{"id":"7b4f8e1927d324fc","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["bc1b257f3ef85179","716288056c7fa845","e3b89882bbab368d","9c1bbc9685dc858c","d627c246df74b5d7","ce9c357652d8fb35","aa5773a7762ec6a1","202dcc5ae6d834d0"],"x":1714,"y":1239,"w":642,"h":202},{"id":"570df94b7b8fd3db","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["afeb5423a6f3b5db","bab58a1e055f1530","fb64d5b83ef0f886","718bc098c204f567","1fc52b3283aabd93","cf64ead2f0f9c53f","7856db1b9077bca0","5e2b8fb494e4ebfe","c621846474f32add"],"x":34,"y":2659,"w":712,"h":382},{"id":"6abebfeb172743b0","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["f1b0b6e3183aaeab","2e49f2a877dc0908","80e2dd98aaacafeb","e878287b07f180fd","78d116b1f17e53a9","cb901688be6c0de1","546819f8bcf743d9","7b3614a53b99b56b","e6b2c630db705db7","a7faaa78e3ab3a02"],"x":34,"y":3619,"w":732,"h":422},{"id":"2a37f65b72394049","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["33ec8a5f3c05962b","86b2ec1b10c4c0f3","7365db5b05b0cdad","5621782b9ee9ac2e","7b5ea2872188430d","55da67fef2acad51"],"x":834,"y":1239,"w":452,"h":342},{"id":"b4216bd866b1924a","type":"group","z":"3752d27d7587c957","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["ccdccc414634ff7d","6348b269079bfa32","82a3c89470307c7b","dd1ef50d40a2e8fa","623fb660cf22ede4","66898e3bde87b1c4","b4ffc7429cc6d314","08f0fa9570535866","243e4dc964a7dbf4","128a30397aed36be","2da69194534ed372","68225790c0cb82bc","b1dbc5b52ddb3d1b","c9b790e0fa1dbc49","80b9933fc37e57a6","8d38db5fb60c01a9","91e45ccb74a35800","9e679a1a5777db44","6225380f219a0d41","18a47541cb144519","8efbc7331afa5d51","157fdad538b46545"],"x":634,"y":39,"w":1322,"h":302},{"id":"d14fa664d0413a5c","type":"group","z":"3752d27d7587c957","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["68a16773bf83b16c","f5fe0d1d1e07c638","e43682853d47d44e","f409e7c8d74372fc","95d7e3e76993cfba","2fc57bbeab61d575","d630bdaf19da0309","d12e6221a51af518","01cd46160592fe21"],"x":64,"y":3659,"w":702,"h":422},{"id":"6dd36616a92a87a4","type":"group","z":"3752d27d7587c957","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["0a28b21d3b4a4f2b","10975d949b78c673","2afcbf200982e39e","9ac8cca8bbd8cc26","07308f4728d5980a","61d3b1e40e8a29c1","1be63f2cfa82df0a","b7f3ca5cd432bab5","df5e74c7f7712579"],"x":74,"y":2359,"w":632,"h":422},{"id":"2f16034c5088356b","type":"group","z":"3752d27d7587c957","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["2f7f44cc5475aa9e","a0b3236b810a1d68","89b4bb0beb9173d1","b41b4e4f56a8bfdd","97bb26a5c0f5bb2b","50586f7873597b1b","8291f4ead3a93776","d8ca44ad455dbdcc","b4d17b12450acac5","792c2d12847b3c30"],"x":24,"y":1319,"w":642,"h":422},{"id":"2651868e58bb1778","type":"group","z":"3752d27d7587c957","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["38a22324d2ddeb2e","0eca8b29f89f4926","5373a6c3f26af0c7","317e9ec8876608ff","fb9d3843392773d1","d2b8b521e6d704e6"],"x":1494,"y":1359,"w":582,"h":142},{"id":"8ecdceb2353f84e1","type":"group","z":"3752d27d7587c957","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["2190d00a05105c37","032ae17ffae61c84","64311156e04065be","e67e4105200aba9a","418a4427dfb8d6af","d1ba22a962408cbd","068b8e7a89eef1ba","9ee872c8de807c68","db06e129a47a81f9"],"x":1494,"y":1119,"w":672,"h":222},{"id":"6f11fec5044a631a","type":"group","z":"3752d27d7587c957","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["bcc5756283e66c56","db64f19844a45a25","c97d86f4eb3827ad","df06b3a9c9e88a34","c35c0f4aa29d0d07","23a4528b1040c510"],"x":754,"y":1186.5,"w":552,"h":234.5},{"id":"91b3041d53614fc6","type":"group","z":"6fcb82f207901f17","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["2a09d643d26d92ef","9d05398df8ca3c2b","923ea5a19b7306bb","150928e591bcc0f0","9a660cd75e874e89","1443fd263756f63a","8bdcdb5a0269634f","8e5849366f8d0df3"],"x":1314,"y":1519,"w":892,"h":182},{"id":"25f097b685bcf53c","type":"group","z":"6fcb82f207901f17","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["2ee57818f4452142","bed86d46203bcde1","c43c9851ea70d3a8","2ea63399a8be550f","f39174c43ccbbd26","e7a7450bdc84a9e5"],"x":1314,"y":1719,"w":612,"h":137},{"id":"6480c67a52477c56","type":"group","z":"6fcb82f207901f17","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["2c80dac8d5bb42c1","15ab5b6b591292fd","49eda6a013ddc8f3","5f068398b3328a95"],"x":714,"y":1326.5,"w":332,"h":294.5},{"id":"df3a3098b236bbf8","type":"group","z":"6fcb82f207901f17","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["0ea9841f7c7bddfd","34fb69f47d7f4ffa","ce88b514ed8fefb4","a4eb702c29bada7e","9820d12609ba97a1","f9333b43826d44bd","857e40ecae8bc60b","0d260f8001de57ce","4c3ef331737d72eb"],"x":14,"y":1859,"w":702,"h":382},{"id":"66f48e845030b291","type":"group","z":"6fcb82f207901f17","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["ca045a3ff01ce6ab","3b561261f0b55314","47f41429505da3d5","629f1203882715e5","c883c16984ed5cee","7d7eab1986e71b30","f4d67ceb373f6872","13c823083d5e91db","f8560efe9e6d04d8"],"x":14,"y":2279,"w":772,"h":442},{"id":"1a459c099aab5c42","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["6cabaff09a9fa85a","8ba8b97980f98d4e","24cec488a394f147","cdabbf668a463011","7b1434a24c5c2d0a","6dc8f908895b8048","24a35980a67b1b86","b5fcb9fc8354bcab","ce4696697eb9cc47","fc7309bac2a5580d","3dbeae382f71f092","ea181fad67e4609d","330a5b405ad89acf","4071ade6426af61b","6077fa1071b64972","a057a5f182e73de8","de57249fcd512509","c4d9642cd60ee3b5","34b3481968acc628","5f10e37424012087","7b33e1fa9654de02","194edf344188f8d1","f1ea259d4cd1ad73"],"x":734,"y":359,"w":572,"h":802},{"id":"c8e5b8e12207b789","type":"group","z":"6fcb82f207901f17","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["18f1987e494bac59","cffdc6d9b0fcc5dd","3f887ab7da5b528c","3a124366984cc1e9","837607e3f49e7f42","5ccae930ffc7cf55"],"x":1314,"y":1879,"w":632,"h":142},{"id":"54292956c333b23f","type":"group","z":"06acd4b20e43ebca","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["fda5147727773bdd"],"x":268,"y":253,"w":304,"h":234},{"id":"006962726c2bf026","type":"group","z":"06acd4b20e43ebca","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["772e5574b48097ec"],"x":1008,"y":253,"w":284,"h":234},{"id":"fc522ecb452d5d02","type":"group","z":"06acd4b20e43ebca","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["28063fd731271172"],"x":648,"y":253,"w":304,"h":234},{"id":"684260cd34e37219","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["4675a31b7d62a521","e352eb9ec5f51329","fc63cad79428afc6","1d43ba5bea872eea","650d94e8238e269e","b343362282198e73","e26a880fb2d24667","464b23e70cf844c8","fae02ab1f3ce0e63","e9088dc392b5024f","01d5f2b84873c638","eb72ffdb8d671839","da4a10ce600a3a02","97fb7c5e5e3f9dee","c6f9196bc280b4e5","b5a693bcd77d4f80","8a884fe39e4f1e3c","54b1d8a63e1902a7","47249219e55b6920","3d4627f3225a086b","d51dc8176bf8690e","a96ccda7addd1614"],"x":634,"y":19,"w":1252,"h":342},{"id":"b408097abebd8fdb","type":"group","z":"6fcb82f207901f17","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["a4081dac03c18d34","a110f6c0c7db7eb9","3b8dcf1ddd3f0a98","c0967c0c3b535687","412c666772359b58","e472ad4545656f1a","e3159b94f3c122de","db1ef151562e7d39","af9a83abe0545535","d343ec2789e9a24b","5586660314d79b76","33cbaa818f6e4618","56a4e455c0f9d5e2","6d93a8c98375de46","32ae7b662cb5c84f","ef7366de93afb4dd","e0b37de379e9787f","328db6b64b141ab6","8a238a2714b7deb1","8b1d308f861b62d2","c75f44bec1790cd8","abc9f2566d50ac85"],"x":594,"y":19,"w":1332,"h":302},{"id":"52a27586382bb1ef","type":"group","z":"06acd4b20e43ebca","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["2fd24cf5341093db","9c45f9c868ca9b0d","b6169762537cdb93","2eedfcd77e979f4d","8b4bd9fdcec34439","2adda7340a61618d","dcac2e8aaf2b782f","ffdb9e11ce6b9e9e","3d93471fe1360ca2","a9a7f4e1bdcd48ff","bfcdf367f86deaec","2cb6dfb81c8f6d23","a1151db838a105af","972658f0b1461c4a","e5ee7531fe11c0c7","e5b3121802163bfc"],"x":1354,"y":79,"w":1012,"h":362},{"id":"77ed46dd9885c3e3","type":"group","z":"6fcb82f207901f17","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["385a580f200748d1","c0feeb1b4e55e176","f7beb6910d27753a","fe85503bb6258f2c","6467fcdfcecd8bd8","0d434c3ead4a2f55","5748df124ca12244","628540a4c50c93c7","2ad21d39d70523ac"],"x":24,"y":1319,"w":662,"h":402},{"id":"fcf3c31407539ca6","type":"group","z":"3752d27d7587c957","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["61d447a8dd2039a2","883e53c619710a5c","d63dfedba31e6c03","d667e426b36be2c9","03170a055dee0c18","bb53d025f4d0e3fa","b0d376be03892225","71bbf76e3992257f","b2cb416cb6617c7b","3f02c178f632f85b","921cb4af51950c56","0a775ad93eb0201a","32558d701303ef20","c3cdc89fea6e66dd","0b48f34fdeeadbd4","09388aae1c81e85e","502bf442461b61cd","42ab596fae23920e","a968aa9eccbf2d79","409a33744f657fd1","2ec8b29e881e1150","20ed8422cf5c2d23","41834d3741e6a772"],"x":634,"y":359,"w":532,"h":802},{"id":"3c1909379923b44d","type":"group","z":"6fcb82f207901f17","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["03e79c43e58ead4a","1712036e5017a238","043f3911673a92bf","20d35bed4d2e3567","9c3e310d274fac45","a847784b825367cf","efde13ce254c6d36","586d29f48805f54d","12e8a131245940fe","467b462d456f1df0","6416a4823197d26c","6108be97d6a6c39b","f0450d663833fbd8","e95922d0b87ed5c3","18722d8be97cb3ab","9047fd449bb3fc5c","4faec569ba6943d0","ea9ceff937fcdf2d","e5d701464c11f1fb","9f13424528e1ce4d","f747221671e2a256","ccaf01950781e533","07350baccc2a8a48"],"x":634,"y":339,"w":552,"h":802},{"id":"fb83b7a26af05fdc","type":"group","z":"3752d27d7587c957","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["b15af587e5fdd218","0249561a3fec1f56","4514863886914953","fa1ac2acc7e0b33d","d6870c9a6b9ceba0","ad4ab75f382b18f8","7cea495731d0be12"],"x":2034,"y":59,"w":992,"h":222},{"id":"952a4bc7dff3f66a","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["90e7d66de4e646ed","dcc4f2b4266ce2c9","75cd81ac71068cbe","f2d5e7c61c28de89","34e2ea1867e751f9","ea836fad7734354a","1f21fdc068ba4fdd"],"x":1914,"y":39,"w":992,"h":202},{"id":"ce767c02a63518b7","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["3731cbf407c0b582","5fb4f622e1888911","db565609719f939d","d86e3407a4f640f9","6ac56048b94fbe2b","ad74f1401fcdda47","c28198e6ee968dbf"],"x":1724,"y":1899,"w":602,"h":142},{"id":"75e4485df1891a48","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["368db6c2f4f4d498","4dc00bfeca4e9f9c","0f18ff02508e83b5","1629a3eede211acb","2905c68663ec85a2","e81dd2a56311b77e","3f8dbd73b5bb9e6c"],"x":1714,"y":2039,"w":582,"h":142},{"id":"e0a33e236acb9fce","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["e19fe2e2cc5cff60","7e84a5229b144751","e6959e18c970d2ee","f1ed96c84b1e46e1","abef1da1656fea02","31111db19484adb6"],"x":1714,"y":1479,"w":632,"h":142},{"id":"061837895c818d51","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["3e45530d280cf155","2f23a6ca2ee4971d","61f9a529b1e29ab0","6eecb00d9bcacb3d","59fa1f2f5f6e1a32","9646a423e2e18b94"],"x":1724,"y":1619,"w":612,"h":142},{"id":"374f076dd54d7035","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["269511b2f57d40dd","75633ac2d9ec29c2","21b676be5c79f43f","b3c3886b83a0ea6f","7841516b38ab2a6b","a0e6583e1313d4c6"],"x":1724,"y":1759,"w":622,"h":142},{"id":"5cb542e9b231668c","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["42e2c72bda596b85","4205dce0f9b43395","9c3fc299c316d9df","b450272b0a6bfb38","4ad596727315ba0c","f2694e0f9513439f","d6d07d605b509b9f","a5f2fd8bd4de83da","2b8aa6fa4287146b","db42c984cfc3c6eb"],"x":794,"y":2199,"w":692,"h":242},{"id":"81987266af5b5d0f","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["c742defbf802bbdb","ce80e74b4f0c3169","c6952828beed3687","06864fcb48ef67bd","bb300e0ced84c184","375d779e0949166d","d7e52f9a26275fcb","00c07247d78e056a"],"x":794,"y":2439,"w":642,"h":202},{"id":"1abfd968b5c48b59","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["47ffae24b00b2672","c5631d44ded643ff","08978e67fee76396","5be20b2b7060736e","ea193e9a809dd292","63f114603d508df6","4b24403b907dc49b"],"x":804,"y":3099,"w":602,"h":142},{"id":"17d639c2d653b0d0","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["0d493677b323115e","625af5ab649384e9","af2f0286e736ba9e","fa3936a3af582bbe","3def191c75fd10fb","5885ac0314c899cd","9dd23f1ec5c1b9af"],"x":814,"y":3259,"w":582,"h":142},{"id":"baea7e0570065c00","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["38063a14958a4bb2","5bcd88519979bcf2","871841fd35ad901a","e38feae8aeb3e604","d8fd91bf4fabc3c5","a2808d700e0c9aec"],"x":794,"y":2659,"w":632,"h":142},{"id":"0d9a6eb3f7c88499","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["cb5dc0c35fcb1d14","1edf2bc707797373","61c54cc3b330ae33","fc9c48027aed9dfd","29c058ed777577ad","c09cffbee09fcb77"],"x":804,"y":2819,"w":612,"h":142},{"id":"c44580117a7fcb7a","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["1ec492ebf534af74","0c161b5cfee11cf3","2aa9227a3c950e0b","0b366bfd2dbe21b8","15a88cdb06cd6786","eb765bd6a74a15c1"],"x":804,"y":2959,"w":622,"h":142},{"id":"34aef9ddeaf4182a","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["94bfb7e91f8b5674","86b38ecb7d5a7f2f","d82a5348498d94b9","17d2dff4e6e6b9d5","e705047b1a410ff1","78ae52d514d16f60","823cc06908fe0581","4b3658d446c38c96","d4df1bd0d38045a5","5dcc5c3453990a99"],"x":814,"y":3439,"w":692,"h":282},{"id":"b0265c6efd223fe2","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["928397ec435b4776","bfbd9b30c217d194","5250abb0abece036","ea36d3f7b30be7af","e4d7bc16f411e836","e8d14de801bad46b","b6d8036882fb0315","70b503d9f70be854"],"x":814,"y":3719,"w":642,"h":202},{"id":"b2941bd36f42936c","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["d5ef25611722e6a9","cef9d65266276d66","8e161a20289c233c","9f9443e6d4c2c609","a6778dbdae56c316","d8109ab529567d6e","749b4d1c28ac4963"],"x":824,"y":4379,"w":602,"h":142},{"id":"12d89e0a67715ef8","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["97e779233af476c5","f46b666e01621da8","64086f50f3158f39","ad5822edfe94c662","bb58b49ed058723c","98d32b41f170df22","eabc5afdc7486d58"],"x":834,"y":4539,"w":582,"h":142},{"id":"924791273d1f0464","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["373403c70d18ed2e","0550e27bc4f11b6f","37cea002b8b4bca6","2a9f9087dc56f131","6e03a74882a0defb","056359bb9ab228ce"],"x":814,"y":3939,"w":632,"h":142},{"id":"07e412f9e1dd538e","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["b64058966bc2b03a","26cedfa8d1203037","623303e267deef2d","398f75acb586fac8","7bf434e4292d2327","c1b24bccf2e7d5a7"],"x":824,"y":4099,"w":612,"h":142},{"id":"bfb1374fcf5b48b9","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["faf00348be972d39","303dad00f2afe923","36903ebd466f326d","3df780562aaccd0e","d2ed257429706836","e6f79e1c57373dcd"],"x":824,"y":4239,"w":622,"h":142},{"id":"9309ba9f15bdd552","type":"group","z":"3752d27d7587c957","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["15db15c7e2de4370","f8f91e027dfc8333","13559ea87af327af","bda808f336509948","64e65d877d2f6338","61af123542cf6443","fbba94c4d9cbdadb"],"x":1514,"y":2179,"w":622,"h":162},{"id":"c91e1e1018209c58","type":"group","z":"3752d27d7587c957","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["bf178d140cd3a947","0970ba51c7fda08e","b05f07a1e755da48","dad47ea322ec8b37","28c6b5d7d65acfac","bc2bedc4446fe072","38358691bf1511a9"],"x":1514,"y":2019,"w":642,"h":162},{"id":"d634b49c93972c8c","type":"group","z":"3752d27d7587c957","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["f0d2d59e9fb71a11","695c16207afdcdaa","4f8602da2d439cb1","ccb808bba5fe34af","1fc079df5d0649cc","795027dc6079bbcd"],"x":1504,"y":1839,"w":642,"h":162},{"id":"082054cd4a9a0dc1","type":"group","z":"3752d27d7587c957","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["2fe236b6ecf4be1a","548fd1b0ea533144","dec304f413eef635","1c021da55d25e11a","7fda7edaf7e5818c","4c6249a89c9f8505"],"x":1504,"y":1679,"w":632,"h":162},{"id":"ecb02d38c4118377","type":"group","z":"3752d27d7587c957","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["f81d8c962ee7f1d5","9743d50e741ac49e","ba354dc96e68c583","09de5509dbd47ef7","fa4182f14e046b55","3905f327349462e9"],"x":1494,"y":1519,"w":642,"h":162},{"id":"e88a7bd1d639bad0","type":"group","z":"3752d27d7587c957","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["130aefac0c56f3d2","eadd457dd58778f4","8c9e965122e60702","044b8b89746465ea","275bae4f3b5b7256","9ea6f7948516271f"],"x":754,"y":2599,"w":582,"h":142},{"id":"e91c9e1d85c046ee","type":"group","z":"3752d27d7587c957","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["98e9d929c7780a95","96329aa106f70306","5fb6d1a98472e6a7","72b6eee10204eab0","38dec2c32136830f","33fc3d2e9cd78585","c8eedd46a87c4e05","24c9220c68fb62b7"],"x":754,"y":2359,"w":672,"h":222},{"id":"46849ed08b50e5ba","type":"group","z":"3752d27d7587c957","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["23007d82705af554","5521b9903e434e53","9f560067e24ed926","ceece08bdcf36b45","47f66b133089a307","26c9991882e10724","5bbf896a2ea907b7"],"x":754,"y":3239,"w":642,"h":162},{"id":"af5ae6e3ad5ee085","type":"group","z":"3752d27d7587c957","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["6adb40f69dc1d358","2d1032e30c1285d7","b01288200b38b3d8","c55d6a64f93d071e","8cbbef67cfbe7dfe","d6464c42f14d5fc5"],"x":764,"y":3079,"w":642,"h":162},{"id":"5bac9b3f67a092a7","type":"group","z":"3752d27d7587c957","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["fa6ccea1f0eb7761","55ae7399c1ff6c60","eec1cc6d7c31c0d5","b7298b472b6af1e2","cb1beae740939d31","f9ce7d4cdddd4bc1"],"x":764,"y":2919,"w":632,"h":162},{"id":"8cb611ea5c4ba863","type":"group","z":"3752d27d7587c957","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["054a9ac36b5ddd7f","51a4f01dad48fe0b","205e3974a1b26ec3","a2cc8907d2e035e6","6742723e51a69e70","5943e827fde3be92"],"x":754,"y":2759,"w":642,"h":162},{"id":"d47068ee803a0746","type":"group","z":"3752d27d7587c957","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["e7086e9b57e7aedd","2c07528ffc45451d","7e0384d9297a7e91","80f2b3c3b959bc1a","14427e078adf6cba","ed29e5a88b496068"],"x":834,"y":3899,"w":582,"h":142},{"id":"847594f46987e383","type":"group","z":"3752d27d7587c957","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["4dfa24b6d8b42ff4","c75110310104533e","2456ad9015cf1db8","edc89824a48d595e","4c2f7e58d2747c89","b7c84e5a0d6164f8","1a0ec9c685e04bdd","81b2a412d6022071"],"x":834,"y":3659,"w":672,"h":222},{"id":"2f58abf3df089a0a","type":"group","z":"3752d27d7587c957","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["2ee9dc2a253a61c0","fb45cd88ffcdccdb","503fc3f9a3d0e523","d1959910cd73202a","a229da6e12603695","159e5b09bd1d8b0a","066110f97b6727b1"],"x":834,"y":4539,"w":642,"h":162},{"id":"16ae38ecbbecfb3c","type":"group","z":"3752d27d7587c957","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["3058f5e69e108b49","d6d70596698ec69d","5527298732557b21","c5ab8f7e0e65487f","8af0c8809f8679e2","8dfaec90effbf6d5"],"x":844,"y":4379,"w":642,"h":162},{"id":"d61b690a44a7b889","type":"group","z":"3752d27d7587c957","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["3ab18c9107c0b265","9e6805dc5aacd0eb","d06f6cf9e29a00e2","2621143cc57c267d","9a757849e139a788","81fb7a57cf621af7"],"x":844,"y":4219,"w":632,"h":162},{"id":"a36ff310c44458ba","type":"group","z":"3752d27d7587c957","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["e08625c0e15d465a","c1ac94e9178182bd","4357a5e8416142e6","922bd2bc6ee5806f","e462cbb4a6911311","5f47a9411d92b261"],"x":834,"y":4059,"w":642,"h":162},{"id":"f3e1b95b0574fe9e","type":"group","z":"6fcb82f207901f17","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["00c51e4c238f37ae","e237fd1275ec541b","c1ab128a5a405f74","670ee9939bd6c892","3172c0b6cecfca61","3e2f50f564baa5f7","a7039b2d22c05539"],"x":1334,"y":2479,"w":582,"h":142},{"id":"e0e84d9c3c29ed74","type":"group","z":"6fcb82f207901f17","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["34d7c43fb0924feb","58ad27edfca23a83","4564bb51d83a0b4f","54edc441e8a59d26","5177cd6f9c7f7ec3","b7c7a89318f8d310","ad36f486222d39fa"],"x":1324,"y":2319,"w":602,"h":142},{"id":"c57a003c2d509dd1","type":"group","z":"6fcb82f207901f17","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["f1661726d2ee693d","3422ccbf68aa8c0e","6787011be821c1cc","7e14b98351bfd86f","ed72a75f5413aabc","a6032c075c07a121"],"x":1324,"y":2159,"w":622,"h":142},{"id":"3ef055f6ecae0521","type":"group","z":"6fcb82f207901f17","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["d7a32fcc4e76a35c","db172a7181b00153","cfbb482d671717ad","abe4483090f685a3","5c5959aa60778b19","4e44711d10e0844c"],"x":1324,"y":2019,"w":612,"h":142},{"id":"fda5147727773bdd","type":"group","z":"06acd4b20e43ebca","g":"54292956c333b23f","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["e387af1f5dd04006","c909908d89ddf89f","745794723f1cf766"],"x":294,"y":279,"w":252,"h":182},{"id":"772e5574b48097ec","type":"group","z":"06acd4b20e43ebca","g":"006962726c2bf026","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["4d63d31c31b9ec72","866a5a3913e7e17c","38d06d19406370d3"],"x":1034,"y":279,"w":232,"h":182},{"id":"28063fd731271172","type":"group","z":"06acd4b20e43ebca","g":"fc522ecb452d5d02","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["f947f4bc73ed6cbd","beb5dd70fad21ece","cf42387b60977efe"],"x":674,"y":279,"w":252,"h":182},{"id":"8540a64360eeb2e3","type":"junction","z":"d28a10efe1bd691a","x":340,"y":820,"wires":[["5561d722474925a7"]]},{"id":"2ca002327ef036d1","type":"junction","z":"d28a10efe1bd691a","x":340,"y":780,"wires":[["3d1de2da21737bbf","1e9219706b3dcb52"]]},{"id":"ca3e91a1c3e14f9b","type":"junction","z":"d28a10efe1bd691a","x":340,"y":740,"wires":[["41b4555e8bcf365c","27c4409593298a63"]]},{"id":"da0338216a460080","type":"junction","z":"d28a10efe1bd691a","x":340,"y":700,"wires":[["408da79490fe8f31","3580666ca566a1b2"]]},{"id":"daef70d5a79e39fe","type":"junction","z":"d28a10efe1bd691a","x":340,"y":660,"wires":[["abb81f02ef7e7af3"]]},{"id":"5c422b0437f7893a","type":"junction","z":"d28a10efe1bd691a","x":340,"y":600,"wires":[["f65b5f035dc3938f"]]},{"id":"a0dc501fd13e7973","type":"junction","z":"d28a10efe1bd691a","x":340,"y":560,"wires":[["33da5f920111ae7b"]]},{"id":"d43c4fc62cb7ebdd","type":"junction","z":"d28a10efe1bd691a","x":340,"y":500,"wires":[["6691f30896f4957c"]]},{"id":"9af98dd672d35e6f","type":"junction","z":"d28a10efe1bd691a","x":340,"y":460,"wires":[["1cafc3cdc596a71c"]]},{"id":"0ed2c6313c27ba5c","type":"junction","z":"d28a10efe1bd691a","x":340,"y":420,"wires":[["1228d1849dd6e17f"]]},{"id":"999e2c68e85ba1ad","type":"junction","z":"d28a10efe1bd691a","x":340,"y":380,"wires":[["cf870d1497c1636b"]]},{"id":"be27cdd6685e57bf","type":"junction","z":"d28a10efe1bd691a","x":340,"y":340,"wires":[["c3ca25576cc164f4"]]},{"id":"6ded9232a772672a","type":"junction","z":"d28a10efe1bd691a","x":340,"y":300,"wires":[["feaab4802e8da54a"]]},{"id":"e7dd382b1bc9a889","type":"junction","z":"d28a10efe1bd691a","x":340,"y":260,"wires":[["03095de55d04d1ea"]]},{"id":"67543176e6275d51","type":"junction","z":"d28a10efe1bd691a","x":340,"y":220,"wires":[["d2c934d915b9fd5b","2cd2917dcacf2ef2"]]},{"id":"03c1cf1f055128f4","type":"junction","z":"d28a10efe1bd691a","x":340,"y":180,"wires":[["0d988b7baa82e8d6","2cd2917dcacf2ef2"]]},{"id":"2d68c9a779e74e74","type":"junction","z":"d28a10efe1bd691a","x":340,"y":140,"wires":[["a504aa090a9bbc61"]]},{"id":"4699a341c0e525a1","type":"junction","z":"3752d27d7587c957","x":340,"y":80,"wires":[["a02e58aa1b5be4d9"]]},{"id":"d6b7596272b92fd6","type":"junction","z":"3752d27d7587c957","x":340,"y":120,"wires":[["d0fa75ce32c2b2ec","157fdad538b46545"]]},{"id":"a8d42f450f5ec3bf","type":"junction","z":"3752d27d7587c957","x":340,"y":160,"wires":[["37a0cd0ecce69585","157fdad538b46545"]]},{"id":"82b3968d5e1d0b1a","type":"junction","z":"3752d27d7587c957","x":340,"y":200,"wires":[["b01cc8b798cf40db"]]},{"id":"716d0ea3761ab229","type":"junction","z":"3752d27d7587c957","x":340,"y":240,"wires":[["a0b65bcedc96a0fe","d667e426b36be2c9"]]},{"id":"1beade2ff5ca5212","type":"junction","z":"3752d27d7587c957","x":340,"y":320,"wires":[["38cd4d82cd0fd287","03170a055dee0c18"]]},{"id":"3b25550daaa0d938","type":"junction","z":"3752d27d7587c957","x":340,"y":360,"wires":[["6e29c36400302613","d63dfedba31e6c03"]]},{"id":"628eb0efdd45d47f","type":"junction","z":"3752d27d7587c957","x":340,"y":400,"wires":[["eb850d44242cc6c6","883e53c619710a5c"]]},{"id":"02199cb92b1a3f32","type":"junction","z":"3752d27d7587c957","x":340,"y":440,"wires":[["3b9ddcea592dfa6c","09388aae1c81e85e"]]},{"id":"455ed3c6930adfe0","type":"junction","z":"3752d27d7587c957","x":340,"y":280,"wires":[["42ff7b7243adac0b","71bbf76e3992257f"]]},{"id":"edeead31dd6a80b8","type":"junction","z":"3752d27d7587c957","x":340,"y":540,"wires":[["c82ef6e4f9fa3159","bb53d025f4d0e3fa"]]},{"id":"7e5df50c6683b600","type":"junction","z":"3752d27d7587c957","x":340,"y":760,"wires":[["89391fcf7fa2d9dc","669616aead0ef19f"]]},{"id":"bd65fa0bcf194b27","type":"junction","z":"3752d27d7587c957","x":340,"y":720,"wires":[["65ac2cfaa7ba045c","49c6e2de0f1b0630"]]},{"id":"724dfeb83c172e7d","type":"junction","z":"3752d27d7587c957","x":340,"y":680,"wires":[["fea31e55b74e768b","e52f426c3a45d473","b2cb416cb6617c7b"]]},{"id":"3aa5bb36956938c6","type":"junction","z":"3752d27d7587c957","x":340,"y":640,"wires":[["cab823730c4a70a7","5f82452669bf7cb1"]]},{"id":"8c0773acdba0ce48","type":"junction","z":"3752d27d7587c957","x":340,"y":600,"wires":[["472539b957b3d55c"]]},{"id":"85a703016b798065","type":"junction","z":"3752d27d7587c957","x":340,"y":500,"wires":[["c8ac68f99c237d2c","b0d376be03892225"]]},{"id":"709f15e79c3e231e","type":"junction","z":"87bab898757000a2","x":360,"y":800,"wires":[["6f852176198d67b8","0d648d1a287b160d","7b33e1fa9654de02"]]},{"id":"006d6dc52bbe29da","type":"junction","z":"87bab898757000a2","x":360,"y":760,"wires":[["f400654d457ab0af","79bde8bec83cb56a","fc7309bac2a5580d"]]},{"id":"ad366fe75322e5d3","type":"junction","z":"87bab898757000a2","x":360,"y":720,"wires":[["349dcfebcd7877da","9d125ce221658824","ce4696697eb9cc47"]]},{"id":"e6c1ccc1e8bf4243","type":"junction","z":"87bab898757000a2","x":360,"y":680,"wires":[["8d95d41fedb12bda","f76573c680abe051","5f10e37424012087"]]},{"id":"95cfd8479db6cdb6","type":"junction","z":"87bab898757000a2","x":360,"y":640,"wires":[["0a1295920208c384","c4d9642cd60ee3b5"]]},{"id":"72f71ec5f3b106d5","type":"junction","z":"87bab898757000a2","x":360,"y":580,"wires":[["e4b5460d3febe1a2","6dc8f908895b8048"]]},{"id":"dd5b4ad7e458c3f6","type":"junction","z":"87bab898757000a2","x":360,"y":540,"wires":[["18c34d8b20c39f73","24a35980a67b1b86"]]},{"id":"b8d42bdbb97224c9","type":"junction","z":"87bab898757000a2","x":360,"y":480,"wires":[["cee884061f3f2261","a057a5f182e73de8"]]},{"id":"310608ec1d45fcb2","type":"junction","z":"87bab898757000a2","x":360,"y":440,"wires":[["0d29d605591497f4","8ba8b97980f98d4e"]]},{"id":"ae7ddd31bbfb2985","type":"junction","z":"87bab898757000a2","x":360,"y":400,"wires":[["9865254487956201","24cec488a394f147"]]},{"id":"a0aeced795617438","type":"junction","z":"87bab898757000a2","x":360,"y":360,"wires":[["1d22f5d38d2f029b","7b1434a24c5c2d0a"]]},{"id":"7b717655bc69afdc","type":"junction","z":"87bab898757000a2","x":360,"y":320,"wires":[["a46594e2514f068e","b5fcb9fc8354bcab"]]},{"id":"802c582eb02146c9","type":"junction","z":"87bab898757000a2","x":360,"y":280,"wires":[["79fa901ba76691b8","cdabbf668a463011"]]},{"id":"8b78835f54a976ce","type":"junction","z":"87bab898757000a2","x":360,"y":240,"wires":[["9f322326faf32502"]]},{"id":"b769596a4bbc4607","type":"junction","z":"87bab898757000a2","x":360,"y":200,"wires":[["5974b167ebb2f9e4","4675a31b7d62a521"]]},{"id":"ad196bb7c36068ab","type":"junction","z":"87bab898757000a2","x":360,"y":160,"wires":[["4302d5e5f0144f64","4675a31b7d62a521"]]},{"id":"1ded9b8984de496a","type":"junction","z":"87bab898757000a2","x":360,"y":120,"wires":[["dfe1f213a50dabe8"]]},{"id":"d96c8c880ff4d858","type":"junction","z":"6fcb82f207901f17","x":360,"y":800,"wires":[["f16efe7fe70d8549","cd544d1577c3244e"]]},{"id":"919fb8b87429c144","type":"junction","z":"6fcb82f207901f17","x":360,"y":760,"wires":[["7c5ab19c36b42966","2a1226b0ec4c5cf6"]]},{"id":"eae653d39366095c","type":"junction","z":"6fcb82f207901f17","x":360,"y":720,"wires":[["237a41d224fa2e28","25fbf2f05d2fa597","12e8a131245940fe"]]},{"id":"eec02b873fa99b46","type":"junction","z":"6fcb82f207901f17","x":360,"y":680,"wires":[["110e9aef265dc948","1e593888d3f50a3f"]]},{"id":"30a21cb64d63c568","type":"junction","z":"6fcb82f207901f17","x":360,"y":640,"wires":[["62313aa383826fbe"]]},{"id":"ba42a92d2beb8531","type":"junction","z":"6fcb82f207901f17","x":360,"y":580,"wires":[["bab83811a8461d76","a847784b825367cf"]]},{"id":"1ebd4f93fee4b36a","type":"junction","z":"6fcb82f207901f17","x":360,"y":540,"wires":[["8ceaf85afe3bc0c0","efde13ce254c6d36"]]},{"id":"79b4d6d474534ec2","type":"junction","z":"6fcb82f207901f17","x":360,"y":480,"wires":[["8306adac1e726634","9047fd449bb3fc5c"]]},{"id":"c238ed6e52394ded","type":"junction","z":"6fcb82f207901f17","x":360,"y":440,"wires":[["47c6341b7602ee1d","1712036e5017a238"]]},{"id":"d6e6ba622cf9670e","type":"junction","z":"6fcb82f207901f17","x":360,"y":400,"wires":[["5a1c8f2a6c550715","043f3911673a92bf"]]},{"id":"72959bd8815caca1","type":"junction","z":"6fcb82f207901f17","x":360,"y":360,"wires":[["32d7f9519ea64e83","9c3e310d274fac45"]]},{"id":"b5f79c75d71e4dcf","type":"junction","z":"6fcb82f207901f17","x":360,"y":320,"wires":[["4c41e9c25c63cbb8","586d29f48805f54d"]]},{"id":"7d52ae70ce7888dd","type":"junction","z":"6fcb82f207901f17","x":360,"y":280,"wires":[["587f23aa46258134","20d35bed4d2e3567"]]},{"id":"c6a1db0e41275972","type":"junction","z":"6fcb82f207901f17","x":360,"y":240,"wires":[["e5c222da83284c73"]]},{"id":"f02c2bfe1ed03831","type":"junction","z":"6fcb82f207901f17","x":360,"y":200,"wires":[["1a1e45a71b607074","c75f44bec1790cd8"]]},{"id":"ce2e18cc131bf59c","type":"junction","z":"6fcb82f207901f17","x":360,"y":160,"wires":[["757409ea9e951339","c75f44bec1790cd8"]]},{"id":"f6a5742628a9989a","type":"junction","z":"6fcb82f207901f17","x":360,"y":120,"wires":[["117979424702b92e"]]},{"id":"820f24819599c56d","type":"junction","z":"837562a29cc16bf1","x":340,"y":780,"wires":[["1feef4e361d6f4ab"]]},{"id":"06a8234a0e50da53","type":"junction","z":"837562a29cc16bf1","x":340,"y":740,"wires":[["d8f2fcca50f43695","b08769debd37ea42"]]},{"id":"7a29d65c56ea38ce","type":"junction","z":"837562a29cc16bf1","x":340,"y":700,"wires":[["4ff3d1707695e0f6","2e58ca36e4975292"]]},{"id":"f2f13c248e0b8c38","type":"junction","z":"837562a29cc16bf1","x":340,"y":660,"wires":[["738cf6c13d34f5ac","b29f1ccf177ca9bc"]]},{"id":"0b97ef72d268e742","type":"junction","z":"837562a29cc16bf1","x":340,"y":620,"wires":[["0aa762f5f80712c8"]]},{"id":"d807c37c87e52fb7","type":"junction","z":"837562a29cc16bf1","x":340,"y":560,"wires":[["3011ac99935058fc"]]},{"id":"2600ce922720d165","type":"junction","z":"837562a29cc16bf1","x":340,"y":520,"wires":[["33d2df760c249443"]]},{"id":"e474bc581931075b","type":"junction","z":"837562a29cc16bf1","x":340,"y":460,"wires":[["7f77813b91965276"]]},{"id":"884cf8a2633214fe","type":"junction","z":"837562a29cc16bf1","x":340,"y":420,"wires":[["f3be4872d689a0ca"]]},{"id":"4babf1f954c3e57b","type":"junction","z":"837562a29cc16bf1","x":340,"y":380,"wires":[["022c729507aff6df"]]},{"id":"237aa8a46cf62248","type":"junction","z":"837562a29cc16bf1","x":340,"y":340,"wires":[["afeeb2589c30fa74"]]},{"id":"75f661a92ec9a9bc","type":"junction","z":"837562a29cc16bf1","x":340,"y":300,"wires":[["caf859c3f933940e"]]},{"id":"3deecb435aa812f2","type":"junction","z":"837562a29cc16bf1","x":340,"y":260,"wires":[["e29616dda5bc78bb"]]},{"id":"cd2ee8affa561b9c","type":"junction","z":"837562a29cc16bf1","x":340,"y":220,"wires":[["52fdbd67490934c4"]]},{"id":"894e3f2d417270a1","type":"junction","z":"837562a29cc16bf1","x":340,"y":180,"wires":[["eb74c53d01b97ace","f10df41350b98c50"]]},{"id":"d2502e609aee86c4","type":"junction","z":"837562a29cc16bf1","x":340,"y":140,"wires":[["a42167d7f369149a","f10df41350b98c50"]]},{"id":"e7d85836d6efff20","type":"junction","z":"837562a29cc16bf1","x":340,"y":100,"wires":[["0214db4988ac22b5"]]},{"id":"5772bf4c.b461d","type":"server","name":"OpenGrowBox","version":5,"addon":true,"rejectUnauthorizedCerts":true,"ha_boolean":"y|yes|true|on|home|open","connectionDelay":true,"cacheJson":true,"heartbeat":false,"heartbeatInterval":"30","areaSelector":"friendlyName","deviceSelector":"friendlyName","entitySelector":"friendlyName","statusSeparator":"at: ","statusYear":"hidden","statusMonth":"short","statusDay":"numeric","statusHourCycle":"h23","statusTimeFormat":"h:m","enableGlobalContextStore":true},{"id":"1a9ed93138063774","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"vpdflower","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VPD-Flower"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"pressure"},{"property":"unit_of_measurement","value":"kPa"},{"property":"state_class","value":"measurement"}],"resend":true,"debugEnabled":false},{"id":"a9a93d97bbb7b04a","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"AirCtrlFlower","version":"6","entityType":"number","haConfig":[{"property":"name","value":"AirCtrlFlower"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"config"},{"property":"device_class","value":"battery"},{"property":"unit_of_measurement","value":"%"},{"property":"min_value","value":5},{"property":"max_value","value":95},{"property":"step_value","value":1},{"property":"mode","value":"slider"}],"resend":false,"debugEnabled":true},{"id":"9cc6832db356ad2f","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"ECRuckFlower","version":"6","entityType":"switch","haConfig":[{"property":"name","value":"ECRuckFlower"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"config"},{"property":"device_class","value":"switch"}],"resend":false,"debugEnabled":true},{"id":"2b0a7710b4f6a58a","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VeggiTentStageSelect","version":"6","entityType":"select","haConfig":[{"property":"name","value":"VeggiTentStageSelect"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"config"},{"property":"options","value":["Germination","Clones","EarlyVeg","MidVeg","LateVeg","EarlyFlower","MidFlower","LateFlower"]}],"resend":false,"debugEnabled":false},{"id":"74408db15ce786e7","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerTent","version":"6","entityType":"select","haConfig":[{"property":"name","value":"FlowerTentStageSelect"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"options","value":["Germination","Clones","EarlyVeg","MidVeg","LateVeg","EarlyFlower","MidFlower","LateFlower"]}],"resend":false,"debugEnabled":false},{"id":"5de3d083be69c9ff","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"vpdVegi","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"vpdVegi"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"pressure"},{"property":"unit_of_measurement","value":"kPa"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"10a55acc5911459b","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"DLI","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"DLI"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":""},{"property":"unit_of_measurement","value":"mol/m²/d"},{"property":"state_class","value":""}],"resend":false,"debugEnabled":false},{"id":"c58623d735fb8295","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"PPFD","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"PPFD"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":""},{"property":"unit_of_measurement","value":"µmol/m²s"},{"property":"state_class","value":""}],"resend":false,"debugEnabled":false},{"id":"966c8337df68a0db","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerTentModes","version":"6","entityType":"select","haConfig":[{"property":"name","value":"FlowerTentModes"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"options","value":["VPD Perfection","IN-VPD-Range","Targeted VPD","CropSteering","Disabled"]}],"resend":false,"debugEnabled":false},{"id":"f152b5af3096b1e5","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VegiTentModes","version":"6","entityType":"select","haConfig":[{"property":"name","value":"VegiTentModes"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"options","value":["VPD Perfection","IN-VPD-Range","Targeted VPD","CropSteering","Disabled"]}],"resend":false,"debugEnabled":false},{"id":"351be2fcdaadc9bd","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"PPFD_VEGI","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"PPFDVegi"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":""},{"property":"unit_of_measurement","value":"µmol/m²s"},{"property":"state_class","value":""}],"resend":false,"debugEnabled":false},{"id":"a5f1cc19016994d1","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"DLIVegi","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"DLIVegi"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":""},{"property":"unit_of_measurement","value":"mol/m²/d"},{"property":"state_class","value":""}],"resend":false,"debugEnabled":false},{"id":"b923911d032dc0de","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"AirCtrlVegi","version":"6","entityType":"number","haConfig":[{"property":"name","value":"AirCtrlVegi"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"config"},{"property":"device_class","value":"battery"},{"property":"unit_of_measurement","value":"%"},{"property":"min_value","value":5},{"property":"max_value","value":95},{"property":"step_value","value":""},{"property":"mode","value":"slider"}],"resend":false,"debugEnabled":false},{"id":"9e27ae392ae6bf01","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"ECRuckVegi","version":"6","entityType":"switch","haConfig":[{"property":"name","value":"RuckECVegi"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":""}],"resend":false,"debugEnabled":false},{"id":"353aed64cee4c57c","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VPD-Drying-Wish-Saturation","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VPD-Drying-Wish-Saturation"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"pressure"},{"property":"unit_of_measurement","value":"mbar"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"51482df92d2f1f29","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"AirCtrlDryer","version":"6","entityType":"number","haConfig":[{"property":"name","value":"AirCtrlDryer"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":""},{"property":"unit_of_measurement","value":""},{"property":"min_value","value":""},{"property":"max_value","value":""},{"property":"step_value","value":""},{"property":"mode","value":"auto"}],"resend":false,"debugEnabled":false},{"id":"52b8c46d1aea9a62","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"ECRuckDryer","version":"6","entityType":"switch","haConfig":[{"property":"name","value":"ECRuckDryer"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":""}],"resend":false,"debugEnabled":false},{"id":"b1ea27673763365a","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"DryTentTemp","version":"6","entityType":"number","haConfig":[{"property":"name","value":"DryTentTemp"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"config"},{"property":"device_class","value":"temperature"},{"property":"unit_of_measurement","value":"°C"},{"property":"min_value","value":12},{"property":"max_value","value":25},{"property":"step_value","value":0.25},{"property":"mode","value":"slider"}],"resend":false,"debugEnabled":false},{"id":"73f4eb93439668cf","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"DryTentDewPoint","version":"6","entityType":"number","haConfig":[{"property":"name","value":"DryTentDewPoint"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":"temperature"},{"property":"unit_of_measurement","value":"°C"},{"property":"min_value","value":8},{"property":"max_value","value":15},{"property":"step_value","value":0.25},{"property":"mode","value":"slider"}],"resend":false,"debugEnabled":false},{"id":"5e8e4b22b2382ebb","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"DryTentCana","version":"6","entityType":"select","haConfig":[{"property":"name","value":"DryTentCana"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"config"},{"property":"options","value":["Drying","Curing","Holding","DarkRoom","Disabled"]}],"resend":false,"debugEnabled":false},{"id":"16cdce977a2e1395","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VPD-Wish-DryTent","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VPD-Wish-DryTent"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"pressure"},{"property":"unit_of_measurement","value":"kPa"},{"property":"state_class","value":""}],"resend":false,"debugEnabled":false},{"id":"ff39c4ebf8b39710","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VaporPressure-Drying-Actual","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VaporPressureWish-Drying-Actual"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"pressure"},{"property":"unit_of_measurement","value":"mbar"},{"property":"state_class","value":""}],"resend":false,"debugEnabled":false},{"id":"3ea1f76a87bc8d2e","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"WaterActivityWish","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"WaterActivityWish"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":""},{"property":"unit_of_measurement","value":""},{"property":"state_class","value":""}],"resend":false,"debugEnabled":false},{"id":"73178f44c6896881","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"DryTentWishHumidity","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"DryTentWishHumidity"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"humidity"},{"property":"unit_of_measurement","value":"%"},{"property":"state_class","value":""}],"resend":false,"debugEnabled":false},{"id":"edc405a70462ce85","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerAVGTemp","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerAVGTemp"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"temperature"},{"property":"unit_of_measurement","value":"°C"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"532f3d1e489722da","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerAVGHum","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerAVGHum"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"humidity"},{"property":"unit_of_measurement","value":"%"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"fbd2ef51e597d808","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VegiAVGTemp","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VegiAVGTemp"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"temperature"},{"property":"unit_of_measurement","value":"°C"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"c918d481d80ee2dc","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VegiAVGHum","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VegiAVGHum"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"humidity"},{"property":"unit_of_measurement","value":"%"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"d5ba019e431db281","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"vpdgrowroom","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VPD-GRoom"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"pressure"},{"property":"unit_of_measurement","value":"kPa"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"3cd010abab22bd94","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"AVGTemp-GRoom","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"AVGTemp-GRoom"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"temperature"},{"property":"unit_of_measurement","value":"°C"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"d89f8d34c695951c","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"AVGHum-GRoom","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"AVGHum-GRoom"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"humidity"},{"property":"unit_of_measurement","value":"%"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"9b20db2b6bd5562c","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VeggiTarget-VPD","version":"6","entityType":"number","haConfig":[{"property":"name","value":"VeggiTarget-VPD"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":"pressure"},{"property":"unit_of_measurement","value":"kPa"},{"property":"min_value","value":0},{"property":"max_value","value":1.8},{"property":"step_value","value":0.01},{"property":"mode","value":"slider"}],"resend":false,"debugEnabled":false},{"id":"7dd2240f65033c72","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerTarget-VPD","version":"6","entityType":"number","haConfig":[{"property":"name","value":"FlowerTarget-VPD"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"pressure"},{"property":"unit_of_measurement","value":"kPa"},{"property":"min_value","value":0},{"property":"max_value","value":2},{"property":"step_value","value":0.01},{"property":"mode","value":"auto"}],"resend":false,"debugEnabled":false},{"id":"d222d6eb6c8489b2","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"GRoom-Target-VPD","version":"6","entityType":"number","haConfig":[{"property":"name","value":"GRoom-Target-VPD"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"pressure"},{"property":"unit_of_measurement","value":"kPa"},{"property":"min_value","value":0},{"property":"max_value","value":2},{"property":"step_value","value":0.01},{"property":"mode","value":"slider"}],"resend":false,"debugEnabled":false},{"id":"10c9db02cb486656","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"GlobalLeafTemp","version":"6","entityType":"number","haConfig":[{"property":"name","value":"LeafTempOffset"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"temperature"},{"property":"unit_of_measurement","value":"°C"},{"property":"min_value","value":0},{"property":"max_value","value":2},{"property":"step_value","value":0.1},{"property":"mode","value":"slider"}],"resend":false,"debugEnabled":false},{"id":"4d520d7d773809b5","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"GRoomAVGDewpoint","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"GRoomAVGDewpoint"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"temperature"},{"property":"unit_of_measurement","value":"°C"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"bb585a7e9b14d52e","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VeggiAVGDewPoint","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VeggiAVGDewPoint"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"temperature"},{"property":"unit_of_measurement","value":"°C"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"0741c8a3236b491c","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerAVGDewPoint","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerAVGDewPoint"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"temperature"},{"property":"unit_of_measurement","value":"°C"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"e6f59d1d73093224","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerLeafTemp","version":"6","entityType":"number","haConfig":[{"property":"name","value":"FlowerLeafTemp"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"config"},{"property":"device_class","value":"temperature"},{"property":"unit_of_measurement","value":"°C"},{"property":"min_value","value":0},{"property":"max_value","value":2},{"property":"step_value","value":0.1},{"property":"mode","value":"slider"}],"resend":false,"debugEnabled":false},{"id":"0d4aa62025063e39","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VeggiLeafTemp","version":"6","entityType":"number","haConfig":[{"property":"name","value":"VeggiLeafTemp"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":"temperature"},{"property":"unit_of_measurement","value":"°C"},{"property":"min_value","value":0},{"property":"max_value","value":2},{"property":"step_value","value":0.1},{"property":"mode","value":"slider"}],"resend":false,"debugEnabled":false},{"id":"2c294ef3ef47f75d","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"GRoomLeafTemp","version":"6","entityType":"number","haConfig":[{"property":"name","value":"GRoomLeafTemp"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"config"},{"property":"device_class","value":"temperature"},{"property":"unit_of_measurement","value":"°C"},{"property":"min_value","value":0},{"property":"max_value","value":2},{"property":"step_value","value":0.1},{"property":"mode","value":"auto"}],"resend":false,"debugEnabled":false},{"id":"0acca6c6ffe536a2","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"LeafSet","version":"6","entityType":"select","haConfig":[{"property":"name","value":"LeafSet"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"config"},{"property":"options","value":["Default","Custom"]}],"resend":false,"debugEnabled":false},{"id":"2e3f07c643473a61","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"GRoomModes","version":"6","entityType":"select","haConfig":[{"property":"name","value":"GRoomModes"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"options","value":["VPD Perfection","IN-VPD-Range","Targeted VPD","CropSteering","Disabled"]}],"resend":false,"debugEnabled":false},{"id":"5bb88ead3cc78693","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"GRoomStageSelect","version":"6","entityType":"select","haConfig":[{"property":"name","value":"GRoomStageSelect"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"options","value":["Germination","Clones","EarlyVeg","MidVeg","LateVeg","EarlyFlower","MidFlower","LateFlower"]}],"resend":false,"debugEnabled":false},{"id":"4c5909d829f0f2cf","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerCO2","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerCO2"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"carbon_dioxide"},{"property":"unit_of_measurement","value":"ppm"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"ee6603a7841f90d7","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerPressure","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerPressure"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"pressure"},{"property":"unit_of_measurement","value":"kPa"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"b48068e2b6382f35","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerMoisture","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerMoisture"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"moisture"},{"property":"unit_of_measurement","value":"%"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"2150742022321ba4","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerBatterieDevices","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerBatterieDevices"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"battery"},{"property":"unit_of_measurement","value":"%"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"6938113c94cc6c5d","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerRootTemp","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerRootTemp"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"temperature"},{"property":"unit_of_measurement","value":"°C"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"6584d61dadd6110e","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FLowerLightIntense","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FLowerLightIntense"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":"illuminance"},{"property":"unit_of_measurement","value":"lx"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"0628161aa905c63c","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerPowerConsume","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerPowerConsume"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"power"},{"property":"unit_of_measurement","value":"W"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"2acab65eb8c7d7db","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerEC","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerEC"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":""},{"property":"unit_of_measurement","value":"µS/cm"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"96027b4729ff7383","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerExhaustDutyCycle","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerExhaustDutyCycle"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"battery"},{"property":"unit_of_measurement","value":"%"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"87469d8744ed20ba","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerExhaustState","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerExhaustState"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":""},{"property":"unit_of_measurement","value":""},{"property":"state_class","value":""}],"resend":false,"debugEnabled":false},{"id":"fdc22e77b0c5dbe3","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VeggiMoisture","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VeggiMoisture"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"moisture"},{"property":"unit_of_measurement","value":"%"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"68810d13c01a98ba","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VeggiRootTemp","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VeggiRootTemp"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"temperature"},{"property":"unit_of_measurement","value":"°C"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"0a689f654f6cfecb","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VeggiEC","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VeggiEC"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":""},{"property":"unit_of_measurement","value":"µS/cm"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"6aeda981e19a8694","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VeggiPressure","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VeggiPressure"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"pressure"},{"property":"unit_of_measurement","value":"kPa"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"3bf46a3f240b688e","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VeggiCO2","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VeggiCO2"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"carbon_dioxide"},{"property":"unit_of_measurement","value":"ppm"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"d3a9b3e22cb3c349","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VeggiLightIntense","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VeggiLightIntense"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":"illuminance"},{"property":"unit_of_measurement","value":"lx"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"3f8ce21d326f8670","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VeggiBatterieDevices","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VeggiBatterieDevices"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"battery"},{"property":"unit_of_measurement","value":"%"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"cd5681d147a94f3e","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VeggiPowerConsume","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VeggiPowerConsume"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":"power"},{"property":"unit_of_measurement","value":"W"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"ba8566e09903f293","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VeggiExhaustDuty","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VeggiExhaustDuty"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":"battery"},{"property":"unit_of_measurement","value":"%"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"781aa28fe2f9c4b6","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"GRoomMoisture","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"GRoomMoisture"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"moisture"},{"property":"unit_of_measurement","value":"%"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"5f006050c54ac593","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"GRoomRootTemp","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"GRoomRootTemp"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"temperature"},{"property":"unit_of_measurement","value":"°C"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"1a18d0147c3114d1","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"GRoomEC","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"GRoomEC"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":""},{"property":"unit_of_measurement","value":"µS/cm"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"8aebeb6e0a8c4c05","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"GRoomPressure","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"GRoomPressure"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"pressure"},{"property":"unit_of_measurement","value":"cbar"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"a3d33c4f483491da","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"GRoomCO2","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"GRoomCO2"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"carbon_dioxide"},{"property":"unit_of_measurement","value":"ppm"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"21defcf88bc3ab67","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"GRoomLightIntense","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"GRoomLightIntense"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"illuminance"},{"property":"unit_of_measurement","value":"lx"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"ee906929f0b219b9","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerBatterieDevices","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerBatterieDevices"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"battery"},{"property":"unit_of_measurement","value":"%"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"794350fd1035e5fa","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"GRoomPowerConsume","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"GRoomPowerConsume"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"power"},{"property":"unit_of_measurement","value":"W"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"e0ee2037501d6d09","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"GRoomExhaustState","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"GRoomExhaustState"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"battery"},{"property":"unit_of_measurement","value":"%"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"c8a22cfdbd11971c","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VeggiExhaustState","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VeggiExhaustState"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":""},{"property":"unit_of_measurement","value":""},{"property":"state_class","value":""}],"resend":false,"debugEnabled":false},{"id":"67c5de066aa5aca0","type":"server","name":"Home Assistant","addon":true},{"id":"8c6dbc9fe2de061c","type":"ha-entity-config","server":"67c5de066aa5aca0","deviceConfig":"","name":"GroomExhaustState","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"GroomExhaustDutycycle"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":""},{"property":"unit_of_measurement","value":"%"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"9afc0850d308ec1d","type":"debug","z":"0dd1d006a8b8f409","name":"Debug AC Control","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":370,"y":260,"wires":[]},{"id":"581e5fa8cc7a8992","type":"ha-api","z":"7dbb001f4a12c33e","name":"areas","server":"5772bf4c.b461d","version":1,"debugenabled":false,"protocol":"websocket","method":"get","path":"","data":"{\"type\": \"config/area_registry/list\"}","dataType":"json","responseType":"json","outputProperties":[{"property":"areas","propertyType":"msg","value":"","valueType":"results"}],"x":370,"y":220,"wires":[["cf8db50f5163243f"]]},{"id":"11b9f352d836eab4","type":"inject","z":"7dbb001f4a12c33e","name":"Manual Update","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"60","crontab":"","once":true,"onceDelay":"20","topic":"","payload":"","payloadType":"date","x":140,"y":260,"wires":[["581e5fa8cc7a8992"]]},{"id":"cf8db50f5163243f","type":"ha-api","z":"7dbb001f4a12c33e","name":"devices","server":"5772bf4c.b461d","version":1,"debugenabled":false,"protocol":"websocket","method":"get","path":"","data":"{\"type\": \"config/device_registry/list\"}","dataType":"json","responseType":"json","outputProperties":[{"property":"devices","propertyType":"msg","value":"","valueType":"results"}],"x":520,"y":180,"wires":[["3da04e574ac9aeb7"]]},{"id":"3da04e574ac9aeb7","type":"ha-api","z":"7dbb001f4a12c33e","name":"entities","server":"5772bf4c.b461d","version":1,"debugenabled":false,"protocol":"websocket","method":"get","path":"","data":"{\"type\": \"config/entity_registry/list\"}","dataType":"json","responseType":"json","outputProperties":[{"property":"entities","propertyType":"msg","value":"","valueType":"results"}],"x":660,"y":120,"wires":[["3243f84ac6977cd8"]]},{"id":"f4658b3d2bf78fc2","type":"server-events","z":"7dbb001f4a12c33e","name":"","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","eventType":"state_changed","eventData":"","waitForRunning":true,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"$outputData(\"eventData\").event_type","valueType":"jsonata"},{"property":"event_type","propertyType":"msg","value":"$outputData(\"eventData\").event_type","valueType":"jsonata"}],"x":120,"y":460,"wires":[["0c9c8319a0da3108"]]},{"id":"3243f84ac6977cd8","type":"function","z":"7dbb001f4a12c33e","name":"","func":"const entities = {};\n\nmsg.entities.forEach(e => {\n    // Überprüfe, ob entweder device_id gefüllt ist oder area_id gefüllt ist, aber device_id null ist\n    if (!e.device_id && e.area_id) {\n        const area = msg.areas.find(a => a.area_id === e.area_id);\n        if (area) {\n            entities[e.entity_id] = {\n                area_id: area.area_id,\n                name: area.name\n            };\n        }\n    } else if (e.device_id) {\n        const device = msg.devices.find(d => d.id === e.device_id);\n        const area = msg.areas.find(a => a.area_id === device.area_id);\n        if (area) {\n            entities[e.entity_id] = {\n                area_id: area.area_id,\n                name: area.name\n            };\n        }\n    }\n});\n\nmsg.payload = entities;\nmsg.update = true;\nreturn msg;\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":700,"y":240,"wires":[["0c9c8319a0da3108","fe32925329bbf5e1","1ea6f686733cc148"]]},{"id":"0c9c8319a0da3108","type":"function","z":"7dbb001f4a12c33e","name":"set area","func":"if(msg.update) {\n    node.status({fill:\"green\", shape: \"dot\", text: \"Area Data Loaded\", })\n    context.set(\"data\", msg.payload);\n    return;\n}\nconst data = context.get(\"data\");\n\nif(!data) {\n    node.status({fill:\"red\", shape: \"ring\", text: \"No Area Data\", })\n    return;\n}\n\nconst area = data[msg.payload.entity_id];\nif(!area) return;\n\nmsg.area = area.name.toLowerCase();\nnode.status({text: msg.area});\n\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":340,"y":460,"wires":[["f91947dc5aacc47a"]]},{"id":"f91947dc5aacc47a","type":"switch","z":"7dbb001f4a12c33e","name":"","property":"area","propertyType":"msg","rules":[{"t":"eq","v":"veggitent","vt":"str"},{"t":"eq","v":"flowertent","vt":"str"},{"t":"eq","v":"dryingtent","vt":"str"},{"t":"eq","v":"growroom","vt":"str"}],"checkall":"true","repair":false,"outputs":4,"x":490,"y":460,"wires":[["65a8b26e06e09de6"],["7a6c54dd81eaa289"],["d7a676273cdce15d"],["788b35b083980f53"]]},{"id":"6ead11c227cbd78a","type":"server-events","z":"7dbb001f4a12c33e","name":"On Connect","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","eventType":"home_assistant_client","eventData":"","waitForRunning":true,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"$outputData(\"eventData\").event_type","valueType":"jsonata"},{"property":"event_type","propertyType":"msg","value":"$outputData(\"eventData\").event_type","valueType":"jsonata"}],"x":78,"y":172,"wires":[["eec2d81dad6067ca"]]},{"id":"eec2d81dad6067ca","type":"switch","z":"7dbb001f4a12c33e","name":"connected","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"connected","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":230,"y":180,"wires":[["581e5fa8cc7a8992"]]},{"id":"abcb51cb5b850fb5","type":"server-events","z":"7dbb001f4a12c33e","name":"entity_registry_updated","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","eventType":"entity_registry_updated","eventData":"","waitForRunning":true,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"$outputData(\"eventData\").event_type","valueType":"jsonata"},{"property":"event_type","propertyType":"msg","value":"$outputData(\"eventData\").event_type","valueType":"jsonata"}],"x":114,"y":28,"wires":[["44a73efd617d5f0c"]]},{"id":"04dc88f1eaac6d05","type":"server-events","z":"7dbb001f4a12c33e","name":"device_registry_updated","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","eventType":"device_registry_updated","eventData":"","waitForRunning":true,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"$outputData(\"eventData\").event_type","valueType":"jsonata"},{"property":"event_type","propertyType":"msg","value":"$outputData(\"eventData\").event_type","valueType":"jsonata"}],"x":124,"y":76,"wires":[["44a73efd617d5f0c"]]},{"id":"bfcf2e7197ad45b2","type":"server-events","z":"7dbb001f4a12c33e","name":"area_registry_updated","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","eventType":"area_registry_updated","eventData":"","waitForRunning":true,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"eventData"},{"property":"topic","propertyType":"msg","value":"$outputData(\"eventData\").event_type","valueType":"jsonata"},{"property":"event_type","propertyType":"msg","value":"$outputData(\"eventData\").event_type","valueType":"jsonata"}],"x":114,"y":124,"wires":[["44a73efd617d5f0c"]]},{"id":"44a73efd617d5f0c","type":"trigger","z":"7dbb001f4a12c33e","name":"Update at most every 10 secs","op1":"","op2":"","op1type":"nul","op2type":"payl","duration":"10","extend":false,"units":"s","reset":"","bytopic":"all","outputs":1,"x":430,"y":80,"wires":[["581e5fa8cc7a8992"]]},{"id":"65a8b26e06e09de6","type":"function","z":"7dbb001f4a12c33e","name":"VeggiTent-LiveData","func":"const entity = {\n    entity_id: null,\n    state: null,\n    attributes: null\n}\n\nentity.entity_id = msg.payload.event.new_state.entity_id\nentity.state = msg.payload.event.new_state.state\nentity.attributes = msg.payload.event.new_state.attributes\n\nmsg.payload = entity\nmsg.topic = \"liveData\"\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":710,"y":360,"wires":[["d634607d565bceec"]]},{"id":"7a6c54dd81eaa289","type":"function","z":"7dbb001f4a12c33e","name":"FlowerTent-LiveData","func":"const entity = {\n    entity_id:null,\n    state:null,\n    attributes:null\n}\n\nentity.entity_id = msg.payload.event.new_state.entity_id\nentity.state = msg.payload.event.new_state.state\nentity.attributes = msg.payload.event.new_state.attributes\n\nmsg.payload = entity\nmsg.topic = \"liveData\"\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":720,"y":460,"wires":[["696ec24d89904481"]]},{"id":"d7a676273cdce15d","type":"function","z":"7dbb001f4a12c33e","name":"DryingTent-LiveData","func":"const entity = {\n    entity_id:null,\n    state:null,\n    attributes:null\n}\n\nentity.entity_id = msg.payload.event.new_state.entity_id\nentity.state = msg.payload.event.new_state.state\nentity.attributes = msg.payload.event.new_state.attributes\n\nmsg.payload = entity\nmsg.topic = \"liveData\"\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":720,"y":560,"wires":[["ecd94598f605c8eb"]]},{"id":"fe32925329bbf5e1","type":"function","z":"7dbb001f4a12c33e","name":"Transform Object","func":"let input = msg.payload;\nlet output = {};\n\nfor (let key in input) {\n    let area_id = input[key].area_id;\n    if (!output[area_id]) {\n        output[area_id] = {};\n    }\n    output[area_id][key] = null;\n}\n\nmsg.payload = output;\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":810,"y":200,"wires":[["8cd9e6383593b682","49fc6ff67fd40a13","8a2dc8b298c0c791","b31eab431fb2dac8"]]},{"id":"8cd9e6383593b682","type":"debug","z":"7dbb001f4a12c33e","name":"debug 105","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":990,"y":140,"wires":[]},{"id":"49fc6ff67fd40a13","type":"switch","z":"7dbb001f4a12c33e","name":"Switch on area_id","property":"payload","propertyType":"msg","rules":[{"t":"jsonata_exp","v":"'veggitent' in $keys(payload)","vt":"jsonata"},{"t":"jsonata_exp","v":"'flowertent' in $keys(payload)","vt":"jsonata"},{"t":"jsonata_exp","v":"'dryingtent' in $keys(payload)","vt":"jsonata"},{"t":"jsonata_exp","v":"'growroom' in $keys(payload)","vt":"jsonata"}],"checkall":"true","repair":false,"outputs":4,"x":1030,"y":200,"wires":[["6b884a8d29176b53"],["ddcfbb4e9762a780"],["bba83b340f0841b2"],["1b56a8ab3eee59d6"]]},{"id":"6b884a8d29176b53","type":"function","z":"7dbb001f4a12c33e","name":"VeggiTent Devices","func":"msg.payload =  msg.payload.veggitent;\nmsg.topic = \"VeggiTent\"\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1230,"y":140,"wires":[["d110bd71b917d437","b31eab431fb2dac8"]]},{"id":"ddcfbb4e9762a780","type":"function","z":"7dbb001f4a12c33e","name":"FlowerTent Devices","func":"msg.payload = msg.payload.flowertent\nmsg.topic = \"FlowerTent\"\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1230,"y":180,"wires":[["c26752d854cfc65a"]]},{"id":"bba83b340f0841b2","type":"function","z":"7dbb001f4a12c33e","name":"DryingTent Devices","func":"msg.payload = msg.payload.dryingtent\nmsg.topic = \"DryingTent\"\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1230,"y":220,"wires":[["f6c3188c203af1d5"]]},{"id":"1b56a8ab3eee59d6","type":"function","z":"7dbb001f4a12c33e","name":"Growroom Devices","func":"msg.payload =  msg.payload.growroom\nmsg.topic = \"GrowRoom\"\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1230,"y":260,"wires":[["bef3e305e3286e6d"]]},{"id":"d110bd71b917d437","type":"join","z":"7dbb001f4a12c33e","name":"VeggiTent-Device-Data","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1490,"y":140,"wires":[["function","f353dbe6362d8151"]]},{"id":"c26752d854cfc65a","type":"join","z":"7dbb001f4a12c33e","name":"FlowerTent-Device-Data","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1490,"y":180,"wires":[["fd34330655f2a59a"]]},{"id":"f6c3188c203af1d5","type":"join","z":"7dbb001f4a12c33e","name":"DryingTent-Device-Data","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1490,"y":220,"wires":[["127ca65750a1fea3"]]},{"id":"bef3e305e3286e6d","type":"join","z":"7dbb001f4a12c33e","name":"GrowRoom-Device-Data","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1500,"y":260,"wires":[["d556a0d58ed08600"]]},{"id":"71f76972b5025b37","type":"function","z":"7dbb001f4a12c33e","name":"SetTopic-AllData","func":"msg.topic=\"AllData\"\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1230,"y":320,"wires":[["d110bd71b917d437","c26752d854cfc65a","f6c3188c203af1d5","bef3e305e3286e6d","ea9aedaf481f1b0b"]]},{"id":"function","type":"function","z":"7dbb001f4a12c33e","name":"Fill Data","func":"let data = msg.payload;\nlet allData = data.AllData;\ndelete data.AllData;\n\n// Erstelle ein Mapping von entity_id zu state aus dem AllData-Array\nlet entityIdToStateMap = {};\nallData.forEach(item => {\n    entityIdToStateMap[item.entity_id] = item.state;\n});\n\n// Iteriere über die Keys des initialen Objekts und füge die entsprechenden Werte hinzu\nfor (let key in data) {\n    if (data.hasOwnProperty(key)) {\n        for (let sensor in data[key]) {\n            if (data[key].hasOwnProperty(sensor) && entityIdToStateMap.hasOwnProperty(sensor)) {\n                data[key][sensor] = entityIdToStateMap[sensor];\n            }\n        }\n    }\n}\nmsg.topic = \"data\"\ndelete msg.areas;\ndelete msg.devices;\ndelete msg.entities;\nreturn msg;\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1700,"y":140,"wires":[["d634607d565bceec","094a8eca640c4e2d","004ace00ecbfe2be"]]},{"id":"fd34330655f2a59a","type":"function","z":"7dbb001f4a12c33e","name":"Fill Data","func":"let data = msg.payload;\nlet allData = data.AllData;\ndelete data.AllData;\n\n// Erstelle ein Mapping von entity_id zu state aus dem AllData-Array\nlet entityIdToStateMap = {};\nallData.forEach(item => {\n    entityIdToStateMap[item.entity_id] = item.state;\n});\n\n// Iteriere über die Keys des initialen Objekts und füge die entsprechenden Werte hinzu\nfor (let key in data) {\n    if (data.hasOwnProperty(key)) {\n        for (let sensor in data[key]) {\n            if (data[key].hasOwnProperty(sensor) && entityIdToStateMap.hasOwnProperty(sensor)) {\n                data[key][sensor] = entityIdToStateMap[sensor];\n            }\n        }\n    }\n}\nmsg.topic = \"data\"\nmsg.payload = data;\ndelete msg.areas;\ndelete msg.devices;\ndelete msg.entities;\nreturn msg;\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1700,"y":180,"wires":[["43ca19d80e63515d","696ec24d89904481","004ace00ecbfe2be"]]},{"id":"127ca65750a1fea3","type":"function","z":"7dbb001f4a12c33e","name":"Fill Data","func":"let data = msg.payload;\nlet allData = data.AllData;\ndelete data.AllData;\n\n// Erstelle ein Mapping von entity_id zu state aus dem AllData-Array\nlet entityIdToStateMap = {};\nallData.forEach(item => {\n    entityIdToStateMap[item.entity_id] = item.state;\n});\n\n// Iteriere über die Keys des initialen Objekts und füge die entsprechenden Werte hinzu\nfor (let key in data) {\n    if (data.hasOwnProperty(key)) {\n        for (let sensor in data[key]) {\n            if (data[key].hasOwnProperty(sensor) && entityIdToStateMap.hasOwnProperty(sensor)) {\n                data[key][sensor] = entityIdToStateMap[sensor];\n            }\n        }\n    }\n}\nmsg.topic = \"data\"\nmsg.payload = data;\ndelete msg.areas;\ndelete msg.devices;\ndelete msg.entities;\nreturn msg;\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1700,"y":220,"wires":[["f639a305698026d1","ecd94598f605c8eb"]]},{"id":"d556a0d58ed08600","type":"function","z":"7dbb001f4a12c33e","name":"Fill Data","func":"let data = msg.payload;\nlet allData = data.AllData;\ndelete data.AllData;\n\n// Erstelle ein Mapping von entity_id zu state aus dem AllData-Array\nlet entityIdToStateMap = {};\nallData.forEach(item => {\n    entityIdToStateMap[item.entity_id] = item.state;\n});\n\n// Iteriere über die Keys des initialen Objekts und füge die entsprechenden Werte hinzu\nfor (let key in data) {\n    if (data.hasOwnProperty(key)) {\n        for (let sensor in data[key]) {\n            if (data[key].hasOwnProperty(sensor) && entityIdToStateMap.hasOwnProperty(sensor)) {\n                data[key][sensor] = entityIdToStateMap[sensor];\n            }\n        }\n    }\n}\nmsg.topic = \"data\"\nmsg.payload = data;\ndelete msg.areas;\ndelete msg.devices;\ndelete msg.entities;\ndelete msg.update;\nreturn msg;\n","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1700,"y":260,"wires":[["377ce69ff730c0ff","735e34c63d920535"]]},{"id":"094a8eca640c4e2d","type":"link out","z":"7dbb001f4a12c33e","name":"VeggiCtrl","mode":"link","links":["8c9088a88c067085","be4760445d389efd"],"x":1865,"y":140,"wires":[]},{"id":"43ca19d80e63515d","type":"link out","z":"7dbb001f4a12c33e","name":"FlowerCtrl","mode":"link","links":["69d2bbbaa57da104"],"x":1865,"y":180,"wires":[]},{"id":"f639a305698026d1","type":"link out","z":"7dbb001f4a12c33e","name":"DryingCtrl","mode":"link","links":["812330f99e226222"],"x":1865,"y":220,"wires":[]},{"id":"e84242346557dbcb","type":"link out","z":"7dbb001f4a12c33e","name":"VeggiTentLiveData","mode":"link","links":["a34b894b03b36458"],"x":2165,"y":360,"wires":[]},{"id":"e0e6fce7027c2e26","type":"link out","z":"7dbb001f4a12c33e","name":"FlowerTentLiveData","mode":"link","links":["b9dfb243cc1af1b4"],"x":2165,"y":480,"wires":[]},{"id":"854a899b81ae0da3","type":"link out","z":"7dbb001f4a12c33e","name":"DryingTentLiveData","mode":"link","links":["3f44a96e32f333c2"],"x":2165,"y":580,"wires":[]},{"id":"788b35b083980f53","type":"function","z":"7dbb001f4a12c33e","name":"GrowRoom-LiveData","func":"const entity = {\n    entity_id:null,\n    state:null,\n    attributes:null\n}\n\nentity.entity_id = msg.payload.event.new_state.entity_id\nentity.state = msg.payload.event.new_state.state\nentity.attributes = msg.payload.event.new_state.attributes\n\nmsg.payload = entity\nmsg.topic = \"liveData\"\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":720,"y":660,"wires":[["377ce69ff730c0ff"]]},{"id":"1e4a05271ed20108","type":"link out","z":"7dbb001f4a12c33e","name":"GrowRoomLiveData","mode":"link","links":["aadc89a6315a9ee1"],"x":2155,"y":680,"wires":[]},{"id":"d634607d565bceec","type":"join","z":"7dbb001f4a12c33e","name":"VeggiTent-Updated","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1540,"y":360,"wires":[["5142ea4460f6cef4"]]},{"id":"696ec24d89904481","type":"join","z":"7dbb001f4a12c33e","name":"FlowerTent-Updated","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1540,"y":460,"wires":[["cee9ddd4d3c3158d"]]},{"id":"ecd94598f605c8eb","type":"join","z":"7dbb001f4a12c33e","name":"DryingTent-Updated","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1540,"y":560,"wires":[["cfa78ab308277cdf"]]},{"id":"377ce69ff730c0ff","type":"join","z":"7dbb001f4a12c33e","name":"GrowRoom-Updated","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1540,"y":660,"wires":[["25e6fe4184c15f12"]]},{"id":"cfa78ab308277cdf","type":"function","z":"7dbb001f4a12c33e","name":"Set LiveData","func":"let data = msg.payload.data;\nconst livedata = msg.payload.liveData;\n\n// Funktion zur Aktualisierung des state-Werts aus livedata\nfunction updateState(data, livedata) {\n    const entityId = livedata.entity_id;\n\n    for (const key in data) {\n        if (data.hasOwnProperty(key) && typeof data[key] === 'object' && data[key] !== null) {\n            if (data[key].hasOwnProperty(entityId)) {\n                // Setze nur den state-Wert aus livedata\n                data[key][entityId] = livedata.state;\n                return;\n            }\n        }\n    }\n}\n\n// Aktualisiere den state-Wert im data-Objekt\nupdateState(data, livedata);\n\n// Setze das aktualisierte data-Objekt direkt in msg.payload\nmsg.payload = data;\n\n// Entferne das liveData-Objekt und andere nicht benötigte Objekte aus msg\ndelete msg.liveData;\ndelete msg.areas;\ndelete msg.devices;\ndelete msg.entities;\ndelete msg.update;\n\n// Setze das Topic zurück auf \"data\"\nmsg.topic = \"data\";\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1750,"y":560,"wires":[["c59f29b7a6db9201","763b20a8fae48b90","ecd94598f605c8eb"]]},{"id":"cee9ddd4d3c3158d","type":"function","z":"7dbb001f4a12c33e","name":"Set LiveData","func":"let data = msg.payload.data;\nconst livedata = msg.payload.liveData;\n\n// Funktion zur Aktualisierung des state-Werts aus livedata\nfunction updateState(data, livedata) {\n    const entityId = livedata.entity_id;\n\n    for (const key in data) {\n        if (data.hasOwnProperty(key) && typeof data[key] === 'object' && data[key] !== null) {\n            if (data[key].hasOwnProperty(entityId)) {\n                // Setze nur den state-Wert aus livedata\n                data[key][entityId] = livedata.state;\n                return;\n            }\n        }\n    }\n}\n\n// Aktualisiere den state-Wert im data-Objekt\nupdateState(data, livedata);\n\n// Setze das aktualisierte data-Objekt direkt in msg.payload\nmsg.payload = data;\n\n// Entferne das liveData-Objekt und andere nicht benötigte Objekte aus msg\ndelete msg.liveData;\ndelete msg.areas;\ndelete msg.devices;\ndelete msg.entities;\ndelete msg.update;\n\n// Setze das Topic zurück auf \"data\"\nmsg.topic = \"data\";\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1750,"y":460,"wires":[["30e6cea9a2330b2f","3ba7b1f323bcb6f0","696ec24d89904481"]]},{"id":"5142ea4460f6cef4","type":"function","z":"7dbb001f4a12c33e","name":"Set LiveData","func":"let data = msg.payload.data;\nconst livedata = msg.payload.liveData;\n\n// Funktion zur Aktualisierung des state-Werts aus livedata\nfunction updateState(data, livedata) {\n    const entityId = livedata.entity_id;\n\n    for (const key in data) {\n        if (data.hasOwnProperty(key) && typeof data[key] === 'object' && data[key] !== null) {\n            if (data[key].hasOwnProperty(entityId)) {\n                // Setze nur den state-Wert aus livedata\n                data[key][entityId] = livedata.state;\n                return;\n            }\n        }\n    }\n}\n\n// Aktualisiere den state-Wert im data-Objekt\nupdateState(data, livedata);\n\n// Setze das aktualisierte data-Objekt direkt in msg.payload\nmsg.payload = data;\n\n// Entferne das liveData-Objekt und andere nicht benötigte Objekte aus msg\ndelete msg.liveData;\ndelete msg.areas;\ndelete msg.devices;\ndelete msg.entities;\ndelete msg.update;\n\n// Setze das Topic zurück auf \"data\"\nmsg.topic = \"data\";\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1750,"y":360,"wires":[["210ac2b8dcb58d6b","ccb3187f22b46747","d634607d565bceec"]]},{"id":"30e6cea9a2330b2f","type":"debug","z":"7dbb001f4a12c33e","name":"debug 108","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1990,"y":440,"wires":[]},{"id":"210ac2b8dcb58d6b","type":"debug","z":"7dbb001f4a12c33e","name":"debug 109","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1990,"y":320,"wires":[]},{"id":"9e34f7276b3983b2","type":"switch","z":"7dbb001f4a12c33e","name":"","property":"area","propertyType":"msg","rules":[{"t":"eq","v":"veggitent","vt":"str"},{"t":"eq","v":"flowertent","vt":"str"},{"t":"eq","v":"dryingtent","vt":"str"},{"t":"eq","v":"growroom","vt":"str"}],"checkall":"true","repair":false,"outputs":4,"x":490,"y":460,"wires":[[],[],[],[]]},{"id":"004ace00ecbfe2be","type":"debug","z":"7dbb001f4a12c33e","name":"debug 110","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1850,"y":60,"wires":[]},{"id":"ea9aedaf481f1b0b","type":"debug","z":"7dbb001f4a12c33e","name":"debug 111","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1510,"y":40,"wires":[]},{"id":"1ea6f686733cc148","type":"debug","z":"7dbb001f4a12c33e","name":"debug 112","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":940,"y":100,"wires":[]},{"id":"735e34c63d920535","type":"link out","z":"7dbb001f4a12c33e","name":"GrowRoomCtrl","mode":"link","links":["1bedaaa0414273ae"],"x":1865,"y":260,"wires":[]},{"id":"9f67d85122ac891e","type":"comment","z":"7dbb001f4a12c33e","g":"7236f08e93d54df7","name":"GlobalsControll","info":"","x":120,"y":1100,"wires":[]},{"id":"2d557ea78433109d","type":"ha-number","z":"7dbb001f4a12c33e","g":"7236f08e93d54df7","name":"GlobalLeafTemp","version":1,"debugenabled":false,"inputs":1,"outputs":1,"entityConfig":"10c9db02cb486656","mode":"set","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"}],"x":1300,"y":1140,"wires":[[]]},{"id":"8d9fd654ae8aaec2","type":"ha-number","z":"7dbb001f4a12c33e","g":"7236f08e93d54df7","name":"FlowerLeafTemp","version":1,"debugenabled":false,"inputs":1,"outputs":1,"entityConfig":"e6f59d1d73093224","mode":"set","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"}],"x":1300,"y":1240,"wires":[[]]},{"id":"4d54e84af3d4b81c","type":"ha-number","z":"7dbb001f4a12c33e","g":"7236f08e93d54df7","name":"VeggiLeafTemp","version":1,"debugenabled":false,"inputs":1,"outputs":1,"entityConfig":"0d4aa62025063e39","mode":"set","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"}],"x":1300,"y":1340,"wires":[[]]},{"id":"9aee886e8e0fa11b","type":"ha-number","z":"7dbb001f4a12c33e","g":"7236f08e93d54df7","name":"GRoomLeafTemp","version":1,"debugenabled":false,"inputs":1,"outputs":1,"entityConfig":"2c294ef3ef47f75d","mode":"set","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"}],"x":1300,"y":1440,"wires":[[]]},{"id":"78f51155f8c50460","type":"function","z":"7dbb001f4a12c33e","g":"7236f08e93d54df7","name":"Default","func":"var state = msg.payload.newOffSet\n\nlet outputs = [null, null];\n    outputs[0] = { payload: state }; \n    outputs[1] = { payload: 0 };  \n\nreturn [outputs[0], outputs[1]]; \n","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":960,"y":1200,"wires":[["2d557ea78433109d"],["8d9fd654ae8aaec2","4d54e84af3d4b81c","9aee886e8e0fa11b"]]},{"id":"0a30a4555f40a167","type":"function","z":"7dbb001f4a12c33e","g":"7236f08e93d54df7","name":"Custom","func":"let outputs = [null, null, null, null];\n\nvar flower = parseFloat(msg.payload.flowerLeafOffset);\nvar veggi = parseFloat(msg.payload.veggiLeafOffset);\nvar groom = parseFloat(msg.payload.groomLeafOffset);\nvar leafOffset = parseFloat(msg.payload.leafOffSet);\nvar leafMode = msg.payload.leafMode\n\n\n// Ensure that the payload values are numbers or default to 0 if they are NaN or null\nflower = isNaN(flower) ? 0 : flower;\nveggi = isNaN(veggi) ? 0 : veggi;\ngroom = isNaN(groom) ? 0 : groom;\nleafOffset = isNaN(leafOffset) ? 0 : leafOffset;\n\nif (leafMode == \"Custom\") {\n    if (flower === 0 && veggi === 0 && groom == 0) {\n        leafOffset = 0\n        flower = 2\n        veggi = 2\n        groom = 2\n    }\n}\n\noutputs[0] = { payload: flower };\noutputs[1] = { payload: veggi };\noutputs[2] = { payload: groom };\noutputs[3] = { payload: 0 };\n\nreturn outputs;\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":960,"y":1340,"wires":[["8d9fd654ae8aaec2"],["4d54e84af3d4b81c"],["9aee886e8e0fa11b"],["2d557ea78433109d"]]},{"id":"dd6b14b460dab075","type":"poll-state","z":"7dbb001f4a12c33e","g":"7236f08e93d54df7","name":"GlobalLeafOffset","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","updateInterval":"10","updateIntervalType":"num","updateIntervalUnits":"seconds","outputInitially":true,"outputOnChanged":true,"entityId":"number.leaftempoffset","stateType":"num","ifState":"","ifStateType":"num","ifStateOperator":"is","outputs":1,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"LeafOffset","valueType":"str"}],"x":420,"y":1400,"wires":[["01cce3f8bf2a66d3"]]},{"id":"2ba711e98d827f28","type":"poll-state","z":"7dbb001f4a12c33e","g":"7236f08e93d54df7","name":"FlowerLeafOffset","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","updateInterval":"10","updateIntervalType":"num","updateIntervalUnits":"seconds","outputInitially":true,"outputOnChanged":true,"entityId":"number.flowerleaftemp","stateType":"num","ifState":"","ifStateType":"num","ifStateOperator":"is","outputs":1,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"FlowerLeafOffset","valueType":"str"}],"x":420,"y":1220,"wires":[["01cce3f8bf2a66d3"]]},{"id":"5016bb031906d635","type":"poll-state","z":"7dbb001f4a12c33e","g":"7236f08e93d54df7","name":"VeggiLeafOffset","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","updateInterval":"10","updateIntervalType":"num","updateIntervalUnits":"seconds","outputInitially":true,"outputOnChanged":true,"entityId":"number.veggileaftemp","stateType":"num","ifState":"","ifStateType":"num","ifStateOperator":"is","outputs":1,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"VeggiLeafOffset","valueType":"str"}],"x":420,"y":1280,"wires":[["01cce3f8bf2a66d3"]]},{"id":"22a1d3e6ac107c3f","type":"poll-state","z":"7dbb001f4a12c33e","g":"7236f08e93d54df7","name":"GRoomLeafOffset","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","updateInterval":"10","updateIntervalType":"num","updateIntervalUnits":"seconds","outputInitially":true,"outputOnChanged":true,"entityId":"number.groomleaftemp","stateType":"num","ifState":"","ifStateType":"num","ifStateOperator":"is","outputs":1,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"GRoomLeafOffset","valueType":"str"}],"x":410,"y":1340,"wires":[["01cce3f8bf2a66d3"]]},{"id":"01cce3f8bf2a66d3","type":"join","z":"7dbb001f4a12c33e","g":"7236f08e93d54df7","name":"LeafSetsCustom","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"5","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":670,"y":1260,"wires":[["c561d85b1dda300e","f0449f704d2f7c8a","fd2b9c6859eb1484"]]},{"id":"c561d85b1dda300e","type":"debug","z":"7dbb001f4a12c33e","g":"7236f08e93d54df7","name":"debug 158","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":670,"y":1200,"wires":[]},{"id":"fd2b9c6859eb1484","type":"function","z":"7dbb001f4a12c33e","g":"7236f08e93d54df7","name":"Select","func":"let outputs = [null, null];\n\n// Utility function to check and set null or NaN values to a default of 1\nfunction checkAndSetDefault(value) {\n    if (value === null || value === undefined || isNaN(parseFloat(value))) {\n        return 2;\n    }\n    return parseFloat(value);\n}\n\n// Extract and convert values\nvar leafMode = msg.payload.GlobalLeafSet;\n\nvar newOffSet = 0;\n\nvar leafOffSet = checkAndSetDefault(msg.payload.LeafOffset);\nvar flowerLeafOffset = checkAndSetDefault(msg.payload.FlowerLeafOffset);\nvar veggiLeafOffset = checkAndSetDefault(msg.payload.VeggiLeafOffset);\nvar groomLeafOffset = checkAndSetDefault(msg.payload.GRoomLeafOffset);\n\n// Logic to set new offset based on leaf mode\nif (leafMode === \"Default\") {\n    newOffSet = leafOffSet === 0 ? 2 : leafOffSet;  // Default to 2 if current offset is 0\n    outputs[0] = { payload: { leafMode, newOffSet }, topic: `Mode: ${leafMode}` };\n} else if (leafMode === \"Custom\") {\n    newOffSet = { flowerLeafOffset, veggiLeafOffset, groomLeafOffset, leafOffSet, leafMode };\n    outputs[1] = { payload: newOffSet, topic: `Mode: ${leafMode}` };\n}\n\nreturn outputs;  // Return the modified outputs array\n","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":870,"y":1260,"wires":[["78f51155f8c50460"],["0a30a4555f40a167"]]},{"id":"f0449f704d2f7c8a","type":"link out","z":"7dbb001f4a12c33e","g":"7236f08e93d54df7","name":"LeafOffSet","mode":"link","links":["78243dcf0f50dbc8","6225380f219a0d41","3d4627f3225a086b","5586660314d79b76"],"x":705,"y":1380,"wires":[]},{"id":"311ee520c3f61f77","type":"api-current-state","z":"7dbb001f4a12c33e","g":"7236f08e93d54df7","name":"VeggiLeafOffset","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"number.veggileaftemp","state_type":"num","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"VeggiLeafOffset","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":140,"y":1280,"wires":[[]]},{"id":"da6c2e0c92ff7e70","type":"poll-state","z":"7dbb001f4a12c33e","g":"7236f08e93d54df7","name":"LeafSet","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","updateInterval":"10","updateIntervalType":"num","updateIntervalUnits":"seconds","outputInitially":true,"outputOnChanged":true,"entityId":"select.leafset","stateType":"str","ifState":"","ifStateType":"num","ifStateOperator":"is","outputs":1,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"GlobalLeafSet","valueType":"str"}],"x":410,"y":1160,"wires":[["01cce3f8bf2a66d3"]]},{"id":"b221316ab2b19880","type":"api-current-state","z":"7dbb001f4a12c33e","g":"7236f08e93d54df7","name":"FlowerLeafOffset","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"number.flowerleaftemp","state_type":"num","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"FlowerLeafOffset","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":150,"y":1220,"wires":[[]]},{"id":"e2a9c4cfd27a3aa1","type":"api-current-state","z":"7dbb001f4a12c33e","g":"7236f08e93d54df7","name":"GRoomLeafOffset","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"number.groomleaftemp","state_type":"num","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"GRoomLeafOffset","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":150,"y":1340,"wires":[[]]},{"id":"2f4fb16684615c04","type":"api-current-state","z":"7dbb001f4a12c33e","g":"7236f08e93d54df7","name":"GlobalLeafOffset","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"number.flowerleaftemp","state_type":"num","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"GlobalLeafOffset","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":150,"y":1400,"wires":[[]]},{"id":"c59f29b7a6db9201","type":"debug","z":"7dbb001f4a12c33e","name":"debug 171","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1990,"y":540,"wires":[]},{"id":"ccb3187f22b46747","type":"function","z":"7dbb001f4a12c33e","name":"CleanRoomName","func":"msg.payload = msg.payload.VeggiTent\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1990,"y":360,"wires":[["e84242346557dbcb","210ac2b8dcb58d6b"]]},{"id":"763b20a8fae48b90","type":"function","z":"7dbb001f4a12c33e","name":"CleanRoomName","func":"msg.payload = msg.payload.DryingTent\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1990,"y":580,"wires":[["854a899b81ae0da3","c59f29b7a6db9201"]]},{"id":"84eac5b2e72c4c3a","type":"function","z":"7dbb001f4a12c33e","name":"CleanRoomName","func":"msg.payload = msg.payload.GrowRoom\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1990,"y":680,"wires":[["1e4a05271ed20108","cfb42e4138a582aa"]]},{"id":"3ba7b1f323bcb6f0","type":"function","z":"7dbb001f4a12c33e","name":"CleanRoomName","func":"msg.payload = msg.payload.FlowerTent\n\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2010,"y":480,"wires":[["e0e6fce7027c2e26","30e6cea9a2330b2f"]]},{"id":"cfb42e4138a582aa","type":"debug","z":"7dbb001f4a12c33e","name":"debug 185","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1970,"y":640,"wires":[]},{"id":"25e6fe4184c15f12","type":"function","z":"7dbb001f4a12c33e","name":"Set LiveData","func":"let data = msg.payload.data;\nconst livedata = msg.payload.liveData;\n\n// Funktion zur Aktualisierung des state-Werts aus livedata\nfunction updateState(data, livedata) {\n    const entityId = livedata.entity_id;\n\n    for (const key in data) {\n        if (data.hasOwnProperty(key) && typeof data[key] === 'object' && data[key] !== null) {\n            if (data[key].hasOwnProperty(entityId)) {\n                // Setze nur den state-Wert aus livedata\n                data[key][entityId] = livedata.state;\n                return;\n            }\n        }\n    }\n}\n\n// Aktualisiere den state-Wert im data-Objekt\nupdateState(data, livedata);\n\n// Setze das aktualisierte data-Objekt direkt in msg.payload\nmsg.payload = data;\n\n// Entferne das liveData-Objekt und andere nicht benötigte Objekte aus msg\ndelete msg.liveData;\ndelete msg.areas;\ndelete msg.devices;\ndelete msg.entities;\ndelete msg.update;\n\n// Setze das Topic zurück auf \"data\"\nmsg.topic = \"data\";\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1750,"y":660,"wires":[["84eac5b2e72c4c3a","cfb42e4138a582aa","377ce69ff730c0ff"]]},{"id":"a6d139f82eb8118d","type":"function","z":"7dbb001f4a12c33e","name":"SetLiveDataOnlyChangedData","func":"let data = msg.payload.data;\nconst livedata = msg.payload.liveData;\n\nlet changed = false;\n\n// Funktion zur Überprüfung der Gleichheit von Werten mit einer Dezimalstelle für numerische Werte\nfunction areEqual(value1, value2) {\n    // Versuche beide Werte in Zahlen umzuwandeln\n    const num1 = parseFloat(value1);\n    const num2 = parseFloat(value2);\n\n    // Wenn beide Werte Zahlen sind, vergleiche sie als Zahlen mit einer Dezimalstelle\n    if (!isNaN(num1) && !isNaN(num2)) {\n        return num1.toFixed(1) === num2.toFixed(1);\n    }\n\n    // Vergleiche die Werte als Strings, wenn sie keine Zahlen sind\n    return value1 === value2;\n}\n\n// Funktion zur Aktualisierung des state-Werts aus livedata\nfunction updateState(data, livedata) {\n    const entityId = livedata.entity_id;\n\n    for (const key in data) {\n        if (data.hasOwnProperty(key) && typeof data[key] === 'object' && data[key] !== null) {\n            // Suchen Sie in data[key] nach dem entsprechenden Wert\n            for (const subKey in data[key]) {\n                if (data[key].hasOwnProperty(subKey)) {\n                    // Überprüfen, ob der aktuelle Zustand anders ist als der neue Zustand\n                    if (subKey === entityId) {\n                        console.log(`Current state: ${data[key][subKey]}, New state: ${livedata.state}`);\n                        if (!areEqual(data[key][subKey], livedata.state)) {\n                            console.log('State is different. Updating state...');\n                            data[key][subKey] = livedata.state;\n                            changed = true; // Markiere als geändert\n                        } else {\n                            console.log('State is the same. No update needed.');\n                        }\n                        return; // Beendet die Schleife nach der ersten relevanten Änderung\n                    }\n                }\n            }\n        }\n    }\n}\n\n// Aktualisiere den state-Wert im data-Objekt\nupdateState(data, livedata);\n\n// Hinzufügen des `changed`-Eintrags zum `data`-Objekt\ndata.changed = changed;\n\n// Setze das aktualisierte data-Objekt direkt in msg.payload\nmsg.payload = data;\n\n// Entferne das liveData-Objekt und andere nicht benötigte Objekte aus msg\ndelete msg.liveData;\ndelete msg.areas;\ndelete msg.devices;\ndelete msg.entities;\ndelete msg.update;\n\n// Setze das Topic zurück auf \"data\"\nmsg.topic = \"data\";\n\n// Rückgabe der Nachricht basierend auf dem `changed`-Status\nif (changed) {\n    return [msg, null]; // Ausgabe 1: geändertes Objekt, Ausgabe 2: nichts\n} else {\n    return [null, msg]; // Ausgabe 1: nichts, Ausgabe 2: unverändertes Objekt\n}\n","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1730,"y":720,"wires":[[],[]]},{"id":"8a2dc8b298c0c791","type":"ha-get-entities","z":"7dbb001f4a12c33e","name":"Get All Entities","server":"67c5de066aa5aca0","version":1,"rules":[],"outputType":"array","outputEmptyResults":false,"outputLocationType":"msg","outputLocation":"payload","x":1020,"y":260,"wires":[["71f76972b5025b37"]]},{"id":"b31eab431fb2dac8","type":"debug","z":"7dbb001f4a12c33e","name":"debug 215","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1290,"y":60,"wires":[]},{"id":"f353dbe6362d8151","type":"debug","z":"7dbb001f4a12c33e","name":"debug 216","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1570,"y":80,"wires":[]},{"id":"ca0d96c34b0b2594","type":"ha-number","z":"06acd4b20e43ebca","g":"2ed032bcd8d8fc97","name":"GlobalLeafTemp","version":1,"debugenabled":false,"inputs":0,"outputs":1,"entityConfig":"10c9db02cb486656","mode":"listen","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"}],"x":120,"y":300,"wires":[[]]},{"id":"7133652db17a3480","type":"ha-number","z":"06acd4b20e43ebca","g":"28b0d068c70f684b","name":"FlowerLeafTemp","version":1,"debugenabled":false,"inputs":0,"outputs":1,"entityConfig":"e6f59d1d73093224","mode":"listen","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"}],"x":380,"y":120,"wires":[["e0f06675a0f57c06"]]},{"id":"8d521c0ad25a2741","type":"ha-number","z":"06acd4b20e43ebca","g":"404d0274840916c7","name":"VeggiLeafTemp","version":1,"debugenabled":false,"inputs":0,"outputs":1,"entityConfig":"0d4aa62025063e39","mode":"listen","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"}],"x":760,"y":120,"wires":[["a0636a9942a1768d"]]},{"id":"95db941af194b00a","type":"ha-number","z":"06acd4b20e43ebca","g":"62ca1cbb1c008521","name":"GRoomLeafTemp","version":1,"debugenabled":false,"inputs":0,"outputs":1,"entityConfig":"2c294ef3ef47f75d","mode":"listen","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"}],"x":1120,"y":120,"wires":[["1140eef97cbe8d07"]]},{"id":"fbe145fbf1efc03b","type":"comment","z":"06acd4b20e43ebca","g":"2ed032bcd8d8fc97","name":"Globals","info":"","x":90,"y":240,"wires":[]},{"id":"fe6c5b1df641bf24","type":"ha-select","z":"06acd4b20e43ebca","g":"2ed032bcd8d8fc97","name":"LeafSetSelect","version":1,"debugenabled":false,"inputs":0,"outputs":1,"entityConfig":"0acca6c6ffe536a2","mode":"listen","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"}],"x":110,"y":180,"wires":[[]]},{"id":"342da06502c76007","type":"ha-number","z":"06acd4b20e43ebca","g":"28b0d068c70f684b","name":"FlowerTarget-VPD","version":1,"debugenabled":false,"inputs":0,"outputs":1,"entityConfig":"7dd2240f65033c72","mode":"listen","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"},{"property":"topic","propertyType":"msg","value":"TargetVPD","valueType":"str"}],"x":390,"y":200,"wires":[["d6e04975e1781dab"]]},{"id":"162f081b218ae942","type":"ha-number","z":"06acd4b20e43ebca","g":"62ca1cbb1c008521","name":"GRoom-Target-VPD","version":1,"debugenabled":false,"inputs":0,"outputs":1,"entityConfig":"d222d6eb6c8489b2","mode":"listen","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"},{"property":"topic","propertyType":"msg","value":"TargetVPD","valueType":"str"}],"x":1130,"y":200,"wires":[["c87afd2db176106e"]]},{"id":"498b420139c68178","type":"ha-number","z":"06acd4b20e43ebca","g":"404d0274840916c7","name":"VeggiTarget-VPD","version":1,"debugenabled":false,"inputs":0,"outputs":1,"entityConfig":"9b20db2b6bd5562c","mode":"listen","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"},{"property":"topic","propertyType":"msg","value":"TargetVPD","valueType":"str"}],"x":760,"y":200,"wires":[["eb1e14424fc44d32"]]},{"id":"d6e04975e1781dab","type":"link out","z":"06acd4b20e43ebca","g":"28b0d068c70f684b","name":"link out 1","mode":"link","links":[],"x":535,"y":200,"wires":[]},{"id":"e0f06675a0f57c06","type":"link out","z":"06acd4b20e43ebca","g":"28b0d068c70f684b","name":"link out 2","mode":"link","links":[],"x":495,"y":120,"wires":[]},{"id":"a0636a9942a1768d","type":"link out","z":"06acd4b20e43ebca","g":"404d0274840916c7","name":"link out 3","mode":"link","links":[],"x":875,"y":120,"wires":[]},{"id":"eb1e14424fc44d32","type":"link out","z":"06acd4b20e43ebca","g":"404d0274840916c7","name":"link out 4","mode":"link","links":[],"x":895,"y":200,"wires":[]},{"id":"c87afd2db176106e","type":"link out","z":"06acd4b20e43ebca","g":"62ca1cbb1c008521","name":"link out 5","mode":"link","links":[],"x":1275,"y":200,"wires":[]},{"id":"1140eef97cbe8d07","type":"link out","z":"06acd4b20e43ebca","g":"62ca1cbb1c008521","name":"link out 6","mode":"link","links":[],"x":1235,"y":120,"wires":[]},{"id":"e387af1f5dd04006","type":"comment","z":"06acd4b20e43ebca","g":"fda5147727773bdd","name":"TentSetupObjects","info":"","x":410,"y":320,"wires":[]},{"id":"c909908d89ddf89f","type":"ha-select","z":"06acd4b20e43ebca","g":"fda5147727773bdd","name":"FlowerTent-Modes","version":1,"debugenabled":false,"inputs":0,"outputs":1,"entityConfig":"966c8337df68a0db","mode":"listen","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"}],"x":410,"y":360,"wires":[[]]},{"id":"745794723f1cf766","type":"ha-select","z":"06acd4b20e43ebca","g":"fda5147727773bdd","name":"FlowerTentStageSelect","version":1,"debugenabled":false,"inputs":0,"outputs":1,"entityConfig":"74408db15ce786e7","mode":"listen","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"}],"x":420,"y":420,"wires":[[]]},{"id":"4d63d31c31b9ec72","type":"ha-select","z":"06acd4b20e43ebca","g":"772e5574b48097ec","name":"GRoomModes","version":1,"debugenabled":false,"inputs":0,"outputs":1,"entityConfig":"2e3f07c643473a61","mode":"listen","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"}],"x":1140,"y":360,"wires":[[]]},{"id":"866a5a3913e7e17c","type":"ha-select","z":"06acd4b20e43ebca","g":"772e5574b48097ec","name":"GRoomStageSelect","version":1,"debugenabled":false,"inputs":0,"outputs":1,"entityConfig":"5bb88ead3cc78693","mode":"listen","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"},{"property":"topic","propertyType":"msg","value":"ChangePlanteState","valueType":"str"}],"x":1150,"y":420,"wires":[[]]},{"id":"38d06d19406370d3","type":"comment","z":"06acd4b20e43ebca","g":"772e5574b48097ec","name":"TentSetupObjects","info":"","x":1150,"y":320,"wires":[]},{"id":"f947f4bc73ed6cbd","type":"ha-select","z":"06acd4b20e43ebca","g":"28063fd731271172","name":"VeggiTentStageSelect","version":1,"debugenabled":false,"inputs":0,"outputs":1,"entityConfig":"2b0a7710b4f6a58a","mode":"listen","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"},{"property":"topic","propertyType":"msg","value":"ChangePlanteState","valueType":"str"}],"x":800,"y":420,"wires":[[]]},{"id":"beb5dd70fad21ece","type":"ha-select","z":"06acd4b20e43ebca","g":"28063fd731271172","name":"VegiTent-Modes","version":1,"debugenabled":false,"inputs":0,"outputs":1,"entityConfig":"f152b5af3096b1e5","mode":"listen","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"}],"x":780,"y":360,"wires":[[]]},{"id":"cf42387b60977efe","type":"comment","z":"06acd4b20e43ebca","g":"28063fd731271172","name":"TentSetupObjects","info":"","x":790,"y":320,"wires":[]},{"id":"a00cea8e365e26bb","type":"comment","z":"06acd4b20e43ebca","name":"GlobalSelects","info":"","x":110,"y":100,"wires":[]},{"id":"66d450d761eaf280","type":"comment","z":"06acd4b20e43ebca","name":"FlowerTent","info":"","x":340,"y":40,"wires":[]},{"id":"83fe0041f594d27c","type":"comment","z":"06acd4b20e43ebca","name":"VeggiTent","info":"","x":720,"y":40,"wires":[]},{"id":"1958454d1043537b","type":"comment","z":"06acd4b20e43ebca","name":"GrowRoom","info":"","x":1090,"y":40,"wires":[]},{"id":"2fd24cf5341093db","type":"comment","z":"06acd4b20e43ebca","g":"52a27586382bb1ef","name":"TentSetupObjects","info":"","x":1470,"y":120,"wires":[]},{"id":"9c45f9c868ca9b0d","type":"ha-number","z":"06acd4b20e43ebca","g":"52a27586382bb1ef","name":"DryTentDewPoint","version":1,"debugenabled":false,"inputs":0,"outputs":1,"entityConfig":"73f4eb93439668cf","mode":"listen","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"},{"property":"topic","propertyType":"msg","value":"DryTentDewPoint","valueType":"str"}],"x":1460,"y":280,"wires":[[]]},{"id":"b6169762537cdb93","type":"ha-number","z":"06acd4b20e43ebca","g":"52a27586382bb1ef","name":"DryTentTemp","version":1,"debugenabled":false,"inputs":0,"outputs":1,"entityConfig":"b1ea27673763365a","mode":"listen","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"},{"property":"topic","propertyType":"msg","value":"DryTentTemp","valueType":"str"}],"x":1450,"y":220,"wires":[[]]},{"id":"2eedfcd77e979f4d","type":"ha-select","z":"06acd4b20e43ebca","g":"52a27586382bb1ef","name":"DryTentMaster","version":1,"debugenabled":false,"inputs":0,"outputs":1,"entityConfig":"5e8e4b22b2382ebb","mode":"listen","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"},{"property":"topic","propertyType":"msg","value":"ChangePlanteState","valueType":"str"}],"x":1460,"y":160,"wires":[[]]},{"id":"8b4bd9fdcec34439","type":"poll-state","z":"06acd4b20e43ebca","g":"52a27586382bb1ef","name":"DryTentTemp","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","updateInterval":"15","updateIntervalType":"num","updateIntervalUnits":"seconds","outputInitially":true,"outputOnChanged":true,"entityId":"number.drytenttemp","stateType":"num","ifState":"","ifStateType":"num","ifStateOperator":"is","outputs":1,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"DryTentTemp","valueType":"str"}],"x":1650,"y":160,"wires":[["dcac2e8aaf2b782f"]]},{"id":"2adda7340a61618d","type":"poll-state","z":"06acd4b20e43ebca","g":"52a27586382bb1ef","name":"DryTentDewpoint","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","updateInterval":"30","updateIntervalType":"num","updateIntervalUnits":"seconds","outputInitially":true,"outputOnChanged":true,"entityId":"number.drytentdewpoint","stateType":"num","ifState":"","ifStateType":"num","ifStateOperator":"is","outputs":1,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"DryTentDewPoint","valueType":"str"}],"x":1660,"y":320,"wires":[["dcac2e8aaf2b782f"]]},{"id":"dcac2e8aaf2b782f","type":"join","z":"06acd4b20e43ebca","g":"52a27586382bb1ef","name":"DryVPDWish","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1720,"y":240,"wires":[["ffdb9e11ce6b9e9e","3d93471fe1360ca2","bfcdf367f86deaec"]]},{"id":"ffdb9e11ce6b9e9e","type":"function","z":"06acd4b20e43ebca","g":"52a27586382bb1ef","name":"HumidityCALC","func":"function calculateRelativeHumidity(T, Td) {\n    // Magnus-Formel Konstanten\n    const a = 17.27;\n    const b = 237.7;\n\n    // Berechnung des Sättigungsdampfdrucks (SDP) bei der aktuellen Temperatur\n    const saturationVaporPressure = 6.1078 * Math.exp((a * T) / (b + T));\n\n    // Berechnung des Sättigungsdampfdrucks (SDP) beim Taupunkt\n    const dewPointVaporPressure = 6.1078 * Math.exp((a * Td) / (b + Td));\n\n    // Berechnung der relativen Feuchtigkeit\n    const RH = 100 * (dewPointVaporPressure / saturationVaporPressure);\n\n    return Math.round(RH * 100) / 100; // Rundung auf zwei Dezimalstellen\n}\n\n// Lesen der Temperatur und des Taupunkts aus dem msg-Objekt\nconst temperature = parseFloat(msg.payload.DryTentTemp);\nconst dewPoint = parseFloat(msg.payload.DryTentDewPoint);\n\n// Validierung, ob die Eingaben Zahlen sind\nif (isNaN(temperature) || isNaN(dewPoint)) {\n    node.error(\"Invalid input data\", msg);\n    return null; // Stoppen der Ausführung bei ungültigen Daten\n}\n\n// Berechnung der relativen Feuchtigkeit\nlet humidity = calculateRelativeHumidity(temperature, dewPoint);\n\n// Setzen des Ergebnisses in msg.payload\nmsg.payload = humidity; // Zurückgeben eines Objekts mit der Feuchtigkeit\n\nreturn msg; // Weitergabe der Nachricht mit dem neuen Payload\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1900,"y":340,"wires":[["e5b3121802163bfc","e5ee7531fe11c0c7"]]},{"id":"3d93471fe1360ca2","type":"function","z":"06acd4b20e43ebca","g":"52a27586382bb1ef","name":"WISH VPD Creation","func":"function calculateVPD(luftTemperatur, dewPoint) {\n\n    // Stellen Sie sicher, dass alle Eingaben Zahlen sind\n    luftTemperatur = parseFloat(luftTemperatur);\n    dewPoint = parseFloat(dewPoint);\n\n    // Überprüfen Sie, ob einer der Werte NaN ist\n    if (isNaN(luftTemperatur) || isNaN(dewPoint)) {\n        return \"unavailable\";\n    }\n\n    // Berechnung des Sättigungsdampfdrucks (SDP) für Lufttemperatur\n    let sdpLuft = 0.6108 * Math.exp((17.27 * luftTemperatur) / (luftTemperatur + 237.3));\n    // Berechnung des tatsächlichen Dampfdrucks (ADP) am Taupunkt\n    let adp = 0.6108 * Math.exp((17.27 * dewPoint) / (dewPoint + 237.3));\n\n    // Berechnung des VPD\n    let vpd = sdpLuft - adp;\n\n\n    return vpd.toFixed(2);  // Rundet den VPD-Wert auf zwei Dezimalstellen\n}\n\n// Beispiel für die Verwendung der Funktion\nlet luftTemperatur = msg.payload.DryTentTemp; // Stellen Sie sicher, dass dies eine Zahl ist\nlet dewPoint = msg.payload.DryTentDewPoint; // Stellen Sie sicher, dass dies eine Zahl ist\n\nlet vpd = calculateVPD(luftTemperatur, dewPoint);\nlet vpdnum = parseFloat(vpd)\n\nmsg.topic = \"DryVPDWish\"\nmsg.payload = vpdnum;\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1920,"y":120,"wires":[["a1151db838a105af"]]},{"id":"a9a7f4e1bdcd48ff","type":"ha-sensor","z":"06acd4b20e43ebca","g":"52a27586382bb1ef","name":"VaporPressureWish-Drying-Actual","entityConfig":"ff39c4ebf8b39710","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":2200,"y":260,"wires":[[]]},{"id":"bfcdf367f86deaec","type":"function","z":"06acd4b20e43ebca","g":"52a27586382bb1ef","name":"VaporPressure Getter","func":"function calculateVaporPressure(dewPoint) {\n    // Ensure input is a number\n    dewPoint = parseFloat(dewPoint);\n\n    // Check for NaN values\n    if (isNaN(dewPoint)) {\n        return \"unavailable\";\n    }\n\n    // Calculate vapor pressure using the formula (in mb)\n    let vaporPressure_mb = 6.11 * Math.pow(10, (7.5 * dewPoint) / (237.3 + dewPoint));\n\n    return vaporPressure_mb.toFixed(2);  // Round the vapor pressure to two decimal places\n}\n\nfunction calculateSaturationVaporPressure(temperature) {\n    // Ensure input is a number\n    temperature = parseFloat(temperature);\n\n    // Check for NaN values\n    if (isNaN(temperature)) {\n        return \"unavailable\";\n    }\n\n    // Calculate saturation vapor pressure using the formula (in mb)\n    let saturationVaporPressure_mb = 6.11 * Math.pow(10, (7.5 * temperature) / (237.3 + temperature));\n\n    return saturationVaporPressure_mb.toFixed(2);  // Round the vapor pressure to two decimal places\n}\n\n// Example usage of the function with debug logging\nlet temperature = parseFloat(msg.payload.DryTentTemp); // Ensure this is a number\nlet dewPoint = parseFloat(msg.payload.DryTentDewPoint); // Ensure this is a number\n\n// Check if inputs are valid numbers\nif (isNaN(temperature) || isNaN(dewPoint)) {\n    node.warn(\"Invalid input values\");\n    return [null, null]; // Return null for both outputs\n}\n\nlet saturationVaporPressure = calculateSaturationVaporPressure(temperature);\nlet actualVaporPressure = calculateVaporPressure(dewPoint);\n\n// Return the results as numeric values for each output\nreturn [\n    { payload: parseFloat(saturationVaporPressure) }, // First output: Saturation Vapor Pressure\n    { payload: parseFloat(actualVaporPressure) }      // Second output: Actual Vapor Pressure\n];\n","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1920,"y":240,"wires":[["2cb6dfb81c8f6d23"],["a9a7f4e1bdcd48ff"]]},{"id":"2cb6dfb81c8f6d23","type":"ha-sensor","z":"06acd4b20e43ebca","g":"52a27586382bb1ef","name":"VaporPressure-Drying-Saturation","entityConfig":"353aed64cee4c57c","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":2200,"y":200,"wires":[[]]},{"id":"a1151db838a105af","type":"ha-sensor","z":"06acd4b20e43ebca","g":"52a27586382bb1ef","name":"VPD-DryTent","entityConfig":"16cdce977a2e1395","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":2130,"y":120,"wires":[[]]},{"id":"972658f0b1461c4a","type":"ha-sensor","z":"06acd4b20e43ebca","g":"52a27586382bb1ef","name":"WaterActivityWish","entityConfig":"3ea1f76a87bc8d2e","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":2170,"y":400,"wires":[[]]},{"id":"e5ee7531fe11c0c7","type":"function","z":"06acd4b20e43ebca","g":"52a27586382bb1ef","name":"WaterActivityWish","func":"// Input RH\nlet relativeHumidity = parseFloat(msg.payload);\n\n// Check if input is valid\nif (isNaN(relativeHumidity) || relativeHumidity < 0 || relativeHumidity > 100) {\n    msg.payload = \"Invalid RH value\";\n    return msg;\n}\n\n// Calculate water activity (aw)\nlet waterActivity = relativeHumidity / 100;\n\n// Output the result\nmsg.payload = waterActivity.toFixed(2); // Round to 2 decimal places\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1910,"y":400,"wires":[["972658f0b1461c4a"]]},{"id":"e5b3121802163bfc","type":"ha-sensor","z":"06acd4b20e43ebca","g":"52a27586382bb1ef","name":"DryTentWishHumidity","entityConfig":"73178f44c6896881","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":2160,"y":320,"wires":[[]]},{"id":"621d610fa0ab9742","type":"comment","z":"06acd4b20e43ebca","name":"DryiongTent","info":"","x":1490,"y":40,"wires":[]},{"id":"e6b0f2bea705e5b5","type":"api-call-service","z":"f5216914e209e4aa","name":"FlowerExhaustOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_off","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":190,"y":360,"wires":[[]]},{"id":"863dc16021286692","type":"comment","z":"f5216914e209e4aa","name":"FlowerDevices","info":"","x":180,"y":40,"wires":[]},{"id":"4786b413247cbcce","type":"api-call-service","z":"f5216914e209e4aa","name":"FlowerExhaustON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_on","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":190,"y":300,"wires":[[]]},{"id":"93c4a647353f1e45","type":"comment","z":"f5216914e209e4aa","name":"VeggiDevices","info":"","x":590,"y":40,"wires":[]},{"id":"68a1ff5daf0514f9","type":"comment","z":"f5216914e209e4aa","name":"DryingDevices","info":"","x":930,"y":40,"wires":[]},{"id":"a448729f7365ef2a","type":"comment","z":"f5216914e209e4aa","name":"GrowRoomDevices","info":"","x":1350,"y":40,"wires":[]},{"id":"7366df6f2f57f13b","type":"api-call-service","z":"f5216914e209e4aa","name":"VeggiExhaustOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_off","areaId":[],"deviceId":[],"entityId":["switch.ruckecvegi"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":610,"y":360,"wires":[[]]},{"id":"47f977f3043544d0","type":"api-call-service","z":"f5216914e209e4aa","name":"VeggiExhaustON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_on","areaId":[],"deviceId":[],"entityId":["switch.ruckecvegi"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":610,"y":300,"wires":[[]]},{"id":"997d4846f6106af1","type":"comment","z":"f5216914e209e4aa","name":"Exhaust","info":"","x":90,"y":260,"wires":[]},{"id":"7e5d67284f5eb949","type":"comment","z":"f5216914e209e4aa","name":"Exhaust","info":"","x":510,"y":260,"wires":[]},{"id":"2b0dbd0d7246d0c3","type":"comment","z":"f5216914e209e4aa","name":"Exhaust","info":"","x":850,"y":260,"wires":[]},{"id":"177878afa76c60de","type":"comment","z":"f5216914e209e4aa","name":"Exhaust","info":"","x":1250,"y":260,"wires":[]},{"id":"a84271813ef47960","type":"comment","z":"f5216914e209e4aa","name":"LightsSwitch","info":"","x":110,"y":100,"wires":[]},{"id":"4a6d1fdd90626c41","type":"api-call-service","z":"f5216914e209e4aa","name":"FlowerLightOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_off","areaId":[],"deviceId":[],"entityId":["switch.light"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":180,"y":200,"wires":[[]]},{"id":"089092300651636c","type":"api-call-service","z":"f5216914e209e4aa","name":"FlowerLightON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_on","areaId":[],"deviceId":[],"entityId":["switch.light"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":180,"y":140,"wires":[[]]},{"id":"d371c38077e3ee44","type":"comment","z":"f5216914e209e4aa","name":"LightsSwitch","info":"","x":530,"y":100,"wires":[]},{"id":"9e1017aba757f201","type":"api-call-service","z":"f5216914e209e4aa","name":"VeggiLightOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_off","areaId":[],"deviceId":[],"entityId":["switch.light_veg"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":600,"y":200,"wires":[[]]},{"id":"b32ba50810a9c8f2","type":"api-call-service","z":"f5216914e209e4aa","name":"VeggiLightON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_on","areaId":[],"deviceId":[],"entityId":["switch.light_veg"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":600,"y":140,"wires":[[]]},{"id":"b7b422f34a3da57e","type":"comment","z":"f5216914e209e4aa","name":"LightsSwitch","info":"","x":870,"y":100,"wires":[]},{"id":"33e5c32a0aa50c3c","type":"api-call-service","z":"f5216914e209e4aa","d":true,"name":"LightOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_off","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":920,"y":200,"wires":[[]]},{"id":"57c0890d9329c4bc","type":"api-call-service","z":"f5216914e209e4aa","d":true,"name":"LightON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_on","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":920,"y":140,"wires":[[]]},{"id":"755360288671136d","type":"comment","z":"f5216914e209e4aa","name":"LightsSwitch","info":"","x":1270,"y":100,"wires":[]},{"id":"bc836c88f14fdbc4","type":"api-call-service","z":"f5216914e209e4aa","name":"GRoomLightOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_off","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1350,"y":200,"wires":[[]]},{"id":"2ae0096bfdfd7a92","type":"api-call-service","z":"f5216914e209e4aa","name":"GRoomLightON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_on","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1340,"y":140,"wires":[[]]},{"id":"937050184021dc41","type":"comment","z":"f5216914e209e4aa","name":"Air-Condition","info":"","x":110,"y":920,"wires":[]},{"id":"7fc49592594e5b54","type":"api-call-service","z":"f5216914e209e4aa","name":"FlowerCoolerON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_on","areaId":[],"deviceId":["0d189c60358a6be7de3b9d017e1f8d40"],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":190,"y":980,"wires":[[]]},{"id":"045887de99f8fd59","type":"api-call-service","z":"f5216914e209e4aa","name":"FlowerCoolerOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_off","areaId":[],"deviceId":["0d189c60358a6be7de3b9d017e1f8d40"],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":190,"y":1040,"wires":[[]]},{"id":"c8deaee07887e129","type":"comment","z":"f5216914e209e4aa","name":"Air-Condition","info":"","x":530,"y":920,"wires":[]},{"id":"e7fccc6a7b2d2d8c","type":"comment","z":"f5216914e209e4aa","name":"Air-Condition","info":"","x":930,"y":1040,"wires":[]},{"id":"e384d4d678a3beb6","type":"comment","z":"f5216914e209e4aa","name":"Air-Condition","info":"","x":1330,"y":1040,"wires":[]},{"id":"b327844919d128bc","type":"comment","z":"f5216914e209e4aa","name":"Heater","info":"","x":90,"y":760,"wires":[]},{"id":"68a2d57e41e261f3","type":"api-call-service","z":"f5216914e209e4aa","name":"FlowerHeaterOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_off","areaId":[],"deviceId":[],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":190,"y":860,"wires":[[]]},{"id":"cfbfd48643c03071","type":"comment","z":"f5216914e209e4aa","name":"Heater","info":"","x":510,"y":760,"wires":[]},{"id":"51d3e15448264207","type":"comment","z":"f5216914e209e4aa","name":"Heater","info":"","x":850,"y":760,"wires":[]},{"id":"2a04cff22a28196c","type":"comment","z":"f5216914e209e4aa","name":"Heater","info":"","x":1250,"y":760,"wires":[]},{"id":"5de1b8c3596c335c","type":"api-call-service","z":"f5216914e209e4aa","name":"DryingExhaustON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_on","areaId":[],"deviceId":[],"entityId":["ECRuckDryer"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":950,"y":300,"wires":[[]]},{"id":"b0566fe4800fe433","type":"api-call-service","z":"f5216914e209e4aa","name":"DryingExhaustOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_off","areaId":[],"deviceId":[],"entityId":["ECRuckDryer"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":950,"y":360,"wires":[[]]},{"id":"16f681d03850fc0c","type":"api-call-service","z":"f5216914e209e4aa","name":"GRoomExhaustOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_off","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1360,"y":360,"wires":[[]]},{"id":"5c26e87e97dc6411","type":"api-call-service","z":"f5216914e209e4aa","name":"GRoomExhaustON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_on","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1350,"y":300,"wires":[[]]},{"id":"6f29b68b6c5838e7","type":"api-call-service","z":"f5216914e209e4aa","name":"FlowerHeaterON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_on","areaId":[],"deviceId":[],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":190,"y":800,"wires":[[]]},{"id":"7e7e0dc9a3625abd","type":"link in","z":"f5216914e209e4aa","name":"GRoomExhaustOFF","links":["8e5849366f8d0df3"],"x":1215,"y":360,"wires":[["16f681d03850fc0c"]]},{"id":"ec02765ca8fe00ab","type":"link in","z":"f5216914e209e4aa","name":"GRoomExhaustON","links":["8bdcdb5a0269634f"],"x":1215,"y":300,"wires":[["5c26e87e97dc6411"]]},{"id":"83502c47ca617142","type":"link in","z":"f5216914e209e4aa","name":"GRoomLightOFF","links":[],"x":1215,"y":200,"wires":[["bc836c88f14fdbc4"]]},{"id":"19b6663b5a333dd1","type":"link in","z":"f5216914e209e4aa","name":"GRoomLightON","links":[],"x":1215,"y":140,"wires":[["2ae0096bfdfd7a92"]]},{"id":"3508a307ab2b868f","type":"link in","z":"f5216914e209e4aa","name":"DryingExhaustOFF","links":[],"x":815,"y":360,"wires":[["b0566fe4800fe433"]]},{"id":"450d50f88a446fed","type":"link in","z":"f5216914e209e4aa","name":"DryingExhaustON","links":[],"x":815,"y":300,"wires":[["5de1b8c3596c335c"]]},{"id":"85448860815a8c8e","type":"link in","z":"f5216914e209e4aa","name":"","links":[],"x":815,"y":200,"wires":[["33e5c32a0aa50c3c"]]},{"id":"4f7c56d181dc4251","type":"link in","z":"f5216914e209e4aa","name":"","links":[],"x":815,"y":140,"wires":[["57c0890d9329c4bc"]]},{"id":"95404f058f30b296","type":"link in","z":"f5216914e209e4aa","name":"VeggiExhaustOFF","links":["068b8e7a89eef1ba","89a87511d0923579","977e60743b857459","fd8e5abbdc9a2c97","c8eedd46a87c4e05","1a0ec9c685e04bdd"],"x":475,"y":360,"wires":[["7366df6f2f57f13b"]]},{"id":"09f51aa364202656","type":"link in","z":"f5216914e209e4aa","name":"VeggiExhaustON","links":["7ce2cae7981b703a","b51c51949ed0c2a8","c393d04abdd34e2e","d1ba22a962408cbd","33fc3d2e9cd78585","b7c84e5a0d6164f8"],"x":475,"y":300,"wires":[["47f977f3043544d0"]]},{"id":"5bedb7577b16f1e3","type":"link in","z":"f5216914e209e4aa","name":"VeggiLightOFF","links":[],"x":475,"y":200,"wires":[["9e1017aba757f201"]]},{"id":"dbcc54529b2373f4","type":"link in","z":"f5216914e209e4aa","name":"VeggiLightON","links":[],"x":475,"y":140,"wires":[["b32ba50810a9c8f2"]]},{"id":"23d01364d3856db1","type":"link in","z":"f5216914e209e4aa","name":"FlowerExhaustOFF","links":["3fe1653c5c4342c0","fe43d7cf9ec8a24d","d6d07d605b509b9f","823cc06908fe0581"],"x":55,"y":360,"wires":[["e6b0f2bea705e5b5"]]},{"id":"55acda8e6f953bc1","type":"link in","z":"f5216914e209e4aa","name":"FlowerExhaustON","links":["b429f9607803a4c3","e1181ae60d3e758c","f2694e0f9513439f","78ae52d514d16f60"],"x":55,"y":300,"wires":[["4786b413247cbcce"]]},{"id":"2928d1d9cf2e96e6","type":"link in","z":"f5216914e209e4aa","name":"FlowerLightOFF","links":[],"x":55,"y":200,"wires":[["4a6d1fdd90626c41"]]},{"id":"69d96e3450fc38c4","type":"link in","z":"f5216914e209e4aa","name":"FlowerLightON","links":[],"x":55,"y":140,"wires":[["089092300651636c"]]},{"id":"5a5614359d863721","type":"link in","z":"f5216914e209e4aa","name":"FlowerCoolerON","links":["b3c3886b83a0ea6f","0b366bfd2dbe21b8","3df780562aaccd0e"],"x":55,"y":980,"wires":[["7fc49592594e5b54"]]},{"id":"54ac3c52a83ae28a","type":"link in","z":"f5216914e209e4aa","name":"FlowerCoolerOFF","links":["7841516b38ab2a6b","15a88cdb06cd6786","d2ed257429706836"],"x":55,"y":1040,"wires":[["045887de99f8fd59"]]},{"id":"4cbea83396a0f0ac","type":"link in","z":"f5216914e209e4aa","name":"FlowerHeaterOFF","links":["59fa1f2f5f6e1a32","29c058ed777577ad","7bf434e4292d2327"],"x":55,"y":860,"wires":[["68a2d57e41e261f3"]]},{"id":"958127653d74be3f","type":"link in","z":"f5216914e209e4aa","name":"FlowerHeaterON","links":["6eecb00d9bcacb3d","fc9c48027aed9dfd","398f75acb586fac8"],"x":55,"y":800,"wires":[["6f29b68b6c5838e7"]]},{"id":"d4900c621e99930e","type":"api-call-service","z":"f5216914e209e4aa","name":"VeggiHeaterOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_off","areaId":[],"deviceId":[],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":600,"y":860,"wires":[[]]},{"id":"238b30ac03508e5a","type":"api-call-service","z":"f5216914e209e4aa","name":"VeggiHeaterON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_on","areaId":[],"deviceId":[],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":600,"y":800,"wires":[[]]},{"id":"593f0c0e52db1610","type":"link in","z":"f5216914e209e4aa","name":"VeggiHeaterOFF","links":["7fda7edaf7e5818c","cb1beae740939d31","9a757849e139a788"],"x":475,"y":860,"wires":[["d4900c621e99930e"]]},{"id":"b2d23243fd9721ca","type":"link in","z":"f5216914e209e4aa","name":"VeggiHeaterON","links":[],"x":475,"y":800,"wires":[["238b30ac03508e5a"]]},{"id":"19a546e4c8b6c7bb","type":"api-call-service","z":"f5216914e209e4aa","name":"DryingHeaterOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_off","areaId":[],"deviceId":[],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":950,"y":860,"wires":[[]]},{"id":"5e560f3f16273c3d","type":"api-call-service","z":"f5216914e209e4aa","name":"DryingHeaterON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_on","areaId":[],"deviceId":[],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":940,"y":800,"wires":[[]]},{"id":"06ee4d4e44bd2dc1","type":"link in","z":"f5216914e209e4aa","name":"DryingHeaterOFF","links":[],"x":815,"y":860,"wires":[["19a546e4c8b6c7bb"]]},{"id":"042ba25956f0f597","type":"link in","z":"f5216914e209e4aa","name":"DryingHeaterON","links":[],"x":815,"y":800,"wires":[["5e560f3f16273c3d"]]},{"id":"9c4c9f34ba6c738e","type":"api-call-service","z":"f5216914e209e4aa","name":"GRoomHeaterOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_off","areaId":[],"deviceId":[],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1350,"y":860,"wires":[[]]},{"id":"45e00b1173df10c9","type":"api-call-service","z":"f5216914e209e4aa","name":"GRoomHeaterON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_on","areaId":[],"deviceId":[],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1350,"y":800,"wires":[[]]},{"id":"e503b9867d412849","type":"link in","z":"f5216914e209e4aa","name":"GRoomHeaterOFF","links":["5c5959aa60778b19"],"x":1215,"y":860,"wires":[["9c4c9f34ba6c738e"]]},{"id":"1a1641f67f5d27d7","type":"link in","z":"f5216914e209e4aa","name":"GRoomHeaterON","links":["abe4483090f685a3"],"x":1215,"y":800,"wires":[["45e00b1173df10c9"]]},{"id":"4e9fe08b245cdf4d","type":"api-call-service","z":"f5216914e209e4aa","name":"VeggiCoolerON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_on","areaId":[],"deviceId":["0d189c60358a6be7de3b9d017e1f8d40"],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":600,"y":980,"wires":[[]]},{"id":"da6f6b78fa21225e","type":"api-call-service","z":"f5216914e209e4aa","name":"VeggiCoolerOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_off","areaId":[],"deviceId":["0d189c60358a6be7de3b9d017e1f8d40"],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":600,"y":1040,"wires":[[]]},{"id":"cc608f4009e112e6","type":"link in","z":"f5216914e209e4aa","name":"VeggiCoolerON","links":["ccb808bba5fe34af","c55d6a64f93d071e","c5ab8f7e0e65487f"],"x":475,"y":980,"wires":[["4e9fe08b245cdf4d"]]},{"id":"eabb7d61eeb2383f","type":"link in","z":"f5216914e209e4aa","name":"VeggiCoolerOFF","links":["1fc079df5d0649cc","8cbbef67cfbe7dfe","8af0c8809f8679e2"],"x":475,"y":1040,"wires":[["da6f6b78fa21225e"]]},{"id":"b4baf1bad155baa2","type":"api-call-service","z":"f5216914e209e4aa","name":"DryingCoolerON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_on","areaId":[],"deviceId":["0d189c60358a6be7de3b9d017e1f8d40"],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":940,"y":980,"wires":[[]]},{"id":"f137f0fa7d1e8150","type":"api-call-service","z":"f5216914e209e4aa","name":"DryingCoolerOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_off","areaId":[],"deviceId":["0d189c60358a6be7de3b9d017e1f8d40"],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":950,"y":1040,"wires":[[]]},{"id":"08383caaa8265b80","type":"link in","z":"f5216914e209e4aa","name":"DryingCoolerOFF","links":[],"x":815,"y":980,"wires":[["b4baf1bad155baa2"]]},{"id":"bfdb992b9873b1d8","type":"link in","z":"f5216914e209e4aa","name":"DryingCoolerON","links":[],"x":815,"y":1040,"wires":[["f137f0fa7d1e8150"]]},{"id":"1d970a560fb7eab3","type":"api-call-service","z":"f5216914e209e4aa","name":"GRoomCoolerON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_on","areaId":[],"deviceId":["0d189c60358a6be7de3b9d017e1f8d40"],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1350,"y":980,"wires":[[]]},{"id":"68e318362d51e974","type":"api-call-service","z":"f5216914e209e4aa","name":"GRoomCoolerOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_off","areaId":[],"deviceId":["0d189c60358a6be7de3b9d017e1f8d40"],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1350,"y":1040,"wires":[[]]},{"id":"ee62c9e1c3bcd0be","type":"link in","z":"f5216914e209e4aa","name":"GRoomCoolerON","links":["abe4483090f685a3","7e14b98351bfd86f"],"x":1215,"y":980,"wires":[["1d970a560fb7eab3"]]},{"id":"cbc90b10bdb86123","type":"link in","z":"f5216914e209e4aa","name":"GRoomCoolerOFF","links":["ed72a75f5413aabc"],"x":1215,"y":1040,"wires":[["68e318362d51e974"]]},{"id":"092eb7bcd46b40d0","type":"api-call-service","z":"f5216914e209e4aa","name":"FlowerVentsALL-OFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_off","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":200,"y":1240,"wires":[[]]},{"id":"3648ec9c8b4d5309","type":"api-call-service","z":"f5216914e209e4aa","name":"FlowerVentsALL-ON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_on","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":200,"y":1160,"wires":[[]]},{"id":"eddf19938cbb8b26","type":"api-call-service","z":"f5216914e209e4aa","name":"VeggiVentsALL-OFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_off","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":620,"y":1240,"wires":[[]]},{"id":"a6b9a70e5a665e42","type":"api-call-service","z":"f5216914e209e4aa","name":"VeggiVentsALL-ON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_on","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":610,"y":1160,"wires":[[]]},{"id":"5dbdec3dc295d111","type":"api-call-service","z":"f5216914e209e4aa","name":"DryingVentsALL-OFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_off","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":960,"y":1240,"wires":[[]]},{"id":"3e42310f54dfe322","type":"api-call-service","z":"f5216914e209e4aa","name":"DryingVentsALL-ON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_on","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":960,"y":1160,"wires":[[]]},{"id":"616e1d0c43e50aab","type":"api-call-service","z":"f5216914e209e4aa","name":"GRoomVentsALL-ON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_on","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1360,"y":1160,"wires":[[]]},{"id":"8578d2d6b6a13f72","type":"api-call-service","z":"f5216914e209e4aa","name":"GRoomVentsALL-OFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_off","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1360,"y":1240,"wires":[[]]},{"id":"925c352dc9855fa0","type":"comment","z":"f5216914e209e4aa","name":"Ventilation","info":"","x":100,"y":1100,"wires":[]},{"id":"49c378f454397cd0","type":"comment","z":"f5216914e209e4aa","name":"Ventilation","info":"","x":520,"y":1100,"wires":[]},{"id":"f11a21923167c8e7","type":"comment","z":"f5216914e209e4aa","name":"Ventilation","info":"","x":860,"y":1100,"wires":[]},{"id":"0a2ba5cd970f1634","type":"comment","z":"f5216914e209e4aa","name":"Ventilation","info":"","x":1260,"y":1100,"wires":[]},{"id":"4822ddea8aa2856a","type":"link in","z":"f5216914e209e4aa","name":"GRoomVentsALL-OFF","links":[],"x":1215,"y":1240,"wires":[["8578d2d6b6a13f72"]]},{"id":"627e40e37bf4b044","type":"link in","z":"f5216914e209e4aa","name":"GRoomVentsALL-ON","links":[],"x":1215,"y":1160,"wires":[["616e1d0c43e50aab"]]},{"id":"c9b02d44cdd2ad19","type":"link in","z":"f5216914e209e4aa","name":"DryingVentsALL-OFF","links":[],"x":815,"y":1240,"wires":[["5dbdec3dc295d111"]]},{"id":"f581b978567d4e53","type":"link in","z":"f5216914e209e4aa","name":"DryingVentsALL-ON","links":[],"x":815,"y":1160,"wires":[["3e42310f54dfe322"]]},{"id":"6c90672355d39d09","type":"link in","z":"f5216914e209e4aa","name":"VeggiVentsALL-OFF","links":[],"x":475,"y":1240,"wires":[["eddf19938cbb8b26"]]},{"id":"7f2f2671692d2d7e","type":"link in","z":"f5216914e209e4aa","name":"VeggiVentsALL-ON","links":[],"x":475,"y":1160,"wires":[["a6b9a70e5a665e42"]]},{"id":"11bdbeb3f8b0c694","type":"link in","z":"f5216914e209e4aa","name":"FlowerVentsALL-OFF","links":[],"x":55,"y":1240,"wires":[["092eb7bcd46b40d0"]]},{"id":"715bc88821fcf9eb","type":"link in","z":"f5216914e209e4aa","name":"FlowerVentsALL-ON","links":[],"x":55,"y":1160,"wires":[["3648ec9c8b4d5309"]]},{"id":"29e6ce2edf9037bf","type":"api-call-service","z":"f5216914e209e4aa","name":"FlowerHumidifierON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"humidifier","service":"turn_on","areaId":[],"deviceId":["a974734c414e9afca81e0f9dc27dc960"],"entityId":["humidifier.befeuchter"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":200,"y":480,"wires":[[]]},{"id":"7f0ee764ed2a134b","type":"api-call-service","z":"f5216914e209e4aa","name":"FlowerHumidifierOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"humidifier","service":"turn_off","areaId":[],"deviceId":["a974734c414e9afca81e0f9dc27dc960"],"entityId":["humidifier.befeuchter"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":200,"y":540,"wires":[[]]},{"id":"48835de4729fefa7","type":"comment","z":"f5216914e209e4aa","name":"Humidifier","info":"","x":100,"y":420,"wires":[]},{"id":"62724edd121a7c20","type":"comment","z":"f5216914e209e4aa","name":"Humidifier","info":"","x":520,"y":420,"wires":[]},{"id":"fd3e2145600acbf7","type":"comment","z":"f5216914e209e4aa","name":"Humidifier","info":"","x":860,"y":440,"wires":[]},{"id":"cb7ad5efa7749281","type":"comment","z":"f5216914e209e4aa","name":"Humidifier","info":"","x":1260,"y":440,"wires":[]},{"id":"5f5c49e30360b5b5","type":"api-call-service","z":"f5216914e209e4aa","name":"FlowerDehumidifierON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_on","areaId":[],"deviceId":[],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":200,"y":640,"wires":[[]]},{"id":"8870a38066689fdc","type":"comment","z":"f5216914e209e4aa","name":"Dehumidifier","info":"","x":110,"y":600,"wires":[]},{"id":"951320fa7ba547bd","type":"comment","z":"f5216914e209e4aa","name":"Dehumidifier","info":"","x":530,"y":600,"wires":[]},{"id":"6d050d8dd2a3d237","type":"comment","z":"f5216914e209e4aa","name":"Dehumidifier","info":"","x":870,"y":600,"wires":[]},{"id":"48655b8de1100bc2","type":"comment","z":"f5216914e209e4aa","name":"Dehumidifier","info":"","x":1270,"y":600,"wires":[]},{"id":"4e5137698b797e33","type":"api-call-service","z":"f5216914e209e4aa","name":"FlowerDehumidifierOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_off","areaId":[],"deviceId":[],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":210,"y":700,"wires":[[]]},{"id":"38a12a509a13d715","type":"link in","z":"f5216914e209e4aa","name":"FlowerHumidifierOFF","links":["a387e2a4fc4c0250","aa5773a7762ec6a1","b935e8c4af376cc0","a598a7f8560d972d","d7e52f9a26275fcb","b6d8036882fb0315"],"x":55,"y":540,"wires":[["7f0ee764ed2a134b"]]},{"id":"acb0f5addd129adf","type":"link in","z":"f5216914e209e4aa","name":"FlowerHumidifierON","links":["f985e76f9164be6f","ce9c357652d8fb35","73e599330c92cf04","330118bbab72d493","375d779e0949166d","e8d14de801bad46b"],"x":55,"y":480,"wires":[["29e6ce2edf9037bf"]]},{"id":"99832bcde6aaec0d","type":"link in","z":"f5216914e209e4aa","name":"FlowerDehumidifierON","links":["f1ed96c84b1e46e1","e38feae8aeb3e604","2a9f9087dc56f131"],"x":55,"y":640,"wires":[["5f5c49e30360b5b5"]]},{"id":"b576fb3aef39185a","type":"link in","z":"f5216914e209e4aa","name":"FlowerDehumidifierOFF","links":["abef1da1656fea02","d8fd91bf4fabc3c5","6e03a74882a0defb"],"x":55,"y":700,"wires":[["4e5137698b797e33"]]},{"id":"015239c5b434194c","type":"api-call-service","z":"f5216914e209e4aa","name":"VeggiDehumidifierON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_on","areaId":[],"deviceId":[],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":620,"y":640,"wires":[[]]},{"id":"83281680fe885d81","type":"api-call-service","z":"f5216914e209e4aa","name":"VeggiDehumidifierOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_off","areaId":[],"deviceId":[],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":620,"y":700,"wires":[[]]},{"id":"4c88812165b09b0e","type":"link in","z":"f5216914e209e4aa","name":"VeggiDehumidifierON","links":["09de5509dbd47ef7","a2cc8907d2e035e6","922bd2bc6ee5806f"],"x":475,"y":640,"wires":[["015239c5b434194c"]]},{"id":"2b8233e8bb0edf47","type":"link in","z":"f5216914e209e4aa","name":"VeggiDehumidifierOFF","links":["fa4182f14e046b55","6742723e51a69e70","e462cbb4a6911311"],"x":475,"y":700,"wires":[["83281680fe885d81"]]},{"id":"3582b06d82afcbc1","type":"api-call-service","z":"f5216914e209e4aa","name":"DryingDehumidifierON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_on","areaId":[],"deviceId":[],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":960,"y":640,"wires":[[]]},{"id":"4d9b6cced6775d85","type":"api-call-service","z":"f5216914e209e4aa","name":"DryingDehumidifierOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_off","areaId":[],"deviceId":[],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":970,"y":700,"wires":[[]]},{"id":"be1d3d1d7939e6e4","type":"link in","z":"f5216914e209e4aa","name":"DryingDehumidifierON","links":[],"x":815,"y":640,"wires":[["3582b06d82afcbc1"]]},{"id":"3d52f87e49d63fb6","type":"link in","z":"f5216914e209e4aa","name":"DryingDehumidifierOFF","links":[],"x":815,"y":700,"wires":[["4d9b6cced6775d85"]]},{"id":"04a0e2adcf87d658","type":"api-call-service","z":"f5216914e209e4aa","name":"GRoomDehumidifierON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_on","areaId":[],"deviceId":[],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1370,"y":640,"wires":[[]]},{"id":"2c840bdcd3ecee71","type":"api-call-service","z":"f5216914e209e4aa","name":"GRoomDehumidifierOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"climate","service":"turn_off","areaId":[],"deviceId":[],"entityId":["climate.air_condition_a012_b"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1370,"y":700,"wires":[[]]},{"id":"e3a080b4cdaee4de","type":"link in","z":"f5216914e209e4aa","name":"GRoomDehumidifierON","links":["3a124366984cc1e9"],"x":1215,"y":640,"wires":[["04a0e2adcf87d658"]]},{"id":"7f36b1429ae00752","type":"link in","z":"f5216914e209e4aa","name":"GRoomDehumidifierOFF","links":["837607e3f49e7f42"],"x":1215,"y":700,"wires":[["2c840bdcd3ecee71"]]},{"id":"f14842493e53a189","type":"api-call-service","z":"f5216914e209e4aa","name":"VeggiHumidifierON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"humidifier","service":"turn_on","areaId":[],"deviceId":["a974734c414e9afca81e0f9dc27dc960"],"entityId":["humidifier.befeuchter"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":610,"y":480,"wires":[[]]},{"id":"53f53d357df16a47","type":"api-call-service","z":"f5216914e209e4aa","name":"VeggiHumidifierOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"humidifier","service":"turn_off","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":620,"y":540,"wires":[[]]},{"id":"7deddc1b5d29a51e","type":"link in","z":"f5216914e209e4aa","name":"VeggiHumidifierOFF","links":["4838925f259b0f8f","d2b8b521e6d704e6","07a253f060cb08f3","f63d51ad02ce38e6","9ea6f7948516271f","ed29e5a88b496068"],"x":475,"y":540,"wires":[["53f53d357df16a47"]]},{"id":"1be287d67694b336","type":"link in","z":"f5216914e209e4aa","name":"VeggiHumidifierON","links":["41795c60f635579f","fb9d3843392773d1","cacb50c638ff93f0","77401e0fc8edc860","1c021da55d25e11a","275bae4f3b5b7256","b7298b472b6af1e2","14427e078adf6cba","2621143cc57c267d"],"x":475,"y":480,"wires":[["f14842493e53a189"]]},{"id":"4f88beec20f70e81","type":"api-call-service","z":"f5216914e209e4aa","name":"DryingHumidifierON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"humidifier","service":"turn_on","areaId":[],"deviceId":["a974734c414e9afca81e0f9dc27dc960"],"entityId":["humidifier.befeuchter"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":960,"y":480,"wires":[[]]},{"id":"6d02b8a9ba6e1f90","type":"api-call-service","z":"f5216914e209e4aa","name":"DryingHumidifierOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"humidifier","service":"turn_off","areaId":[],"deviceId":["a974734c414e9afca81e0f9dc27dc960"],"entityId":["humidifier.befeuchter"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":960,"y":540,"wires":[[]]},{"id":"711d5e9407680562","type":"link in","z":"f5216914e209e4aa","name":"DryingHumidifierOFF","links":[],"x":815,"y":540,"wires":[["6d02b8a9ba6e1f90"]]},{"id":"f101e0061d61ac8d","type":"link in","z":"f5216914e209e4aa","name":"DryingHumidifierON","links":[],"x":815,"y":480,"wires":[["4f88beec20f70e81"]]},{"id":"b4b71d535ccee586","type":"api-call-service","z":"f5216914e209e4aa","name":"GRoomHumidifierON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"humidifier","service":"turn_on","areaId":[],"deviceId":["a974734c414e9afca81e0f9dc27dc960"],"entityId":["humidifier.befeuchter"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1360,"y":480,"wires":[[]]},{"id":"858838f12519c2cf","type":"api-call-service","z":"f5216914e209e4aa","name":"GRoomHumidifierOFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"humidifier","service":"turn_off","areaId":[],"deviceId":["a974734c414e9afca81e0f9dc27dc960"],"entityId":["humidifier.befeuchter"],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1360,"y":540,"wires":[[]]},{"id":"a71f5850b9a80e2b","type":"link in","z":"f5216914e209e4aa","name":"GromHumidifierOFF","links":["f39174c43ccbbd26"],"x":1215,"y":540,"wires":[["858838f12519c2cf"]]},{"id":"bfd9574c91044df2","type":"link in","z":"f5216914e209e4aa","name":"GRoomHumidifierON","links":["2ea63399a8be550f"],"x":1215,"y":480,"wires":[["b4b71d535ccee586"]]},{"id":"6a3a68df8c886e6a","type":"api-call-service","z":"f5216914e209e4aa","name":"FlowerVentsTOP-OFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_off","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":200,"y":1440,"wires":[[]]},{"id":"d25bf02c39a1c661","type":"api-call-service","z":"f5216914e209e4aa","name":"FlowerVentsTOP-ON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_on","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":200,"y":1380,"wires":[[]]},{"id":"dbf991e9f55855f3","type":"api-call-service","z":"f5216914e209e4aa","name":"VeggiVentsTOP-OFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_off","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":620,"y":1440,"wires":[[]]},{"id":"cc731fa9f7eef2a8","type":"api-call-service","z":"f5216914e209e4aa","name":"VeggiVentsTOP-ON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_on","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":610,"y":1380,"wires":[[]]},{"id":"33d00c981dc88028","type":"api-call-service","z":"f5216914e209e4aa","name":"DryingVentsTOP-OFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_off","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":960,"y":1440,"wires":[[]]},{"id":"582e35b952109dc2","type":"api-call-service","z":"f5216914e209e4aa","name":"DryingVentsTOP-ON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_on","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":960,"y":1380,"wires":[[]]},{"id":"2d1cad709c2c3f98","type":"api-call-service","z":"f5216914e209e4aa","name":"GroomVentsTOP-ON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_on","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1360,"y":1380,"wires":[[]]},{"id":"cc57249d94d1075f","type":"api-call-service","z":"f5216914e209e4aa","name":"GroomVentsTOP-OFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_off","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1360,"y":1440,"wires":[[]]},{"id":"50e64fa33ce07500","type":"comment","z":"f5216914e209e4aa","name":"VentilationTop","info":"","x":110,"y":1320,"wires":[]},{"id":"d2d09bcc5850339e","type":"comment","z":"f5216914e209e4aa","name":"VentilationTop","info":"","x":530,"y":1320,"wires":[]},{"id":"df60ef1631512b28","type":"comment","z":"f5216914e209e4aa","name":"VentilationTop","info":"","x":870,"y":1320,"wires":[]},{"id":"f670290567b88cc3","type":"comment","z":"f5216914e209e4aa","name":"VentilationTop","info":"","x":1270,"y":1320,"wires":[]},{"id":"8726fc04223a9d60","type":"link in","z":"f5216914e209e4aa","name":"GroomVentsTOP-OFF","links":[],"x":1215,"y":1440,"wires":[["cc57249d94d1075f"]]},{"id":"3face40bf991ec6d","type":"link in","z":"f5216914e209e4aa","name":"GroomVentsTOP-ON","links":[],"x":1215,"y":1380,"wires":[["2d1cad709c2c3f98"]]},{"id":"ef9aa08986b98966","type":"link in","z":"f5216914e209e4aa","name":"DryingVentsTOP-OFF","links":[],"x":815,"y":1440,"wires":[["33d00c981dc88028"]]},{"id":"24d81e674d71dc9d","type":"link in","z":"f5216914e209e4aa","name":"DryingVentsTOP-ON","links":[],"x":815,"y":1380,"wires":[["582e35b952109dc2"]]},{"id":"855756be9589fa86","type":"link in","z":"f5216914e209e4aa","name":"VeggiVentsTOP-OFF","links":[],"x":475,"y":1440,"wires":[["dbf991e9f55855f3"]]},{"id":"44a6979426647e00","type":"link in","z":"f5216914e209e4aa","name":"VeggiVentsTOP-ON","links":[],"x":475,"y":1380,"wires":[["cc731fa9f7eef2a8"]]},{"id":"afbf94693f350e5d","type":"link in","z":"f5216914e209e4aa","name":"FlowerVentsTOP-OFF","links":[],"x":55,"y":1440,"wires":[["6a3a68df8c886e6a"]]},{"id":"a6f1bd1870d71f1f","type":"link in","z":"f5216914e209e4aa","name":"FlowerVentsTOP-ON","links":[],"x":55,"y":1380,"wires":[["d25bf02c39a1c661"]]},{"id":"69bf7c293ca3c7d3","type":"api-call-service","z":"f5216914e209e4aa","name":"FlowerVentsDOWN-OFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_off","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":210,"y":1640,"wires":[[]]},{"id":"c1355d06a7d8d05f","type":"api-call-service","z":"f5216914e209e4aa","name":"FlowerVentsDOWN-ON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_on","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":210,"y":1580,"wires":[[]]},{"id":"e13814f881bc8851","type":"api-call-service","z":"f5216914e209e4aa","name":"VeggiVentsDOWN-OFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_off","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":630,"y":1640,"wires":[[]]},{"id":"22ec71efa520e2de","type":"api-call-service","z":"f5216914e209e4aa","name":"VeggiVentsDOWN-ON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_on","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":620,"y":1580,"wires":[[]]},{"id":"20a0c090c5ca81b4","type":"api-call-service","z":"f5216914e209e4aa","name":"DryingVentsDOWN-OFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_off","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":970,"y":1640,"wires":[[]]},{"id":"a234e31ab90a8e1f","type":"api-call-service","z":"f5216914e209e4aa","name":"DryingVentsDOWN-ON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_on","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":970,"y":1580,"wires":[[]]},{"id":"5a276e16b2b09385","type":"api-call-service","z":"f5216914e209e4aa","name":"GRoomVentsDOWN-ON","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_on","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1370,"y":1580,"wires":[[]]},{"id":"df6be2bf8af2915e","type":"api-call-service","z":"f5216914e209e4aa","name":"GRoomVentsDOWN-OFF","server":"5772bf4c.b461d","version":5,"debugenabled":false,"domain":"switch","service":"turn_off","areaId":[],"deviceId":[],"entityId":[],"data":"","dataType":"jsonata","mergeContext":"","mustacheAltTags":false,"outputProperties":[],"queue":"none","x":1370,"y":1640,"wires":[[]]},{"id":"9ac8acc5056821bd","type":"comment","z":"f5216914e209e4aa","name":"Ventilation Down","info":"","x":120,"y":1520,"wires":[]},{"id":"e6a94897bf113673","type":"comment","z":"f5216914e209e4aa","name":"Ventilation Down","info":"","x":540,"y":1520,"wires":[]},{"id":"fc7cf9d62beef04c","type":"comment","z":"f5216914e209e4aa","name":"Ventilation Down","info":"","x":880,"y":1520,"wires":[]},{"id":"cffb804bd342191a","type":"comment","z":"f5216914e209e4aa","name":"Ventilation Down","info":"","x":1280,"y":1520,"wires":[]},{"id":"820411effa9e7bd7","type":"link in","z":"f5216914e209e4aa","name":"GRoomVentsDOWN-OFF","links":[],"x":1215,"y":1640,"wires":[["df6be2bf8af2915e"]]},{"id":"cff77d0956a624ca","type":"link in","z":"f5216914e209e4aa","name":"GRoomVentsDOWN-ON","links":[],"x":1215,"y":1580,"wires":[["5a276e16b2b09385"]]},{"id":"1d548086dde9fbe5","type":"link in","z":"f5216914e209e4aa","name":"DryingVentsDOWN-OFF","links":[],"x":815,"y":1640,"wires":[["20a0c090c5ca81b4"]]},{"id":"32d8ccde6dd5c0b8","type":"link in","z":"f5216914e209e4aa","name":"DryingVentsDOWN-ON","links":[],"x":815,"y":1580,"wires":[["a234e31ab90a8e1f"]]},{"id":"f6dc7a1b02e6fbd8","type":"link in","z":"f5216914e209e4aa","name":"VeggiVentsDOWN-OFF","links":[],"x":475,"y":1640,"wires":[["e13814f881bc8851"]]},{"id":"11ad438188bbf7e1","type":"link in","z":"f5216914e209e4aa","name":"VeggiVentsDOWN-ON","links":[],"x":475,"y":1580,"wires":[["22ec71efa520e2de"]]},{"id":"356df5518b344be1","type":"link in","z":"f5216914e209e4aa","name":"FlowerVentsDOWN-OFF","links":[],"x":55,"y":1640,"wires":[["69bf7c293ca3c7d3"]]},{"id":"2162ad46178a16fd","type":"link in","z":"f5216914e209e4aa","name":"FlowerVentsDOWN-ON","links":[],"x":55,"y":1580,"wires":[["c1355d06a7d8d05f"]]},{"id":"feed18dbbcebdb52","type":"comment","z":"f5216914e209e4aa","name":"Air-Condition","info":"","x":870,"y":920,"wires":[]},{"id":"63c481dfeeeca27f","type":"comment","z":"f5216914e209e4aa","name":"Air-Condition","info":"","x":1270,"y":920,"wires":[]},{"id":"69d2bbbaa57da104","type":"link in","z":"87bab898757000a2","name":"FlowerCtrl","links":["43ca19d80e63515d"],"x":55,"y":40,"wires":[["1bb8e9448a5f14de"]]},{"id":"1bb8e9448a5f14de","type":"debug","z":"87bab898757000a2","name":"FlowerTentData","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":180,"y":40,"wires":[]},{"id":"b9dfb243cc1af1b4","type":"link in","z":"87bab898757000a2","name":"FlowerLive","links":["e0e6fce7027c2e26"],"x":55,"y":80,"wires":[["bf6cdb0a0d2077a0","56aa552840d3803d"]]},{"id":"bf6cdb0a0d2077a0","type":"debug","z":"87bab898757000a2","name":"FlowerTentLiveData","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":190,"y":80,"wires":[]},{"id":"4675a31b7d62a521","type":"join","z":"87bab898757000a2","g":"684260cd34e37219","name":"VpdNeeds","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":740,"y":100,"wires":[["da4a10ce600a3a02"]]},{"id":"e352eb9ec5f51329","type":"function","z":"87bab898757000a2","g":"684260cd34e37219","name":"TentModesSetup","func":"// Initialisiert das Array für die Ausgänge mit Nullen\nlet outputs = [null, null, null, null, null ];\n\n// Überprüft den Zustand des eingehenden Payloads und setzt den entsprechenden Ausgang\nif (msg.payload === \"VPD Perfection\") {\n    return [{ payload: msg.payload, topic: \"Perfection\" }, null, null, null,null];\n}\nelse if (msg.payload === \"IN-VPD-Range\") {\n    return [null, { payload: msg.payload, topic: \"IN-VPD-Range\" }, null, null, null];\n}\nelse if (msg.payload === \"Targeted VPD\") {\n    return [null, null, { payload: msg.payload, topic: \"TargetedVPD\" }, null, null];\n}\nelse if (msg.payload === \"CropSteering\") {\n    return [null, null, null, { payload: msg.payload, topic: \"ModeDisabeld\" }, null ];\n}\nelse if (msg.payload === \"Disabled\") {\n    return [null, null, null, null, { payload: msg.payload, topic: \"ModeDisabeld\" }];\n}\n\n// Wenn keine Bedingungen zutreffen, sendet nichts\nreturn [null, null, null, null,null];\n","outputs":5,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1650,"y":220,"wires":[["b343362282198e73"],["e26a880fb2d24667"],["464b23e70cf844c8"],["a96ccda7addd1614"],["fc63cad79428afc6"]]},{"id":"fc63cad79428afc6","type":"function","z":"87bab898757000a2","g":"684260cd34e37219","name":"DISABLED AUTO","func":"msg.payload=\"DISABLED FLOWER\"\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1650,"y":280,"wires":[["1d43ba5bea872eea"]]},{"id":"1d43ba5bea872eea","type":"debug","z":"87bab898757000a2","g":"684260cd34e37219","name":"debug 118","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1630,"y":320,"wires":[]},{"id":"650d94e8238e269e","type":"api-current-state","z":"87bab898757000a2","g":"684260cd34e37219","name":"TentMode","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"select.flowertentmodes","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"TentMode","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1520,"y":120,"wires":[["e352eb9ec5f51329"]]},{"id":"b343362282198e73","type":"link out","z":"87bab898757000a2","g":"684260cd34e37219","name":"VPD-Perfektion","mode":"link","links":["1e5ab4d1f342f560"],"x":1845,"y":140,"wires":[]},{"id":"e26a880fb2d24667","type":"link out","z":"87bab898757000a2","g":"684260cd34e37219","name":"IN-Range-VPD","mode":"link","links":["f904b999069f9166","bab58a1e055f1530"],"x":1845,"y":180,"wires":[]},{"id":"180eab0539ef4f5b","type":"comment","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"VPD-Perfektion","info":"","x":140,"y":1320,"wires":[]},{"id":"1e5ab4d1f342f560","type":"link in","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"VPD-Perfektion","links":["b343362282198e73"],"x":65,"y":1380,"wires":[["d37ecd3c5f82cdbc"]]},{"id":"78de53c8bb55e403","type":"function","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"VPD State Values","func":"const plantStages = {\n    Germination: [0.42, 0.78], // Optimaler VPD-Bereich für Keimung bei 25-30°C\n    Clones: [0.42, 0.78],      // Optimaler VPD-Bereich für Klone bei 25-30°C\n    EarlyVeg: [0.55, 0.85],    // Optimaler VPD-Bereich für frühe Vegetation bei 20-25°C\n    MidVeg: [0.85, 1.1],      // Optimaler VPD-Bereich für mittlere Vegetation bei 20-25°C\n    LateVeg: [0.85, 1.2],     // Optimaler VPD-Bereich für späte Vegetation bei 20-25°C\n    EarlyFlower: [1, 1.25], // Optimaler VPD-Bereich für frühe Blüte bei 20-25°C\n    MidFlower: [1.1, 1.4],   // Optimaler VPD-Bereich für mittlere Blüte bei 20-25°C\n    LateFlower: [1.2, 1.6],  // Optimaler VPD-Bereich für späte Blüte bei 20-25°C\n};\n\n\n// Beispiel, wie msg.payload gesetzt wird\n// msg.payload = \"LateVeg\"; // Kommentieren Sie diese Zeile aus, um den tatsächlichen msg.payload zu verwenden\n\n// Prüfen, ob das Wachstumsstadium im plantStages-Objekt vorhanden ist\nif (plantStages.hasOwnProperty(msg.payload)) {\n    // Setzen des VPD-Wertes aus dem plantStages-Objekt\n    msg.payload = plantStages[msg.payload];\n} else {\n    // Fehlermeldung, wenn das Wachstumsstadium nicht gefunden wurde\n    msg.payload = \"Unbekanntes Wachstumsstadium\";\n\n}\nmsg.perfection = \"VPDStageValue\"\ndelete msg.data;\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":470,"y":1380,"wires":[["c1e70d8332a5d4e4","33ec8a5f3c05962b"]]},{"id":"d37ecd3c5f82cdbc","type":"api-current-state","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"ModeSelection","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"select.flowertentmodes","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"targetVPD","valueType":"str"},{"property":"perfection","propertyType":"msg","value":"targetVPD","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":220,"y":1380,"wires":[["78de53c8bb55e403"]]},{"id":"afeb5423a6f3b5db","type":"comment","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"IN-RANGE-VPD","info":"","x":140,"y":2700,"wires":[]},{"id":"f1b0b6e3183aaeab","type":"comment","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"Targeted-VPD","info":"","x":130,"y":3660,"wires":[]},{"id":"169da9767a08464e","type":"comment","z":"87bab898757000a2","name":"Cropsteering","info":"","x":190,"y":4760,"wires":[]},{"id":"464b23e70cf844c8","type":"link out","z":"87bab898757000a2","g":"684260cd34e37219","name":"TargetedVPD","mode":"link","links":["500730d0af5e7cbf","78d116b1f17e53a9"],"x":1845,"y":220,"wires":[]},{"id":"fae02ab1f3ce0e63","type":"comment","z":"87bab898757000a2","g":"684260cd34e37219","name":"TentModes","info":"","x":1700,"y":160,"wires":[]},{"id":"e9088dc392b5024f","type":"ha-sensor","z":"87bab898757000a2","g":"684260cd34e37219","name":"FlowerAVGHum","entityConfig":"532f3d1e489722da","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1080,"y":240,"wires":[["8a884fe39e4f1e3c"]]},{"id":"01d5f2b84873c638","type":"ha-sensor","z":"87bab898757000a2","g":"684260cd34e37219","name":"FlowerAVGTemp","entityConfig":"edc405a70462ce85","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1090,"y":180,"wires":[["8a884fe39e4f1e3c"]]},{"id":"eb72ffdb8d671839","type":"ha-sensor","z":"87bab898757000a2","g":"684260cd34e37219","name":"currentVPD","entityConfig":"1a9ed93138063774","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1350,"y":140,"wires":[["650d94e8238e269e"]]},{"id":"da4a10ce600a3a02","type":"function","z":"87bab898757000a2","g":"684260cd34e37219","name":"Calc-AVG","func":"// Funktion zur Berechnung des Durchschnitts\nconst AvgTemp = (temps) => {\n    let sum = 0;\n    let count = 0;\n\n    temps.forEach((entry) => {\n        const temp = parseFloat(entry.value);\n        if (!isNaN(temp)) {\n            sum += temp;\n            count++;\n        }\n    });\n\n    if (count === 0) {\n        return \"unavailable\";\n    }\n\n    const avg = sum / count;\n    return avg.toFixed(2);\n};\n\n// Durchschnittstemperatur für jede Temperaturkategorie berechnen\nconst temperatureAvg = AvgTemp(msg.payload.temperature);\nconst humidityAvg = AvgTemp(msg.payload.humidity);\n\n// Objekt mit den Durchschnittswerten erstellen\nconst avgData = {\n    AvgTempData: temperatureAvg,\n    AvgHumData: humidityAvg\n};\n\n// Nachrichten erstellen und zurückgeben\nconst avgDataMsg = { payload: avgData, topic: \"AvgData\" };\nconst tempMsg = { payload: temperatureAvg, topic: \"AvgTemp\" };\nconst humMsg = { payload: humidityAvg, topic: \"AvgHum\" };\n\nreturn [avgDataMsg, tempMsg, humMsg];\n","outputs":3,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":780,"y":180,"wires":[["47249219e55b6920"],["01d5f2b84873c638"],["e9088dc392b5024f"]]},{"id":"97fb7c5e5e3f9dee","type":"function","z":"87bab898757000a2","g":"684260cd34e37219","name":"VPD Calc ","func":"function calculateVPD(luftTemperatur, blattTemperatur, relativeLuftfeuchtigkeit) {\n    // Stellen Sie sicher, dass alle Eingaben Zahlen sind\n    luftTemperatur = parseFloat(luftTemperatur);\n    blattTemperatur = parseFloat(blattTemperatur);\n    relativeLuftfeuchtigkeit = parseFloat(relativeLuftfeuchtigkeit);\n\n    // Überprüfen Sie, ob einer der Werte NaN ist\n    if (isNaN(luftTemperatur) || isNaN(blattTemperatur) || isNaN(relativeLuftfeuchtigkeit)) {\n        return NaN; // Geändert von \"unavailable\" zu NaN für bessere Handhabung in numerischen Berechnungen\n    }\n\n    // Berechnungen ohne Rundung\n    let sdpLuft = 0.6108 * Math.exp((17.27 * luftTemperatur) / (luftTemperatur + 237.3));\n    let sdpBlatt = 0.6108 * Math.exp((17.27 * blattTemperatur) / (blattTemperatur + 237.3));\n    let adp = (relativeLuftfeuchtigkeit / 100) * sdpLuft;\n    let vpd = sdpBlatt - adp;\n\n    // Rückgabe als number, nicht als string\n    return parseFloat(vpd.toFixed(2));\n}\n\n// Beispiel für die Verwendung der Funktion\nlet luftTemperatur = parseFloat(msg.payload.AvgData.AvgTempData); // Stellen Sie sicher, dass dies eine Zahl ist\nlet blattTemperatur = parseFloat(msg.payload.AvgData.AvgTempData) - parseFloat(msg.payload.LeafOffSet); // Keine Rundung, genaue Berechnung\nlet relativeLuftfeuchtigkeit = parseFloat(msg.payload.AvgData.AvgHumData); // Stellen Sie sicher, dass dies eine Zahl ist\n\nlet vpd = calculateVPD(luftTemperatur, blattTemperatur, relativeLuftfeuchtigkeit);\n\nmsg.payload = vpd; // Nun ist msg.payload eine Zahl\nmsg.topic = \"currentVPD\"\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1180,"y":120,"wires":[["eb72ffdb8d671839"]]},{"id":"c6f9196bc280b4e5","type":"comment","z":"87bab898757000a2","g":"684260cd34e37219","name":"VPD-Creation","info":"","x":750,"y":60,"wires":[]},{"id":"c1e70d8332a5d4e4","type":"join","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"VPDWish","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":410,"y":1460,"wires":[["da916caa4c612842"]]},{"id":"da916caa4c612842","type":"function","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"VPD Handler Array Value","func":"const tolerance = 0.00; // Toleranzwert für die VPD-Anpassung\n\n// Der aktuelle VPD-Wert wird aus dem Payload geholt und in eine Zahl umgewandelt.\nconst currentVPD = parseFloat(msg.payload.currentVPD);\n\n// Ziel-VPD-Bereich wird aus dem Payload geholt.\nconst targetVPDRange = msg.payload.targetVPD;\n\n// Logging der aktuellen VPD und Ziel-VPD-Bereich zur Überprüfung und Debugging.\nnode.warn(`Flower-VPD array between: ${targetVPDRange[0]} and ${targetVPDRange[1]}`);\n\n// Berechnung der prozentualen Abweichung vom Ziel-VPD und Rundung auf ganze Zahlen\nconst percentDifference = Math.round(currentVPD < targetVPDRange[0] \n    ? ((currentVPD - targetVPDRange[0]) / targetVPDRange[0]) * 100 \n    : ((currentVPD - targetVPDRange[1]) / targetVPDRange[1]) * 100);\n\n// Funktion zur Berechnung der notwendigen Anpassungen basierend auf der Differenz zum VPD-Zielbereich.\nfunction calculateAdjustment(currentVPD, targetVPDRange) {\n    // Wenn der aktuelle VPD unter dem minimalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu erhöhen.\n    if (currentVPD < targetVPDRange[0] - tolerance) {\n        node.warn(`Flower-VPD:: ${currentVPD} zu gering. Erhöhe Temp oder verringere die Feuchtigkeit`);\n        node.warn(`Flower % VPD Target: ${percentDifference} %`);\n        return {\n            exhaustSpeed: \"increased\",      // Erhöht die Abluftgeschwindigkeit, um feuchte Luft herauszuziehen\n            humidifier: \"reduced\",          // Schaltet den Luftbefeuchter aus, um Feuchtigkeit zu reduzieren\n            dehumidifier: \"increased\",       // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            heaterFan: \"increased\",         // Schaltet den Beheizer an, um die Feuchtigkeit zu reduzieren und Temp zu erhöhen\n            coolerFan: \"reduced\",           // Schaltet den Kühler an, um die Feuchtigkeit zu erhöhen und Temp zu verringern\n            ventsALL: \"increased\",          // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsTopSpeed: \"increased\",     // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsDownSpeed: \"increased\",    // Erhöht die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"increased\"     // Erhöht die Lichtintensität, um die Temperatur zu steigern (wenn das die Temperatur beeinflusst)\n        };\n        \n    }\n    // Wenn der aktuelle VPD über dem maximalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu senken.\n    else if (currentVPD > targetVPDRange[1] + tolerance) {\n        node.warn(`Flower-VPD: ${currentVPD} zu hoch. Verringere Temp oder erhöhe die Feuchtigkeit`);\n        node.warn(`Flower % VPD Target: ${percentDifference} %`);\n        return {\n            exhaustSpeed: \"reduced\",    // Reduziert die Abluftgeschwindigkeit, hält feuchte Luft im Raum\n            humidifier: \"increased\",    // Schaltet den Luftbefeuchter ein, um Feuchtigkeit zu erhöhen\n            dehumidifier: \"reduced\",    // Schaltet den Luftentfeuchter aus, um Feuchtigkeit zu erhöhen\n            heaterFan: \"reduced\",       // Schaltet den Heizer aus, um die Temperatur zu verringern\n            coolerFan: \"increased\",     // Schaltet den Kühler an, um die Temperatur zu verringern\n            ventsALL: \"reduced\",        // Reduziert die Geschwindigkeit der Belüftung, um mehr feuchte Luft zu halten\n            ventsTopSpeed: \"reduced\",   // Reduziert die Geschwindigkeit der oberen Belüftung\n            ventsDownSpeed: \"reduced\",  // Reduziert die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"reduced\"   // Verringert die Lichtintensität, um die Temperatur zu senken (wenn das die Temperatur beeinflusst)\n        };\n    }\n    // Wenn der VPD im Zielbereich liegt, sind keine Anpassungen erforderlich.\n    node.warn(`Flower-VPD: ${currentVPD} im gewünschten Bereich`);\n    return {\n        exhaustSpeed: \"unchanged\",\n        humidifier: \"unchanged\",\n        dehumidifier: \"unchanged\",    \n        heaterFan: \"unchanged\",        \n        coolerFan: \"unchanged\",        \n        ventsALL: \"unchanged\",       \n        ventsTopSpeed: \"unchanged\",\n        ventsDownSpeed: \"unchanged\",\n        lightIntensity: \"unchanged\"\n    };\n}\n\n// Entscheidungslogik zur Steuerung der Umgebungsbedingungen, nutzt die calculateAdjustment Funktion.\nconst adjustments = calculateAdjustment(currentVPD, targetVPDRange);\n\n// Berechnung der prozentualen Abweichung und Hinzufügen zum Payload\nmsg.payload = {\n    exhaustSpeed: adjustments.exhaustSpeed,\n    humidifier: adjustments.humidifier,\n    dehumidifier: adjustments.dehumidifier,\n    heaterFan: adjustments.heaterFan,\n    coolerFan: adjustments.coolerFan,\n    ventsALL: adjustments.ventsALL,\n    ventsTopSpeed: adjustments.ventsTopSpeed,\n    ventsDownSpeed: adjustments.ventsDownSpeed,\n    lightIntensity: adjustments.lightIntensity,\n    percentDifference: percentDifference\n};\n\nmsg.perfektion = \"VPDActions\";\n\n// Rückgabe des modifizierten Payloads für weitere Verwendung im Flow.\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":670,"y":1460,"wires":[["a2491093273ea707","33ec8a5f3c05962b"]]},{"id":"a2491093273ea707","type":"function","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"Check What Do","func":"let outputs = [null, null, null, null, null, null, null, null, null];\n\nvar percentDifference = msg.payload.percentDifference\n\n// Abluft\nif (msg.payload.exhaustSpeed === \"unchanged\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"increased\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"reduced\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n}\n\n// Humidifier\nif (msg.payload.humidifier === \"unchanged\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"increased\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"reduced\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n}\n\n// Dehumidifier\nif (msg.payload.dehumidifier === \"unchanged\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"increased\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"reduced\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n}\n\n// HeaterFan\nif (msg.payload.heaterFan === \"unchanged\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"increased\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"reduced\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n}\n\n// CoolerFan\nif (msg.payload.coolerFan === \"unchanged\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"increased\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"reduced\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n}\n\n// LightIntensity\nif (msg.payload.lightIntensity === \"unchanged\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"increased\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"reduced\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n}\n\n// VentsALL\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"increased\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"reduced\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n}\n\n// VentsTopSpeed\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"increased\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"reduced\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n}\n\n// VentsDownSpeed\nif (msg.payload.ventsDownSpeed === \"unchanged\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"increased\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"reduced\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n}\n\n\n\nreturn outputs;\n","outputs":9,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":700,"y":1560,"wires":[["d7c32aa823e497df","06e8d2e8f44c934e"],["d7c32aa823e497df","716288056c7fa845"],["d7c32aa823e497df","7e84a5229b144751"],["d7c32aa823e497df","2f23a6ca2ee4971d"],["d7c32aa823e497df","269511b2f57d40dd"],["d7c32aa823e497df","3731cbf407c0b582"],["d7c32aa823e497df","4dc00bfeca4e9f9c"],["d7c32aa823e497df","4dc00bfeca4e9f9c"],["4dc00bfeca4e9f9c"]]},{"id":"33ec8a5f3c05962b","type":"join","z":"87bab898757000a2","g":"2a37f65b72394049","name":"perfection","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"perfection","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"3","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":930,"y":1280,"wires":[["5621782b9ee9ac2e","86b2ec1b10c4c0f3"]]},{"id":"86b2ec1b10c4c0f3","type":"function","z":"87bab898757000a2","g":"2a37f65b72394049","name":"Make Perfekt VPD","func":"const tolerance = 0.025; // Toleranzwert für die VPD-Anpassung\nnode.warn(msg.payload.currentVPD);\n// Berechnet den durchschnittlichen Wert aus zwei Zahlen im Array VPDStageValue und begrenzt das Ergebnis auf zwei Dezimalstellen\nconst averageVPD = (msg.payload.VPDStageValue[0] + msg.payload.VPDStageValue[1]) / 2;\nconst perfectVPD = parseFloat(averageVPD.toFixed(3));\n\nconst currentVPD = parseFloat(msg.payload.currentVPD);\n\n// Build increase base of State % diffrence from Current VPD to avarangeVPD\n// Berechnung der prozentualen Abweichung vom Ziel-VPD\nconst percentDifference = ((currentVPD - perfectVPD) / perfectVPD) * 100;\n\n\n\n// IF not in Range Do Nothing\nif (currentVPD < msg.payload.VPDStageValue[0] || currentVPD > msg.payload.VPDStageValue[1]){\n    return\n}\n// Warnung über die prozentuale Abweichung\nnode.warn(`Perfect-VEGGI %  ${percentDifference.toFixed(2)}%`);\nnode.warn(`Perfect-Veggi-Current VPD: ${currentVPD}`);\nnode.warn(`Perfect-Veggi-Target-VPD: ${perfectVPD} with ${tolerance} Tolerance`);\n\n\n\n// Funktion zur Berechnung der notwendigen Anpassungen basierend auf der Differenz zum VPD-Zielbereich.\nfunction calculateAdjustment(currentVPD, perfectVPD) {\n    // Wenn der aktuelle VPD unter dem minimalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu erhöhen.\n    if (currentVPD < perfectVPD - tolerance) {\n        node.warn(`Perfect-Veggi-VPD:: ${currentVPD} zu Gering Erhöe Temp oder veringere die Feuchtikeit`);\n        return {\n            exhaustSpeed: \"increased\",      // Erhöht die Abluftgeschwindigkeit, um feuchte Luft herauszuziehen\n            humidifier: \"reduced\",          // Schaltet den Luftbefeuchter aus, um Feuchtigkeit zu reduzieren\n            dehumidifier: \"increased\",       // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            heaterFan: \"increased\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Reduzieren und Temp zu erhöhen\n            coolerFan: \"reduced\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Erhöhen und Temp zu veringern\n            ventsTopSpeed: \"increased\",     // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsDownSpeed: \"increased\",    // Erhöht die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"increased\"     // Erhöht die Lichtintensität, um die Temperatur zu steigern (wenn das die Temperatur beeinflusst)\n        };\n        \n    }\n    // Wenn der aktuelle VPD über dem maximalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu senken.\n    else if (currentVPD > perfectVPD + tolerance) {\n        node.warn(`Perfect-Veggi-VPD: ${currentVPD} zu hoch verringere Temp oder erhöe die Feuchtikeit`);\n        return {\n            exhaustSpeed: \"reduced\",    // Reduziert die Abluftgeschwindigkeit, hält feuchte Luft im Raum\n            humidifier: \"increased\",           // Schaltet den Luftbefeuchter ein, um Feuchtigkeit zu erhöhen\n            dehumidifier: \"reduced\",       // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            heaterFan: \"reduced\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Reduzieren und Temp zu erhöhen\n            coolerFan: \"increased\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Erhöhen und Temp zu veringern\n            ventsTopSpeed: \"reduced\",   // Reduziert die Geschwindigkeit der oberen Belüftung\n            ventsDownSpeed: \"reduced\",  // Reduziert die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"reduced\"      // Verringert die Lichtintensität, um die Temperatur zu senken (wenn das die Temperatur beeinflusst)\n        };\n    }\n    // Wenn der VPD im Zielbereich liegt, sind keine Anpassungen erforderlich.\n             node.warn(`Perfect-Veggi-VPD: ${currentVPD} im Gewünschten Bereich`);\n    return {\n        exhaustSpeed: \"unchanged\",\n        humidifier: \"unchanged\",\n        dehumidifier: \"unchanged\",       // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n        heaterFan: \"unchanged\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Reduzieren und Temp zu erhöhen\n        coolerFan: \"unchanged\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Erhöhen und Temp zu veringern\n        ventsTopSpeed: \"unchanged\",\n        ventsDownSpeed: \"unchanged\",\n        lightIntensity: \"unchanged\"\n    };\n}\n\n// Entscheidungslogik zur Steuerung der Umgebungsbedingungen, nutzt die calculateAdjustment Funktion.\nconst adjustments = calculateAdjustment(currentVPD, perfectVPD);\nmsg.payload = {\n    exhaustSpeed: adjustments.exhaustSpeed,\n    humidifier: adjustments.humidifier,\n    dehumidifier: adjustments.dehumidifier,\n    heaterFan: adjustments.heaterFan,\n    coolerFan: adjustments.coolerFan,\n    ventsTopSpeed: adjustments.ventsTopSpeed,\n    ventsDownSpeed: adjustments.ventsDownSpeed,\n    lightIntensity: adjustments.lightIntensity,\n    percentDifference: percentDifference.toFixed(2)\n};\nmsg.perfektion = \"VPDActions\"\n\n// Rückgabe des modifizierten Payloads für weitere Verwendung im Flow.\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1130,"y":1360,"wires":[["7365db5b05b0cdad","55da67fef2acad51"]]},{"id":"d7c32aa823e497df","type":"debug","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"debug 137","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":710,"y":1700,"wires":[]},{"id":"7365db5b05b0cdad","type":"function","z":"87bab898757000a2","g":"2a37f65b72394049","name":"Check What Do","func":"let outputs = [null, null, null, null, null, null, null, null, null];\n\nvar percentDifference = msg.payload.percentDifference\n\n// Abluft\nif (msg.payload.exhaustSpeed === \"unchanged\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"increased\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"reduced\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n}\n\n// Humidifier\nif (msg.payload.humidifier === \"unchanged\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"increased\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"reduced\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n}\n\n// Dehumidifier\nif (msg.payload.dehumidifier === \"unchanged\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"increased\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"reduced\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n}\n\n// HeaterFan\nif (msg.payload.heaterFan === \"unchanged\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"increased\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"reduced\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n}\n\n// CoolerFan\nif (msg.payload.coolerFan === \"unchanged\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"increased\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"reduced\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n}\n\n// LightIntensity\nif (msg.payload.lightIntensity === \"unchanged\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"increased\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"reduced\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n}\n\n// VentsALL\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"increased\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"reduced\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n}\n\n// VentsTopSpeed\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"increased\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"reduced\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n}\n\n// VentsDownSpeed\nif (msg.payload.ventsDownSpeed === \"unchanged\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"increased\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"reduced\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n}\n\n\n\nreturn outputs;\n","outputs":9,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1160,"y":1460,"wires":[["06e8d2e8f44c934e","7b5ea2872188430d"],["716288056c7fa845","7b5ea2872188430d"],["7b5ea2872188430d","7e84a5229b144751"],["7b5ea2872188430d","2f23a6ca2ee4971d"],["7b5ea2872188430d","269511b2f57d40dd"],["7b5ea2872188430d","3731cbf407c0b582"],["7b5ea2872188430d","4dc00bfeca4e9f9c"],["7b5ea2872188430d","4dc00bfeca4e9f9c"],["4dc00bfeca4e9f9c","7b5ea2872188430d"]]},{"id":"3dc9161dfd6e5534","type":"function","z":"87bab898757000a2","g":"4befb05d0b17e374","name":"Exhaust Setup","func":"// Hilfsfunktion zur Überprüfung, ob ein Wert numerisch ist\nconst isNumeric = (value) => {\n    return !isNaN(parseFloat(value)) && isFinite(value);\n};\n\n// Funktion zur Bestimmung des dutyCycle-Werts\nconst findDutyCycle = (exhaustArray) => {\n    if (exhaustArray.length === 0) {\n        return null; // Keine Werte zu verarbeiten, wenn das Array leer ist\n    }\n    for (let i = 0; i < exhaustArray.length; i++) {\n        if (isNumeric(exhaustArray[i].value)) {\n            return parseInt(exhaustArray[i].value, 10);\n        }\n    }\n    return null; // Falls kein numerischer Wert gefunden wurde\n};\n\nlet outputs = [null, null, null, null]; // Array für vier Ausgänge\n\n// Zustand der Abluft und Geschwindigkeit aus der Payload extrahieren\nconst exhaustSpeed = msg.payload.exhaustSet.value; // Anpassung hier\nlet exhaustState = 'off'; // Standardwert setzen, falls kein Zustand gefunden wird\nif (msg.payload.Exhaust && msg.payload.Exhaust.length > 0) {\n    const exhaustSwitch = msg.payload.Exhaust.find(e => e.entity_id && e.entity_id.toLowerCase().includes(\"switch\"));\n    if (exhaustSwitch && exhaustSwitch.value) {\n        exhaustState = exhaustSwitch.value;\n    }\n}\n\nconst dutyCycle = findDutyCycle(msg.payload.Exhaust) || 0 ;\n\n// Prüfen, ob ein dutyCycle vorhanden ist\nif (dutyCycle === null) {\n    return outputs; // Kein dutyCycle gefunden, keine Aktion erforderlich\n}\n\nconst percentDifference = parseFloat(msg.payload.exhaustSet.percentDifference);\nlet newDutyCycle = dutyCycle;\n\n// Berechnung des neuen Duty Cycle basierend auf der prozentualen Abweichung\nif (percentDifference !== 0) {\n    if (percentDifference < 0) {\n        // Wenn der Wert negativ ist, erhöhen wir den Duty Cycle\n        newDutyCycle = dutyCycle + Math.abs(percentDifference);\n    } else {\n        // Wenn der Wert positiv ist, verringern wir den Duty Cycle\n        newDutyCycle = dutyCycle - percentDifference;\n    }\n\n    // Stellen Sie sicher, dass der neue Duty Cycle innerhalb der Grenzen liegt\n    newDutyCycle = Math.min(95, Math.max(10, Math.round(newDutyCycle)));\n}\n\n// Abluft starten auf dem ersten Ausgang, wenn sie aus ist und erhöht werden muss\nif (exhaustSpeed === \"increased\" && exhaustState === \"off\") {\n    outputs[0] = { payload: \"Starte Abluft\", topic: \"Start\" };\n    return outputs;\n}\n\n// Abluft-Geschwindigkeit erhöhen, wenn sie bereits eingeschaltet ist\nif (exhaustSpeed === \"increased\" && exhaustState === \"on\") {\n    outputs[2] = { payload: newDutyCycle.toString(), topic: \"Increase\" };\n    return outputs;\n}\n\n// Abluft stoppen auf dem zweiten Ausgang, wenn die Geschwindigkeit reduziert wird und der Duty Cycle sehr niedrig ist\nif (exhaustSpeed === \"reduced\" && exhaustState === \"on\" && newDutyCycle <= 10) {\n    outputs[1] = { payload: \"Stoppe Abluft\", topic: \"Stop\" };\n    return outputs;\n} else if (exhaustSpeed === \"reduced\" && exhaustState === \"on\") {\n    outputs[2] = { payload: newDutyCycle.toString(), topic: \"Decrease\" };\n    return outputs;\n}\n\n// Warnung ausgeben, wenn versucht wird, die Abluftgeschwindigkeit zu reduzieren, obwohl sie bereits aus ist\nif (exhaustSpeed === \"reduced\" && exhaustState === \"off\") {\n    outputs[1] = { payload: \"Abluft bereits gestoppt, kann nicht weiter reduziert werden\", topic: \"AlreadyStopped\" };\n    return outputs;\n}\n\n// Nichts tun, wenn keine Änderung erforderlich ist\nif (exhaustSpeed === \"unchanged\") {\n    outputs[3] = { payload: \"Abluft unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n    return outputs;\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1900,"y":1140,"wires":[["e1181ae60d3e758c","8c80439016556aa3"],["fe43d7cf9ec8a24d","8c80439016556aa3"],["5e18db466a3e6872","8c80439016556aa3"],["8c80439016556aa3"]]},{"id":"98e42d2ad5e5912a","type":"http request","z":"87bab898757000a2","g":"4befb05d0b17e374","name":"DutyPostChange","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.253:5533/air/ctrl","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":2290,"y":1160,"wires":[["c5cca71c144d6253"]]},{"id":"5e18db466a3e6872","type":"function","z":"87bab898757000a2","g":"4befb05d0b17e374","name":"DutyChanger","func":"\nconst NewDuty = msg.payload\n\nmsg.payload = { \"newDuty\": NewDuty}\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":2110,"y":1160,"wires":[["98e42d2ad5e5912a","c5cca71c144d6253"]]},{"id":"06e8d2e8f44c934e","type":"join","z":"87bab898757000a2","g":"4befb05d0b17e374","name":"exhasutData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1820,"y":1080,"wires":[["3dc9161dfd6e5534","a141a10ad2f010bb"]]},{"id":"9d125ce221658824","type":"link out","z":"87bab898757000a2","name":"ExhaustData","mode":"link","links":["1aeeeda08043bd54","22de82672fafd826","7c5a646f225f4ab1","eb2c9d58dd38f1d2","4ad596727315ba0c","e705047b1a410ff1"],"x":635,"y":720,"wires":[]},{"id":"22de82672fafd826","type":"link in","z":"87bab898757000a2","g":"4befb05d0b17e374","name":"ExhaustData","links":["9d125ce221658824"],"x":1765,"y":1040,"wires":[["06e8d2e8f44c934e"]]},{"id":"79bde8bec83cb56a","type":"link out","z":"87bab898757000a2","name":"HumidifierData","mode":"link","links":["9c7dd5cc1ab3a56f","cd9a328a814e5484","e3b89882bbab368d","f37287fdb9a1391c","c6952828beed3687","5250abb0abece036"],"x":635,"y":760,"wires":[]},{"id":"bc1b257f3ef85179","type":"function","z":"87bab898757000a2","g":"7b4f8e1927d324fc","name":"BefeuchterSetup","func":"let outputs = [null, null, null];\n\nlet humidifierState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.humidifier.length; i++) {\n    if (msg.payload.humidifier[i].entity_id.includes('humidifier')) {\n        humidifierState = msg.payload.humidifier[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.humidifierSet.value === \"increased\" && humidifierState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.humidifierSet.value === \"reduced\" && humidifierState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.humidifierSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Befeuchter unverändert, keine Aktion erforderlich\",data:msg.payload, topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2070,"y":1340,"wires":[["ce9c357652d8fb35"],["aa5773a7762ec6a1"],["d627c246df74b5d7","202dcc5ae6d834d0"],[]]},{"id":"716288056c7fa845","type":"join","z":"87bab898757000a2","g":"7b4f8e1927d324fc","name":"HumidityData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1820,"y":1340,"wires":[["bc1b257f3ef85179","9c1bbc9685dc858c"]]},{"id":"e3b89882bbab368d","type":"link in","z":"87bab898757000a2","g":"7b4f8e1927d324fc","name":"HumidifierData","links":["79bde8bec83cb56a"],"x":1755,"y":1300,"wires":[["716288056c7fa845"]]},{"id":"bab58a1e055f1530","type":"link in","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"VPD-Perfektion","links":["e26a880fb2d24667"],"x":85,"y":2760,"wires":[["718bc098c204f567"]]},{"id":"fb64d5b83ef0f886","type":"function","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"VPD State Values","func":"const plantStages = {\n    Germination: [0.42, 0.78], // Optimaler VPD-Bereich für Keimung bei 25-30°C\n    Clones: [0.42, 0.78],      // Optimaler VPD-Bereich für Klone bei 25-30°C\n    EarlyVeg: [0.55, 0.85],    // Optimaler VPD-Bereich für frühe Vegetation bei 20-25°C\n    MidVeg: [0.85, 1.1],      // Optimaler VPD-Bereich für mittlere Vegetation bei 20-25°C\n    LateVeg: [0.85, 1.2],     // Optimaler VPD-Bereich für späte Vegetation bei 20-25°C\n    EarlyFlower: [1, 1.25], // Optimaler VPD-Bereich für frühe Blüte bei 20-25°C\n    MidFlower: [1.1, 1.4],   // Optimaler VPD-Bereich für mittlere Blüte bei 20-25°C\n    LateFlower: [1.2, 1.6],  // Optimaler VPD-Bereich für späte Blüte bei 20-25°C\n};\n\n\n// Beispiel, wie msg.payload gesetzt wird\n// msg.payload = \"LateVeg\"; // Kommentieren Sie diese Zeile aus, um den tatsächlichen msg.payload zu verwenden\n\n// Prüfen, ob das Wachstumsstadium im plantStages-Objekt vorhanden ist\nif (plantStages.hasOwnProperty(msg.payload)) {\n    // Setzen des VPD-Wertes aus dem plantStages-Objekt\n    msg.payload = plantStages[msg.payload];\n} else {\n    // Fehlermeldung, wenn das Wachstumsstadium nicht gefunden wurde\n    msg.payload = \"Unbekanntes Wachstumsstadium\";\n\n}\nmsg.perfektion = \"VPDStageValue\"\ndelete msg.data;\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":450,"y":2760,"wires":[["cf64ead2f0f9c53f"]]},{"id":"718bc098c204f567","type":"api-current-state","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"ModeSelection","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"select.flowertentmodes","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"targetVPD","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":200,"y":2760,"wires":[["fb64d5b83ef0f886"]]},{"id":"1fc52b3283aabd93","type":"poll-state","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"currentVPD","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","updateInterval":"30","updateIntervalType":"num","updateIntervalUnits":"seconds","outputInitially":true,"outputOnChanged":true,"entityId":"sensor.vpd_flower","stateType":"num","ifState":"","ifStateType":"num","ifStateOperator":"is","outputs":1,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"currentVPD","valueType":"str"}],"x":230,"y":2900,"wires":[["cf64ead2f0f9c53f"]]},{"id":"cf64ead2f0f9c53f","type":"join","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"VPDWish","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":410,"y":2840,"wires":[["7856db1b9077bca0"]]},{"id":"7856db1b9077bca0","type":"function","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"VPD Handler Array Value","func":"const tolerance = 0.00; // Toleranzwert für die VPD-Anpassung\n\n// Der aktuelle VPD-Wert wird aus dem Payload geholt und in eine Zahl umgewandelt.\nconst currentVPD = parseFloat(msg.payload.currentVPD);\n\n// Ziel-VPD-Bereich wird aus dem Payload geholt.\nconst targetVPDRange = msg.payload.targetVPD;\n\n// Logging der aktuellen VPD und Ziel-VPD-Bereich zur Überprüfung und Debugging.\nnode.warn(`Flower-VPD array between: ${targetVPDRange[0]} and ${targetVPDRange[1]}`);\n\n// Berechnung der prozentualen Abweichung vom Ziel-VPD und Rundung auf ganze Zahlen\nconst percentDifference = Math.round(currentVPD < targetVPDRange[0] \n    ? ((currentVPD - targetVPDRange[0]) / targetVPDRange[0]) * 100 \n    : ((currentVPD - targetVPDRange[1]) / targetVPDRange[1]) * 100);\n\n// Funktion zur Berechnung der notwendigen Anpassungen basierend auf der Differenz zum VPD-Zielbereich.\nfunction calculateAdjustment(currentVPD, targetVPDRange) {\n    // Wenn der aktuelle VPD unter dem minimalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu erhöhen.\n    if (currentVPD < targetVPDRange[0] - tolerance) {\n        node.warn(`Flower-VPD:: ${currentVPD} zu gering. Erhöhe Temp oder verringere die Feuchtigkeit`);\n        node.warn(`Flower % VPD Target: ${percentDifference} %`);\n        return {\n            exhaustSpeed: \"increased\",      // Erhöht die Abluftgeschwindigkeit, um feuchte Luft herauszuziehen\n            humidifier: \"reduced\",          // Schaltet den Luftbefeuchter aus, um Feuchtigkeit zu reduzieren\n            dehumidifier: \"increased\",       // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            heaterFan: \"increased\",         // Schaltet den Beheizer an, um die Feuchtigkeit zu reduzieren und Temp zu erhöhen\n            coolerFan: \"reduced\",           // Schaltet den Kühler an, um die Feuchtigkeit zu erhöhen und Temp zu verringern\n            ventsALL: \"increased\",          // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsTopSpeed: \"increased\",     // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsDownSpeed: \"increased\",    // Erhöht die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"increased\"     // Erhöht die Lichtintensität, um die Temperatur zu steigern (wenn das die Temperatur beeinflusst)\n        };\n        \n    }\n    // Wenn der aktuelle VPD über dem maximalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu senken.\n    else if (currentVPD > targetVPDRange[1] + tolerance) {\n        node.warn(`Flower-VPD: ${currentVPD} zu hoch. Verringere Temp oder erhöhe die Feuchtigkeit`);\n        node.warn(`Flower % VPD Target: ${percentDifference} %`);\n        return {\n            exhaustSpeed: \"reduced\",    // Reduziert die Abluftgeschwindigkeit, hält feuchte Luft im Raum\n            humidifier: \"increased\",    // Schaltet den Luftbefeuchter ein, um Feuchtigkeit zu erhöhen\n            dehumidifier: \"reduced\",    // Schaltet den Luftentfeuchter aus, um Feuchtigkeit zu erhöhen\n            heaterFan: \"reduced\",       // Schaltet den Heizer aus, um die Temperatur zu verringern\n            coolerFan: \"increased\",     // Schaltet den Kühler an, um die Temperatur zu verringern\n            ventsALL: \"reduced\",        // Reduziert die Geschwindigkeit der Belüftung, um mehr feuchte Luft zu halten\n            ventsTopSpeed: \"reduced\",   // Reduziert die Geschwindigkeit der oberen Belüftung\n            ventsDownSpeed: \"reduced\",  // Reduziert die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"reduced\"   // Verringert die Lichtintensität, um die Temperatur zu senken (wenn das die Temperatur beeinflusst)\n        };\n    }\n    // Wenn der VPD im Zielbereich liegt, sind keine Anpassungen erforderlich.\n    node.warn(`Flower-VPD: ${currentVPD} im gewünschten Bereich`);\n    return {\n        exhaustSpeed: \"unchanged\",\n        humidifier: \"unchanged\",\n        dehumidifier: \"unchanged\",    \n        heaterFan: \"unchanged\",        \n        coolerFan: \"unchanged\",        \n        ventsALL: \"unchanged\",       \n        ventsTopSpeed: \"unchanged\",\n        ventsDownSpeed: \"unchanged\",\n        lightIntensity: \"unchanged\"\n    };\n}\n\n// Entscheidungslogik zur Steuerung der Umgebungsbedingungen, nutzt die calculateAdjustment Funktion.\nconst adjustments = calculateAdjustment(currentVPD, targetVPDRange);\n\n// Berechnung der prozentualen Abweichung und Hinzufügen zum Payload\nmsg.payload = {\n    exhaustSpeed: adjustments.exhaustSpeed,\n    humidifier: adjustments.humidifier,\n    dehumidifier: adjustments.dehumidifier,\n    heaterFan: adjustments.heaterFan,\n    coolerFan: adjustments.coolerFan,\n    ventsALL: adjustments.ventsALL,\n    ventsTopSpeed: adjustments.ventsTopSpeed,\n    ventsDownSpeed: adjustments.ventsDownSpeed,\n    lightIntensity: adjustments.lightIntensity,\n    percentDifference: percentDifference\n};\n\nmsg.perfektion = \"VPDActions\";\n\n// Rückgabe des modifizierten Payloads für weitere Verwendung im Flow.\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":610,"y":2800,"wires":[["5e2b8fb494e4ebfe"]]},{"id":"5e2b8fb494e4ebfe","type":"function","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"Check What Do","func":"let outputs = [null, null, null, null, null, null, null, null, null];\n\nvar percentDifference = msg.payload.percentDifference\n\n// Abluft\nif (msg.payload.exhaustSpeed === \"unchanged\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"increased\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"reduced\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n}\n\n// Humidifier\nif (msg.payload.humidifier === \"unchanged\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"increased\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"reduced\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n}\n\n// Dehumidifier\nif (msg.payload.dehumidifier === \"unchanged\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"increased\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"reduced\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n}\n\n// HeaterFan\nif (msg.payload.heaterFan === \"unchanged\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"increased\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"reduced\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n}\n\n// CoolerFan\nif (msg.payload.coolerFan === \"unchanged\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"increased\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"reduced\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n}\n\n// LightIntensity\nif (msg.payload.lightIntensity === \"unchanged\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"increased\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"reduced\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n}\n\n// VentsALL\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"increased\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"reduced\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n}\n\n// VentsTopSpeed\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"increased\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"reduced\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n}\n\n// VentsDownSpeed\nif (msg.payload.ventsDownSpeed === \"unchanged\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"increased\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"reduced\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n}\n\n\n\nreturn outputs;\n","outputs":9,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":580,"y":2900,"wires":[["c621846474f32add","b450272b0a6bfb38"],["c621846474f32add","ce80e74b4f0c3169"],["c621846474f32add","5bcd88519979bcf2"],["c621846474f32add","1edf2bc707797373"],["c621846474f32add","1ec492ebf534af74"],["c621846474f32add","47ffae24b00b2672"],["c621846474f32add","625af5ab649384e9"],["625af5ab649384e9"],["625af5ab649384e9"]]},{"id":"c621846474f32add","type":"debug","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"debug 143","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":620,"y":3000,"wires":[]},{"id":"2e49f2a877dc0908","type":"function","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"Check What Do","func":"let outputs = [null, null, null, null, null, null, null, null, null];\n\nvar percentDifference = msg.payload.percentDifference\n\n// Abluft\nif (msg.payload.exhaustSpeed === \"unchanged\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"increased\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"reduced\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n}\n\n// Humidifier\nif (msg.payload.humidifier === \"unchanged\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"increased\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"reduced\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n}\n\n// Dehumidifier\nif (msg.payload.dehumidifier === \"unchanged\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"increased\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"reduced\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n}\n\n// HeaterFan\nif (msg.payload.heaterFan === \"unchanged\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"increased\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"reduced\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n}\n\n// CoolerFan\nif (msg.payload.coolerFan === \"unchanged\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"increased\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"reduced\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n}\n\n// LightIntensity\nif (msg.payload.lightIntensity === \"unchanged\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"increased\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"reduced\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n}\n\n// VentsALL\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"increased\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"reduced\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n}\n\n// VentsTopSpeed\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"increased\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"reduced\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n}\n\n// VentsDownSpeed\nif (msg.payload.ventsDownSpeed === \"unchanged\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"increased\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"reduced\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n}\n\n\n\nreturn outputs;\n","outputs":9,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":420,"y":3900,"wires":[["80e2dd98aaacafeb","17d2dff4e6e6b9d5"],["80e2dd98aaacafeb","bfbd9b30c217d194"],["80e2dd98aaacafeb","0550e27bc4f11b6f"],["80e2dd98aaacafeb","26cedfa8d1203037"],["80e2dd98aaacafeb","faf00348be972d39"],["80e2dd98aaacafeb","d5ef25611722e6a9"],["80e2dd98aaacafeb","f46b666e01621da8"],["f46b666e01621da8"],["f46b666e01621da8"]]},{"id":"80e2dd98aaacafeb","type":"debug","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"debug 144","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":650,"y":4000,"wires":[]},{"id":"5621782b9ee9ac2e","type":"debug","z":"87bab898757000a2","g":"2a37f65b72394049","name":"debug 148","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":930,"y":1320,"wires":[]},{"id":"b5a693bcd77d4f80","type":"function","z":"87bab898757000a2","g":"684260cd34e37219","name":"Calc-Dewpoint","func":"// Funktion zur Berechnung des Taupunkts\nconst calculateDewPoint = (temperature, humidity) => {\n    const temp = parseFloat(temperature);\n    const hum = parseFloat(humidity);\n\n    if (isNaN(temp) || isNaN(hum)) {\n        return \"unavailable\";\n    }\n\n    const dewPoint = temp - ((100 - hum) / 5);\n    return parseFloat(dewPoint.toFixed(3));\n};\n\n// Beispielinput\nconst inputData = msg.payload;\n\n// Taupunkt berechnen\nconst temperature = parseFloat(inputData.AvgTemp);\nconst humidity = parseFloat(inputData.AvgHum);\nconst dewPoint = calculateDewPoint(temperature, humidity);\n\n// Taupunkt als Zahl zurückgeben\nmsg.payload = dewPoint;\nreturn msg\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1440,"y":200,"wires":[["54b1d8a63e1902a7"]]},{"id":"8a884fe39e4f1e3c","type":"join","z":"87bab898757000a2","g":"684260cd34e37219","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1290,"y":200,"wires":[["b5a693bcd77d4f80"]]},{"id":"54b1d8a63e1902a7","type":"ha-sensor","z":"87bab898757000a2","g":"684260cd34e37219","name":"FlowerAVGDewPoint","entityConfig":"0741c8a3236b491c","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[{"property":"topic","propertyType":"msg","value":"DryTentDewPoint","valueType":"str"}],"x":1380,"y":240,"wires":[[]]},{"id":"47249219e55b6920","type":"join","z":"87bab898757000a2","g":"684260cd34e37219","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1030,"y":140,"wires":[["97fb7c5e5e3f9dee"]]},{"id":"3d4627f3225a086b","type":"link in","z":"87bab898757000a2","g":"684260cd34e37219","name":"link in 9","links":["f0449f704d2f7c8a"],"x":875,"y":60,"wires":[["d51dc8176bf8690e"]]},{"id":"d51dc8176bf8690e","type":"function","z":"87bab898757000a2","g":"684260cd34e37219","name":"Select","func":"let outputs = [null, null];\n\nvar leafMode = msg.payload.GlobalLeafSet;\nvar leafOffSet = msg.payload.LeafOffset;\nvar flowerLeafOffset = msg.payload.FlowerLeafOffset;\nvar veggiLeafOffset = msg.payload.VeggiLeafOffset;\nvar groomLeafOffset = msg.payload.GRoomLeafOffset;\n\n// Logic to set new offset based on leaf mode\nif (leafMode === \"Default\") {\n    outputs[0] = { payload: leafOffSet, topic: \"LeafOffSet\" };\n} else if (leafMode === \"Custom\") {\n    outputs[1] = { payload: veggiLeafOffset, topic: \"LeafOffSet\" };\n}\n\nreturn outputs;  // Return the modified outputs array\n","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":910,"y":120,"wires":[["47249219e55b6920"],["47249219e55b6920"]]},{"id":"a96ccda7addd1614","type":"link out","z":"87bab898757000a2","g":"684260cd34e37219","name":"CropSteering","mode":"link","links":["96ad7357a215e3d7"],"x":1845,"y":260,"wires":[]},{"id":"96ad7357a215e3d7","type":"link in","z":"87bab898757000a2","name":"link in 11","links":["a96ccda7addd1614"],"x":155,"y":4820,"wires":[[]]},{"id":"e1181ae60d3e758c","type":"link out","z":"87bab898757000a2","g":"4befb05d0b17e374","name":"ExhaustFlowerON","mode":"link","links":["55acda8e6f953bc1"],"x":2045,"y":1080,"wires":[]},{"id":"fe43d7cf9ec8a24d","type":"link out","z":"87bab898757000a2","g":"4befb05d0b17e374","name":"ExhaustFlowerOFF","mode":"link","links":["23d01364d3856db1"],"x":2045,"y":1120,"wires":[]},{"id":"7b5ea2872188430d","type":"debug","z":"87bab898757000a2","g":"2a37f65b72394049","name":"debug 174","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1150,"y":1540,"wires":[]},{"id":"e878287b07f180fd","type":"debug","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"debug 177","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":610,"y":3760,"wires":[]},{"id":"11736a563bfcb495","type":"poll-state","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"currentVPD","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","updateInterval":"30","updateIntervalType":"num","updateIntervalUnits":"seconds","outputInitially":true,"outputOnChanged":true,"entityId":"sensor.vpd_flower","stateType":"num","ifState":"","ifStateType":"num","ifStateOperator":"is","outputs":1,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"currentVPD","valueType":"str"},{"property":"perfection","propertyType":"msg","value":"currentVPD","valueType":"str"}],"x":250,"y":1580,"wires":[["c1e70d8332a5d4e4","33ec8a5f3c05962b"]]},{"id":"78d116b1f17e53a9","type":"link in","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"VPD-Perfektion","links":["464b23e70cf844c8"],"x":85,"y":3720,"wires":[["e6b2c630db705db7"]]},{"id":"cb901688be6c0de1","type":"poll-state","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"currentVPD","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","updateInterval":"30","updateIntervalType":"num","updateIntervalUnits":"seconds","outputInitially":true,"outputOnChanged":true,"entityId":"sensor.vpd_flower","stateType":"num","ifState":"","ifStateType":"num","ifStateOperator":"is","outputs":1,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"currentVPD","valueType":"str"}],"x":170,"y":3860,"wires":[["546819f8bcf743d9"]]},{"id":"546819f8bcf743d9","type":"join","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"VPDWish","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":380,"y":3800,"wires":[["7b3614a53b99b56b","a7faaa78e3ab3a02"]]},{"id":"7b3614a53b99b56b","type":"function","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"VPD Handler Array Value","func":"const tolerance = 0.00; // Toleranzwert für die VPD-Anpassung\n\n// Der aktuelle VPD-Wert wird aus dem Payload geholt und in eine Zahl umgewandelt.\nconst currentVPD = parseFloat(msg.payload.currentVPD);\n\n// Ziel-VPD-Bereich wird aus dem Payload geholt.\nconst targetVPDRange = msg.payload.targetVPD;\n\n// Logging der aktuellen VPD und Ziel-VPD-Bereich zur Überprüfung und Debugging.\nnode.warn(`Flower-VPD-Target: ${targetVPDRange}`);\n\n// Funktion zur Berechnung der notwendigen Anpassungen basierend auf der Differenz zum VPD-Zielbereich.\nfunction calculateAdjustment(currentVPD, targetVPDRange) {\n    // Wenn der aktuelle VPD unter dem minimalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu erhöhen.\n    if (currentVPD < targetVPDRange - tolerance) {\n        node.warn(`Flower-VPD: ${currentVPD} zu gering. Erhöhe Temp oder verringere die Feuchtigkeit.`);\n        return {\n            exhaustSpeed: \"increased\",      // Erhöht die Abluftgeschwindigkeit, um feuchte Luft herauszuziehen\n            humidifier: \"reduced\",          // Schaltet den Luftbefeuchter aus, um Feuchtigkeit zu reduzieren\n            dehumidifier: \"increased\",      // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            heaterFan: \"increased\",         // Schaltet den Beheizer an, um die Feuchtigkeit zu reduzieren und Temp zu erhöhen\n            coolerFan: \"reduced\",           // Schaltet den Beheizer an, um die Feuchtigkeit zu erhöhen und Temp zu verringern\n            ventsALL: \"increased\",          // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsTopSpeed: \"increased\",     // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsDownSpeed: \"increased\",    // Erhöht die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"increased\"     // Erhöht die Lichtintensität, um die Temperatur zu steigern (wenn das die Temperatur beeinflusst)\n        };\n    }\n    // Wenn der aktuelle VPD über dem maximalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu senken.\n    else if (currentVPD > targetVPDRange + tolerance) {\n        node.warn(`Flower-VPD: ${currentVPD} zu hoch. Verringere Temp oder erhöhe die Feuchtigkeit.`);\n        return {\n            exhaustSpeed: \"reduced\",    // Reduziert die Abluftgeschwindigkeit, hält feuchte Luft im Raum\n            humidifier: \"increased\",    // Schaltet den Luftbefeuchter ein, um Feuchtigkeit zu erhöhen\n            dehumidifier: \"reduced\",    // Schaltet den Luftentfeuchter aus, um Feuchtigkeit zu erhöhen\n            heaterFan: \"reduced\",       // Schaltet den Beheizer aus, um die Feuchtigkeit zu erhöhen und Temp zu senken\n            coolerFan: \"increased\",     // Schaltet den Kühler an, um die Feuchtigkeit zu erhöhen und Temp zu verringern\n            ventsALL: \"reduced\",        // Reduziert die Geschwindigkeit der Belüftung, um mehr feuchte Luft zu halten\n            ventsTopSpeed: \"reduced\",   // Reduziert die Geschwindigkeit der oberen Belüftung\n            ventsDownSpeed: \"reduced\",  // Reduziert die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"reduced\"   // Verringert die Lichtintensität, um die Temperatur zu senken (wenn das die Temperatur beeinflusst)\n        };\n    }\n    // Wenn der VPD im Zielbereich liegt, sind keine Anpassungen erforderlich.\n    node.warn(`Flower-VPD: ${currentVPD} im gewünschten Bereich.`);\n    return {\n        exhaustSpeed: \"unchanged\",\n        humidifier: \"unchanged\",\n        dehumidifier: \"unchanged\",\n        heaterFan: \"unchanged\",\n        coolerFan: \"unchanged\",\n        ventsALL: \"unchanged\",\n        ventsTopSpeed: \"unchanged\",\n        ventsDownSpeed: \"unchanged\",\n        lightIntensity: \"unchanged\"\n    };\n}\n\n// Funktion zur Berechnung der prozentualen Abweichung\nfunction calculatePercentDifference(currentVPD, targetVPD) {\n    return ((currentVPD - targetVPD) / targetVPD) * 100;\n}\n\n// Entscheidungslogik zur Steuerung der Umgebungsbedingungen, nutzt die calculateAdjustment Funktion.\nconst adjustments = calculateAdjustment(currentVPD, targetVPDRange);\nconst percentDifference = calculatePercentDifference(currentVPD, targetVPDRange);\n\nmsg.payload = {\n    exhaustSpeed: adjustments.exhaustSpeed,\n    humidifier: adjustments.humidifier,\n    dehumidifier: adjustments.dehumidifier,\n    heaterFan: adjustments.heaterFan,\n    coolerFan: adjustments.coolerFan,\n    ventsALL: adjustments.ventsALL,\n    ventsTopSpeed: adjustments.ventsTopSpeed,\n    ventsDownSpeed: adjustments.ventsDownSpeed,\n    lightIntensity: adjustments.lightIntensity,\n    percentDifference: percentDifference.toFixed(2) // Prozentuale Abweichung auf 2 Dezimalstellen gerundet\n};\n\nmsg.perfektion = \"VPDActions\";\n// Rückgabe des modifizierten Payloads für weitere Verwendung im Flow.\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":600,"y":3800,"wires":[["2e49f2a877dc0908","e878287b07f180fd"]]},{"id":"e6b2c630db705db7","type":"api-current-state","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"ModeSelection","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"number.flowertarget_vpd","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"targetVPD","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":220,"y":3720,"wires":[["546819f8bcf743d9"]]},{"id":"a7faaa78e3ab3a02","type":"debug","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"debug 176","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":460,"y":3720,"wires":[]},{"id":"c5cca71c144d6253","type":"debug","z":"87bab898757000a2","g":"4befb05d0b17e374","name":"debug 180","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2230,"y":1120,"wires":[]},{"id":"6cabaff09a9fa85a","type":"ha-sensor","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerCO2","entityConfig":"4c5909d829f0f2cf","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1110,"y":640,"wires":[[]]},{"id":"8ba8b97980f98d4e","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"CO2-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Finden des Objekts, das eine der gewünschten Teilzeichenfolgen im entity_id enthält\nconst co2Object = sensors.find(sensor => \n    sensor.entity_id.includes(\"carbon\") || \n    sensor.entity_id.includes(\"carbondioxide\")\n);\n\n// Extrahieren des Wertes, wenn das Objekt gefunden wurde, sonst null setzen\nconst co2Value = co2Object ? co2Object.value : null;\n\n// Ausgabe des CO2-Wertes zur Überprüfung\n// node.warn(`CO2-Wert: ${co2Value}`);\n\n// Optional: Speichern des CO2-Wertes in msg.co2Value oder einem anderen Feld zur weiteren Verwendung\nmsg.payload = co2Value;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":820,"y":640,"wires":[["6cabaff09a9fa85a"]]},{"id":"24cec488a394f147","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"Pressure-Get","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Luftdruck-Wertes\nfunction findPressureValue(sensors) {\n    const pressureObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"pressure\") ||\n        sensor.entity_id.includes(\"barometer\") ||\n        sensor.entity_id.includes(\"luftdruck\")\n    );\n    return pressureObject ? pressureObject.value : null;\n}\n\n// Finden des Luftdruck-Wertes\nconst pressureValue = findPressureValue(sensors);\n\n// Ausgabe des Luftdruck-Wertes zur Überprüfung\n// node.warn(`Luftdruck-Wert: ${pressureValue}`);\n\n// Optional: Speichern des Luftdruck-Wertes in msg zur weiteren Verwendung\nmsg.payload = pressureValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":830,"y":580,"wires":[["3dbeae382f71f092"]]},{"id":"cdabbf668a463011","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"Moisture-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Moisture-Wertes\nfunction findMoistureValue(sensors) {\n    const moistureObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"moisture\") ||\n        sensor.entity_id.includes(\"humidity\") ||\n        sensor.entity_id.includes(\"wetness\")\n    );\n    return moistureObject ? moistureObject.value : null;\n}\n\n// Finden des Moisture-Wertes\nconst moistureValue = findMoistureValue(sensors);\n\n// Ausgabe des Moisture-Wertes zur Überprüfung\n// node.warn(`Moisture-Wert: ${moistureValue}`);\n\n// Optional: Speichern des Moisture-Wertes in msg zur weiteren Verwendung\nmsg.payload = moistureValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":840,"y":400,"wires":[["ea181fad67e4609d"]]},{"id":"7b1434a24c5c2d0a","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"SOIL-EC-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des EC- oder Conductivity-Wertes\nfunction findECValue(sensors) {\n    const ecObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"ec\") ||\n        sensor.entity_id.includes(\"conductivity\")\n    );\n    return ecObject ? ecObject.value : null;\n}\n\n// Finden des EC- oder Conductivity-Wertes\nconst ecValue = findECValue(sensors);\n\n// Ausgabe des EC- oder Conductivity-Wertes zur Überprüfung\n// node.warn(`EC-Wert: ${ecValue}`);\n\n// Optional: Speichern des EC- oder Conductivity-Wertes in msg zur weiteren Verwendung\nmsg.payload = ecValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":840,"y":520,"wires":[["6077fa1071b64972"]]},{"id":"6dc8f908895b8048","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"PowerConsum-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Stromverbrauch-Wertes\nfunction findPowerConsumptionValue(sensors) {\n    const powerConsumptionObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"energy_power\") || \n        sensor.entity_id.includes(\"consumption\") || \n        sensor.entity_id.includes(\"watt\") || \n        sensor.entity_id.includes(\"electricity\")\n    );\n    return powerConsumptionObject ? powerConsumptionObject.value : null;\n}\n\n// Finden des Stromverbrauch-Wertes\nconst powerConsumptionValue = findPowerConsumptionValue(sensors);\n\n// Ausgabe des Stromverbrauch-Wertes zur Überprüfung\n// node.warn(`Stromverbrauch-Wert: ${powerConsumptionValue}`);\n\n// Optional: Speichern des Stromverbrauch-Wertes in msg zur weiteren Verwendung\nmsg.payload = powerConsumptionValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":860,"y":820,"wires":[["34b3481968acc628"]]},{"id":"24a35980a67b1b86","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"Battery-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Batterie-Wertes\nfunction findBatteryValue(sensors) {\n    const batteryObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"battery\") || \n        sensor.entity_id.includes(\"batt\")\n    );\n    return batteryObject ? batteryObject.value : null;\n}\n\n// Finden des Batterie-Wertes\nconst batteryValue = findBatteryValue(sensors);\n\n// Ausgabe des Batterie-Wertes zur Überprüfung\n// node.warn(`Batterie-Wert: ${batteryValue}`);\n\n// Optional: Speichern des Batterie-Wertes in msg zur weiteren Verwendung\nmsg.payload = batteryValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":830,"y":760,"wires":[["330a5b405ad89acf"]]},{"id":"b5fcb9fc8354bcab","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"Root-Temp-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Root-Temperature-Wertes\nfunction findRootTempValue(sensors) {\n    const rootTempObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"root_temp\") || \n        sensor.entity_id.includes(\"roottemperature\") || \n        sensor.entity_id.includes(\"soiltemp\") || \n        sensor.entity_id.includes(\"root_temp\")\n    );\n    return rootTempObject ? rootTempObject.value : null;\n}\n\n// Finden des Root-Temperature-Wertes\nconst rootTempValue = findRootTempValue(sensors);\n\n// Ausgabe des Root-Temperature-Wertes zur Überprüfung\n// node.warn(`Root-Temperature-Wert: ${rootTempValue}`);\n\n// Optional: Speichern des Root-Temperature-Wertes in msg zur weiteren Verwendung\nmsg.payload = rootTempValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":840,"y":460,"wires":[["4071ade6426af61b"]]},{"id":"ce4696697eb9cc47","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"Exhaust-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Abluft-Zustands\nfunction findExhaustState(sensors) {\n    const exhaustStateObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"exhaust\") ||\n        sensor.entity_id.includes(\"abluft\") ||\n        sensor.entity_id.includes(\"ventilation\") ||\n        sensor.entity_id.includes(\"fan\")\n    );\n    return exhaustStateObject ? exhaustStateObject.value : null;\n}\n\n// Funktion zum Finden des Dutycycle-Wertes\nfunction findDutyCycleValue(sensors) {\n    const dutyCycleObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"airctr\") ||\n        sensor.entity_id.includes(\"dutycycle\") ||\n        sensor.entity_id.includes(\"cycle\")\n    );\n    return dutyCycleObject ? dutyCycleObject.value : null;\n}\n\n// Finden des Abluft-Zustands\nconst exhaustState = findExhaustState(sensors);\n\n// Finden des Dutycycle-Wertes\nconst dutyCycleValue = findDutyCycleValue(sensors);\n\n// Ausgabe der Werte zur Überprüfung\n// node.warn(`Abluft-Zustand: ${exhaustState}`);\n// node.warn(`Dutycycle-Wert: ${dutyCycleValue}`);\n\n// Setzen der Outputs\nlet outputs = [\n    { payload: exhaustState }, // Output 1: Zustand (on/off)\n    { payload: dutyCycleValue } // Output 2: Dutycycle\n];\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn outputs;\n","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":830,"y":1000,"wires":[["194edf344188f8d1"],["f1ea259d4cd1ad73"]]},{"id":"fc7309bac2a5580d","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"Humidifier-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Humidifier-Wertes\nfunction findHumidifierValue(sensors) {\n    const humidifierObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"humidifier\") || \n        sensor.entity_id.includes(\"humidity\")\n    );\n    return humidifierObject ? humidifierObject.value : null;\n}\n\n// Finden des Humidifier-Wertes\nconst humidifierValue = findHumidifierValue(sensors);\n\n// Ausgabe des Humidifier-Wertes zur Überprüfung\n// node.warn(`Humidifier-Wert: ${humidifierValue}`);\n\n// Optional: Speichern des Humidifier-Wertes in msg zur weiteren Verwendung\nmsg.payload = humidifierValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":840,"y":1060,"wires":[[]]},{"id":"56aa552840d3803d","type":"function","z":"87bab898757000a2","name":"Sort Sensor Types","func":"let data = msg.payload;\n\n// Arrays für verschiedene Sensortypen initialisieren\nlet wish = [];\nlet temperatures = [];\nlet humidity = [];\nlet dewpoints = [];\nlet moisture = [];\nlet pressures = [];\nlet battery = [];\nlet power = [];\nlet co2 = [];\nlet lumen = [];\nlet conductivity = [];\nlet switches = [];\nlet dutyCycleExhaust = [];\nlet vents = [];\nlet humidifier = [];\nlet dehumidifier = [];\nlet root = [];\n\n// Durchlaufe alle Schlüssel im data-Objekt und sortiere sie nach bestimmten Sensortypen\nfor (let key in data) {\n    if (data.hasOwnProperty(key)) {\n        let entity_id = key.toLowerCase();\n        let entity = { entity_id: key, value: data[key] };\n\n        // Prioritize to ensure it is captured first\n        if (entity_id.includes('wish') || entity_id.includes('avg') || entity_id.includes('target')) {\n            wish.push(entity);\n        } else if (entity_id.includes('root') || entity_id.includes('wurzel') || entity_id.includes('water')) {\n            root.push(entity);\n        }\n        // ENVIORMENT\n        else if (entity_id.includes('temperature') || entity_id.includes('tempe')) {\n            temperatures.push(entity);\n        } else if (entity_id.includes('humidity') || entity_id.includes('feuchtigkeit') || entity_id.includes('rh')) {\n            humidity.push(entity);\n        } else if (entity_id.includes('dewpoint') || entity_id.includes('dew')) {\n            dewpoints.push(entity);\n        } else if (entity_id.includes('moisture') || entity_id.includes('mois')) {\n            moisture.push(entity);\n        } else if (entity_id.includes('pressure') || entity_id.includes('press')) {\n            pressures.push(entity);\n        } else if (entity_id.includes('carbondioxide') || entity_id.includes('co2') || entity_id.includes('carbon')) {\n            co2.push(entity);\n        } else if (entity_id.includes('conductivity')) {\n            conductivity.push(entity);\n        } else if (entity_id.includes('illuminance') || entity_id.includes('light') || entity_id.includes('licht')) {\n            lumen.push(entity);\n        }\n        // Devices\n        else if (entity_id.includes('dehumidifier') || entity_id.includes('entfeuchter')) {\n            dehumidifier.push(entity);\n        } else if (entity_id.includes('humidifier') || entity_id.includes('befeuchter')) {\n            humidifier.push(entity);\n        } else if (entity_id.includes('ruckec') || entity_id.includes('airctr') || entity_id.includes('exhaust') || entity_id.includes('abluft')) {\n            dutyCycleExhaust.push(entity);\n        } else if (entity_id.includes('vent')) {\n            vents.push(entity);\n        } else if (entity_id.includes('switch')) {\n            switches.push(entity);\n        } else if (entity_id.includes('power') || entity_id.includes('energy')) {\n            power.push(entity);\n        }\n\n        // ADDONS\n        else if (entity_id.includes('battery') || entity_id.includes('batt')) {\n            battery.push(entity);\n        }\n    }\n}\n\n// Nachrichtenausgabe auf verschiedenen Outputs\nreturn [\n    // ENVIORMENT\n    { payload: wish, topic: 'Wish' },\n    { payload: temperatures, topic: 'temperature' },\n    { payload: humidity, topic: 'humidity' },\n    { payload: dewpoints, topic: 'dewpoint' },\n    { payload: moisture, topic: 'moisture' },\n    { payload: root, topic: 'roottemp' },\n    { payload: conductivity, topic: 'conductivity' },\n    { payload: pressures, topic: 'pressure' },\n    { payload: co2, topic: 'carbon_dioxide' },\n    { payload: lumen, topic: 'illuminance' },\n    // DEVICEINFO\n    { payload: battery, topic: 'battery' },\n    { payload: power, topic: 'power' },\n    // DEVICES\n    { payload: switches, topic: 'switch' },\n    { payload: vents, topic: 'Vents' },\n    { payload: dutyCycleExhaust, topic: 'Exhaust' },\n    { payload: humidifier, topic: 'humidifier' },\n    { payload: dehumidifier, topic: 'dehumidifier' }\n\n\n];\n","outputs":17,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":210,"y":260,"wires":[["1ded9b8984de496a"],["ad196bb7c36068ab"],["b769596a4bbc4607"],["8b78835f54a976ce"],["802c582eb02146c9"],["7b717655bc69afdc"],["a0aeced795617438"],["ae7ddd31bbfb2985"],["310608ec1d45fcb2"],["b8d42bdbb97224c9"],["dd5b4ad7e458c3f6"],["72f71ec5f3b106d5"],["95cfd8479db6cdb6"],["e6c1ccc1e8bf4243"],["ad366fe75322e5d3"],["006d6dc52bbe29da"],["709f15e79c3e231e"]]},{"id":"4302d5e5f0144f64","type":"debug","z":"87bab898757000a2","name":"Temperatures","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":480,"y":160,"wires":[]},{"id":"5974b167ebb2f9e4","type":"debug","z":"87bab898757000a2","name":"Humidity","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":460,"y":200,"wires":[]},{"id":"9f322326faf32502","type":"debug","z":"87bab898757000a2","name":"Dewpoints","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":240,"wires":[]},{"id":"9865254487956201","type":"debug","z":"87bab898757000a2","name":"Pressures","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":460,"y":400,"wires":[]},{"id":"18c34d8b20c39f73","type":"debug","z":"87bab898757000a2","name":"Battery","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":460,"y":540,"wires":[]},{"id":"e4b5460d3febe1a2","type":"debug","z":"87bab898757000a2","name":"Power","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":450,"y":580,"wires":[]},{"id":"0d29d605591497f4","type":"debug","z":"87bab898757000a2","name":"CO2","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":450,"y":440,"wires":[]},{"id":"cee884061f3f2261","type":"debug","z":"87bab898757000a2","name":"Light","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":480,"wires":[]},{"id":"0a1295920208c384","type":"debug","z":"87bab898757000a2","name":"Switches","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":460,"y":640,"wires":[]},{"id":"1d22f5d38d2f029b","type":"debug","z":"87bab898757000a2","name":"Conductivity","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":360,"wires":[]},{"id":"79fa901ba76691b8","type":"debug","z":"87bab898757000a2","name":"Moisture","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":460,"y":280,"wires":[]},{"id":"349dcfebcd7877da","type":"debug","z":"87bab898757000a2","name":"Exhasut","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":460,"y":720,"wires":[]},{"id":"dfe1f213a50dabe8","type":"debug","z":"87bab898757000a2","name":"WISH","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":120,"wires":[]},{"id":"f400654d457ab0af","type":"debug","z":"87bab898757000a2","name":"Humidifier","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":760,"wires":[]},{"id":"8d95d41fedb12bda","type":"debug","z":"87bab898757000a2","name":"Vents","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":680,"wires":[]},{"id":"a46594e2514f068e","type":"debug","z":"87bab898757000a2","name":"RootTemp","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":320,"wires":[]},{"id":"6f852176198d67b8","type":"debug","z":"87bab898757000a2","name":"Dehumidifier","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":800,"wires":[]},{"id":"3dbeae382f71f092","type":"ha-sensor","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerPressure","entityConfig":"ee6603a7841f90d7","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1120,"y":580,"wires":[[]]},{"id":"ea181fad67e4609d","type":"ha-sensor","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerMoisture","entityConfig":"b48068e2b6382f35","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1120,"y":400,"wires":[[]]},{"id":"330a5b405ad89acf","type":"ha-sensor","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerBatterieDevices","entityConfig":"2150742022321ba4","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1140,"y":760,"wires":[[]]},{"id":"4071ade6426af61b","type":"ha-sensor","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerRootTemp","entityConfig":"6938113c94cc6c5d","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1130,"y":460,"wires":[[]]},{"id":"6077fa1071b64972","type":"ha-sensor","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerEC","entityConfig":"2acab65eb8c7d7db","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1100,"y":520,"wires":[[]]},{"id":"a057a5f182e73de8","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"LightIntense_GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Licht-Wertes (Lumen oder Lux)\nfunction findLightValue(sensors) {\n    const lightObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"lumen\") || \n        sensor.entity_id.includes(\"lux\") || \n        sensor.entity_id.includes(\"light\") ||\n        sensor.entity_id.includes(\"illuminance\")\n    );\n    return lightObject ? lightObject.value : null;\n}\n\n// Finden des Licht-Wertes\nconst lightValue = findLightValue(sensors);\n\n// Ausgabe des Licht-Wertes zur Überprüfung\n// node.warn(`Licht-Wert: ${lightValue}`);\n\n// Optional: Speichern des Licht-Wertes in msg zur weiteren Verwendung\nmsg.payload = lightValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":850,"y":700,"wires":[["de57249fcd512509"]]},{"id":"de57249fcd512509","type":"ha-sensor","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FLowerLightIntense","entityConfig":"6584d61dadd6110e","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1130,"y":700,"wires":[[]]},{"id":"c4d9642cd60ee3b5","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"Switch-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Switch-Wertes\nfunction findSwitchValue(sensors) {\n    const switchObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"switch\") || \n        sensor.entity_id.includes(\"toggle\")\n    );\n    return switchObject ? switchObject.state : null;\n}\n\n// Finden des Switch-Wertes\nconst switchValue = findSwitchValue(sensors);\n\n// Ausgabe des Switch-Wertes zur Überprüfung\n// node.warn(`Switch-Wert: ${switchValue}`);\n\n// Optional: Speichern des Switch-Wertes in msg zur weiteren Verwendung\nmsg.payload = switchValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":830,"y":880,"wires":[[]]},{"id":"34b3481968acc628","type":"ha-sensor","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerPowerConsume","entityConfig":"0628161aa905c63c","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1140,"y":820,"wires":[[]]},{"id":"f76573c680abe051","type":"link out","z":"87bab898757000a2","name":"Vents","mode":"link","links":[],"x":635,"y":680,"wires":[]},{"id":"0d648d1a287b160d","type":"link out","z":"87bab898757000a2","name":"Dehumidifier","mode":"link","links":[],"x":635,"y":800,"wires":[]},{"id":"8c80439016556aa3","type":"debug","z":"87bab898757000a2","g":"4befb05d0b17e374","name":"debug 188","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1870,"y":1200,"wires":[]},{"id":"a141a10ad2f010bb","type":"debug","z":"87bab898757000a2","g":"4befb05d0b17e374","name":"debug 190","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2050,"y":1040,"wires":[]},{"id":"9c1bbc9685dc858c","type":"debug","z":"87bab898757000a2","g":"7b4f8e1927d324fc","name":"debug 191","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1980,"y":1280,"wires":[]},{"id":"55da67fef2acad51","type":"debug","z":"87bab898757000a2","g":"2a37f65b72394049","name":"debug 193","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1170,"y":1320,"wires":[]},{"id":"d627c246df74b5d7","type":"debug","z":"87bab898757000a2","g":"7b4f8e1927d324fc","name":"debug 197","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1970,"y":1400,"wires":[]},{"id":"7e84a5229b144751","type":"join","z":"87bab898757000a2","g":"e0a33e236acb9fce","name":"DehumidifierData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1830,"y":1560,"wires":[["e19fe2e2cc5cff60"]]},{"id":"e6959e18c970d2ee","type":"link in","z":"87bab898757000a2","g":"e0a33e236acb9fce","name":"Dehumidifier","links":[],"x":1755,"y":1520,"wires":[["7e84a5229b144751"]]},{"id":"e19fe2e2cc5cff60","type":"function","z":"87bab898757000a2","g":"e0a33e236acb9fce","name":"DehumidifierSetup","func":"let outputs = [null, null, null];\n\nlet dehumidifierState = null;\n\n// Schleife, um den Zustand des Dehumidifier zu finden\nfor (let i = 0; i < msg.payload.dehumidifier.length; i++) {\n    if (msg.payload.dehumidifier[i].entity_id.includes('dehumidifier')) {\n        dehumidifierState = msg.payload.dehumidifier[i].value;\n        break;\n    }\n}\n\n// Dehumidifier starten\nif (msg.payload.dehumidifierSet.value === \"increased\" && dehumidifierState === \"off\") {\n    outputs[0] = { payload: \"Starte Dehumidifier\", topic: \"Start\" };\n}\n\n// Dehumidifier stoppen\nif (msg.payload.dehumidifierSet.value === \"reduced\" && dehumidifierState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Dehumidifier\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.dehumidifierSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Dehumidifier unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2050,"y":1560,"wires":[["f1ed96c84b1e46e1"],["abef1da1656fea02"],["31111db19484adb6"],[]]},{"id":"2f23a6ca2ee4971d","type":"join","z":"87bab898757000a2","g":"061837895c818d51","name":"HeaterData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1830,"y":1700,"wires":[["3e45530d280cf155"]]},{"id":"61f9a529b1e29ab0","type":"link in","z":"87bab898757000a2","g":"061837895c818d51","name":"link in 41","links":[],"x":1765,"y":1660,"wires":[["2f23a6ca2ee4971d"]]},{"id":"3e45530d280cf155","type":"function","z":"87bab898757000a2","g":"061837895c818d51","name":"HeaterSetup","func":"let outputs = [null, null, null];\n\nlet heaterState = null;\n\n// Schleife, um den Zustand des Heater zu finden\nfor (let i = 0; i < msg.payload.heater.length; i++) {\n    if (msg.payload.heater[i].entity_id.includes('heater')) {\n        heaterState = msg.payload.heater[i].value;\n        break;\n    }\n}\n\n// Heater starten\nif (msg.payload.heaterSet.value === \"increased\" && heaterState === \"off\") {\n    outputs[0] = { payload: \"Start Heater\", topic: \"Start\" };\n}\n\n// Heater stoppen\nif (msg.payload.heaterSet.value === \"reduced\" && heaterState === \"on\") {\n    outputs[1] = { payload: \"Stop Heater\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.heaterSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Heater unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2030,"y":1700,"wires":[["6eecb00d9bcacb3d"],["59fa1f2f5f6e1a32"],["9646a423e2e18b94"],[]]},{"id":"269511b2f57d40dd","type":"join","z":"87bab898757000a2","g":"374f076dd54d7035","name":"CoolerData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1830,"y":1840,"wires":[["21b676be5c79f43f"]]},{"id":"75633ac2d9ec29c2","type":"link in","z":"87bab898757000a2","g":"374f076dd54d7035","name":"link in 42","links":[],"x":1765,"y":1800,"wires":[["269511b2f57d40dd"]]},{"id":"21b676be5c79f43f","type":"function","z":"87bab898757000a2","g":"374f076dd54d7035","name":"CoolerSetup","func":"let outputs = [null, null, null];\n\nlet coolerState = null;\n\n// Schleife, um den Zustand des Cooler zu finden\nfor (let i = 0; i < msg.payload.cooler.length; i++) {\n    if (msg.payload.cooler[i].entity_id.includes('cooler')) {\n        coolerState = msg.payload.cooler[i].value;\n        break;\n    }\n}\n\n// Cooler starten\nif (msg.payload.coolerSet.value === \"increased\" && coolerState === \"off\") {\n    outputs[0] = { payload: \"Start Cooler\", topic: \"Start\" };\n}\n\n// Cooler stoppen\nif (msg.payload.coolerSet.value === \"reduced\" && coolerState === \"on\") {\n    outputs[1] = { payload: \"Stop Cooler\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.coolerSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Cooler unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2030,"y":1840,"wires":[["b3c3886b83a0ea6f"],["7841516b38ab2a6b"],["a0e6583e1313d4c6"],[]]},{"id":"3731cbf407c0b582","type":"join","z":"87bab898757000a2","g":"ce767c02a63518b7","name":"LightData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1830,"y":1980,"wires":[["db565609719f939d"]]},{"id":"5fb4f622e1888911","type":"link in","z":"87bab898757000a2","g":"ce767c02a63518b7","name":"link in 43","links":[],"x":1765,"y":1940,"wires":[["3731cbf407c0b582"]]},{"id":"db565609719f939d","type":"function","z":"87bab898757000a2","g":"ce767c02a63518b7","name":"LightSetup","func":"let outputs = [null, null, null];\n\nlet lightState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.light.length; i++) {\n    if (msg.payload.light[i].entity_id.includes('light')) {\n        lightState = msg.payload.light[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.lightSet.value === \"increased\" && lightState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.lightSet.value === \"reduced\" && lightState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.lightSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Befeuchter unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2030,"y":1980,"wires":[["d86e3407a4f640f9"],["6ac56048b94fbe2b"],["ad74f1401fcdda47"],[]]},{"id":"4dc00bfeca4e9f9c","type":"join","z":"87bab898757000a2","g":"75e4485df1891a48","name":"VentsData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"4","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"num","reduceFixup":"","x":1810,"y":2120,"wires":[["368db6c2f4f4d498"]]},{"id":"0f18ff02508e83b5","type":"link in","z":"87bab898757000a2","g":"75e4485df1891a48","name":"link in 44","links":[],"x":1755,"y":2080,"wires":[["4dc00bfeca4e9f9c"]]},{"id":"368db6c2f4f4d498","type":"function","z":"87bab898757000a2","g":"75e4485df1891a48","name":"VentsSetup","func":"let outputs = [null, null, null];\n\nlet ventsState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.vents.length; i++) {\n    if (msg.payload.vents[i].entity_id.includes('vents')) {\n        ventsState = msg.payload.vents[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.ventsSet.value === \"increased\" && ventsState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.ventsSet.value === \"reduced\" && ventsState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.ventsSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Befeuchter unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2010,"y":2120,"wires":[["1629a3eede211acb"],["2905c68663ec85a2"],["e81dd2a56311b77e"],[]]},{"id":"f1ed96c84b1e46e1","type":"link out","z":"87bab898757000a2","g":"e0a33e236acb9fce","name":"DehumidiferStart","mode":"link","links":["99832bcde6aaec0d"],"x":2205,"y":1540,"wires":[]},{"id":"abef1da1656fea02","type":"link out","z":"87bab898757000a2","g":"e0a33e236acb9fce","name":"DehumidiferStop","mode":"link","links":["b576fb3aef39185a"],"x":2255,"y":1560,"wires":[]},{"id":"31111db19484adb6","type":"link out","z":"87bab898757000a2","g":"e0a33e236acb9fce","name":"link out 39","mode":"link","links":[],"x":2305,"y":1580,"wires":[]},{"id":"6eecb00d9bcacb3d","type":"link out","z":"87bab898757000a2","g":"061837895c818d51","name":"HeaterStart","mode":"link","links":["958127653d74be3f"],"x":2185,"y":1680,"wires":[]},{"id":"59fa1f2f5f6e1a32","type":"link out","z":"87bab898757000a2","g":"061837895c818d51","name":"HeaterStop","mode":"link","links":["4cbea83396a0f0ac"],"x":2245,"y":1700,"wires":[]},{"id":"9646a423e2e18b94","type":"link out","z":"87bab898757000a2","g":"061837895c818d51","name":"link out 42","mode":"link","links":[],"x":2295,"y":1720,"wires":[]},{"id":"b3c3886b83a0ea6f","type":"link out","z":"87bab898757000a2","g":"374f076dd54d7035","name":"CoolerStart","mode":"link","links":["5a5614359d863721"],"x":2195,"y":1820,"wires":[]},{"id":"7841516b38ab2a6b","type":"link out","z":"87bab898757000a2","g":"374f076dd54d7035","name":"CoolerStop","mode":"link","links":["54ac3c52a83ae28a"],"x":2255,"y":1840,"wires":[]},{"id":"a0e6583e1313d4c6","type":"link out","z":"87bab898757000a2","g":"374f076dd54d7035","name":"link out 45","mode":"link","links":[],"x":2305,"y":1860,"wires":[]},{"id":"d86e3407a4f640f9","type":"link out","z":"87bab898757000a2","g":"ce767c02a63518b7","name":"link out 46","mode":"link","links":[],"x":2165,"y":1960,"wires":[]},{"id":"6ac56048b94fbe2b","type":"link out","z":"87bab898757000a2","g":"ce767c02a63518b7","name":"link out 47","mode":"link","links":[],"x":2225,"y":1980,"wires":[]},{"id":"ad74f1401fcdda47","type":"link out","z":"87bab898757000a2","g":"ce767c02a63518b7","name":"link out 48","mode":"link","links":[],"x":2285,"y":2000,"wires":[]},{"id":"1629a3eede211acb","type":"link out","z":"87bab898757000a2","g":"75e4485df1891a48","name":"link out 49","mode":"link","links":[],"x":2155,"y":2100,"wires":[]},{"id":"2905c68663ec85a2","type":"link out","z":"87bab898757000a2","g":"75e4485df1891a48","name":"link out 50","mode":"link","links":[],"x":2195,"y":2120,"wires":[]},{"id":"e81dd2a56311b77e","type":"link out","z":"87bab898757000a2","g":"75e4485df1891a48","name":"link out 51","mode":"link","links":[],"x":2255,"y":2140,"wires":[]},{"id":"ce9c357652d8fb35","type":"link out","z":"87bab898757000a2","g":"7b4f8e1927d324fc","name":"HumidifierStart","mode":"link","links":["acb0f5addd129adf"],"x":2225,"y":1300,"wires":[]},{"id":"aa5773a7762ec6a1","type":"link out","z":"87bab898757000a2","g":"7b4f8e1927d324fc","name":"HumidifierStop","mode":"link","links":["38a12a509a13d715"],"x":2285,"y":1320,"wires":[]},{"id":"5f10e37424012087","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"Vents-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Ventilation-Wertes\nfunction findVentilationValue(sensors) {\n    const ventilationObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"ventilation\") ||\n        sensor.entity_id.includes(\"fan\") ||\n        sensor.entity_id.includes(\"exhaust\") ||\n        sensor.entity_id.includes(\"airflow\")\n    );\n    return ventilationObject ? ventilationObject.value : null;\n}\n\n// Finden des Ventilation-Wertes\nconst ventilationValue = findVentilationValue(sensors);\n\n// Ausgabe des Ventilation-Wertes zur Überprüfung\n// node.warn(`Ventilation-Wert: ${ventilationValue}`);\n\n// Optional: Speichern des Ventilation-Wertes in msg zur weiteren Verwendung\nmsg.payload = ventilationValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":830,"y":940,"wires":[[]]},{"id":"7b33e1fa9654de02","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"Dehmidifier-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Dehumidifier-Wertes\nfunction findDehumidifierValue(sensors) {\n    const dehumidifierObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"dehumidifier\") || \n        sensor.entity_id.includes(\"humidity\")\n    );\n    return dehumidifierObject ? dehumidifierObject.value : null;\n}\n\n// Finden des Dehumidifier-Wertes\nconst dehumidifierValue = findDehumidifierValue(sensors);\n\n// Ausgabe des Dehumidifier-Wertes zur Überprüfung\n// node.warn(`Dehumidifier-Wert: ${dehumidifierValue}`);\n\n// Optional: Speichern des Dehumidifier-Wertes in msg zur weiteren Verwendung\nmsg.payload = dehumidifierValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":840,"y":1120,"wires":[[]]},{"id":"194edf344188f8d1","type":"ha-sensor","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerExhaustState","entityConfig":"87469d8744ed20ba","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1160,"y":940,"wires":[[]]},{"id":"f1ea259d4cd1ad73","type":"ha-sensor","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerExhaustDutyCycle","entityConfig":"96027b4729ff7383","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1170,"y":1000,"wires":[[]]},{"id":"202dcc5ae6d834d0","type":"link out","z":"87bab898757000a2","g":"7b4f8e1927d324fc","name":"HumidifierMode","mode":"link","links":[],"x":2315,"y":1360,"wires":[]},{"id":"90e7d66de4e646ed","type":"inject","z":"87bab898757000a2","g":"952a4bc7dff3f66a","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"300","crontab":"","once":true,"onceDelay":"15","topic":"","payload":"","payloadType":"date","x":2030,"y":140,"wires":[["ea836fad7734354a"]]},{"id":"dcc4f2b4266ce2c9","type":"ha-sensor","z":"87bab898757000a2","g":"952a4bc7dff3f66a","name":"DLI","entityConfig":"10a55acc5911459b","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":2630,"y":200,"wires":[["f2d5e7c61c28de89"]]},{"id":"75cd81ac71068cbe","type":"ha-sensor","z":"87bab898757000a2","g":"952a4bc7dff3f66a","name":"PPFDFLower","entityConfig":"c58623d735fb8295","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":2630,"y":80,"wires":[["f2d5e7c61c28de89"]]},{"id":"f2d5e7c61c28de89","type":"debug","z":"87bab898757000a2","g":"952a4bc7dff3f66a","name":"debug 39","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2800,"y":140,"wires":[]},{"id":"34e2ea1867e751f9","type":"function","z":"87bab898757000a2","g":"952a4bc7dff3f66a","name":"Calculate PPFD / DLI Sanlight","func":"// Beispiel für die Eingangsnachricht: { payload: 250 }\n\nconst maxPower = 380;            // Maximale Leistung in Watt\nconst maxPPFD = 1000;            // Maximaler PPFD bei 380 Watt\n\n// PPFD berechnen basierend auf dem aktuellen Wattwert\nconst ppfd = (msg.payload / maxPower) * maxPPFD;\n\n// PPFD auf zwei Nachkommastellen runden\nconst roundedPPFD = parseFloat(ppfd.toFixed(2));\n\n// Berechnung von DLI\nconst secondsPerHour = 3600;\nconst hoursPerDay = 12; // Anzahl der Stunden pro Tag, die das Licht an ist\nlet dli = roundedPPFD * secondsPerHour * hoursPerDay / 1e6;\n\n// DLI auf zwei Nachkommastellen runden\ndli = parseFloat(dli.toFixed(2));\n\n// Erstellen Sie zwei separate Nachrichtenobjekte für die Ausgänge\nconst msg1 = { payload: roundedPPFD }; // für den ersten Output (PPFD), gerundet auf zwei Nachkommastellen\nconst msg2 = { payload: dli };         // für den zweiten Output (DLI), gerundet auf zwei Nachkommastellen\n\n// Rückgabe der Nachrichten in einem Array, wobei jeder Index dem entsprechenden Output entspricht\nreturn [msg1, msg2];","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2430,"y":160,"wires":[["1f21fdc068ba4fdd","75cd81ac71068cbe"],["1f21fdc068ba4fdd","dcc4f2b4266ce2c9"]]},{"id":"ea836fad7734354a","type":"api-current-state","z":"87bab898757000a2","g":"952a4bc7dff3f66a","name":"Flower-LX","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"sensor.flowerlightintense","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":2180,"y":140,"wires":[["34e2ea1867e751f9","1f21fdc068ba4fdd"]]},{"id":"1f21fdc068ba4fdd","type":"debug","z":"87bab898757000a2","g":"952a4bc7dff3f66a","name":"debug 57","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2380,"y":100,"wires":[]},{"id":"c28198e6ee968dbf","type":"comment","z":"87bab898757000a2","g":"ce767c02a63518b7","name":"NOT IMPLEMNTED RIGHT NOW","info":"","x":1970,"y":1980,"wires":[]},{"id":"3f8dbd73b5bb9e6c","type":"comment","z":"87bab898757000a2","g":"75e4485df1891a48","name":"NOT READY","info":"","x":1970,"y":2120,"wires":[]},{"id":"42e2c72bda596b85","type":"function","z":"87bab898757000a2","g":"5cb542e9b231668c","name":"Exhaust Setup","func":"// Hilfsfunktion zur Überprüfung, ob ein Wert numerisch ist\nconst isNumeric = (value) => {\n    return !isNaN(parseFloat(value)) && isFinite(value);\n};\n\n// Funktion zur Bestimmung des dutyCycle-Werts\nconst findDutyCycle = (exhaustArray) => {\n    if (exhaustArray.length === 0) {\n        return null; // Keine Werte zu verarbeiten, wenn das Array leer ist\n    }\n    for (let i = 0; i < exhaustArray.length; i++) {\n        if (isNumeric(exhaustArray[i].value)) {\n            return parseInt(exhaustArray[i].value, 10);\n        }\n    }\n    return null; // Falls kein numerischer Wert gefunden wurde\n};\n\nlet outputs = [null, null, null, null]; // Array für vier Ausgänge\n\n// Zustand der Abluft und Geschwindigkeit aus der Payload extrahieren\nconst exhaustSpeed = msg.payload.exhaustSet.value; // Anpassung hier\nlet exhaustState = 'off'; // Standardwert setzen, falls kein Zustand gefunden wird\nif (msg.payload.Exhaust && msg.payload.Exhaust.length > 0) {\n    const exhaustSwitch = msg.payload.Exhaust.find(e => e.entity_id && e.entity_id.toLowerCase().includes(\"switch\"));\n    if (exhaustSwitch && exhaustSwitch.value) {\n        exhaustState = exhaustSwitch.value;\n    }\n}\n\nconst dutyCycle = findDutyCycle(msg.payload.Exhaust) || 0 ;\n\n// Prüfen, ob ein dutyCycle vorhanden ist\nif (dutyCycle === null) {\n    return outputs; // Kein dutyCycle gefunden, keine Aktion erforderlich\n}\n\nconst percentDifference = parseFloat(msg.payload.exhaustSet.percentDifference);\nlet newDutyCycle = dutyCycle;\n\n// Berechnung des neuen Duty Cycle basierend auf der prozentualen Abweichung\nif (percentDifference !== 0) {\n    if (percentDifference < 0) {\n        // Wenn der Wert negativ ist, erhöhen wir den Duty Cycle\n        newDutyCycle = dutyCycle + Math.abs(percentDifference);\n    } else {\n        // Wenn der Wert positiv ist, verringern wir den Duty Cycle\n        newDutyCycle = dutyCycle - percentDifference;\n    }\n\n    // Stellen Sie sicher, dass der neue Duty Cycle innerhalb der Grenzen liegt\n    newDutyCycle = Math.min(95, Math.max(10, Math.round(newDutyCycle)));\n}\n\n// Abluft starten auf dem ersten Ausgang, wenn sie aus ist und erhöht werden muss\nif (exhaustSpeed === \"increased\" && exhaustState === \"off\") {\n    outputs[0] = { payload: \"Starte Abluft\", topic: \"Start\" };\n    return outputs;\n}\n\n// Abluft-Geschwindigkeit erhöhen, wenn sie bereits eingeschaltet ist\nif (exhaustSpeed === \"increased\" && exhaustState === \"on\") {\n    outputs[2] = { payload: newDutyCycle.toString(), topic: \"Increase\" };\n    return outputs;\n}\n\n// Abluft stoppen auf dem zweiten Ausgang, wenn die Geschwindigkeit reduziert wird und der Duty Cycle sehr niedrig ist\nif (exhaustSpeed === \"reduced\" && exhaustState === \"on\" && newDutyCycle <= 10) {\n    outputs[1] = { payload: \"Stoppe Abluft\", topic: \"Stop\" };\n    return outputs;\n} else if (exhaustSpeed === \"reduced\" && exhaustState === \"on\") {\n    outputs[2] = { payload: newDutyCycle.toString(), topic: \"Decrease\" };\n    return outputs;\n}\n\n// Warnung ausgeben, wenn versucht wird, die Abluftgeschwindigkeit zu reduzieren, obwohl sie bereits aus ist\nif (exhaustSpeed === \"reduced\" && exhaustState === \"off\") {\n    outputs[1] = { payload: \"Abluft bereits gestoppt, kann nicht weiter reduziert werden\", topic: \"AlreadyStopped\" };\n    return outputs;\n}\n\n// Nichts tun, wenn keine Änderung erforderlich ist\nif (exhaustSpeed === \"unchanged\") {\n    outputs[3] = { payload: \"Abluft unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n    return outputs;\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":980,"y":2340,"wires":[["f2694e0f9513439f","2b8aa6fa4287146b"],["d6d07d605b509b9f","2b8aa6fa4287146b"],["9c3fc299c316d9df","2b8aa6fa4287146b"],["2b8aa6fa4287146b"]]},{"id":"4205dce0f9b43395","type":"http request","z":"87bab898757000a2","g":"5cb542e9b231668c","name":"DutyPostChange","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.253:5533/air/ctrl","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":1370,"y":2360,"wires":[["a5f2fd8bd4de83da"]]},{"id":"9c3fc299c316d9df","type":"function","z":"87bab898757000a2","g":"5cb542e9b231668c","name":"DutyChanger","func":"\nconst NewDuty = msg.payload\n\nmsg.payload = { \"newDuty\": NewDuty}\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1190,"y":2360,"wires":[["4205dce0f9b43395","a5f2fd8bd4de83da"]]},{"id":"b450272b0a6bfb38","type":"join","z":"87bab898757000a2","g":"5cb542e9b231668c","name":"exhasutData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":900,"y":2280,"wires":[["42e2c72bda596b85","db42c984cfc3c6eb"]]},{"id":"4ad596727315ba0c","type":"link in","z":"87bab898757000a2","g":"5cb542e9b231668c","name":"ExhaustData","links":["9d125ce221658824"],"x":845,"y":2240,"wires":[["b450272b0a6bfb38"]]},{"id":"f2694e0f9513439f","type":"link out","z":"87bab898757000a2","g":"5cb542e9b231668c","name":"ExhaustFlowerON","mode":"link","links":["55acda8e6f953bc1"],"x":1125,"y":2280,"wires":[]},{"id":"d6d07d605b509b9f","type":"link out","z":"87bab898757000a2","g":"5cb542e9b231668c","name":"ExhaustFlowerOFF","mode":"link","links":["23d01364d3856db1"],"x":1125,"y":2320,"wires":[]},{"id":"a5f2fd8bd4de83da","type":"debug","z":"87bab898757000a2","g":"5cb542e9b231668c","name":"debug 202","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1310,"y":2320,"wires":[]},{"id":"2b8aa6fa4287146b","type":"debug","z":"87bab898757000a2","g":"5cb542e9b231668c","name":"debug 203","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":950,"y":2400,"wires":[]},{"id":"db42c984cfc3c6eb","type":"debug","z":"87bab898757000a2","g":"5cb542e9b231668c","name":"debug 204","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1130,"y":2240,"wires":[]},{"id":"c742defbf802bbdb","type":"function","z":"87bab898757000a2","g":"81987266af5b5d0f","name":"BefeuchterSetup","func":"let outputs = [null, null, null];\n\nlet humidifierState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.humidifier.length; i++) {\n    if (msg.payload.humidifier[i].entity_id.includes('humidifier')) {\n        humidifierState = msg.payload.humidifier[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.humidifierSet.value === \"increased\" && humidifierState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.humidifierSet.value === \"reduced\" && humidifierState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.humidifierSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Befeuchter unverändert, keine Aktion erforderlich\",data:msg.payload, topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1150,"y":2540,"wires":[["375d779e0949166d"],["d7e52f9a26275fcb"],["bb300e0ced84c184","00c07247d78e056a"],[]]},{"id":"ce80e74b4f0c3169","type":"join","z":"87bab898757000a2","g":"81987266af5b5d0f","name":"HumidityData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":900,"y":2540,"wires":[["c742defbf802bbdb","06864fcb48ef67bd"]]},{"id":"c6952828beed3687","type":"link in","z":"87bab898757000a2","g":"81987266af5b5d0f","name":"HumidifierData","links":["79bde8bec83cb56a"],"x":835,"y":2500,"wires":[["ce80e74b4f0c3169"]]},{"id":"06864fcb48ef67bd","type":"debug","z":"87bab898757000a2","g":"81987266af5b5d0f","name":"debug 205","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1060,"y":2480,"wires":[]},{"id":"bb300e0ced84c184","type":"debug","z":"87bab898757000a2","g":"81987266af5b5d0f","name":"debug 206","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1050,"y":2600,"wires":[]},{"id":"375d779e0949166d","type":"link out","z":"87bab898757000a2","g":"81987266af5b5d0f","name":"HumidifierStart","mode":"link","links":["acb0f5addd129adf"],"x":1305,"y":2500,"wires":[]},{"id":"d7e52f9a26275fcb","type":"link out","z":"87bab898757000a2","g":"81987266af5b5d0f","name":"HumidifierStop","mode":"link","links":["38a12a509a13d715"],"x":1365,"y":2520,"wires":[]},{"id":"00c07247d78e056a","type":"link out","z":"87bab898757000a2","g":"81987266af5b5d0f","name":"HumidifierMode","mode":"link","links":[],"x":1395,"y":2560,"wires":[]},{"id":"47ffae24b00b2672","type":"join","z":"87bab898757000a2","g":"1abfd968b5c48b59","name":"LightData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":910,"y":3180,"wires":[["08978e67fee76396"]]},{"id":"c5631d44ded643ff","type":"link in","z":"87bab898757000a2","g":"1abfd968b5c48b59","name":"link in 69","links":[],"x":845,"y":3140,"wires":[["47ffae24b00b2672"]]},{"id":"08978e67fee76396","type":"function","z":"87bab898757000a2","g":"1abfd968b5c48b59","name":"LightSetup","func":"let outputs = [null, null, null];\n\nlet lightState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.light.length; i++) {\n    if (msg.payload.light[i].entity_id.includes('light')) {\n        lightState = msg.payload.light[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.lightSet.value === \"increased\" && lightState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.lightSet.value === \"reduced\" && lightState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.lightSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Befeuchter unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1110,"y":3180,"wires":[["5be20b2b7060736e"],["ea193e9a809dd292"],["63f114603d508df6"],[]]},{"id":"5be20b2b7060736e","type":"link out","z":"87bab898757000a2","g":"1abfd968b5c48b59","name":"link out 226","mode":"link","links":[],"x":1245,"y":3160,"wires":[]},{"id":"ea193e9a809dd292","type":"link out","z":"87bab898757000a2","g":"1abfd968b5c48b59","name":"link out 227","mode":"link","links":[],"x":1305,"y":3180,"wires":[]},{"id":"63f114603d508df6","type":"link out","z":"87bab898757000a2","g":"1abfd968b5c48b59","name":"link out 228","mode":"link","links":[],"x":1365,"y":3200,"wires":[]},{"id":"4b24403b907dc49b","type":"comment","z":"87bab898757000a2","g":"1abfd968b5c48b59","name":"NOT IMPLEMNTED RIGHT NOW","info":"","x":1050,"y":3180,"wires":[]},{"id":"0d493677b323115e","type":"function","z":"87bab898757000a2","g":"17d639c2d653b0d0","name":"VentsSetup","func":"let outputs = [null, null, null];\nlet ventsState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.vents.length; i++) {\n    if (msg.payload.vents[i].entity_id.includes('vents')) {\n        ventsState = msg.payload.vents[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.ventsSet.value === \"increased\" && ventsState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.ventsSet.value === \"reduced\" && ventsState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.ventsSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Befeuchter unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1110,"y":3340,"wires":[["fa3936a3af582bbe"],["3def191c75fd10fb"],["5885ac0314c899cd"],[]]},{"id":"625af5ab649384e9","type":"join","z":"87bab898757000a2","g":"17d639c2d653b0d0","name":"VentsData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"4","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"num","reduceFixup":"","x":910,"y":3340,"wires":[["0d493677b323115e"]]},{"id":"af2f0286e736ba9e","type":"link in","z":"87bab898757000a2","g":"17d639c2d653b0d0","name":"link in 70","links":[],"x":855,"y":3300,"wires":[["625af5ab649384e9"]]},{"id":"fa3936a3af582bbe","type":"link out","z":"87bab898757000a2","g":"17d639c2d653b0d0","name":"link out 229","mode":"link","links":[],"x":1255,"y":3320,"wires":[]},{"id":"3def191c75fd10fb","type":"link out","z":"87bab898757000a2","g":"17d639c2d653b0d0","name":"link out 230","mode":"link","links":[],"x":1295,"y":3340,"wires":[]},{"id":"5885ac0314c899cd","type":"link out","z":"87bab898757000a2","g":"17d639c2d653b0d0","name":"link out 231","mode":"link","links":[],"x":1355,"y":3360,"wires":[]},{"id":"9dd23f1ec5c1b9af","type":"comment","z":"87bab898757000a2","g":"17d639c2d653b0d0","name":"NOT READY","info":"","x":1070,"y":3340,"wires":[]},{"id":"38063a14958a4bb2","type":"function","z":"87bab898757000a2","g":"baea7e0570065c00","name":"DehumidifierSetup","func":"let outputs = [null, null, null];\n\nlet dehumidifierState = null;\n\n// Schleife, um den Zustand des Dehumidifier zu finden\nfor (let i = 0; i < msg.payload.dehumidifier.length; i++) {\n    if (msg.payload.dehumidifier[i].entity_id.includes('dehumidifier')) {\n        dehumidifierState = msg.payload.dehumidifier[i].value;\n        break;\n    }\n}\n\n// Dehumidifier starten\nif (msg.payload.dehumidifierSet.value === \"increased\" && dehumidifierState === \"off\") {\n    outputs[0] = { payload: \"Starte Dehumidifier\", topic: \"Start\" };\n}\n\n// Dehumidifier stoppen\nif (msg.payload.dehumidifierSet.value === \"reduced\" && dehumidifierState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Dehumidifier\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.dehumidifierSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Dehumidifier unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1130,"y":2740,"wires":[["e38feae8aeb3e604"],["d8fd91bf4fabc3c5"],["a2808d700e0c9aec"],[]]},{"id":"5bcd88519979bcf2","type":"join","z":"87bab898757000a2","g":"baea7e0570065c00","name":"DehumidifierData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":910,"y":2740,"wires":[["38063a14958a4bb2"]]},{"id":"871841fd35ad901a","type":"link in","z":"87bab898757000a2","g":"baea7e0570065c00","name":"Dehumidifier","links":[],"x":835,"y":2700,"wires":[["5bcd88519979bcf2"]]},{"id":"e38feae8aeb3e604","type":"link out","z":"87bab898757000a2","g":"baea7e0570065c00","name":"DehumidiferStart","mode":"link","links":["99832bcde6aaec0d"],"x":1285,"y":2720,"wires":[]},{"id":"d8fd91bf4fabc3c5","type":"link out","z":"87bab898757000a2","g":"baea7e0570065c00","name":"DehumidiferStop","mode":"link","links":["b576fb3aef39185a"],"x":1335,"y":2740,"wires":[]},{"id":"a2808d700e0c9aec","type":"link out","z":"87bab898757000a2","g":"baea7e0570065c00","name":"link out 232","mode":"link","links":[],"x":1385,"y":2760,"wires":[]},{"id":"cb5dc0c35fcb1d14","type":"function","z":"87bab898757000a2","g":"0d9a6eb3f7c88499","name":"HeaterSetup","func":"let outputs = [null, null, null];\n\nlet heaterState = null;\n\n// Schleife, um den Zustand des Heater zu finden\nfor (let i = 0; i < msg.payload.heater.length; i++) {\n    if (msg.payload.heater[i].entity_id.includes('heater')) {\n        heaterState = msg.payload.heater[i].value;\n        break;\n    }\n}\n\n// Heater starten\nif (msg.payload.heaterSet.value === \"increased\" && heaterState === \"off\") {\n    outputs[0] = { payload: \"Start Heater\", topic: \"Start\" };\n}\n\n// Heater stoppen\nif (msg.payload.heaterSet.value === \"reduced\" && heaterState === \"on\") {\n    outputs[1] = { payload: \"Stop Heater\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.heaterSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Heater unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1110,"y":2900,"wires":[["fc9c48027aed9dfd"],["29c058ed777577ad"],["c09cffbee09fcb77"],[]]},{"id":"1edf2bc707797373","type":"join","z":"87bab898757000a2","g":"0d9a6eb3f7c88499","name":"HeaterData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":910,"y":2900,"wires":[["cb5dc0c35fcb1d14"]]},{"id":"61c54cc3b330ae33","type":"link in","z":"87bab898757000a2","g":"0d9a6eb3f7c88499","name":"link in 71","links":[],"x":845,"y":2860,"wires":[["1edf2bc707797373"]]},{"id":"fc9c48027aed9dfd","type":"link out","z":"87bab898757000a2","g":"0d9a6eb3f7c88499","name":"HeaterStart","mode":"link","links":["958127653d74be3f"],"x":1265,"y":2880,"wires":[]},{"id":"29c058ed777577ad","type":"link out","z":"87bab898757000a2","g":"0d9a6eb3f7c88499","name":"HeaterStop","mode":"link","links":["4cbea83396a0f0ac"],"x":1325,"y":2900,"wires":[]},{"id":"c09cffbee09fcb77","type":"link out","z":"87bab898757000a2","g":"0d9a6eb3f7c88499","name":"link out 233","mode":"link","links":[],"x":1375,"y":2920,"wires":[]},{"id":"1ec492ebf534af74","type":"join","z":"87bab898757000a2","g":"c44580117a7fcb7a","name":"CoolerData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":910,"y":3040,"wires":[["2aa9227a3c950e0b"]]},{"id":"0c161b5cfee11cf3","type":"link in","z":"87bab898757000a2","g":"c44580117a7fcb7a","name":"link in 72","links":[],"x":845,"y":3000,"wires":[["1ec492ebf534af74"]]},{"id":"2aa9227a3c950e0b","type":"function","z":"87bab898757000a2","g":"c44580117a7fcb7a","name":"CoolerSetup","func":"let outputs = [null, null, null];\n\nlet coolerState = null;\n\n// Schleife, um den Zustand des Cooler zu finden\nfor (let i = 0; i < msg.payload.cooler.length; i++) {\n    if (msg.payload.cooler[i].entity_id.includes('cooler')) {\n        coolerState = msg.payload.cooler[i].value;\n        break;\n    }\n}\n\n// Cooler starten\nif (msg.payload.coolerSet.value === \"increased\" && coolerState === \"off\") {\n    outputs[0] = { payload: \"Start Cooler\", topic: \"Start\" };\n}\n\n// Cooler stoppen\nif (msg.payload.coolerSet.value === \"reduced\" && coolerState === \"on\") {\n    outputs[1] = { payload: \"Stop Cooler\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.coolerSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Cooler unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1110,"y":3040,"wires":[["0b366bfd2dbe21b8"],["15a88cdb06cd6786"],["eb765bd6a74a15c1"],[]]},{"id":"0b366bfd2dbe21b8","type":"link out","z":"87bab898757000a2","g":"c44580117a7fcb7a","name":"CoolerStart","mode":"link","links":["5a5614359d863721"],"x":1275,"y":3020,"wires":[]},{"id":"15a88cdb06cd6786","type":"link out","z":"87bab898757000a2","g":"c44580117a7fcb7a","name":"CoolerStop","mode":"link","links":["54ac3c52a83ae28a"],"x":1335,"y":3040,"wires":[]},{"id":"eb765bd6a74a15c1","type":"link out","z":"87bab898757000a2","g":"c44580117a7fcb7a","name":"link out 234","mode":"link","links":[],"x":1385,"y":3060,"wires":[]},{"id":"94bfb7e91f8b5674","type":"function","z":"87bab898757000a2","g":"34aef9ddeaf4182a","name":"Exhaust Setup","func":"// Hilfsfunktion zur Überprüfung, ob ein Wert numerisch ist\nconst isNumeric = (value) => {\n    return !isNaN(parseFloat(value)) && isFinite(value);\n};\n\n// Funktion zur Bestimmung des dutyCycle-Werts\nconst findDutyCycle = (exhaustArray) => {\n    if (exhaustArray.length === 0) {\n        return null; // Keine Werte zu verarbeiten, wenn das Array leer ist\n    }\n    for (let i = 0; i < exhaustArray.length; i++) {\n        if (isNumeric(exhaustArray[i].value)) {\n            return parseInt(exhaustArray[i].value, 10);\n        }\n    }\n    return null; // Falls kein numerischer Wert gefunden wurde\n};\n\nlet outputs = [null, null, null, null]; // Array für vier Ausgänge\n\n// Zustand der Abluft und Geschwindigkeit aus der Payload extrahieren\nconst exhaustSpeed = msg.payload.exhaustSet.value; // Anpassung hier\nlet exhaustState = 'off'; // Standardwert setzen, falls kein Zustand gefunden wird\nif (msg.payload.Exhaust && msg.payload.Exhaust.length > 0) {\n    const exhaustSwitch = msg.payload.Exhaust.find(e => e.entity_id && e.entity_id.toLowerCase().includes(\"switch\"));\n    if (exhaustSwitch && exhaustSwitch.value) {\n        exhaustState = exhaustSwitch.value;\n    }\n}\n\nconst dutyCycle = findDutyCycle(msg.payload.Exhaust) || 0 ;\n\n// Prüfen, ob ein dutyCycle vorhanden ist\nif (dutyCycle === null) {\n    return outputs; // Kein dutyCycle gefunden, keine Aktion erforderlich\n}\n\nconst percentDifference = parseFloat(msg.payload.exhaustSet.percentDifference);\nlet newDutyCycle = dutyCycle;\n\n// Berechnung des neuen Duty Cycle basierend auf der prozentualen Abweichung\nif (percentDifference !== 0) {\n    if (percentDifference < 0) {\n        // Wenn der Wert negativ ist, erhöhen wir den Duty Cycle\n        newDutyCycle = dutyCycle + Math.abs(percentDifference);\n    } else {\n        // Wenn der Wert positiv ist, verringern wir den Duty Cycle\n        newDutyCycle = dutyCycle - percentDifference;\n    }\n\n    // Stellen Sie sicher, dass der neue Duty Cycle innerhalb der Grenzen liegt\n    newDutyCycle = Math.min(95, Math.max(10, Math.round(newDutyCycle)));\n}\n\n// Abluft starten auf dem ersten Ausgang, wenn sie aus ist und erhöht werden muss\nif (exhaustSpeed === \"increased\" && exhaustState === \"off\") {\n    outputs[0] = { payload: \"Starte Abluft\", topic: \"Start\" };\n    return outputs;\n}\n\n// Abluft-Geschwindigkeit erhöhen, wenn sie bereits eingeschaltet ist\nif (exhaustSpeed === \"increased\" && exhaustState === \"on\") {\n    outputs[2] = { payload: newDutyCycle.toString(), topic: \"Increase\" };\n    return outputs;\n}\n\n// Abluft stoppen auf dem zweiten Ausgang, wenn die Geschwindigkeit reduziert wird und der Duty Cycle sehr niedrig ist\nif (exhaustSpeed === \"reduced\" && exhaustState === \"on\" && newDutyCycle <= 10) {\n    outputs[1] = { payload: \"Stoppe Abluft\", topic: \"Stop\" };\n    return outputs;\n} else if (exhaustSpeed === \"reduced\" && exhaustState === \"on\") {\n    outputs[2] = { payload: newDutyCycle.toString(), topic: \"Decrease\" };\n    return outputs;\n}\n\n// Warnung ausgeben, wenn versucht wird, die Abluftgeschwindigkeit zu reduzieren, obwohl sie bereits aus ist\nif (exhaustSpeed === \"reduced\" && exhaustState === \"off\") {\n    outputs[1] = { payload: \"Abluft bereits gestoppt, kann nicht weiter reduziert werden\", topic: \"AlreadyStopped\" };\n    return outputs;\n}\n\n// Nichts tun, wenn keine Änderung erforderlich ist\nif (exhaustSpeed === \"unchanged\") {\n    outputs[3] = { payload: \"Abluft unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n    return outputs;\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1000,"y":3600,"wires":[["78ae52d514d16f60","d4df1bd0d38045a5"],["823cc06908fe0581","d4df1bd0d38045a5"],["d82a5348498d94b9","d4df1bd0d38045a5"],["d4df1bd0d38045a5"]]},{"id":"86b38ecb7d5a7f2f","type":"http request","z":"87bab898757000a2","g":"34aef9ddeaf4182a","name":"DutyPostChange","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.253:5533/air/ctrl","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":1390,"y":3620,"wires":[["4b3658d446c38c96"]]},{"id":"d82a5348498d94b9","type":"function","z":"87bab898757000a2","g":"34aef9ddeaf4182a","name":"DutyChanger","func":"\nconst NewDuty = msg.payload\n\nmsg.payload = { \"newDuty\": NewDuty}\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1210,"y":3620,"wires":[["86b38ecb7d5a7f2f","4b3658d446c38c96"]]},{"id":"17d2dff4e6e6b9d5","type":"join","z":"87bab898757000a2","g":"34aef9ddeaf4182a","name":"exhasutData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":920,"y":3540,"wires":[["94bfb7e91f8b5674","5dcc5c3453990a99"]]},{"id":"e705047b1a410ff1","type":"link in","z":"87bab898757000a2","g":"34aef9ddeaf4182a","name":"ExhaustData","links":["9d125ce221658824"],"x":865,"y":3500,"wires":[["17d2dff4e6e6b9d5"]]},{"id":"78ae52d514d16f60","type":"link out","z":"87bab898757000a2","g":"34aef9ddeaf4182a","name":"ExhaustFlowerON","mode":"link","links":["55acda8e6f953bc1"],"x":1145,"y":3540,"wires":[]},{"id":"823cc06908fe0581","type":"link out","z":"87bab898757000a2","g":"34aef9ddeaf4182a","name":"ExhaustFlowerOFF","mode":"link","links":["23d01364d3856db1"],"x":1145,"y":3580,"wires":[]},{"id":"4b3658d446c38c96","type":"debug","z":"87bab898757000a2","g":"34aef9ddeaf4182a","name":"debug 207","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1330,"y":3580,"wires":[]},{"id":"d4df1bd0d38045a5","type":"debug","z":"87bab898757000a2","g":"34aef9ddeaf4182a","name":"debug 208","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1090,"y":3680,"wires":[]},{"id":"5dcc5c3453990a99","type":"debug","z":"87bab898757000a2","g":"34aef9ddeaf4182a","name":"debug 209","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1050,"y":3480,"wires":[]},{"id":"928397ec435b4776","type":"function","z":"87bab898757000a2","g":"b0265c6efd223fe2","name":"BefeuchterSetup","func":"let outputs = [null, null, null];\n\nlet humidifierState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.humidifier.length; i++) {\n    if (msg.payload.humidifier[i].entity_id.includes('humidifier')) {\n        humidifierState = msg.payload.humidifier[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.humidifierSet.value === \"increased\" && humidifierState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.humidifierSet.value === \"reduced\" && humidifierState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.humidifierSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Befeuchter unverändert, keine Aktion erforderlich\",data:msg.payload, topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1170,"y":3820,"wires":[["e8d14de801bad46b"],["b6d8036882fb0315"],["e4d7bc16f411e836","b6d8036882fb0315","70b503d9f70be854"],[]]},{"id":"bfbd9b30c217d194","type":"join","z":"87bab898757000a2","g":"b0265c6efd223fe2","name":"HumidityData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":920,"y":3820,"wires":[["928397ec435b4776","ea36d3f7b30be7af"]]},{"id":"5250abb0abece036","type":"link in","z":"87bab898757000a2","g":"b0265c6efd223fe2","name":"HumidifierData","links":["79bde8bec83cb56a"],"x":855,"y":3780,"wires":[["bfbd9b30c217d194"]]},{"id":"ea36d3f7b30be7af","type":"debug","z":"87bab898757000a2","g":"b0265c6efd223fe2","name":"debug 210","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1080,"y":3760,"wires":[]},{"id":"e4d7bc16f411e836","type":"debug","z":"87bab898757000a2","g":"b0265c6efd223fe2","name":"debug 211","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1070,"y":3880,"wires":[]},{"id":"e8d14de801bad46b","type":"link out","z":"87bab898757000a2","g":"b0265c6efd223fe2","name":"HumidifierStart","mode":"link","links":["acb0f5addd129adf"],"x":1325,"y":3780,"wires":[]},{"id":"b6d8036882fb0315","type":"link out","z":"87bab898757000a2","g":"b0265c6efd223fe2","name":"HumidifierStop","mode":"link","links":["38a12a509a13d715"],"x":1385,"y":3800,"wires":[]},{"id":"70b503d9f70be854","type":"link out","z":"87bab898757000a2","g":"b0265c6efd223fe2","name":"HumidifierMode","mode":"link","links":[],"x":1415,"y":3840,"wires":[]},{"id":"d5ef25611722e6a9","type":"join","z":"87bab898757000a2","g":"b2941bd36f42936c","name":"LightData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":930,"y":4460,"wires":[["8e161a20289c233c"]]},{"id":"cef9d65266276d66","type":"link in","z":"87bab898757000a2","g":"b2941bd36f42936c","name":"link in 73","links":[],"x":865,"y":4420,"wires":[["d5ef25611722e6a9"]]},{"id":"8e161a20289c233c","type":"function","z":"87bab898757000a2","g":"b2941bd36f42936c","name":"LightSetup","func":"let outputs = [null, null, null];\n\nlet lightState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.light.length; i++) {\n    if (msg.payload.light[i].entity_id.includes('light')) {\n        lightState = msg.payload.light[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.lightSet.value === \"increased\" && lightState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.lightSet.value === \"reduced\" && lightState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.lightSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Befeuchter unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1130,"y":4460,"wires":[["9f9443e6d4c2c609"],["a6778dbdae56c316"],["d8109ab529567d6e"],[]]},{"id":"9f9443e6d4c2c609","type":"link out","z":"87bab898757000a2","g":"b2941bd36f42936c","name":"link out 235","mode":"link","links":[],"x":1265,"y":4440,"wires":[]},{"id":"a6778dbdae56c316","type":"link out","z":"87bab898757000a2","g":"b2941bd36f42936c","name":"link out 236","mode":"link","links":[],"x":1325,"y":4460,"wires":[]},{"id":"d8109ab529567d6e","type":"link out","z":"87bab898757000a2","g":"b2941bd36f42936c","name":"link out 237","mode":"link","links":[],"x":1385,"y":4480,"wires":[]},{"id":"749b4d1c28ac4963","type":"comment","z":"87bab898757000a2","g":"b2941bd36f42936c","name":"NOT IMPLEMNTED RIGHT NOW","info":"","x":1070,"y":4460,"wires":[]},{"id":"97e779233af476c5","type":"function","z":"87bab898757000a2","g":"12d89e0a67715ef8","name":"VentsSetup","func":"let outputs = [null, null, null];\n\nlet ventsState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.vents.length; i++) {\n    if (msg.payload.vents[i].entity_id.includes('vents')) {\n        ventsState = msg.payload.vents[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.ventsSet.value === \"increased\" && ventsState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.ventsSet.value === \"reduced\" && ventsState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.ventsSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Befeuchter unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1130,"y":4620,"wires":[["ad5822edfe94c662"],["bb58b49ed058723c"],["98d32b41f170df22"],[]]},{"id":"f46b666e01621da8","type":"join","z":"87bab898757000a2","g":"12d89e0a67715ef8","name":"VentsData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"4","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"num","reduceFixup":"","x":930,"y":4620,"wires":[["97e779233af476c5"]]},{"id":"64086f50f3158f39","type":"link in","z":"87bab898757000a2","g":"12d89e0a67715ef8","name":"link in 74","links":[],"x":875,"y":4580,"wires":[["f46b666e01621da8"]]},{"id":"ad5822edfe94c662","type":"link out","z":"87bab898757000a2","g":"12d89e0a67715ef8","name":"link out 238","mode":"link","links":[],"x":1275,"y":4600,"wires":[]},{"id":"bb58b49ed058723c","type":"link out","z":"87bab898757000a2","g":"12d89e0a67715ef8","name":"link out 239","mode":"link","links":[],"x":1315,"y":4620,"wires":[]},{"id":"98d32b41f170df22","type":"link out","z":"87bab898757000a2","g":"12d89e0a67715ef8","name":"link out 240","mode":"link","links":[],"x":1375,"y":4640,"wires":[]},{"id":"eabc5afdc7486d58","type":"comment","z":"87bab898757000a2","g":"12d89e0a67715ef8","name":"NOT READY","info":"","x":1090,"y":4620,"wires":[]},{"id":"373403c70d18ed2e","type":"function","z":"87bab898757000a2","g":"924791273d1f0464","name":"DehumidifierSetup","func":"let outputs = [null, null, null];\n\nlet dehumidifierState = null;\n\n// Schleife, um den Zustand des Dehumidifier zu finden\nfor (let i = 0; i < msg.payload.dehumidifier.length; i++) {\n    if (msg.payload.dehumidifier[i].entity_id.includes('dehumidifier')) {\n        dehumidifierState = msg.payload.dehumidifier[i].value;\n        break;\n    }\n}\n\n// Dehumidifier starten\nif (msg.payload.dehumidifierSet.value === \"increased\" && dehumidifierState === \"off\") {\n    outputs[0] = { payload: \"Starte Dehumidifier\", topic: \"Start\" };\n}\n\n// Dehumidifier stoppen\nif (msg.payload.dehumidifierSet.value === \"reduced\" && dehumidifierState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Dehumidifier\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.dehumidifierSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Dehumidifier unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1150,"y":4020,"wires":[["2a9f9087dc56f131"],["6e03a74882a0defb"],["056359bb9ab228ce"],[]]},{"id":"0550e27bc4f11b6f","type":"join","z":"87bab898757000a2","g":"924791273d1f0464","name":"DehumidifierData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":930,"y":4020,"wires":[["373403c70d18ed2e"]]},{"id":"37cea002b8b4bca6","type":"link in","z":"87bab898757000a2","g":"924791273d1f0464","name":"Dehumidifier","links":[],"x":855,"y":3980,"wires":[["0550e27bc4f11b6f"]]},{"id":"2a9f9087dc56f131","type":"link out","z":"87bab898757000a2","g":"924791273d1f0464","name":"DehumidiferStart","mode":"link","links":["99832bcde6aaec0d"],"x":1305,"y":4000,"wires":[]},{"id":"6e03a74882a0defb","type":"link out","z":"87bab898757000a2","g":"924791273d1f0464","name":"DehumidiferStop","mode":"link","links":["b576fb3aef39185a"],"x":1355,"y":4020,"wires":[]},{"id":"056359bb9ab228ce","type":"link out","z":"87bab898757000a2","g":"924791273d1f0464","name":"link out 241","mode":"link","links":[],"x":1405,"y":4040,"wires":[]},{"id":"b64058966bc2b03a","type":"function","z":"87bab898757000a2","g":"07e412f9e1dd538e","name":"HeaterSetup","func":"let outputs = [null, null, null];\n\nlet heaterState = null;\n\n// Schleife, um den Zustand des Heater zu finden\nfor (let i = 0; i < msg.payload.heater.length; i++) {\n    if (msg.payload.heater[i].entity_id.includes('heater')) {\n        heaterState = msg.payload.heater[i].value;\n        break;\n    }\n}\n\n// Heater starten\nif (msg.payload.heaterSet.value === \"increased\" && heaterState === \"off\") {\n    outputs[0] = { payload: \"Start Heater\", topic: \"Start\" };\n}\n\n// Heater stoppen\nif (msg.payload.heaterSet.value === \"reduced\" && heaterState === \"on\") {\n    outputs[1] = { payload: \"Stop Heater\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.heaterSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Heater unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1130,"y":4180,"wires":[["398f75acb586fac8"],["7bf434e4292d2327"],["c1b24bccf2e7d5a7"],[]]},{"id":"26cedfa8d1203037","type":"join","z":"87bab898757000a2","g":"07e412f9e1dd538e","name":"HeaterData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":930,"y":4180,"wires":[["b64058966bc2b03a"]]},{"id":"623303e267deef2d","type":"link in","z":"87bab898757000a2","g":"07e412f9e1dd538e","name":"link in 75","links":[],"x":865,"y":4140,"wires":[["26cedfa8d1203037"]]},{"id":"398f75acb586fac8","type":"link out","z":"87bab898757000a2","g":"07e412f9e1dd538e","name":"HeaterStart","mode":"link","links":["958127653d74be3f"],"x":1285,"y":4160,"wires":[]},{"id":"7bf434e4292d2327","type":"link out","z":"87bab898757000a2","g":"07e412f9e1dd538e","name":"HeaterStop","mode":"link","links":["4cbea83396a0f0ac"],"x":1345,"y":4180,"wires":[]},{"id":"c1b24bccf2e7d5a7","type":"link out","z":"87bab898757000a2","g":"07e412f9e1dd538e","name":"link out 242","mode":"link","links":[],"x":1395,"y":4200,"wires":[]},{"id":"faf00348be972d39","type":"join","z":"87bab898757000a2","g":"bfb1374fcf5b48b9","name":"CoolerData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":930,"y":4320,"wires":[["36903ebd466f326d"]]},{"id":"303dad00f2afe923","type":"link in","z":"87bab898757000a2","g":"bfb1374fcf5b48b9","name":"link in 76","links":[],"x":865,"y":4280,"wires":[["faf00348be972d39"]]},{"id":"36903ebd466f326d","type":"function","z":"87bab898757000a2","g":"bfb1374fcf5b48b9","name":"CoolerSetup","func":"let outputs = [null, null, null];\n\nlet coolerState = null;\n\n// Schleife, um den Zustand des Cooler zu finden\nfor (let i = 0; i < msg.payload.cooler.length; i++) {\n    if (msg.payload.cooler[i].entity_id.includes('cooler')) {\n        coolerState = msg.payload.cooler[i].value;\n        break;\n    }\n}\n\n// Cooler starten\nif (msg.payload.coolerSet.value === \"increased\" && coolerState === \"off\") {\n    outputs[0] = { payload: \"Start Cooler\", topic: \"Start\" };\n}\n\n// Cooler stoppen\nif (msg.payload.coolerSet.value === \"reduced\" && coolerState === \"on\") {\n    outputs[1] = { payload: \"Stop Cooler\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.coolerSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Cooler unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1130,"y":4320,"wires":[["3df780562aaccd0e"],["d2ed257429706836"],["e6f79e1c57373dcd"],[]]},{"id":"3df780562aaccd0e","type":"link out","z":"87bab898757000a2","g":"bfb1374fcf5b48b9","name":"CoolerStart","mode":"link","links":["5a5614359d863721"],"x":1295,"y":4300,"wires":[]},{"id":"d2ed257429706836","type":"link out","z":"87bab898757000a2","g":"bfb1374fcf5b48b9","name":"CoolerStop","mode":"link","links":["54ac3c52a83ae28a"],"x":1355,"y":4320,"wires":[]},{"id":"e6f79e1c57373dcd","type":"link out","z":"87bab898757000a2","g":"bfb1374fcf5b48b9","name":"link out 243","mode":"link","links":[],"x":1405,"y":4340,"wires":[]},{"id":"a34b894b03b36458","type":"link in","z":"3752d27d7587c957","name":"VeggiLiveData","links":["e84242346557dbcb"],"x":35,"y":60,"wires":[["0b3cb88f4a5201ce","ff0f10e0360a6aef"]]},{"id":"0b3cb88f4a5201ce","type":"debug","z":"3752d27d7587c957","name":"VeggiLiveData","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":200,"y":60,"wires":[]},{"id":"8c9088a88c067085","type":"link in","z":"3752d27d7587c957","name":"VeggiCtrl","links":["094a8eca640c4e2d","96234401e3328f98"],"x":35,"y":20,"wires":[["c9ccfd1214ea1094"]]},{"id":"c9ccfd1214ea1094","type":"debug","z":"3752d27d7587c957","name":"VegiTentData","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":130,"y":20,"wires":[]},{"id":"ccdccc414634ff7d","type":"ha-sensor","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"currentVPD","entityConfig":"5de3d083be69c9ff","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1450,"y":120,"wires":[["c9b790e0fa1dbc49"]]},{"id":"6348b269079bfa32","type":"ha-sensor","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"VegiAVGTemp","entityConfig":"fbd2ef51e597d808","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1240,"y":160,"wires":[["8d38db5fb60c01a9"]]},{"id":"82a3c89470307c7b","type":"ha-sensor","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"VegiAVGHum","entityConfig":"c918d481d80ee2dc","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1240,"y":220,"wires":[["8d38db5fb60c01a9"]]},{"id":"dd1ef50d40a2e8fa","type":"function","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"VPD Calc ","func":"function calculateVPD(luftTemperatur, blattTemperatur, relativeLuftfeuchtigkeit) {\n    // Stellen Sie sicher, dass alle Eingaben Zahlen sind\n    luftTemperatur = parseFloat(luftTemperatur);\n    blattTemperatur = parseFloat(blattTemperatur);\n    relativeLuftfeuchtigkeit = parseFloat(relativeLuftfeuchtigkeit);\n\n    // Überprüfen Sie, ob einer der Werte NaN ist\n    if (isNaN(luftTemperatur) || isNaN(blattTemperatur) || isNaN(relativeLuftfeuchtigkeit)) {\n        return NaN; // Geändert von \"unavailable\" zu NaN für bessere Handhabung in numerischen Berechnungen\n    }\n\n    // Berechnungen ohne Rundung\n    let sdpLuft = 0.6108 * Math.exp((17.27 * luftTemperatur) / (luftTemperatur + 237.3));\n    let sdpBlatt = 0.6108 * Math.exp((17.27 * blattTemperatur) / (blattTemperatur + 237.3));\n    let adp = (relativeLuftfeuchtigkeit / 100) * sdpLuft;\n    let vpd = sdpBlatt - adp;\n\n    // Rückgabe als number, nicht als string\n    return parseFloat(vpd.toFixed(2));\n}\n\n// Beispiel für die Verwendung der Funktion\nlet luftTemperatur = parseFloat(msg.payload.AvgData.AvgTempData); // Stellen Sie sicher, dass dies eine Zahl ist\nlet blattTemperatur = parseFloat(msg.payload.AvgData.AvgTempData) - parseFloat(msg.payload.LeafOffSet); // Keine Rundung, genaue Berechnung\nlet relativeLuftfeuchtigkeit = parseFloat(msg.payload.AvgData.AvgHumData); // Stellen Sie sicher, dass dies eine Zahl ist\n\nlet vpd = calculateVPD(luftTemperatur, blattTemperatur, relativeLuftfeuchtigkeit);\n\nmsg.payload = vpd; // Nun ist msg.payload eine Zahl\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1280,"y":120,"wires":[["ccdccc414634ff7d"]]},{"id":"623fb660cf22ede4","type":"function","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"Calc-AVG","func":"// Funktion zur Berechnung des Durchschnitts\nconst AvgTemp = (temps) => {\n    let sum = 0;\n    let count = 0;\n\n    temps.forEach((entry) => {\n        const temp = parseFloat(entry.value);\n        if (!isNaN(temp)) {\n            sum += temp;\n            count++;\n        }\n    });\n\n    if (count === 0) {\n        return \"unavailable\";\n    }\n\n    const avg = sum / count;\n    return avg.toFixed(2);\n};\n\n// Durchschnittstemperatur für jede Temperaturkategorie berechnen\nconst temperatureAvg = AvgTemp(msg.payload.temperature);\nconst humidityAvg = AvgTemp(msg.payload.humidity);\n\n// Objekt mit den Durchschnittswerten erstellen\nconst avgData = {\n    AvgTempData: temperatureAvg,\n    AvgHumData: humidityAvg\n};\n\n// Nachrichten erstellen und zurückgeben\nconst avgDataMsg = { payload: avgData, topic: \"AvgData\" };\nconst tempMsg = { payload: temperatureAvg, topic: \"AvgTemp\" };\nconst humMsg = { payload: humidityAvg, topic: \"AvgHum\" };\n\nreturn [avgDataMsg, tempMsg, humMsg];\n","outputs":3,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":940,"y":140,"wires":[["9e679a1a5777db44"],["6348b269079bfa32"],["82a3c89470307c7b"]]},{"id":"66898e3bde87b1c4","type":"comment","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"VPD-Creation","info":"","x":1150,"y":80,"wires":[]},{"id":"b4ffc7429cc6d314","type":"function","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"TentModesSetup","func":"// Initialisiert das Array für die Ausgänge mit Nullen\nlet outputs = [null, null, null, null, null ];\n\n// Überprüft den Zustand des eingehenden Payloads und setzt den entsprechenden Ausgang\nif (msg.payload === \"VPD Perfection\") {\n    return [{ payload: msg.payload, topic: \"Perfection\" }, null, null, null,null];\n}\nelse if (msg.payload === \"IN-VPD-Range\") {\n    return [null, { payload: msg.payload, topic: \"AutoAvgVPD\" }, null, null, null];\n}\nelse if (msg.payload === \"Targeted VPD\") {\n    return [null, null, { payload: msg.payload, topic: \"TargetedVPD\" }, null, null];\n}\nelse if (msg.payload === \"CropSteering\") {\n    return [null, null, null, { payload: msg.payload, topic: \"ModeDisabeld\" }, null ];\n}\nelse if (msg.payload === \"Disabled\") {\n    return [null, null, null, null, { payload: msg.payload, topic: \"ModeDisabeld\" }];\n}\n\n// Wenn keine Bedingungen zutreffen, sendet nichts\nreturn [null, null, null, null,null];\n","outputs":5,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1770,"y":200,"wires":[["128a30397aed36be"],["2da69194534ed372"],["68225790c0cb82bc"],["8efbc7331afa5d51"],["08f0fa9570535866"]]},{"id":"08f0fa9570535866","type":"function","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"DISABLED AUTO","func":"msg.payload=\"DISABLED VEGGI\"\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1770,"y":260,"wires":[["243e4dc964a7dbf4"]]},{"id":"243e4dc964a7dbf4","type":"debug","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"debug 123","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1770,"y":300,"wires":[]},{"id":"128a30397aed36be","type":"link out","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"VPD-Perfektion","mode":"link","links":["a0b3236b810a1d68"],"x":1915,"y":140,"wires":[]},{"id":"2da69194534ed372","type":"link out","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"IN-Range-VPD","mode":"link","links":["7e18ed0416316f92","10975d949b78c673"],"x":1915,"y":180,"wires":[]},{"id":"68225790c0cb82bc","type":"link out","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"TargetedVPD","mode":"link","links":["474c1b1dab6d9b7f","4a116bed2a39fb84","f409e7c8d74372fc"],"x":1915,"y":220,"wires":[]},{"id":"b1dbc5b52ddb3d1b","type":"comment","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"TentModes","info":"","x":1800,"y":140,"wires":[]},{"id":"c9b790e0fa1dbc49","type":"api-current-state","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"TentMode","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"select.vegitentmodes","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"TentMode","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1620,"y":120,"wires":[["b4ffc7429cc6d314"]]},{"id":"bcc5756283e66c56","type":"join","z":"3752d27d7587c957","g":"6f11fec5044a631a","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"perfektion","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"3","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":830,"y":1300,"wires":[["db64f19844a45a25","df06b3a9c9e88a34"]]},{"id":"db64f19844a45a25","type":"function","z":"3752d27d7587c957","g":"6f11fec5044a631a","name":"Make Perfekt VPD","func":"const tolerance = 0.025; // Toleranzwert für die VPD-Anpassung\n\n// Berechnet den durchschnittlichen Wert aus zwei Zahlen im Array VPDStageValue und begrenzt das Ergebnis auf zwei Dezimalstellen\nconst averageVPD = (msg.payload.VPDStageValue[0] + msg.payload.VPDStageValue[1]) / 2;\nconst perfectVPD = parseFloat(averageVPD.toFixed(3));\n\nconst currentVPD = parseFloat(msg.payload.currentVPD);\n\n// Build increase base of State % diffrence from Current VPD to avarangeVPD\n// Berechnung der prozentualen Abweichung vom Ziel-VPD\nconst percentDifference = ((currentVPD - perfectVPD) / perfectVPD) * 100;\n\n\n\n// IF not in Range Do Nothing\nif (currentVPD < msg.payload.VPDStageValue[0] || currentVPD > msg.payload.VPDStageValue[1]){\n    return\n}\n// Warnung über die prozentuale Abweichung\nnode.warn(`Perfect-VEGGI % : ${percentDifference.toFixed(2)}%`);\nnode.warn(`Perfect-Veggi-Current VPD: ${currentVPD}`);\nnode.warn(`Perfect-Veggi-Target-VPD: ${perfectVPD} with ${tolerance} Tolerance`);\n\n\n\n// Funktion zur Berechnung der notwendigen Anpassungen basierend auf der Differenz zum VPD-Zielbereich.\nfunction calculateAdjustment(currentVPD, perfectVPD) {\n    // Wenn der aktuelle VPD unter dem minimalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu erhöhen.\n    if (currentVPD < perfectVPD - tolerance) {\n        node.warn(`Perfect-Veggi-VPD:: ${currentVPD} zu Gering Erhöe Temp oder veringere die Feuchtikeit`);\n        return {\n            exhaustSpeed: \"increased\",      // Erhöht die Abluftgeschwindigkeit, um feuchte Luft herauszuziehen\n            humidifier: \"reduced\",          // Schaltet den Luftbefeuchter aus, um Feuchtigkeit zu reduzieren\n            dehumidifier: \"increased\",       // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            heaterFan: \"increased\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Reduzieren und Temp zu erhöhen\n            coolerFan: \"reduced\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Erhöhen und Temp zu veringern\n            ventsTopSpeed: \"increased\",     // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsDownSpeed: \"increased\",    // Erhöht die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"increased\"     // Erhöht die Lichtintensität, um die Temperatur zu steigern (wenn das die Temperatur beeinflusst)\n        };\n        \n    }\n    // Wenn der aktuelle VPD über dem maximalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu senken.\n    else if (currentVPD > perfectVPD + tolerance) {\n        node.warn(`Perfect-Veggi-VPD: ${currentVPD} zu hoch verringere Temp oder erhöe die Feuchtikeit`);\n        return {\n            exhaustSpeed: \"reduced\",    // Reduziert die Abluftgeschwindigkeit, hält feuchte Luft im Raum\n            humidifier: \"increased\",           // Schaltet den Luftbefeuchter ein, um Feuchtigkeit zu erhöhen\n            dehumidifier: \"reduced\",       // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            heaterFan: \"reduced\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Reduzieren und Temp zu erhöhen\n            coolerFan: \"increased\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Erhöhen und Temp zu veringern\n            ventsTopSpeed: \"reduced\",   // Reduziert die Geschwindigkeit der oberen Belüftung\n            ventsDownSpeed: \"reduced\",  // Reduziert die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"reduced\"      // Verringert die Lichtintensität, um die Temperatur zu senken (wenn das die Temperatur beeinflusst)\n        };\n    }\n    // Wenn der VPD im Zielbereich liegt, sind keine Anpassungen erforderlich.\n             node.warn(`Perfect-Veggi-VPD: ${currentVPD} im Gewünschten Bereich`);\n    return {\n        exhaustSpeed: \"unchanged\",\n        humidifier: \"unchanged\",\n        dehumidifier: \"unchanged\",       // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n        heaterFan: \"unchanged\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Reduzieren und Temp zu erhöhen\n        coolerFan: \"unchanged\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Erhöhen und Temp zu veringern\n        ventsTopSpeed: \"unchanged\",\n        ventsDownSpeed: \"unchanged\",\n        lightIntensity: \"unchanged\"\n    };\n}\n\n// Entscheidungslogik zur Steuerung der Umgebungsbedingungen, nutzt die calculateAdjustment Funktion.\nconst adjustments = calculateAdjustment(currentVPD, perfectVPD);\nmsg.payload = {\n    exhaustSpeed: adjustments.exhaustSpeed,\n    humidifier: adjustments.humidifier,\n    dehumidifier: adjustments.dehumidifier,\n    heaterFan: adjustments.heaterFan,\n    coolerFan: adjustments.coolerFan,\n    ventsTopSpeed: adjustments.ventsTopSpeed,\n    ventsDownSpeed: adjustments.ventsDownSpeed,\n    lightIntensity: adjustments.lightIntensity,\n    percentDifference: percentDifference.toFixed(2)\n};\nmsg.perfektion = \"VPDActions\"\n\n// Rückgabe des modifizierten Payloads für weitere Verwendung im Flow.\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":990,"y":1280,"wires":[["c97d86f4eb3827ad","23a4528b1040c510"]]},{"id":"c97d86f4eb3827ad","type":"function","z":"3752d27d7587c957","g":"6f11fec5044a631a","name":"Check What Do","func":"let outputs = [null, null, null, null, null, null, null, null, null];\n\nvar percentDifference = msg.payload.percentDifference\n\n// Abluft\nif (msg.payload.exhaustSpeed === \"unchanged\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"increased\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"reduced\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n}\n\n// Humidifier\nif (msg.payload.humidifier === \"unchanged\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"increased\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"reduced\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n}\n\n// Dehumidifier\nif (msg.payload.dehumidifier === \"unchanged\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"increased\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"reduced\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n}\n\n// HeaterFan\nif (msg.payload.heaterFan === \"unchanged\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"increased\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"reduced\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n}\n\n// CoolerFan\nif (msg.payload.coolerFan === \"unchanged\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"increased\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"reduced\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n}\n\n// LightIntensity\nif (msg.payload.lightIntensity === \"unchanged\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"increased\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"reduced\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n}\n\n// VentsALL\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"increased\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"reduced\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n}\n\n// VentsTopSpeed\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"increased\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"reduced\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n}\n\n// VentsDownSpeed\nif (msg.payload.ventsDownSpeed === \"unchanged\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"increased\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"reduced\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n}\n\n\n\nreturn outputs;\n","outputs":9,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1200,"y":1280,"wires":[["e67e4105200aba9a","c35c0f4aa29d0d07"],["0eca8b29f89f4926","c35c0f4aa29d0d07"],["f81d8c962ee7f1d5","c35c0f4aa29d0d07"],["2fe236b6ecf4be1a","c35c0f4aa29d0d07"],["f0d2d59e9fb71a11","c35c0f4aa29d0d07"],["bf178d140cd3a947","c35c0f4aa29d0d07"],["15db15c7e2de4370","c35c0f4aa29d0d07"],["15db15c7e2de4370","c35c0f4aa29d0d07"],["15db15c7e2de4370","c35c0f4aa29d0d07"]]},{"id":"0a28b21d3b4a4f2b","type":"comment","z":"3752d27d7587c957","g":"6dd36616a92a87a4","name":"IN-RANGE-VPD","info":"","x":180,"y":2400,"wires":[]},{"id":"68a16773bf83b16c","type":"comment","z":"3752d27d7587c957","g":"d14fa664d0413a5c","name":"Targeted-VPD","info":"","x":170,"y":3700,"wires":[]},{"id":"e52f426c3a45d473","type":"link out","z":"3752d27d7587c957","name":"ExhaustData","mode":"link","links":["155cb7e4a436ab9f","f9d66aa02cde8cbc","418a4427dfb8d6af","44d0938e5407b630","cfee122ef13568d8","38dec2c32136830f","4c2f7e58d2747c89"],"x":575,"y":680,"wires":[]},{"id":"2190d00a05105c37","type":"function","z":"3752d27d7587c957","g":"8ecdceb2353f84e1","name":"Exhaust Setup","func":"// Hilfsfunktion zur Überprüfung, ob ein Wert numerisch ist\nconst isNumeric = (value) => {\n    return !isNaN(parseFloat(value)) && isFinite(value);\n};\n\n// Funktion zur Bestimmung des dutyCycle-Werts\nconst findDutyCycle = (exhaustArray) => {\n    if (exhaustArray.length === 0) {\n        return null; // Keine Werte zu verarbeiten, wenn das Array leer ist\n    }\n    for (let i = 0; i < exhaustArray.length; i++) {\n        if (isNumeric(exhaustArray[i].value)) {\n            return parseInt(exhaustArray[i].value, 10);\n        }\n    }\n    return null; // Falls kein numerischer Wert gefunden wurde\n};\n\nlet outputs = [null, null, null, null]; // Array für vier Ausgänge\n\n// Zustand der Abluft und Geschwindigkeit aus der Payload extrahieren\nconst exhaustSpeed = msg.payload.exhaustSet.value; // Anpassung hier\nlet exhaustState = 'off'; // Standardwert setzen, falls kein Zustand gefunden wird\nif (msg.payload.Exhaust && msg.payload.Exhaust.length > 0) {\n    const exhaustSwitch = msg.payload.Exhaust.find(e => e.entity_id && e.entity_id.toLowerCase().includes(\"switch\"));\n    if (exhaustSwitch && exhaustSwitch.value) {\n        exhaustState = exhaustSwitch.value;\n    }\n}\n\nconst dutyCycle = findDutyCycle(msg.payload.Exhaust) || 0 ;\n\n// Prüfen, ob ein dutyCycle vorhanden ist\nif (dutyCycle === null) {\n    return outputs; // Kein dutyCycle gefunden, keine Aktion erforderlich\n}\n\nconst percentDifference = parseFloat(msg.payload.exhaustSet.percentDifference);\nlet newDutyCycle = dutyCycle;\n\n// Berechnung des neuen Duty Cycle basierend auf der prozentualen Abweichung\nif (percentDifference !== 0) {\n    if (percentDifference < 0) {\n        // Wenn der Wert negativ ist, erhöhen wir den Duty Cycle\n        newDutyCycle = dutyCycle + Math.abs(percentDifference);\n    } else {\n        // Wenn der Wert positiv ist, verringern wir den Duty Cycle\n        newDutyCycle = dutyCycle - percentDifference;\n    }\n\n    // Stellen Sie sicher, dass der neue Duty Cycle innerhalb der Grenzen liegt\n    newDutyCycle = Math.min(95, Math.max(10, Math.round(newDutyCycle)));\n}\n\n// Abluft starten auf dem ersten Ausgang, wenn sie aus ist und erhöht werden muss\nif (exhaustSpeed === \"increased\" && exhaustState === \"off\") {\n    outputs[0] = { payload: \"Starte Abluft\", topic: \"Start\" };\n    return outputs;\n}\n\n// Abluft-Geschwindigkeit erhöhen, wenn sie bereits eingeschaltet ist\nif (exhaustSpeed === \"increased\" && exhaustState === \"on\") {\n    outputs[2] = { payload: newDutyCycle.toString(), topic: \"Increase\" };\n    return outputs;\n}\n\n// Abluft stoppen auf dem zweiten Ausgang, wenn die Geschwindigkeit reduziert wird und der Duty Cycle sehr niedrig ist\nif (exhaustSpeed === \"reduced\" && exhaustState === \"on\" && newDutyCycle <= 10) {\n    outputs[1] = { payload: \"Stoppe Abluft\", topic: \"Stop\" };\n    return outputs;\n} else if (exhaustSpeed === \"reduced\" && exhaustState === \"on\") {\n    outputs[2] = { payload: newDutyCycle.toString(), topic: \"Decrease\" };\n    return outputs;\n}\n\n// Warnung ausgeben, wenn versucht wird, die Abluftgeschwindigkeit zu reduzieren, obwohl sie bereits aus ist\nif (exhaustSpeed === \"reduced\" && exhaustState === \"off\") {\n    outputs[1] = { payload: \"Abluft bereits gestoppt, kann nicht weiter reduziert werden\", topic: \"AlreadyStopped\" };\n    return outputs;\n}\n\n// Nichts tun, wenn keine Änderung erforderlich ist\nif (exhaustSpeed === \"unchanged\") {\n    outputs[3] = { payload: \"Abluft unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n    return outputs;\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1800,"y":1220,"wires":[["9ee872c8de807c68","d1ba22a962408cbd"],["9ee872c8de807c68","068b8e7a89eef1ba"],["64311156e04065be","9ee872c8de807c68"],["9ee872c8de807c68"]]},{"id":"032ae17ffae61c84","type":"http request","z":"3752d27d7587c957","g":"8ecdceb2353f84e1","name":"DutyPostChange","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.234:5533/air/ctrl","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":2050,"y":1300,"wires":[[]]},{"id":"64311156e04065be","type":"function","z":"3752d27d7587c957","g":"8ecdceb2353f84e1","name":"DutyChanger","func":"\nconst NewDuty = msg.payload\n\nmsg.payload = { \"newDuty\": NewDuty}\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":2070,"y":1260,"wires":[["032ae17ffae61c84"]]},{"id":"49c6e2de0f1b0630","type":"link out","z":"3752d27d7587c957","name":"Humidifier","mode":"link","links":["209b5f3139ea01b4","6f8118f3fa861377","5373a6c3f26af0c7","741c0ac411bcbcec","35533e64c19a08ec","8c9e965122e60702","7e0384d9297a7e91"],"x":575,"y":720,"wires":[]},{"id":"e67e4105200aba9a","type":"join","z":"3752d27d7587c957","g":"8ecdceb2353f84e1","name":"exhasutData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1600,"y":1300,"wires":[["2190d00a05105c37","9ee872c8de807c68","db06e129a47a81f9"]]},{"id":"418a4427dfb8d6af","type":"link in","z":"3752d27d7587c957","g":"8ecdceb2353f84e1","name":"ExhasutData","links":["e52f426c3a45d473"],"x":1545,"y":1220,"wires":[["e67e4105200aba9a"]]},{"id":"38a22324d2ddeb2e","type":"function","z":"3752d27d7587c957","g":"2651868e58bb1778","name":"BefeuchterSetup","func":"let outputs = [null, null, null];\n\nlet humidifierState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.humidifier.length; i++) {\n    if (msg.payload.humidifier[i].entity_id.includes('humidifier')) {\n        humidifierState = msg.payload.humidifier[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.humidifierSet.value === \"increased\" && humidifierState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.humidifierSet.value === \"reduced\" && humidifierState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun oder ausschalten bei unverändertem Zustand\nif (msg.payload.humidifierSet.value === \"unchanged\") {\n    if (humidifierState === \"on\") {\n        // Wenn der Befeuchter im Zelt an ist und kein Wechsel angefordert wird, sende \"off\"\n        outputs[0] = { payload: \"off\", topic: \"Humidifier\" };\n    } else {\n        // Wenn der Befeuchter bereits aus ist oder nicht geändert werden soll\n        outputs[1] = { payload: \"Humidifier already stopped, nothing to do! Waiting for changes.\", topic: \"Humidifier\" };\n    }\n}\n\n// Nichts tun (detaillierte Information)\nif (msg.payload.humidifierSet.value === \"unchanged\" && humidifierState !== \"on\" && humidifierState !== \"off\") {\n    outputs[2] = { payload: \"Befeuchter unverändert, keine Aktion erforderlich\", data: msg.payload, topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1830,"y":1440,"wires":[["fb9d3843392773d1"],["d2b8b521e6d704e6"],["317e9ec8876608ff"],[]]},{"id":"0eca8b29f89f4926","type":"join","z":"3752d27d7587c957","g":"2651868e58bb1778","name":"HumidityData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1600,"y":1460,"wires":[["38a22324d2ddeb2e"]]},{"id":"5373a6c3f26af0c7","type":"link in","z":"3752d27d7587c957","g":"2651868e58bb1778","name":"HumidifierData","links":["49c6e2de0f1b0630"],"x":1535,"y":1400,"wires":[["0eca8b29f89f4926"]]},{"id":"10975d949b78c673","type":"link in","z":"3752d27d7587c957","g":"6dd36616a92a87a4","name":"VPD-Perfektion","links":["2da69194534ed372"],"x":125,"y":2460,"wires":[["df5e74c7f7712579"]]},{"id":"2afcbf200982e39e","type":"function","z":"3752d27d7587c957","g":"6dd36616a92a87a4","name":"VPD State Values","func":"const plantStages = {\n    Germination: [0.42, 0.78], // Optimaler VPD-Bereich für Keimung bei 25-30°C\n    Clones: [0.42, 0.78],      // Optimaler VPD-Bereich für Klone bei 25-30°C\n    EarlyVeg: [0.55, 0.85],    // Optimaler VPD-Bereich für frühe Vegetation bei 20-25°C\n    MidVeg: [0.85, 1.1],      // Optimaler VPD-Bereich für mittlere Vegetation bei 20-25°C\n    LateVeg: [0.85, 1.2],     // Optimaler VPD-Bereich für späte Vegetation bei 20-25°C\n    EarlyFlower: [1, 1.25], // Optimaler VPD-Bereich für frühe Blüte bei 20-25°C\n    MidFlower: [1.1, 1.4],   // Optimaler VPD-Bereich für mittlere Blüte bei 20-25°C\n    LateFlower: [1.2, 1.6],  // Optimaler VPD-Bereich für späte Blüte bei 20-25°C\n};\n\n\n\n// Beispiel, wie msg.payload gesetzt wird\n// msg.payload = \"LateVeg\"; // Kommentieren Sie diese Zeile aus, um den tatsächlichen msg.payload zu verwenden\n\n// Prüfen, ob das Wachstumsstadium im plantStages-Objekt vorhanden ist\nif (plantStages.hasOwnProperty(msg.payload)) {\n    // Setzen des VPD-Wertes aus dem plantStages-Objekt\n    msg.payload = plantStages[msg.payload];\n} else {\n    // Fehlermeldung, wenn das Wachstumsstadium nicht gefunden wurde\n    msg.payload = \"Unbekanntes Wachstumsstadium\";\n\n}\nmsg.perfektion = \"VPDStageValue\"\ndelete msg.data;\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":450,"y":2460,"wires":[["9ac8cca8bbd8cc26"]]},{"id":"9ac8cca8bbd8cc26","type":"join","z":"3752d27d7587c957","g":"6dd36616a92a87a4","name":"VPDWish","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":360,"y":2540,"wires":[["07308f4728d5980a"]]},{"id":"07308f4728d5980a","type":"function","z":"3752d27d7587c957","g":"6dd36616a92a87a4","name":"VPD Handler Array Value","func":"const tolerance = 0.00; // Toleranzwert für die VPD-Anpassung\n\n// Der aktuelle VPD-Wert wird aus dem Payload geholt und in eine Zahl umgewandelt.\nconst currentVPD = parseFloat(msg.payload.currentVPD);\n\n// Ziel-VPD-Bereich wird aus dem Payload geholt.\nconst targetVPDRange = msg.payload.targetVPD;\n\n// Logging der aktuellen VPD und Ziel-VPD-Bereich zur Überprüfung und Debugging.\nnode.warn(`Veggi-VPD array between: ${targetVPDRange[0]} and ${targetVPDRange[1]}`);\n\n// Berechnung der prozentualen Abweichung vom Ziel-VPD und Rundung auf ganze Zahlen\nconst percentDifference = Math.round(currentVPD < targetVPDRange[0] \n    ? ((currentVPD - targetVPDRange[0]) / targetVPDRange[0]) * 100 \n    : ((currentVPD - targetVPDRange[1]) / targetVPDRange[1]) * 100);\n\n// Funktion zur Berechnung der notwendigen Anpassungen basierend auf der Differenz zum VPD-Zielbereich.\nfunction calculateAdjustment(currentVPD, targetVPDRange) {\n    // Wenn der aktuelle VPD unter dem minimalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu erhöhen.\n    if (currentVPD < targetVPDRange[0] - tolerance) {\n        node.warn(`Veggi-VPD:: ${currentVPD} zu gering. Erhöhe Temp oder verringere die Feuchtigkeit`);\n        node.warn(`Veggi % VPD Target --> ${percentDifference} %`);\n        return {\n            exhaustSpeed: \"increased\",      // Erhöht die Abluftgeschwindigkeit, um feuchte Luft herauszuziehen\n            humidifier: \"reduced\",          // Schaltet den Luftbefeuchter aus, um Feuchtigkeit zu reduzieren\n            dehumidifier: \"increased\",       // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            heaterFan: \"increased\",         // Schaltet den Beheizer an, um die Feuchtigkeit zu reduzieren und Temp zu erhöhen\n            coolerFan: \"reduced\",           // Schaltet den Kühler an, um die Feuchtigkeit zu erhöhen und Temp zu verringern\n            ventsALL: \"increased\",          // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsTopSpeed: \"increased\",     // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsDownSpeed: \"increased\",    // Erhöht die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"increased\"     // Erhöht die Lichtintensität, um die Temperatur zu steigern (wenn das die Temperatur beeinflusst)\n        };\n        \n    }\n    // Wenn der aktuelle VPD über dem maximalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu senken.\n    else if (currentVPD > targetVPDRange[1] + tolerance) {\n        node.warn(`Veggi-VPD: ${currentVPD} zu hoch. Verringere Temp oder erhöhe die Feuchtigkeit`);\n        node.warn(`Veggi % VPD Target --> ${percentDifference} %`);\n        return {\n            exhaustSpeed: \"reduced\",    // Reduziert die Abluftgeschwindigkeit, hält feuchte Luft im Raum\n            humidifier: \"increased\",    // Schaltet den Luftbefeuchter ein, um Feuchtigkeit zu erhöhen\n            dehumidifier: \"reduced\",    // Schaltet den Luftentfeuchter aus, um Feuchtigkeit zu erhöhen\n            heaterFan: \"reduced\",       // Schaltet den Heizer aus, um die Temperatur zu verringern\n            coolerFan: \"increased\",     // Schaltet den Kühler an, um die Temperatur zu verringern\n            ventsALL: \"reduced\",        // Reduziert die Geschwindigkeit der Belüftung, um mehr feuchte Luft zu halten\n            ventsTopSpeed: \"reduced\",   // Reduziert die Geschwindigkeit der oberen Belüftung\n            ventsDownSpeed: \"reduced\",  // Reduziert die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"reduced\"   // Verringert die Lichtintensität, um die Temperatur zu senken (wenn das die Temperatur beeinflusst)\n        };\n    }\n    // Wenn der VPD im Zielbereich liegt, sind keine Anpassungen erforderlich.\n    node.warn(`Veggi-VPD: ${currentVPD} im gewünschten Bereich`);\n    return {\n        exhaustSpeed: \"unchanged\",\n        humidifier: \"unchanged\",\n        dehumidifier: \"unchanged\",    \n        heaterFan: \"unchanged\",        \n        coolerFan: \"unchanged\",        \n        ventsALL: \"unchanged\",       \n        ventsTopSpeed: \"unchanged\",\n        ventsDownSpeed: \"unchanged\",\n        lightIntensity: \"unchanged\"\n    };\n}\n\n// Entscheidungslogik zur Steuerung der Umgebungsbedingungen, nutzt die calculateAdjustment Funktion.\nconst adjustments = calculateAdjustment(currentVPD, targetVPDRange);\n\n// Berechnung der prozentualen Abweichung und Hinzufügen zum Payload\nmsg.payload = {\n    exhaustSpeed: adjustments.exhaustSpeed,\n    humidifier: adjustments.humidifier,\n    dehumidifier: adjustments.dehumidifier,\n    heaterFan: adjustments.heaterFan,\n    coolerFan: adjustments.coolerFan,\n    ventsALL: adjustments.ventsALL,\n    ventsTopSpeed: adjustments.ventsTopSpeed,\n    ventsDownSpeed: adjustments.ventsDownSpeed,\n    lightIntensity: adjustments.lightIntensity,\n    percentDifference: percentDifference\n};\n\nmsg.perfektion = \"VPDActions\";\n\n// Rückgabe des modifizierten Payloads für weitere Verwendung im Flow.\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":570,"y":2540,"wires":[["61d3b1e40e8a29c1"]]},{"id":"61d3b1e40e8a29c1","type":"function","z":"3752d27d7587c957","g":"6dd36616a92a87a4","name":"Check What Do","func":"let outputs = [null, null, null, null, null, null, null, null, null];\n\nvar percentDifference = msg.payload.percentDifference\n\n// Abluft\nif (msg.payload.exhaustSpeed === \"unchanged\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"increased\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"reduced\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n}\n\n// Humidifier\nif (msg.payload.humidifier === \"unchanged\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"increased\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"reduced\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n}\n\n// Dehumidifier\nif (msg.payload.dehumidifier === \"unchanged\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"increased\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"reduced\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n}\n\n// HeaterFan\nif (msg.payload.heaterFan === \"unchanged\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"increased\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"reduced\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n}\n\n// CoolerFan\nif (msg.payload.coolerFan === \"unchanged\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"increased\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"reduced\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n}\n\n// LightIntensity\nif (msg.payload.lightIntensity === \"unchanged\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"increased\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"reduced\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n}\n\n// VentsALL\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"increased\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"reduced\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n}\n\n// VentsTopSpeed\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"increased\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"reduced\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n}\n\n// VentsDownSpeed\nif (msg.payload.ventsDownSpeed === \"unchanged\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"increased\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"reduced\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n}\n\n\n\nreturn outputs;\n","outputs":9,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":540,"y":2640,"wires":[["1be63f2cfa82df0a","72b6eee10204eab0"],["1be63f2cfa82df0a","eadd457dd58778f4"],["1be63f2cfa82df0a","054a9ac36b5ddd7f"],["1be63f2cfa82df0a","fa6ccea1f0eb7761"],["1be63f2cfa82df0a","6adb40f69dc1d358"],["1be63f2cfa82df0a","23007d82705af554"],["1be63f2cfa82df0a","df73495949e6c8b7"],["df73495949e6c8b7"],["df73495949e6c8b7"]]},{"id":"1be63f2cfa82df0a","type":"debug","z":"3752d27d7587c957","g":"6dd36616a92a87a4","name":"debug 139","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":530,"y":2740,"wires":[]},{"id":"b7f3ca5cd432bab5","type":"poll-state","z":"3752d27d7587c957","g":"6dd36616a92a87a4","name":"currentVPD","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","updateInterval":"30","updateIntervalType":"num","updateIntervalUnits":"seconds","outputInitially":true,"outputOnChanged":true,"entityId":"sensor.vpdvegi","stateType":"num","ifState":"","ifStateType":"num","ifStateOperator":"is","outputs":1,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"currentVPD","valueType":"str"}],"x":230,"y":2600,"wires":[["9ac8cca8bbd8cc26"]]},{"id":"df5e74c7f7712579","type":"api-current-state","z":"3752d27d7587c957","g":"6dd36616a92a87a4","name":"ModeSelection","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"select.vegitentmodes","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"targetVPD","valueType":"str"},{"property":"perfektion","propertyType":"msg","value":"targetVPD","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":250,"y":2460,"wires":[["2afcbf200982e39e"]]},{"id":"f5fe0d1d1e07c638","type":"function","z":"3752d27d7587c957","g":"d14fa664d0413a5c","name":"Check What Do","func":"let outputs = [null, null, null, null, null, null, null, null, null];\n\nvar percentDifference = msg.payload.percentDifference\n\n// Abluft\nif (msg.payload.exhaustSpeed === \"unchanged\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"increased\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"reduced\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n}\n\n// Humidifier\nif (msg.payload.humidifier === \"unchanged\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"increased\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"reduced\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n}\n\n// Dehumidifier\nif (msg.payload.dehumidifier === \"unchanged\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"increased\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"reduced\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n}\n\n// HeaterFan\nif (msg.payload.heaterFan === \"unchanged\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"increased\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"reduced\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n}\n\n// CoolerFan\nif (msg.payload.coolerFan === \"unchanged\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"increased\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"reduced\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n}\n\n// LightIntensity\nif (msg.payload.lightIntensity === \"unchanged\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"increased\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"reduced\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n}\n\n// VentsALL\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"increased\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"reduced\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n}\n\n// VentsTopSpeed\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"increased\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"reduced\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n}\n\n// VentsDownSpeed\nif (msg.payload.ventsDownSpeed === \"unchanged\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"increased\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"reduced\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n}\n\n\n\nreturn outputs;\n","outputs":9,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":600,"y":3940,"wires":[["e43682853d47d44e","edc89824a48d595e"],["e43682853d47d44e","2c07528ffc45451d"],["e43682853d47d44e","e08625c0e15d465a"],["e43682853d47d44e","3ab18c9107c0b265"],["e43682853d47d44e","3058f5e69e108b49"],["e43682853d47d44e","2ee9dc2a253a61c0"],["e43682853d47d44e","292a5baf3d9f7209"],["292a5baf3d9f7209"],["292a5baf3d9f7209"]]},{"id":"e43682853d47d44e","type":"debug","z":"3752d27d7587c957","g":"d14fa664d0413a5c","name":"debug 141","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":570,"y":4040,"wires":[]},{"id":"80b9933fc37e57a6","type":"function","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"Calc-Dewpoint","func":"// Funktion zur Berechnung des Taupunkts\nconst calculateDewPoint = (temperature, humidity) => {\n    const temp = parseFloat(temperature);\n    const hum = parseFloat(humidity);\n\n    if (isNaN(temp) || isNaN(hum)) {\n        return \"unavailable\";\n    }\n\n    const dewPoint = temp - ((100 - hum) / 5);\n    return parseFloat(dewPoint.toFixed(3));\n};\n\n// Beispielinput\nconst inputData = msg.payload;\n\n// Taupunkt berechnen\nconst temperature = parseFloat(inputData.AvgTemp);\nconst humidity = parseFloat(inputData.AvgHum);\nconst dewPoint = calculateDewPoint(temperature, humidity);\n\n// Taupunkt als Zahl zurückgeben\nmsg.payload = dewPoint;\nreturn msg\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1540,"y":180,"wires":[["91e45ccb74a35800"]]},{"id":"8d38db5fb60c01a9","type":"join","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1390,"y":180,"wires":[["80b9933fc37e57a6"]]},{"id":"91e45ccb74a35800","type":"ha-sensor","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"VeggiAVGDewPoint","entityConfig":"bb585a7e9b14d52e","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[{"property":"topic","propertyType":"msg","value":"DryTentDewPoint","valueType":"str"}],"x":1510,"y":240,"wires":[[]]},{"id":"9e679a1a5777db44","type":"join","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1150,"y":120,"wires":[["dd1ef50d40a2e8fa"]]},{"id":"6225380f219a0d41","type":"link in","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"link in 8","links":["f0449f704d2f7c8a"],"x":895,"y":80,"wires":[["18a47541cb144519"]]},{"id":"18a47541cb144519","type":"function","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"Select","func":"let outputs = [null, null];\n\nvar leafMode = msg.payload.GlobalLeafSet;\nvar leafOffSet = msg.payload.LeafOffset;\nvar flowerLeafOffset = msg.payload.FlowerLeafOffset;\nvar veggiLeafOffset = msg.payload.VeggiLeafOffset;\nvar groomLeafOffset = msg.payload.GRoomLeafOffset;\n\n// Logic to set new offset based on leaf mode\nif (leafMode === \"Default\") {\n    outputs[0] = { payload: leafOffSet, topic: \"LeafOffSet\" };\n} else if (leafMode === \"Custom\") {\n    outputs[1] = { payload: veggiLeafOffset, topic: \"LeafOffSet\" };\n}\n\nreturn outputs;  // Return the modified outputs array\n","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":990,"y":80,"wires":[["9e679a1a5777db44"],["9e679a1a5777db44"]]},{"id":"157fdad538b46545","type":"join","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"VpdNeeds","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":740,"y":100,"wires":[["623fb660cf22ede4"]]},{"id":"8efbc7331afa5d51","type":"link out","z":"3752d27d7587c957","g":"b4216bd866b1924a","name":"CropSteering","mode":"link","links":[],"x":1915,"y":260,"wires":[]},{"id":"f409e7c8d74372fc","type":"link in","z":"3752d27d7587c957","g":"d14fa664d0413a5c","name":"VPD-Perfektion","links":["68225790c0cb82bc"],"x":105,"y":3760,"wires":[["d12e6221a51af518"]]},{"id":"95d7e3e76993cfba","type":"poll-state","z":"3752d27d7587c957","g":"d14fa664d0413a5c","name":"currentVPD","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","updateInterval":"30","updateIntervalType":"num","updateIntervalUnits":"seconds","outputInitially":true,"outputOnChanged":true,"entityId":"sensor.vpdvegi","stateType":"num","ifState":"","ifStateType":"num","ifStateOperator":"is","outputs":1,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"currentVPD","valueType":"str"}],"x":250,"y":3900,"wires":[["2fc57bbeab61d575"]]},{"id":"2fc57bbeab61d575","type":"join","z":"3752d27d7587c957","g":"d14fa664d0413a5c","name":"VPDWish","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":410,"y":3840,"wires":[["d630bdaf19da0309","01cd46160592fe21"]]},{"id":"d630bdaf19da0309","type":"function","z":"3752d27d7587c957","g":"d14fa664d0413a5c","name":"VPD Handler Array Value","func":"const tolerance = 0.00; // Toleranzwert für die VPD-Anpassung\n\n// Der aktuelle VPD-Wert wird aus dem Payload geholt und in eine Zahl umgewandelt.\nconst currentVPD = parseFloat(msg.payload.currentVPD);\n\n// Ziel-VPD-Bereich wird aus dem Payload geholt.\nconst targetVPDRange = msg.payload.targetVPD;\n\n// Logging der aktuellen VPD und Ziel-VPD-Bereich zur Überprüfung und Debugging.\nnode.warn(`Flower-VPD-Target: ${targetVPDRange}`);\n\n// Funktion zur Berechnung der notwendigen Anpassungen basierend auf der Differenz zum VPD-Zielbereich.\nfunction calculateAdjustment(currentVPD, targetVPDRange) {\n    // Wenn der aktuelle VPD unter dem minimalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu erhöhen.\n    if (currentVPD < targetVPDRange - tolerance) {\n        node.warn(`Flower-VPD: ${currentVPD} zu gering. Erhöhe Temp oder verringere die Feuchtigkeit.`);\n        return {\n            exhaustSpeed: \"increased\",      // Erhöht die Abluftgeschwindigkeit, um feuchte Luft herauszuziehen\n            humidifier: \"reduced\",          // Schaltet den Luftbefeuchter aus, um Feuchtigkeit zu reduzieren\n            dehumidifier: \"increased\",      // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            heaterFan: \"increased\",         // Schaltet den Beheizer an, um die Feuchtigkeit zu reduzieren und Temp zu erhöhen\n            coolerFan: \"reduced\",           // Schaltet den Beheizer an, um die Feuchtigkeit zu erhöhen und Temp zu verringern\n            ventsALL: \"increased\",          // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsTopSpeed: \"increased\",     // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsDownSpeed: \"increased\",    // Erhöht die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"increased\"     // Erhöht die Lichtintensität, um die Temperatur zu steigern (wenn das die Temperatur beeinflusst)\n        };\n    }\n    // Wenn der aktuelle VPD über dem maximalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu senken.\n    else if (currentVPD > targetVPDRange + tolerance) {\n        node.warn(`Flower-VPD: ${currentVPD} zu hoch. Verringere Temp oder erhöhe die Feuchtigkeit.`);\n        return {\n            exhaustSpeed: \"reduced\",    // Reduziert die Abluftgeschwindigkeit, hält feuchte Luft im Raum\n            humidifier: \"increased\",    // Schaltet den Luftbefeuchter ein, um Feuchtigkeit zu erhöhen\n            dehumidifier: \"reduced\",    // Schaltet den Luftentfeuchter aus, um Feuchtigkeit zu erhöhen\n            heaterFan: \"reduced\",       // Schaltet den Beheizer aus, um die Feuchtigkeit zu erhöhen und Temp zu senken\n            coolerFan: \"increased\",     // Schaltet den Kühler an, um die Feuchtigkeit zu erhöhen und Temp zu verringern\n            ventsALL: \"reduced\",        // Reduziert die Geschwindigkeit der Belüftung, um mehr feuchte Luft zu halten\n            ventsTopSpeed: \"reduced\",   // Reduziert die Geschwindigkeit der oberen Belüftung\n            ventsDownSpeed: \"reduced\",  // Reduziert die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"reduced\"   // Verringert die Lichtintensität, um die Temperatur zu senken (wenn das die Temperatur beeinflusst)\n        };\n    }\n    // Wenn der VPD im Zielbereich liegt, sind keine Anpassungen erforderlich.\n    node.warn(`Flower-VPD: ${currentVPD} im gewünschten Bereich.`);\n    return {\n        exhaustSpeed: \"unchanged\",\n        humidifier: \"unchanged\",\n        dehumidifier: \"unchanged\",\n        heaterFan: \"unchanged\",\n        coolerFan: \"unchanged\",\n        ventsALL: \"unchanged\",\n        ventsTopSpeed: \"unchanged\",\n        ventsDownSpeed: \"unchanged\",\n        lightIntensity: \"unchanged\"\n    };\n}\n\n// Funktion zur Berechnung der prozentualen Abweichung\nfunction calculatePercentDifference(currentVPD, targetVPD) {\n    return ((currentVPD - targetVPD) / targetVPD) * 100;\n}\n\n// Entscheidungslogik zur Steuerung der Umgebungsbedingungen, nutzt die calculateAdjustment Funktion.\nconst adjustments = calculateAdjustment(currentVPD, targetVPDRange);\nconst percentDifference = calculatePercentDifference(currentVPD, targetVPDRange);\n\nmsg.payload = {\n    exhaustSpeed: adjustments.exhaustSpeed,\n    humidifier: adjustments.humidifier,\n    dehumidifier: adjustments.dehumidifier,\n    heaterFan: adjustments.heaterFan,\n    coolerFan: adjustments.coolerFan,\n    ventsALL: adjustments.ventsALL,\n    ventsTopSpeed: adjustments.ventsTopSpeed,\n    ventsDownSpeed: adjustments.ventsDownSpeed,\n    lightIntensity: adjustments.lightIntensity,\n    percentDifference: percentDifference.toFixed(0) // Prozentuale Abweichung auf 2 Dezimalstellen gerundet\n};\n\nmsg.perfektion = \"VPDActions\";\n// Rückgabe des modifizierten Payloads für weitere Verwendung im Flow.\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":630,"y":3840,"wires":[["f5fe0d1d1e07c638"]]},{"id":"d12e6221a51af518","type":"api-current-state","z":"3752d27d7587c957","g":"d14fa664d0413a5c","name":"ModeSelection","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"number.veggitarget_vpd","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"targetVPD","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":260,"y":3760,"wires":[["2fc57bbeab61d575"]]},{"id":"01cd46160592fe21","type":"debug","z":"3752d27d7587c957","g":"d14fa664d0413a5c","name":"debug 181","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":490,"y":3760,"wires":[]},{"id":"ff0f10e0360a6aef","type":"function","z":"3752d27d7587c957","name":"Sort Sensor Types","func":"let data = msg.payload;\n\n// Arrays für verschiedene Sensortypen initialisieren\nlet wish = [];\nlet temperatures = [];\nlet humidity = [];\nlet dewpoints = [];\nlet moisture = [];\nlet pressures = [];\nlet battery = [];\nlet power = [];\nlet co2 = [];\nlet lumen = [];\nlet conductivity = [];\nlet switches = [];\nlet dutyCycleExhaust = [];\nlet vents = [];\nlet humidifier = [];\nlet dehumidifier = [];\nlet root = [];\n\n// Durchlaufe alle Schlüssel im data-Objekt und sortiere sie nach bestimmten Sensortypen\nfor (let key in data) {\n    if (data.hasOwnProperty(key)) {\n        let entity_id = key.toLowerCase();\n        let entity = { entity_id: key, value: data[key] };\n\n        // Prioritize to ensure it is captured first\n        if (entity_id.includes('wish') || entity_id.includes('avg') || entity_id.includes('target')) {\n            wish.push(entity);\n        } else if (entity_id.includes('root') || entity_id.includes('wurzel') || entity_id.includes('water')) {\n            root.push(entity);\n        }\n        // ENVIORMENT\n        else if (entity_id.includes('temperature') || entity_id.includes('tempe')) {\n            temperatures.push(entity);\n        } else if (entity_id.includes('humidity') || entity_id.includes('feuchtigkeit') || entity_id.includes('rh')) {\n            humidity.push(entity);\n        } else if (entity_id.includes('dewpoint') || entity_id.includes('dew')) {\n            dewpoints.push(entity);\n        } else if (entity_id.includes('moisture') || entity_id.includes('mois')) {\n            moisture.push(entity);\n        } else if (entity_id.includes('pressure') || entity_id.includes('press')) {\n            pressures.push(entity);\n        } else if (entity_id.includes('carbondioxide') || entity_id.includes('co2') || entity_id.includes('carbon')) {\n            co2.push(entity);\n        } else if (entity_id.includes('conductivity')) {\n            conductivity.push(entity);\n        } else if (entity_id.includes('illuminance') || entity_id.includes('light') || entity_id.includes('licht')) {\n            lumen.push(entity);\n        }\n        // Devices\n        else if (entity_id.includes('dehumidifier') || entity_id.includes('entfeuchter')) {\n            dehumidifier.push(entity);\n        } else if (entity_id.includes('humidifier') || entity_id.includes('befeuchter')) {\n            humidifier.push(entity);\n        } else if (entity_id.includes('ruckec') || entity_id.includes('airctr') || entity_id.includes('exhaust') || entity_id.includes('abluft')) {\n            dutyCycleExhaust.push(entity);\n        } else if (entity_id.includes('vent')) {\n            vents.push(entity);\n        } else if (entity_id.includes('switch')) {\n            switches.push(entity);\n        } else if (entity_id.includes('power') || entity_id.includes('energy')) {\n            power.push(entity);\n        }\n\n        // ADDONS\n        else if (entity_id.includes('battery') || entity_id.includes('batt')) {\n            battery.push(entity);\n        }\n    }\n}\n\n// Nachrichtenausgabe auf verschiedenen Outputs\nreturn [\n    // ENVIORMENT\n    { payload: wish, topic: 'Wish' },\n    { payload: temperatures, topic: 'temperature' },\n    { payload: humidity, topic: 'humidity' },\n    { payload: dewpoints, topic: 'dewpoint' },\n    { payload: moisture, topic: 'moisture' },\n    { payload: root, topic: 'roottemp' },\n    { payload: conductivity, topic: 'conductivity' },\n    { payload: pressures, topic: 'pressure' },\n    { payload: co2, topic: 'carbon_dioxide' },\n    { payload: lumen, topic: 'illuminance' },\n    // DEVICEINFO\n    { payload: battery, topic: 'battery' },\n    { payload: power, topic: 'power' },\n    // DEVICES\n    { payload: switches, topic: 'switch' },\n    { payload: vents, topic: 'Vents' },\n    { payload: dutyCycleExhaust, topic: 'Exhaust' },\n    { payload: humidifier, topic: 'humidifier' },\n    { payload: dehumidifier, topic: 'dehumidifier' }\n\n\n];\n","outputs":17,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":170,"y":220,"wires":[["4699a341c0e525a1"],["d6b7596272b92fd6"],["a8d42f450f5ec3bf"],["82b3968d5e1d0b1a"],["716d0ea3761ab229"],["455ed3c6930adfe0"],["1beade2ff5ca5212"],["3b25550daaa0d938"],["628eb0efdd45d47f"],["02199cb92b1a3f32"],["85a703016b798065"],["edeead31dd6a80b8"],["8c0773acdba0ce48"],["3aa5bb36956938c6"],["724dfeb83c172e7d"],["bd65fa0bcf194b27"],["7e5df50c6683b600"]]},{"id":"d0fa75ce32c2b2ec","type":"debug","z":"3752d27d7587c957","name":"Temperatures","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":460,"y":120,"wires":[]},{"id":"37a0cd0ecce69585","type":"debug","z":"3752d27d7587c957","name":"Humidity","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":440,"y":160,"wires":[]},{"id":"b01cc8b798cf40db","type":"debug","z":"3752d27d7587c957","name":"Dewpoints","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":200,"wires":[]},{"id":"6e29c36400302613","type":"debug","z":"3752d27d7587c957","name":"Pressures","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":440,"y":360,"wires":[]},{"id":"c8ac68f99c237d2c","type":"debug","z":"3752d27d7587c957","name":"Battery","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":440,"y":500,"wires":[]},{"id":"c82ef6e4f9fa3159","type":"debug","z":"3752d27d7587c957","name":"Power","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":430,"y":540,"wires":[]},{"id":"eb850d44242cc6c6","type":"debug","z":"3752d27d7587c957","name":"CO2","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":430,"y":400,"wires":[]},{"id":"3b9ddcea592dfa6c","type":"debug","z":"3752d27d7587c957","name":"Light","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":430,"y":440,"wires":[]},{"id":"472539b957b3d55c","type":"debug","z":"3752d27d7587c957","name":"Switches","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":440,"y":600,"wires":[]},{"id":"38cd4d82cd0fd287","type":"debug","z":"3752d27d7587c957","name":"Conductivity","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":320,"wires":[]},{"id":"a0b65bcedc96a0fe","type":"debug","z":"3752d27d7587c957","name":"Moisture","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":440,"y":240,"wires":[]},{"id":"fea31e55b74e768b","type":"debug","z":"3752d27d7587c957","name":"Exhasut","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":440,"y":680,"wires":[]},{"id":"a02e58aa1b5be4d9","type":"debug","z":"3752d27d7587c957","name":"WISH","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":430,"y":80,"wires":[]},{"id":"65ac2cfaa7ba045c","type":"debug","z":"3752d27d7587c957","name":"Humidifier","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":720,"wires":[]},{"id":"cab823730c4a70a7","type":"debug","z":"3752d27d7587c957","name":"Vents","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":430,"y":640,"wires":[]},{"id":"42ff7b7243adac0b","type":"debug","z":"3752d27d7587c957","name":"RootTemp","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":280,"wires":[]},{"id":"89391fcf7fa2d9dc","type":"debug","z":"3752d27d7587c957","name":"Dehumidifier","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":760,"wires":[]},{"id":"d1ba22a962408cbd","type":"link out","z":"3752d27d7587c957","g":"8ecdceb2353f84e1","name":"ExhaustVeggiON","mode":"link","links":["09f51aa364202656"],"x":1965,"y":1180,"wires":[]},{"id":"068b8e7a89eef1ba","type":"link out","z":"3752d27d7587c957","g":"8ecdceb2353f84e1","name":"ExhaustVeggiOFF","mode":"link","links":["95404f058f30b296"],"x":2015,"y":1200,"wires":[]},{"id":"669616aead0ef19f","type":"link out","z":"3752d27d7587c957","name":"Dehumidifier","mode":"link","links":[],"x":575,"y":760,"wires":[]},{"id":"5f82452669bf7cb1","type":"link out","z":"3752d27d7587c957","name":"Vents","mode":"link","links":[],"x":575,"y":640,"wires":[]},{"id":"9ee872c8de807c68","type":"debug","z":"3752d27d7587c957","g":"8ecdceb2353f84e1","name":"debug 182","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1790,"y":1160,"wires":[]},{"id":"2f7f44cc5475aa9e","type":"comment","z":"3752d27d7587c957","g":"2f16034c5088356b","name":"VPD-Perfektion","info":"","x":140,"y":1360,"wires":[]},{"id":"a0b3236b810a1d68","type":"link in","z":"3752d27d7587c957","g":"2f16034c5088356b","name":"VPD-Perfektion","links":["128a30397aed36be"],"x":65,"y":1400,"wires":[["b4d17b12450acac5"]]},{"id":"89b4bb0beb9173d1","type":"function","z":"3752d27d7587c957","g":"2f16034c5088356b","name":"VPD State Values","func":"const plantStages = {\n    Germination: [0.42, 0.78], // Optimaler VPD-Bereich für Keimung bei 25-30°C\n    Clones: [0.42, 0.78],      // Optimaler VPD-Bereich für Klone bei 25-30°C\n    EarlyVeg: [0.55, 0.85],    // Optimaler VPD-Bereich für frühe Vegetation bei 20-25°C\n    MidVeg: [0.85, 1.1],      // Optimaler VPD-Bereich für mittlere Vegetation bei 20-25°C\n    LateVeg: [0.85, 1.2],     // Optimaler VPD-Bereich für späte Vegetation bei 20-25°C\n    EarlyFlower: [1, 1.25], // Optimaler VPD-Bereich für frühe Blüte bei 20-25°C\n    MidFlower: [1.1, 1.4],   // Optimaler VPD-Bereich für mittlere Blüte bei 20-25°C\n    LateFlower: [1.2, 1.6],  // Optimaler VPD-Bereich für späte Blüte bei 20-25°C\n};\n\n\n\n// Beispiel, wie msg.payload gesetzt wird\n// msg.payload = \"LateVeg\"; // Kommentieren Sie diese Zeile aus, um den tatsächlichen msg.payload zu verwenden\n\n// Prüfen, ob das Wachstumsstadium im plantStages-Objekt vorhanden ist\nif (plantStages.hasOwnProperty(msg.payload)) {\n    // Setzen des VPD-Wertes aus dem plantStages-Objekt\n    msg.payload = plantStages[msg.payload];\n} else {\n    // Fehlermeldung, wenn das Wachstumsstadium nicht gefunden wurde\n    msg.payload = \"Unbekanntes Wachstumsstadium\";\n\n}\nmsg.perfektion = \"VPDStageValue\"\ndelete msg.data;\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":410,"y":1400,"wires":[["b41b4e4f56a8bfdd","bcc5756283e66c56"]]},{"id":"b41b4e4f56a8bfdd","type":"join","z":"3752d27d7587c957","g":"2f16034c5088356b","name":"VPDWish","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":310,"y":1500,"wires":[["97bb26a5c0f5bb2b"]]},{"id":"97bb26a5c0f5bb2b","type":"function","z":"3752d27d7587c957","g":"2f16034c5088356b","name":"VPD Handler Array Value","func":"const tolerance = 0.00; // Toleranzwert für die VPD-Anpassung\n\n// Der aktuelle VPD-Wert wird aus dem Payload geholt und in eine Zahl umgewandelt.\nconst currentVPD = parseFloat(msg.payload.currentVPD);\n\n// Ziel-VPD-Bereich wird aus dem Payload geholt.\nconst targetVPDRange = msg.payload.targetVPD;\n\n// Logging der aktuellen VPD und Ziel-VPD-Bereich zur Überprüfung und Debugging.\nnode.warn(`Veggi-VPD array between: ${targetVPDRange[0]} and ${targetVPDRange[1]}`);\n\n// Berechnung der prozentualen Abweichung vom Ziel-VPD und Rundung auf ganze Zahlen\nconst percentDifference = Math.round(currentVPD < targetVPDRange[0] \n    ? ((currentVPD - targetVPDRange[0]) / targetVPDRange[0]) * 100 \n    : ((currentVPD - targetVPDRange[1]) / targetVPDRange[1]) * 100);\n\n// Funktion zur Berechnung der notwendigen Anpassungen basierend auf der Differenz zum VPD-Zielbereich.\nfunction calculateAdjustment(currentVPD, targetVPDRange) {\n    // Wenn der aktuelle VPD unter dem minimalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu erhöhen.\n    if (currentVPD < targetVPDRange[0] - tolerance) {\n        node.warn(`Veggi-VPD:: ${currentVPD} zu gering. Erhöhe Temp oder verringere die Feuchtigkeit`);\n        node.warn(`Veggi % VPD Target: ${percentDifference} %`);\n        return {\n            exhaustSpeed: \"increased\",      // Erhöht die Abluftgeschwindigkeit, um feuchte Luft herauszuziehen\n            humidifier: \"reduced\",          // Schaltet den Luftbefeuchter aus, um Feuchtigkeit zu reduzieren\n            dehumidifier: \"increased\",       // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            heaterFan: \"increased\",         // Schaltet den Beheizer an, um die Feuchtigkeit zu reduzieren und Temp zu erhöhen\n            coolerFan: \"reduced\",           // Schaltet den Kühler an, um die Feuchtigkeit zu erhöhen und Temp zu verringern\n            ventsALL: \"increased\",          // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsTopSpeed: \"increased\",     // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsDownSpeed: \"increased\",    // Erhöht die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"increased\"     // Erhöht die Lichtintensität, um die Temperatur zu steigern (wenn das die Temperatur beeinflusst)\n        };\n        \n    }\n    // Wenn der aktuelle VPD über dem maximalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu senken.\n    else if (currentVPD > targetVPDRange[1] + tolerance) {\n        node.warn(`Veggi-VPD: ${currentVPD} zu hoch. Verringere Temp oder erhöhe die Feuchtigkeit`);\n        node.warn(`Veggi % VPD Target: ${percentDifference} %`);\n        return {\n            exhaustSpeed: \"reduced\",    // Reduziert die Abluftgeschwindigkeit, hält feuchte Luft im Raum\n            humidifier: \"increased\",    // Schaltet den Luftbefeuchter ein, um Feuchtigkeit zu erhöhen\n            dehumidifier: \"reduced\",    // Schaltet den Luftentfeuchter aus, um Feuchtigkeit zu erhöhen\n            heaterFan: \"reduced\",       // Schaltet den Heizer aus, um die Temperatur zu verringern\n            coolerFan: \"increased\",     // Schaltet den Kühler an, um die Temperatur zu verringern\n            ventsALL: \"reduced\",        // Reduziert die Geschwindigkeit der Belüftung, um mehr feuchte Luft zu halten\n            ventsTopSpeed: \"reduced\",   // Reduziert die Geschwindigkeit der oberen Belüftung\n            ventsDownSpeed: \"reduced\",  // Reduziert die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"reduced\"   // Verringert die Lichtintensität, um die Temperatur zu senken (wenn das die Temperatur beeinflusst)\n        };\n    }\n    // Wenn der VPD im Zielbereich liegt, sind keine Anpassungen erforderlich.\n    node.warn(`Veggi-VPD: ${currentVPD} im gewünschten Bereich`);\n    return {\n        exhaustSpeed: \"unchanged\",\n        humidifier: \"unchanged\",\n        dehumidifier: \"unchanged\",    \n        heaterFan: \"unchanged\",        \n        coolerFan: \"unchanged\",        \n        ventsALL: \"unchanged\",       \n        ventsTopSpeed: \"unchanged\",\n        ventsDownSpeed: \"unchanged\",\n        lightIntensity: \"unchanged\"\n    };\n}\n\n// Entscheidungslogik zur Steuerung der Umgebungsbedingungen, nutzt die calculateAdjustment Funktion.\nconst adjustments = calculateAdjustment(currentVPD, targetVPDRange);\n\n// Berechnung der prozentualen Abweichung und Hinzufügen zum Payload\nmsg.payload = {\n    exhaustSpeed: adjustments.exhaustSpeed,\n    humidifier: adjustments.humidifier,\n    dehumidifier: adjustments.dehumidifier,\n    heaterFan: adjustments.heaterFan,\n    coolerFan: adjustments.coolerFan,\n    ventsALL: adjustments.ventsALL,\n    ventsTopSpeed: adjustments.ventsTopSpeed,\n    ventsDownSpeed: adjustments.ventsDownSpeed,\n    lightIntensity: adjustments.lightIntensity,\n    percentDifference: percentDifference\n};\n\nmsg.perfektion = \"VPDActions\";\n\n// Rückgabe des modifizierten Payloads für weitere Verwendung im Flow.\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":510,"y":1500,"wires":[["50586f7873597b1b","bcc5756283e66c56","792c2d12847b3c30"]]},{"id":"50586f7873597b1b","type":"function","z":"3752d27d7587c957","g":"2f16034c5088356b","name":"Check What Do","func":"let outputs = [null, null, null, null, null, null, null, null, null];\n\nvar percentDifference = msg.payload.percentDifference\n\n// Abluft\nif (msg.payload.exhaustSpeed === \"unchanged\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"increased\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"reduced\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n}\n\n// Humidifier\nif (msg.payload.humidifier === \"unchanged\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"increased\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"reduced\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n}\n\n// Dehumidifier\nif (msg.payload.dehumidifier === \"unchanged\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"increased\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"reduced\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n}\n\n// HeaterFan\nif (msg.payload.heaterFan === \"unchanged\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"increased\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"reduced\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n}\n\n// CoolerFan\nif (msg.payload.coolerFan === \"unchanged\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"increased\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"reduced\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n}\n\n// LightIntensity\nif (msg.payload.lightIntensity === \"unchanged\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"increased\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"reduced\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n}\n\n// VentsALL\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"increased\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"reduced\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n}\n\n// VentsTopSpeed\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"increased\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"reduced\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n}\n\n// VentsDownSpeed\nif (msg.payload.ventsDownSpeed === \"unchanged\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"increased\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"reduced\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n}\n\n\n\nreturn outputs;\n","outputs":9,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":520,"y":1600,"wires":[["8291f4ead3a93776","e67e4105200aba9a"],["8291f4ead3a93776","0eca8b29f89f4926"],["8291f4ead3a93776","f81d8c962ee7f1d5"],["8291f4ead3a93776","2fe236b6ecf4be1a"],["8291f4ead3a93776","f0d2d59e9fb71a11"],["8291f4ead3a93776","bf178d140cd3a947"],["8291f4ead3a93776","15db15c7e2de4370"],["15db15c7e2de4370"],["15db15c7e2de4370"]]},{"id":"8291f4ead3a93776","type":"debug","z":"3752d27d7587c957","g":"2f16034c5088356b","name":"debug 125","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":530,"y":1700,"wires":[]},{"id":"d8ca44ad455dbdcc","type":"poll-state","z":"3752d27d7587c957","g":"2f16034c5088356b","name":"currentVPD","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","updateInterval":"30","updateIntervalType":"num","updateIntervalUnits":"seconds","outputInitially":true,"outputOnChanged":true,"entityId":"sensor.vpdvegi","stateType":"num","ifState":"","ifStateType":"num","ifStateOperator":"is","outputs":1,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"currentVPD","valueType":"str"},{"property":"perfektion","propertyType":"msg","value":"currentVPD","valueType":"str"}],"x":230,"y":1560,"wires":[["b41b4e4f56a8bfdd","bcc5756283e66c56"]]},{"id":"b4d17b12450acac5","type":"api-current-state","z":"3752d27d7587c957","g":"2f16034c5088356b","name":"ModeSelection","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"select.vegitentmodes","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"targetVPD","valueType":"str"},{"property":"perfektion","propertyType":"msg","value":"targetVPD","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":200,"y":1400,"wires":[["89b4bb0beb9173d1"]]},{"id":"df06b3a9c9e88a34","type":"debug","z":"3752d27d7587c957","g":"6f11fec5044a631a","name":"debug 169","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":870,"y":1340,"wires":[]},{"id":"f81d8c962ee7f1d5","type":"join","z":"3752d27d7587c957","g":"ecb02d38c4118377","name":"DehumidifierData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1610,"y":1620,"wires":[["ba354dc96e68c583"]]},{"id":"9743d50e741ac49e","type":"link in","z":"3752d27d7587c957","g":"ecb02d38c4118377","name":"Dehumidifier","links":[],"x":1545,"y":1560,"wires":[["f81d8c962ee7f1d5"]]},{"id":"ba354dc96e68c583","type":"function","z":"3752d27d7587c957","g":"ecb02d38c4118377","name":"DehumidifierSetup","func":"let outputs = [null, null, null];\n\nlet dehumidifierState = null;\n\n// Schleife, um den Zustand des Dehumidifier zu finden\nfor (let i = 0; i < msg.payload.dehumidifier.length; i++) {\n    if (msg.payload.dehumidifier[i].entity_id.includes('dehumidifier')) {\n        dehumidifierState = msg.payload.dehumidifier[i].value;\n        break;\n    }\n}\n\n// Dehumidifier starten\nif (msg.payload.dehumidifierSet.value === \"increased\" && dehumidifierState === \"off\") {\n    outputs[0] = { payload: \"Starte Dehumidifier\", topic: \"Start\" };\n}\n\n// Dehumidifier stoppen\nif (msg.payload.dehumidifierSet.value === \"reduced\" && dehumidifierState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Dehumidifier\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.dehumidifierSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Dehumidifier unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1810,"y":1620,"wires":[["09de5509dbd47ef7"],["fa4182f14e046b55"],["3905f327349462e9"],[]]},{"id":"2fe236b6ecf4be1a","type":"join","z":"3752d27d7587c957","g":"082054cd4a9a0dc1","name":"HeaterData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1610,"y":1780,"wires":[["dec304f413eef635"]]},{"id":"548fd1b0ea533144","type":"link in","z":"3752d27d7587c957","g":"082054cd4a9a0dc1","name":"link in 37","links":[],"x":1545,"y":1720,"wires":[["2fe236b6ecf4be1a"]]},{"id":"dec304f413eef635","type":"function","z":"3752d27d7587c957","g":"082054cd4a9a0dc1","name":"HeaterSetup","func":"let outputs = [null, null, null];\n\nlet heaterState = null;\n\n// Schleife, um den Zustand des Heater zu finden\nfor (let i = 0; i < msg.payload.heater.length; i++) {\n    if (msg.payload.heater[i].entity_id.includes('heater')) {\n        heaterState = msg.payload.heater[i].value;\n        break;\n    }\n}\n\n// Heater starten\nif (msg.payload.heaterSet.value === \"increased\" && heaterState === \"off\") {\n    outputs[0] = { payload: \"Start Heater\", topic: \"Start\" };\n}\n\n// Heater stoppen\nif (msg.payload.heaterSet.value === \"reduced\" && heaterState === \"on\") {\n    outputs[1] = { payload: \"Stop Heater\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.heaterSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Heater unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1810,"y":1780,"wires":[["1c021da55d25e11a"],["7fda7edaf7e5818c"],["4c6249a89c9f8505"],[]]},{"id":"f0d2d59e9fb71a11","type":"join","z":"3752d27d7587c957","g":"d634b49c93972c8c","name":"CoolerData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1610,"y":1940,"wires":[["4f8602da2d439cb1"]]},{"id":"695c16207afdcdaa","type":"link in","z":"3752d27d7587c957","g":"d634b49c93972c8c","name":"link in 38","links":[],"x":1545,"y":1880,"wires":[["f0d2d59e9fb71a11"]]},{"id":"4f8602da2d439cb1","type":"function","z":"3752d27d7587c957","g":"d634b49c93972c8c","name":"CoolerSetup","func":"let outputs = [null, null, null];\n\nlet coolerState = null;\n\n// Schleife, um den Zustand des Cooler zu finden\nfor (let i = 0; i < msg.payload.cooler.length; i++) {\n    if (msg.payload.cooler[i].entity_id.includes('cooler')) {\n        coolerState = msg.payload.cooler[i].value;\n        break;\n    }\n}\n\n// Cooler starten\nif (msg.payload.coolerSet.value === \"increased\" && coolerState === \"off\") {\n    outputs[0] = { payload: \"Start Cooler\", topic: \"Start\" };\n}\n\n// Cooler stoppen\nif (msg.payload.coolerSet.value === \"reduced\" && coolerState === \"on\") {\n    outputs[1] = { payload: \"Stop Cooler\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.coolerSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Cooler unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1810,"y":1940,"wires":[["ccb808bba5fe34af"],["1fc079df5d0649cc"],["795027dc6079bbcd"],[]]},{"id":"bf178d140cd3a947","type":"join","z":"3752d27d7587c957","g":"c91e1e1018209c58","name":"LightData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1610,"y":2120,"wires":[["b05f07a1e755da48"]]},{"id":"0970ba51c7fda08e","type":"link in","z":"3752d27d7587c957","g":"c91e1e1018209c58","name":"link in 39","links":[],"x":1555,"y":2060,"wires":[["bf178d140cd3a947"]]},{"id":"b05f07a1e755da48","type":"function","z":"3752d27d7587c957","g":"c91e1e1018209c58","name":"LightSetup","func":"let outputs = [null, null, null];\n\nlet lightState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.light.length; i++) {\n    if (msg.payload.light[i].entity_id.includes('light')) {\n        lightState = msg.payload.light[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.lightSet.value === \"increased\" && lightState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.lightSet.value === \"reduced\" && lightState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.lightSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Befeuchter unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1810,"y":2120,"wires":[["dad47ea322ec8b37"],["28c6b5d7d65acfac"],["bc2bedc4446fe072"],[]]},{"id":"15db15c7e2de4370","type":"join","z":"3752d27d7587c957","g":"9309ba9f15bdd552","name":"VentsData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"4","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"num","reduceFixup":"","x":1610,"y":2280,"wires":[["13559ea87af327af"]]},{"id":"f8f91e027dfc8333","type":"link in","z":"3752d27d7587c957","g":"9309ba9f15bdd552","name":"link in 40","links":[],"x":1565,"y":2220,"wires":[["15db15c7e2de4370"]]},{"id":"13559ea87af327af","type":"function","z":"3752d27d7587c957","g":"9309ba9f15bdd552","name":"VentsSetup","func":"let outputs = [null, null, null];\n\nlet ventsState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.vents.length; i++) {\n    if (msg.payload.vents[i].entity_id.includes('vents')) {\n        ventsState = msg.payload.vents[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.ventsSet.value === \"increased\" && ventsState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.ventsSet.value === \"reduced\" && ventsState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.ventsSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Befeuchter unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1810,"y":2280,"wires":[["bda808f336509948"],["64e65d877d2f6338"],["61af123542cf6443"],[]]},{"id":"c35c0f4aa29d0d07","type":"debug","z":"3752d27d7587c957","g":"6f11fec5044a631a","name":"debug 199","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1190,"y":1380,"wires":[]},{"id":"23a4528b1040c510","type":"debug","z":"3752d27d7587c957","g":"6f11fec5044a631a","name":"debug 200","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":970,"y":1240,"wires":[]},{"id":"792c2d12847b3c30","type":"debug","z":"3752d27d7587c957","g":"2f16034c5088356b","name":"debug 201","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":550,"y":1460,"wires":[]},{"id":"09de5509dbd47ef7","type":"link out","z":"3752d27d7587c957","g":"ecb02d38c4118377","name":"DefhumidiferON","mode":"link","links":["4c88812165b09b0e"],"x":1995,"y":1580,"wires":[]},{"id":"fa4182f14e046b55","type":"link out","z":"3752d27d7587c957","g":"ecb02d38c4118377","name":"DefhumidiferOFF","mode":"link","links":["2b8233e8bb0edf47"],"x":2055,"y":1600,"wires":[]},{"id":"3905f327349462e9","type":"link out","z":"3752d27d7587c957","g":"ecb02d38c4118377","name":"link out 15","mode":"link","links":[],"x":2095,"y":1640,"wires":[]},{"id":"1c021da55d25e11a","type":"link out","z":"3752d27d7587c957","g":"082054cd4a9a0dc1","name":"HeaterON","mode":"link","links":["1be287d67694b336"],"x":1995,"y":1740,"wires":[]},{"id":"7fda7edaf7e5818c","type":"link out","z":"3752d27d7587c957","g":"082054cd4a9a0dc1","name":"HeaterOFF","mode":"link","links":["593f0c0e52db1610"],"x":2055,"y":1760,"wires":[]},{"id":"4c6249a89c9f8505","type":"link out","z":"3752d27d7587c957","g":"082054cd4a9a0dc1","name":"link out 27","mode":"link","links":[],"x":2095,"y":1800,"wires":[]},{"id":"ccb808bba5fe34af","type":"link out","z":"3752d27d7587c957","g":"d634b49c93972c8c","name":"CoolerON","mode":"link","links":["cc608f4009e112e6"],"x":2005,"y":1900,"wires":[]},{"id":"1fc079df5d0649cc","type":"link out","z":"3752d27d7587c957","g":"d634b49c93972c8c","name":"CoolerOFF","mode":"link","links":["eabb7d61eeb2383f"],"x":2065,"y":1920,"wires":[]},{"id":"795027dc6079bbcd","type":"link out","z":"3752d27d7587c957","g":"d634b49c93972c8c","name":"link out 30","mode":"link","links":[],"x":2105,"y":1960,"wires":[]},{"id":"dad47ea322ec8b37","type":"link out","z":"3752d27d7587c957","g":"c91e1e1018209c58","name":"link out 31","mode":"link","links":[],"x":2015,"y":2080,"wires":[]},{"id":"28c6b5d7d65acfac","type":"link out","z":"3752d27d7587c957","g":"c91e1e1018209c58","name":"link out 32","mode":"link","links":[],"x":2075,"y":2100,"wires":[]},{"id":"bc2bedc4446fe072","type":"link out","z":"3752d27d7587c957","g":"c91e1e1018209c58","name":"link out 33","mode":"link","links":[],"x":2115,"y":2140,"wires":[]},{"id":"bda808f336509948","type":"link out","z":"3752d27d7587c957","g":"9309ba9f15bdd552","name":"link out 34","mode":"link","links":[],"x":1995,"y":2240,"wires":[]},{"id":"64e65d877d2f6338","type":"link out","z":"3752d27d7587c957","g":"9309ba9f15bdd552","name":"link out 35","mode":"link","links":[],"x":2055,"y":2260,"wires":[]},{"id":"61af123542cf6443","type":"link out","z":"3752d27d7587c957","g":"9309ba9f15bdd552","name":"link out 36","mode":"link","links":[],"x":2095,"y":2300,"wires":[]},{"id":"317e9ec8876608ff","type":"link out","z":"3752d27d7587c957","g":"2651868e58bb1778","name":"link out 124","mode":"link","links":[],"x":2035,"y":1460,"wires":[]},{"id":"fb9d3843392773d1","type":"link out","z":"3752d27d7587c957","g":"2651868e58bb1778","name":"lHumidifierStart","mode":"link","links":["1be287d67694b336"],"x":1965,"y":1400,"wires":[]},{"id":"d2b8b521e6d704e6","type":"link out","z":"3752d27d7587c957","g":"2651868e58bb1778","name":"HumidifierStop","mode":"link","links":["7deddc1b5d29a51e"],"x":2025,"y":1420,"wires":[]},{"id":"61d447a8dd2039a2","type":"ha-sensor","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"VeggiCO2","entityConfig":"3bf46a3f240b688e","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1000,"y":640,"wires":[[]]},{"id":"883e53c619710a5c","type":"function","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"CO2-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Finden des Objekts, das eine der gewünschten Teilzeichenfolgen im entity_id enthält\nconst co2Object = sensors.find(sensor => \n    sensor.entity_id.includes(\"carbon\") || \n    sensor.entity_id.includes(\"carbondioxide\")\n);\n\n// Extrahieren des Wertes, wenn das Objekt gefunden wurde, sonst null setzen\nconst co2Value = co2Object ? co2Object.value : null;\n\n// Ausgabe des CO2-Wertes zur Überprüfung\n// node.warn(`CO2-Wert: ${co2Value}`);\n\n// Optional: Speichern des CO2-Wertes in msg.co2Value oder einem anderen Feld zur weiteren Verwendung\nmsg.payload = co2Value;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":720,"y":640,"wires":[["61d447a8dd2039a2"]]},{"id":"d63dfedba31e6c03","type":"function","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"Pressure-Get","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Luftdruck-Wertes\nfunction findPressureValue(sensors) {\n    const pressureObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"pressure\") ||\n        sensor.entity_id.includes(\"barometer\") ||\n        sensor.entity_id.includes(\"luftdruck\")\n    );\n    return pressureObject ? pressureObject.value : null;\n}\n\n// Finden des Luftdruck-Wertes\nconst pressureValue = findPressureValue(sensors);\n\n// Ausgabe des Luftdruck-Wertes zur Überprüfung\n// node.warn(`Luftdruck-Wert: ${pressureValue}`);\n\n// Optional: Speichern des Luftdruck-Wertes in msg zur weiteren Verwendung\nmsg.payload = pressureValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":730,"y":580,"wires":[["921cb4af51950c56"]]},{"id":"d667e426b36be2c9","type":"function","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"Moisture-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Moisture-Wertes\nfunction findMoistureValue(sensors) {\n    const moistureObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"moisture\") ||\n        sensor.entity_id.includes(\"humidity\") ||\n        sensor.entity_id.includes(\"wetness\")\n    );\n    return moistureObject ? moistureObject.value : null;\n}\n\n// Finden des Moisture-Wertes\nconst moistureValue = findMoistureValue(sensors);\n\n// Ausgabe des Moisture-Wertes zur Überprüfung\n// node.warn(`Moisture-Wert: ${moistureValue}`);\n\n// Optional: Speichern des Moisture-Wertes in msg zur weiteren Verwendung\nmsg.payload = moistureValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":740,"y":400,"wires":[["0a775ad93eb0201a"]]},{"id":"03170a055dee0c18","type":"function","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"SOIL-EC-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des EC- oder Conductivity-Wertes\nfunction findECValue(sensors) {\n    const ecObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"ec\") ||\n        sensor.entity_id.includes(\"conductivity\")\n    );\n    return ecObject ? ecObject.value : null;\n}\n\n// Finden des EC- oder Conductivity-Wertes\nconst ecValue = findECValue(sensors);\n\n// Ausgabe des EC- oder Conductivity-Wertes zur Überprüfung\n// node.warn(`EC-Wert: ${ecValue}`);\n\n// Optional: Speichern des EC- oder Conductivity-Wertes in msg zur weiteren Verwendung\nmsg.payload = ecValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":740,"y":520,"wires":[["0b48f34fdeeadbd4"]]},{"id":"bb53d025f4d0e3fa","type":"function","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"PowerConsum-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Stromverbrauch-Wertes\nfunction findPowerConsumptionValue(sensors) {\n    const powerConsumptionObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"energy_power\") || \n        sensor.entity_id.includes(\"consumption\") || \n        sensor.entity_id.includes(\"watt\") || \n        sensor.entity_id.includes(\"electricity\")\n    );\n    return powerConsumptionObject ? powerConsumptionObject.value : null;\n}\n\n// Finden des Stromverbrauch-Wertes\nconst powerConsumptionValue = findPowerConsumptionValue(sensors);\n\n// Ausgabe des Stromverbrauch-Wertes zur Überprüfung\n// node.warn(`Stromverbrauch-Wert: ${powerConsumptionValue}`);\n\n// Optional: Speichern des Stromverbrauch-Wertes in msg zur weiteren Verwendung\nmsg.payload = powerConsumptionValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":760,"y":820,"wires":[["a968aa9eccbf2d79"]]},{"id":"b0d376be03892225","type":"function","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"Battery-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Batterie-Wertes\nfunction findBatteryValue(sensors) {\n    const batteryObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"battery\") || \n        sensor.entity_id.includes(\"batt\")\n    );\n    return batteryObject ? batteryObject.value : null;\n}\n\n// Finden des Batterie-Wertes\nconst batteryValue = findBatteryValue(sensors);\n\n// Ausgabe des Batterie-Wertes zur Überprüfung\n// node.warn(`Batterie-Wert: ${batteryValue}`);\n\n// Optional: Speichern des Batterie-Wertes in msg zur weiteren Verwendung\nmsg.payload = batteryValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":730,"y":760,"wires":[["32558d701303ef20"]]},{"id":"71bbf76e3992257f","type":"function","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"Root-Temp-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Root-Temperature-Wertes\nfunction findRootTempValue(sensors) {\n    const rootTempObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"root_temp\") || \n        sensor.entity_id.includes(\"roottemperature\") || \n        sensor.entity_id.includes(\"soiltemp\") || \n        sensor.entity_id.includes(\"root_temp\")\n    );\n    return rootTempObject ? rootTempObject.value : null;\n}\n\n// Finden des Root-Temperature-Wertes\nconst rootTempValue = findRootTempValue(sensors);\n\n// Ausgabe des Root-Temperature-Wertes zur Überprüfung\n// node.warn(`Root-Temperature-Wert: ${rootTempValue}`);\n\n// Optional: Speichern des Root-Temperature-Wertes in msg zur weiteren Verwendung\nmsg.payload = rootTempValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":740,"y":460,"wires":[["c3cdc89fea6e66dd"]]},{"id":"b2cb416cb6617c7b","type":"function","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"Exhaust-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Abluft-Zustands\nfunction findExhaustState(sensors) {\n    const exhaustStateObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"exhaust\") ||\n        sensor.entity_id.includes(\"abluft\") ||\n        sensor.entity_id.includes(\"ventilation\") ||\n        sensor.entity_id.includes(\"fan\")\n    );\n    return exhaustStateObject ? exhaustStateObject.value : null;\n}\n\n// Funktion zum Finden des Dutycycle-Wertes\nfunction findDutyCycleValue(sensors) {\n    const dutyCycleObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"airctr\") ||\n        sensor.entity_id.includes(\"dutycycle\") ||\n        sensor.entity_id.includes(\"cycle\")\n    );\n    return dutyCycleObject ? dutyCycleObject.value : null;\n}\n\n// Finden des Abluft-Zustands\nconst exhaustState = findExhaustState(sensors);\n\n// Finden des Dutycycle-Wertes\nconst dutyCycleValue = findDutyCycleValue(sensors);\n\n// Ausgabe der Werte zur Überprüfung\n// node.warn(`Abluft-Zustand: ${exhaustState}`);\n// node.warn(`Dutycycle-Wert: ${dutyCycleValue}`);\n\n// Setzen der Outputs\nlet outputs = [\n    { payload: exhaustState }, // Output 1: Zustand (on/off)\n    { payload: dutyCycleValue } // Output 2: Dutycycle\n];\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn outputs;\n","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":730,"y":1000,"wires":[["41834d3741e6a772"],["20ed8422cf5c2d23"]]},{"id":"3f02c178f632f85b","type":"function","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"Humidifier-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Humidifier-Wertes\nfunction findHumidifierValue(sensors) {\n    const humidifierObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"humidifier\") || \n        sensor.entity_id.includes(\"humidity\")\n    );\n    return humidifierObject ? humidifierObject.value : null;\n}\n\n// Finden des Humidifier-Wertes\nconst humidifierValue = findHumidifierValue(sensors);\n\n// Ausgabe des Humidifier-Wertes zur Überprüfung\n// node.warn(`Humidifier-Wert: ${humidifierValue}`);\n\n// Optional: Speichern des Humidifier-Wertes in msg zur weiteren Verwendung\nmsg.payload = humidifierValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":740,"y":1060,"wires":[[]]},{"id":"921cb4af51950c56","type":"ha-sensor","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"VeggiPressure","entityConfig":"6aeda981e19a8694","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1020,"y":580,"wires":[[]]},{"id":"0a775ad93eb0201a","type":"ha-sensor","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"VeggiMoisture","entityConfig":"fdc22e77b0c5dbe3","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1020,"y":400,"wires":[[]]},{"id":"32558d701303ef20","type":"ha-sensor","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"VeggiBatterieDevices","entityConfig":"3f8ce21d326f8670","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1040,"y":760,"wires":[[]]},{"id":"c3cdc89fea6e66dd","type":"ha-sensor","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"VeggiRootTemp","entityConfig":"68810d13c01a98ba","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1020,"y":460,"wires":[[]]},{"id":"0b48f34fdeeadbd4","type":"ha-sensor","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"VeggiEC","entityConfig":"0a689f654f6cfecb","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1000,"y":520,"wires":[[]]},{"id":"09388aae1c81e85e","type":"function","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"LightIntense_GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Licht-Wertes (Lumen oder Lux)\nfunction findLightValue(sensors) {\n    const lightObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"lumen\") || \n        sensor.entity_id.includes(\"lux\") || \n        sensor.entity_id.includes(\"light\") ||\n        sensor.entity_id.includes(\"illuminance\")\n    );\n    return lightObject ? lightObject.value : null;\n}\n\n// Finden des Licht-Wertes\nconst lightValue = findLightValue(sensors);\n\n// Ausgabe des Licht-Wertes zur Überprüfung\n// node.warn(`Licht-Wert: ${lightValue}`);\n\n// Optional: Speichern des Licht-Wertes in msg zur weiteren Verwendung\nmsg.payload = lightValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":750,"y":700,"wires":[["502bf442461b61cd"]]},{"id":"502bf442461b61cd","type":"ha-sensor","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"VeggiLightIntense","entityConfig":"d3a9b3e22cb3c349","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1030,"y":700,"wires":[[]]},{"id":"42ab596fae23920e","type":"function","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"Switch-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Switch-Wertes\nfunction findSwitchValue(sensors) {\n    const switchObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"switch\") || \n        sensor.entity_id.includes(\"toggle\")\n    );\n    return switchObject ? switchObject.state : null;\n}\n\n// Finden des Switch-Wertes\nconst switchValue = findSwitchValue(sensors);\n\n// Ausgabe des Switch-Wertes zur Überprüfung\n// node.warn(`Switch-Wert: ${switchValue}`);\n\n// Optional: Speichern des Switch-Wertes in msg zur weiteren Verwendung\nmsg.payload = switchValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":730,"y":880,"wires":[[]]},{"id":"a968aa9eccbf2d79","type":"ha-sensor","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"VeggiPowerConsume","entityConfig":"cd5681d147a94f3e","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1040,"y":820,"wires":[[]]},{"id":"409a33744f657fd1","type":"function","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"Vents-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Ventilation-Wertes\nfunction findVentilationValue(sensors) {\n    const ventilationObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"ventilation\") ||\n        sensor.entity_id.includes(\"fan\") ||\n        sensor.entity_id.includes(\"exhaust\") ||\n        sensor.entity_id.includes(\"airflow\")\n    );\n    return ventilationObject ? ventilationObject.value : null;\n}\n\n// Finden des Ventilation-Wertes\nconst ventilationValue = findVentilationValue(sensors);\n\n// Ausgabe des Ventilation-Wertes zur Überprüfung\n// node.warn(`Ventilation-Wert: ${ventilationValue}`);\n\n// Optional: Speichern des Ventilation-Wertes in msg zur weiteren Verwendung\nmsg.payload = ventilationValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":730,"y":940,"wires":[[]]},{"id":"2ec8b29e881e1150","type":"function","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"Dehmidifier-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Dehumidifier-Wertes\nfunction findDehumidifierValue(sensors) {\n    const dehumidifierObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"dehumidifier\") || \n        sensor.entity_id.includes(\"humidity\")\n    );\n    return dehumidifierObject ? dehumidifierObject.value : null;\n}\n\n// Finden des Dehumidifier-Wertes\nconst dehumidifierValue = findDehumidifierValue(sensors);\n\n// Ausgabe des Dehumidifier-Wertes zur Überprüfung\n// node.warn(`Dehumidifier-Wert: ${dehumidifierValue}`);\n\n// Optional: Speichern des Dehumidifier-Wertes in msg zur weiteren Verwendung\nmsg.payload = dehumidifierValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":740,"y":1120,"wires":[[]]},{"id":"20ed8422cf5c2d23","type":"ha-sensor","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"VeggiExhaustDuty","entityConfig":"ba8566e09903f293","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1050,"y":1020,"wires":[[]]},{"id":"41834d3741e6a772","type":"ha-sensor","z":"3752d27d7587c957","g":"fcf3c31407539ca6","name":"VeggiExhaustState","entityConfig":"c8a22cfdbd11971c","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1050,"y":980,"wires":[[]]},{"id":"b15af587e5fdd218","type":"inject","z":"3752d27d7587c957","g":"fb83b7a26af05fdc","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"300","crontab":"","once":true,"onceDelay":"15","topic":"","payload":"","payloadType":"date","x":2150,"y":160,"wires":[["7cea495731d0be12"]]},{"id":"0249561a3fec1f56","type":"ha-sensor","z":"3752d27d7587c957","g":"fb83b7a26af05fdc","name":"DLI","entityConfig":"a5f1cc19016994d1","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":2730,"y":240,"wires":[["fa1ac2acc7e0b33d"]]},{"id":"4514863886914953","type":"ha-sensor","z":"3752d27d7587c957","g":"fb83b7a26af05fdc","name":"PPFDVegi","entityConfig":"351be2fcdaadc9bd","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":2740,"y":100,"wires":[["fa1ac2acc7e0b33d"]]},{"id":"fa1ac2acc7e0b33d","type":"debug","z":"3752d27d7587c957","g":"fb83b7a26af05fdc","name":"debug 51","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2920,"y":160,"wires":[]},{"id":"d6870c9a6b9ceba0","type":"function","z":"3752d27d7587c957","g":"fb83b7a26af05fdc","name":"Calculate PPFD / DLI GCX4 ","func":"// Der function-Node empfängt eine Nachricht mit einem Watt-Wert\n// Beispiel für die Eingangsnachricht: { payload: 120 } // das entspricht 100% Leistung\n\n// PPF bei 100% Leistung (120 Watt)\nconst fullPowerPPF = 342; // PPF in Mikromol pro Sekunde (μmol/s)\n// Die Fläche, über die der PPF verteilt ist\nconst area = 0.36; // Fläche in Quadratmetern (m²) für eine Fläche von 60x60 cm\n// Maximale Wattzahl für die 100% Leistung\nconst maxWatt = 120;\n// Verlustfaktor (10% Verlust)\nconst lossFactor = 0.9;\n\n// PPFD berechnen basierend auf dem aktuellen Wattwert\nlet ppfd = (msg.payload / maxWatt) * fullPowerPPF / area;\n\n// Berücksichtigung des Verlustes von 10%\nppfd *= lossFactor;\n\n// PPFD auf zwei Nachkommastellen runden\nconst roundedPPFD = parseFloat(ppfd.toFixed(2));\n\n// Berechnung von DLI\nconst secondsPerHour = 3600;\nconst hoursPerDay = 18; // Anzahl der Stunden pro Tag, die das Licht an ist\nlet dli = roundedPPFD * secondsPerHour * hoursPerDay;\n\n// Umrechnung von Mikromol pro Sekunde in Mol pro Tag\ndli /= 1e6;\n\n// DLI auf zwei Nachkommastellen runden\ndli = parseFloat(dli.toFixed(2));\n\n// Erstellen Sie zwei separate Nachrichtenobjekte für die Ausgänge\nconst msg1 = { payload: roundedPPFD }; // für den ersten Output (PPFD), gerundet auf zwei Nachkommastellen\nconst msg2 = { payload: dli };         // für den zweiten Output (DLI), gerundet auf zwei Nachkommastellen\n\n// Rückgabe der Nachrichten in einem Array, wobei jeder Index dem entsprechenden Output entspricht\nreturn [msg1, msg2];\n","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2540,"y":180,"wires":[["ad4ab75f382b18f8","4514863886914953"],["ad4ab75f382b18f8","0249561a3fec1f56"]]},{"id":"ad4ab75f382b18f8","type":"debug","z":"3752d27d7587c957","g":"fb83b7a26af05fdc","name":"debug 58","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2500,"y":120,"wires":[]},{"id":"7cea495731d0be12","type":"api-current-state","z":"3752d27d7587c957","g":"fb83b7a26af05fdc","name":"Veggi LX","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"sensor.veggilightintense","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":2300,"y":160,"wires":[["d6870c9a6b9ceba0"]]},{"id":"38358691bf1511a9","type":"comment","z":"3752d27d7587c957","g":"c91e1e1018209c58","name":"NOT IMPLEMNTED RIGHT NOW","info":"","x":1730,"y":2120,"wires":[]},{"id":"fbba94c4d9cbdadb","type":"comment","z":"3752d27d7587c957","g":"9309ba9f15bdd552","name":"NOT READY","info":"","x":1730,"y":2280,"wires":[]},{"id":"df73495949e6c8b7","type":"join","z":"3752d27d7587c957","name":"VentsData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"4","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"num","reduceFixup":"","x":850,"y":3500,"wires":[["f97683e533da9e08"]]},{"id":"c9323d638284b7b7","type":"link in","z":"3752d27d7587c957","name":"link in 77","links":[],"x":805,"y":3440,"wires":[["df73495949e6c8b7"]]},{"id":"f97683e533da9e08","type":"function","z":"3752d27d7587c957","name":"VentsSetup","func":"let outputs = [null, null, null];\n\nlet ventsState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.vents.length; i++) {\n    if (msg.payload.vents[i].entity_id.includes('vents')) {\n        ventsState = msg.payload.vents[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.ventsSet.value === \"increased\" && ventsState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.ventsSet.value === \"reduced\" && ventsState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.ventsSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Befeuchter unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1050,"y":3500,"wires":[["40e760ce77543b75"],["2166dc69fa517596"],["495779c7dfdf336b"],[]]},{"id":"40e760ce77543b75","type":"link out","z":"3752d27d7587c957","name":"link out 244","mode":"link","links":[],"x":1235,"y":3460,"wires":[]},{"id":"2166dc69fa517596","type":"link out","z":"3752d27d7587c957","name":"link out 245","mode":"link","links":[],"x":1295,"y":3480,"wires":[]},{"id":"495779c7dfdf336b","type":"link out","z":"3752d27d7587c957","name":"link out 246","mode":"link","links":[],"x":1335,"y":3520,"wires":[]},{"id":"8337bcbfa9e2dfdb","type":"comment","z":"3752d27d7587c957","name":"NOT READY","info":"","x":970,"y":3500,"wires":[]},{"id":"130aefac0c56f3d2","type":"function","z":"3752d27d7587c957","g":"e88a7bd1d639bad0","name":"BefeuchterSetup","func":"let outputs = [null, null, null];\n\nlet humidifierState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.humidifier.length; i++) {\n    if (msg.payload.humidifier[i].entity_id.includes('humidifier')) {\n        humidifierState = msg.payload.humidifier[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.humidifierSet.value === \"increased\" && humidifierState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.humidifierSet.value === \"reduced\" && humidifierState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun oder ausschalten bei unverändertem Zustand\nif (msg.payload.humidifierSet.value === \"unchanged\") {\n    if (humidifierState === \"on\") {\n        // Wenn der Befeuchter im Zelt an ist und kein Wechsel angefordert wird, sende \"off\"\n        outputs[0] = { payload: \"off\", topic: \"Humidifier\" };\n    } else {\n        // Wenn der Befeuchter bereits aus ist oder nicht geändert werden soll\n        outputs[1] = { payload: \"Humidifier already stopped, nothing to do! Waiting for changes.\", topic: \"Humidifier\" };\n    }\n}\n\n// Nichts tun (detaillierte Information)\nif (msg.payload.humidifierSet.value === \"unchanged\" && humidifierState !== \"on\" && humidifierState !== \"off\") {\n    outputs[2] = { payload: \"Befeuchter unverändert, keine Aktion erforderlich\", data: msg.payload, topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1090,"y":2680,"wires":[["275bae4f3b5b7256"],["9ea6f7948516271f"],["044b8b89746465ea","9ea6f7948516271f"],[]]},{"id":"eadd457dd58778f4","type":"join","z":"3752d27d7587c957","g":"e88a7bd1d639bad0","name":"HumidityData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":860,"y":2700,"wires":[["130aefac0c56f3d2"]]},{"id":"8c9e965122e60702","type":"link in","z":"3752d27d7587c957","g":"e88a7bd1d639bad0","name":"HumidifierData","links":["49c6e2de0f1b0630"],"x":795,"y":2640,"wires":[["eadd457dd58778f4"]]},{"id":"044b8b89746465ea","type":"link out","z":"3752d27d7587c957","g":"e88a7bd1d639bad0","name":"link out 247","mode":"link","links":[],"x":1295,"y":2700,"wires":[]},{"id":"275bae4f3b5b7256","type":"link out","z":"3752d27d7587c957","g":"e88a7bd1d639bad0","name":"lHumidifierStart","mode":"link","links":["1be287d67694b336"],"x":1225,"y":2640,"wires":[]},{"id":"9ea6f7948516271f","type":"link out","z":"3752d27d7587c957","g":"e88a7bd1d639bad0","name":"HumidifierStop","mode":"link","links":["7deddc1b5d29a51e"],"x":1285,"y":2660,"wires":[]},{"id":"98e9d929c7780a95","type":"function","z":"3752d27d7587c957","g":"e91c9e1d85c046ee","name":"Exhaust Setup","func":"// Hilfsfunktion zur Überprüfung, ob ein Wert numerisch ist\nconst isNumeric = (value) => {\n    return !isNaN(parseFloat(value)) && isFinite(value);\n};\n\n// Funktion zur Bestimmung des dutyCycle-Werts\nconst findDutyCycle = (exhaustArray) => {\n    if (exhaustArray.length === 0) {\n        return null; // Keine Werte zu verarbeiten, wenn das Array leer ist\n    }\n    for (let i = 0; i < exhaustArray.length; i++) {\n        if (isNumeric(exhaustArray[i].value)) {\n            return parseInt(exhaustArray[i].value, 10);\n        }\n    }\n    return null; // Falls kein numerischer Wert gefunden wurde\n};\n\nlet outputs = [null, null, null, null]; // Array für vier Ausgänge\n\n// Zustand der Abluft und Geschwindigkeit aus der Payload extrahieren\nconst exhaustSpeed = msg.payload.exhaustSet.value; // Anpassung hier\nlet exhaustState = 'off'; // Standardwert setzen, falls kein Zustand gefunden wird\nif (msg.payload.Exhaust && msg.payload.Exhaust.length > 0) {\n    const exhaustSwitch = msg.payload.Exhaust.find(e => e.entity_id && e.entity_id.toLowerCase().includes(\"switch\"));\n    if (exhaustSwitch && exhaustSwitch.value) {\n        exhaustState = exhaustSwitch.value;\n    }\n}\n\nconst dutyCycle = findDutyCycle(msg.payload.Exhaust) || 0 ;\n\n// Prüfen, ob ein dutyCycle vorhanden ist\nif (dutyCycle === null) {\n    return outputs; // Kein dutyCycle gefunden, keine Aktion erforderlich\n}\n\nconst percentDifference = parseFloat(msg.payload.exhaustSet.percentDifference);\nlet newDutyCycle = dutyCycle;\n\n// Berechnung des neuen Duty Cycle basierend auf der prozentualen Abweichung\nif (percentDifference !== 0) {\n    if (percentDifference < 0) {\n        // Wenn der Wert negativ ist, erhöhen wir den Duty Cycle\n        newDutyCycle = dutyCycle + Math.abs(percentDifference);\n    } else {\n        // Wenn der Wert positiv ist, verringern wir den Duty Cycle\n        newDutyCycle = dutyCycle - percentDifference;\n    }\n\n    // Stellen Sie sicher, dass der neue Duty Cycle innerhalb der Grenzen liegt\n    newDutyCycle = Math.min(95, Math.max(10, Math.round(newDutyCycle)));\n}\n\n// Abluft starten auf dem ersten Ausgang, wenn sie aus ist und erhöht werden muss\nif (exhaustSpeed === \"increased\" && exhaustState === \"off\") {\n    outputs[0] = { payload: \"Starte Abluft\", topic: \"Start\" };\n    return outputs;\n}\n\n// Abluft-Geschwindigkeit erhöhen, wenn sie bereits eingeschaltet ist\nif (exhaustSpeed === \"increased\" && exhaustState === \"on\") {\n    outputs[2] = { payload: newDutyCycle.toString(), topic: \"Increase\" };\n    return outputs;\n}\n\n// Abluft stoppen auf dem zweiten Ausgang, wenn die Geschwindigkeit reduziert wird und der Duty Cycle sehr niedrig ist\nif (exhaustSpeed === \"reduced\" && exhaustState === \"on\" && newDutyCycle <= 10) {\n    outputs[1] = { payload: \"Stoppe Abluft\", topic: \"Stop\" };\n    return outputs;\n} else if (exhaustSpeed === \"reduced\" && exhaustState === \"on\") {\n    outputs[2] = { payload: newDutyCycle.toString(), topic: \"Decrease\" };\n    return outputs;\n}\n\n// Warnung ausgeben, wenn versucht wird, die Abluftgeschwindigkeit zu reduzieren, obwohl sie bereits aus ist\nif (exhaustSpeed === \"reduced\" && exhaustState === \"off\") {\n    outputs[1] = { payload: \"Abluft bereits gestoppt, kann nicht weiter reduziert werden\", topic: \"AlreadyStopped\" };\n    return outputs;\n}\n\n// Nichts tun, wenn keine Änderung erforderlich ist\nif (exhaustSpeed === \"unchanged\") {\n    outputs[3] = { payload: \"Abluft unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n    return outputs;\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1060,"y":2460,"wires":[["33fc3d2e9cd78585","24c9220c68fb62b7"],["c8eedd46a87c4e05","24c9220c68fb62b7"],["5fb6d1a98472e6a7","24c9220c68fb62b7"],["24c9220c68fb62b7"]]},{"id":"96329aa106f70306","type":"http request","z":"3752d27d7587c957","g":"e91c9e1d85c046ee","name":"DutyPostChange","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.234:5533/air/ctrl","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":1310,"y":2540,"wires":[[]]},{"id":"5fb6d1a98472e6a7","type":"function","z":"3752d27d7587c957","g":"e91c9e1d85c046ee","name":"DutyChanger","func":"\nconst NewDuty = msg.payload\n\nmsg.payload = { \"newDuty\": NewDuty}\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1330,"y":2500,"wires":[["96329aa106f70306"]]},{"id":"72b6eee10204eab0","type":"join","z":"3752d27d7587c957","g":"e91c9e1d85c046ee","name":"exhasutData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":860,"y":2540,"wires":[["98e9d929c7780a95","24c9220c68fb62b7"]]},{"id":"38dec2c32136830f","type":"link in","z":"3752d27d7587c957","g":"e91c9e1d85c046ee","name":"ExhasutData","links":["e52f426c3a45d473"],"x":805,"y":2460,"wires":[["72b6eee10204eab0"]]},{"id":"33fc3d2e9cd78585","type":"link out","z":"3752d27d7587c957","g":"e91c9e1d85c046ee","name":"ExhaustVeggiON","mode":"link","links":["09f51aa364202656"],"x":1285,"y":2400,"wires":[]},{"id":"c8eedd46a87c4e05","type":"link out","z":"3752d27d7587c957","g":"e91c9e1d85c046ee","name":"ExhaustVeggiOFF","mode":"link","links":["95404f058f30b296"],"x":1315,"y":2440,"wires":[]},{"id":"24c9220c68fb62b7","type":"debug","z":"3752d27d7587c957","g":"e91c9e1d85c046ee","name":"debug 212","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1050,"y":2400,"wires":[]},{"id":"23007d82705af554","type":"join","z":"3752d27d7587c957","g":"46849ed08b50e5ba","name":"LightData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":850,"y":3340,"wires":[["9f560067e24ed926"]]},{"id":"5521b9903e434e53","type":"link in","z":"3752d27d7587c957","g":"46849ed08b50e5ba","name":"link in 78","links":[],"x":795,"y":3280,"wires":[["23007d82705af554"]]},{"id":"9f560067e24ed926","type":"function","z":"3752d27d7587c957","g":"46849ed08b50e5ba","name":"LightSetup","func":"let outputs = [null, null, null];\n\nlet lightState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.light.length; i++) {\n    if (msg.payload.light[i].entity_id.includes('light')) {\n        lightState = msg.payload.light[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.lightSet.value === \"increased\" && lightState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.lightSet.value === \"reduced\" && lightState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.lightSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Befeuchter unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1050,"y":3340,"wires":[["ceece08bdcf36b45"],["47f66b133089a307"],["26c9991882e10724"],[]]},{"id":"ceece08bdcf36b45","type":"link out","z":"3752d27d7587c957","g":"46849ed08b50e5ba","name":"link out 248","mode":"link","links":[],"x":1255,"y":3300,"wires":[]},{"id":"47f66b133089a307","type":"link out","z":"3752d27d7587c957","g":"46849ed08b50e5ba","name":"link out 249","mode":"link","links":[],"x":1315,"y":3320,"wires":[]},{"id":"26c9991882e10724","type":"link out","z":"3752d27d7587c957","g":"46849ed08b50e5ba","name":"link out 250","mode":"link","links":[],"x":1355,"y":3360,"wires":[]},{"id":"5bbf896a2ea907b7","type":"comment","z":"3752d27d7587c957","g":"46849ed08b50e5ba","name":"NOT IMPLEMNTED RIGHT NOW","info":"","x":970,"y":3340,"wires":[]},{"id":"6adb40f69dc1d358","type":"join","z":"3752d27d7587c957","g":"af5ae6e3ad5ee085","name":"CoolerData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":870,"y":3180,"wires":[["b01288200b38b3d8"]]},{"id":"2d1032e30c1285d7","type":"link in","z":"3752d27d7587c957","g":"af5ae6e3ad5ee085","name":"link in 79","links":[],"x":805,"y":3120,"wires":[["6adb40f69dc1d358"]]},{"id":"b01288200b38b3d8","type":"function","z":"3752d27d7587c957","g":"af5ae6e3ad5ee085","name":"CoolerSetup","func":"let outputs = [null, null]; // Array für zwei Ausgänge\n\nlet coolerState = null;\n\n// Schleife, um den Zustand des Cooler zu finden\nfor (let i = 0; i < msg.payload.cooler.length; i++) {\n    if (msg.payload.cooler[i].entity_id.includes('cooler')) {\n        coolerState = msg.payload.cooler[i].value;\n        break;\n    }\n}\n\n// Cooler starten\nif (msg.payload.coolerSet.value === \"increased\" && coolerState === \"off\") {\n    outputs[0] = { payload: \"Start Cooler\", topic: \"Start\" };\n}\n\n// Cooler stoppen\nif (msg.payload.coolerSet.value === \"reduced\" && coolerState === \"on\") {\n    outputs[1] = { payload: \"Stop Cooler\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.coolerSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Cooler unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1070,"y":3180,"wires":[["c55d6a64f93d071e"],["8cbbef67cfbe7dfe"],["d6464c42f14d5fc5"],[]]},{"id":"c55d6a64f93d071e","type":"link out","z":"3752d27d7587c957","g":"af5ae6e3ad5ee085","name":"CoolerON","mode":"link","links":["cc608f4009e112e6"],"x":1265,"y":3140,"wires":[]},{"id":"8cbbef67cfbe7dfe","type":"link out","z":"3752d27d7587c957","g":"af5ae6e3ad5ee085","name":"CoolerOFF","mode":"link","links":["eabb7d61eeb2383f"],"x":1325,"y":3160,"wires":[]},{"id":"d6464c42f14d5fc5","type":"link out","z":"3752d27d7587c957","g":"af5ae6e3ad5ee085","name":"link out 251","mode":"link","links":[],"x":1365,"y":3200,"wires":[]},{"id":"fa6ccea1f0eb7761","type":"join","z":"3752d27d7587c957","g":"5bac9b3f67a092a7","name":"HeaterData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":870,"y":3020,"wires":[["eec1cc6d7c31c0d5"]]},{"id":"55ae7399c1ff6c60","type":"link in","z":"3752d27d7587c957","g":"5bac9b3f67a092a7","name":"link in 80","links":[],"x":805,"y":2960,"wires":[["fa6ccea1f0eb7761"]]},{"id":"eec1cc6d7c31c0d5","type":"function","z":"3752d27d7587c957","g":"5bac9b3f67a092a7","name":"HeaterSetup","func":"let outputs = [null, null, null];\n\nlet heaterState = null;\n\n// Schleife, um den Zustand des Heater zu finden\nfor (let i = 0; i < msg.payload.heater.length; i++) {\n    if (msg.payload.heater[i].entity_id.includes('heater')) {\n        heaterState = msg.payload.heater[i].value;\n        break;\n    }\n}\n\n// Heater starten\nif (msg.payload.heaterSet.value === \"increased\" && heaterState === \"off\") {\n    outputs[0] = { payload: \"Start Heater\", topic: \"Start\" };\n}\n\n// Heater stoppen\nif (msg.payload.heaterSet.value === \"reduced\" && heaterState === \"on\") {\n    outputs[1] = { payload: \"Stop Heater\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.heaterSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Heater unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1070,"y":3020,"wires":[["b7298b472b6af1e2"],["cb1beae740939d31"],["f9ce7d4cdddd4bc1"],[]]},{"id":"b7298b472b6af1e2","type":"link out","z":"3752d27d7587c957","g":"5bac9b3f67a092a7","name":"HeaterON","mode":"link","links":["1be287d67694b336"],"x":1255,"y":2980,"wires":[]},{"id":"cb1beae740939d31","type":"link out","z":"3752d27d7587c957","g":"5bac9b3f67a092a7","name":"HeaterOFF","mode":"link","links":["593f0c0e52db1610"],"x":1315,"y":3000,"wires":[]},{"id":"f9ce7d4cdddd4bc1","type":"link out","z":"3752d27d7587c957","g":"5bac9b3f67a092a7","name":"link out 252","mode":"link","links":[],"x":1355,"y":3040,"wires":[]},{"id":"054a9ac36b5ddd7f","type":"join","z":"3752d27d7587c957","g":"8cb611ea5c4ba863","name":"DehumidifierData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":870,"y":2860,"wires":[["205e3974a1b26ec3"]]},{"id":"51a4f01dad48fe0b","type":"link in","z":"3752d27d7587c957","g":"8cb611ea5c4ba863","name":"Dehumidifier","links":[],"x":805,"y":2800,"wires":[["054a9ac36b5ddd7f"]]},{"id":"205e3974a1b26ec3","type":"function","z":"3752d27d7587c957","g":"8cb611ea5c4ba863","name":"DehumidifierSetup","func":"let outputs = [null, null, null];\n\nlet dehumidifierState = null;\n\n// Schleife, um den Zustand des Dehumidifier zu finden\nfor (let i = 0; i < msg.payload.dehumidifier.length; i++) {\n    if (msg.payload.dehumidifier[i].entity_id.includes('dehumidifier')) {\n        dehumidifierState = msg.payload.dehumidifier[i].value;\n        break;\n    }\n}\n\n// Dehumidifier starten\nif (msg.payload.dehumidifierSet.value === \"increased\" && dehumidifierState === \"off\") {\n    outputs[0] = { payload: \"Starte Dehumidifier\", topic: \"Start\" };\n}\n\n// Dehumidifier stoppen\nif (msg.payload.dehumidifierSet.value === \"reduced\" && dehumidifierState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Dehumidifier\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.dehumidifierSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Dehumidifier unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1070,"y":2860,"wires":[["a2cc8907d2e035e6"],["6742723e51a69e70"],["5943e827fde3be92"],[]]},{"id":"a2cc8907d2e035e6","type":"link out","z":"3752d27d7587c957","g":"8cb611ea5c4ba863","name":"DefhumidiferON","mode":"link","links":["4c88812165b09b0e"],"x":1255,"y":2820,"wires":[]},{"id":"6742723e51a69e70","type":"link out","z":"3752d27d7587c957","g":"8cb611ea5c4ba863","name":"DefhumidiferOFF","mode":"link","links":["2b8233e8bb0edf47"],"x":1315,"y":2840,"wires":[]},{"id":"5943e827fde3be92","type":"link out","z":"3752d27d7587c957","g":"8cb611ea5c4ba863","name":"link out 253","mode":"link","links":[],"x":1355,"y":2880,"wires":[]},{"id":"292a5baf3d9f7209","type":"join","z":"3752d27d7587c957","name":"VentsData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"4","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"num","reduceFixup":"","x":930,"y":4800,"wires":[["7301c9a174a5a3f9"]]},{"id":"9e74edabae740add","type":"link in","z":"3752d27d7587c957","name":"link in 81","links":[],"x":885,"y":4740,"wires":[["292a5baf3d9f7209"]]},{"id":"7301c9a174a5a3f9","type":"function","z":"3752d27d7587c957","name":"VentsSetup","func":"let outputs = [null, null, null];\n\nlet ventsState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.vents.length; i++) {\n    if (msg.payload.vents[i].entity_id.includes('vents')) {\n        ventsState = msg.payload.vents[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.ventsSet.value === \"increased\" && ventsState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.ventsSet.value === \"reduced\" && ventsState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.ventsSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Befeuchter unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1130,"y":4800,"wires":[["67e9d6850e3c9f51"],["f80646db5f8a9bae"],["8c063e0188c540ad"],[]]},{"id":"67e9d6850e3c9f51","type":"link out","z":"3752d27d7587c957","name":"link out 254","mode":"link","links":[],"x":1315,"y":4760,"wires":[]},{"id":"f80646db5f8a9bae","type":"link out","z":"3752d27d7587c957","name":"link out 255","mode":"link","links":[],"x":1375,"y":4780,"wires":[]},{"id":"8c063e0188c540ad","type":"link out","z":"3752d27d7587c957","name":"link out 256","mode":"link","links":[],"x":1415,"y":4820,"wires":[]},{"id":"168f30120de40d57","type":"comment","z":"3752d27d7587c957","name":"NOT READY","info":"","x":1050,"y":4800,"wires":[]},{"id":"e7086e9b57e7aedd","type":"function","z":"3752d27d7587c957","g":"d47068ee803a0746","name":"BefeuchterSetup","func":"let outputs = [null, null, null];\n\nlet humidifierState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.humidifier.length; i++) {\n    if (msg.payload.humidifier[i].entity_id.includes('humidifier')) {\n        humidifierState = msg.payload.humidifier[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.humidifierSet.value === \"increased\" && humidifierState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.humidifierSet.value === \"reduced\" && humidifierState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun oder ausschalten bei unverändertem Zustand\nif (msg.payload.humidifierSet.value === \"unchanged\") {\n    if (humidifierState === \"on\") {\n        // Wenn der Befeuchter im Zelt an ist und kein Wechsel angefordert wird, sende \"off\"\n        outputs[0] = { payload: \"off\", topic: \"Humidifier\" };\n    } else {\n        // Wenn der Befeuchter bereits aus ist oder nicht geändert werden soll\n        outputs[1] = { payload: \"Humidifier already stopped, nothing to do! Waiting for changes.\", topic: \"Humidifier\" };\n    }\n}\n\n// Nichts tun (detaillierte Information)\nif (msg.payload.humidifierSet.value === \"unchanged\" && humidifierState !== \"on\" && humidifierState !== \"off\") {\n    outputs[2] = { payload: \"Befeuchter unverändert, keine Aktion erforderlich\", data: msg.payload, topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1170,"y":3980,"wires":[["14427e078adf6cba"],["ed29e5a88b496068"],["80f2b3c3b959bc1a","ed29e5a88b496068"],[]]},{"id":"2c07528ffc45451d","type":"join","z":"3752d27d7587c957","g":"d47068ee803a0746","name":"HumidityData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":940,"y":4000,"wires":[["e7086e9b57e7aedd"]]},{"id":"7e0384d9297a7e91","type":"link in","z":"3752d27d7587c957","g":"d47068ee803a0746","name":"HumidifierData","links":["49c6e2de0f1b0630"],"x":875,"y":3940,"wires":[["2c07528ffc45451d"]]},{"id":"80f2b3c3b959bc1a","type":"link out","z":"3752d27d7587c957","g":"d47068ee803a0746","name":"link out 257","mode":"link","links":[],"x":1375,"y":4000,"wires":[]},{"id":"14427e078adf6cba","type":"link out","z":"3752d27d7587c957","g":"d47068ee803a0746","name":"lHumidifierStart","mode":"link","links":["1be287d67694b336"],"x":1305,"y":3940,"wires":[]},{"id":"ed29e5a88b496068","type":"link out","z":"3752d27d7587c957","g":"d47068ee803a0746","name":"HumidifierStop","mode":"link","links":["7deddc1b5d29a51e"],"x":1365,"y":3960,"wires":[]},{"id":"4dfa24b6d8b42ff4","type":"function","z":"3752d27d7587c957","g":"847594f46987e383","name":"Exhaust Setup","func":"// Hilfsfunktion zur Überprüfung, ob ein Wert numerisch ist\nconst isNumeric = (value) => {\n    return !isNaN(parseFloat(value)) && isFinite(value);\n};\n\n// Funktion zur Bestimmung des dutyCycle-Werts\nconst findDutyCycle = (exhaustArray) => {\n    if (exhaustArray.length === 0) {\n        return null; // Keine Werte zu verarbeiten, wenn das Array leer ist\n    }\n    for (let i = 0; i < exhaustArray.length; i++) {\n        if (isNumeric(exhaustArray[i].value)) {\n            return parseInt(exhaustArray[i].value, 10);\n        }\n    }\n    return null; // Falls kein numerischer Wert gefunden wurde\n};\n\nlet outputs = [null, null, null, null]; // Array für vier Ausgänge\n\n// Zustand der Abluft und Geschwindigkeit aus der Payload extrahieren\nconst exhaustSpeed = msg.payload.exhaustSet.value; // Anpassung hier\nlet exhaustState = 'off'; // Standardwert setzen, falls kein Zustand gefunden wird\nif (msg.payload.Exhaust && msg.payload.Exhaust.length > 0) {\n    const exhaustSwitch = msg.payload.Exhaust.find(e => e.entity_id && e.entity_id.toLowerCase().includes(\"switch\"));\n    if (exhaustSwitch && exhaustSwitch.value) {\n        exhaustState = exhaustSwitch.value;\n    }\n}\n\nconst dutyCycle = findDutyCycle(msg.payload.Exhaust) || 0 ;\n\n// Prüfen, ob ein dutyCycle vorhanden ist\nif (dutyCycle === null) {\n    return outputs; // Kein dutyCycle gefunden, keine Aktion erforderlich\n}\n\nconst percentDifference = parseFloat(msg.payload.exhaustSet.percentDifference);\nlet newDutyCycle = dutyCycle;\n\n// Berechnung des neuen Duty Cycle basierend auf der prozentualen Abweichung\nif (percentDifference !== 0) {\n    if (percentDifference < 0) {\n        // Wenn der Wert negativ ist, erhöhen wir den Duty Cycle\n        newDutyCycle = dutyCycle + Math.abs(percentDifference);\n    } else {\n        // Wenn der Wert positiv ist, verringern wir den Duty Cycle\n        newDutyCycle = dutyCycle - percentDifference;\n    }\n\n    // Stellen Sie sicher, dass der neue Duty Cycle innerhalb der Grenzen liegt\n    newDutyCycle = Math.min(95, Math.max(10, Math.round(newDutyCycle)));\n}\n\n// Abluft starten auf dem ersten Ausgang, wenn sie aus ist und erhöht werden muss\nif (exhaustSpeed === \"increased\" && exhaustState === \"off\") {\n    outputs[0] = { payload: \"Starte Abluft\", topic: \"Start\" };\n    return outputs;\n}\n\n// Abluft-Geschwindigkeit erhöhen, wenn sie bereits eingeschaltet ist\nif (exhaustSpeed === \"increased\" && exhaustState === \"on\") {\n    outputs[2] = { payload: newDutyCycle.toString(), topic: \"Increase\" };\n    return outputs;\n}\n\n// Abluft stoppen auf dem zweiten Ausgang, wenn die Geschwindigkeit reduziert wird und der Duty Cycle sehr niedrig ist\nif (exhaustSpeed === \"reduced\" && exhaustState === \"on\" && newDutyCycle <= 10) {\n    outputs[1] = { payload: \"Stoppe Abluft\", topic: \"Stop\" };\n    return outputs;\n} else if (exhaustSpeed === \"reduced\" && exhaustState === \"on\") {\n    outputs[2] = { payload: newDutyCycle.toString(), topic: \"Decrease\" };\n    return outputs;\n}\n\n// Warnung ausgeben, wenn versucht wird, die Abluftgeschwindigkeit zu reduzieren, obwohl sie bereits aus ist\nif (exhaustSpeed === \"reduced\" && exhaustState === \"off\") {\n    outputs[1] = { payload: \"Abluft bereits gestoppt, kann nicht weiter reduziert werden\", topic: \"AlreadyStopped\" };\n    return outputs;\n}\n\n// Nichts tun, wenn keine Änderung erforderlich ist\nif (exhaustSpeed === \"unchanged\") {\n    outputs[3] = { payload: \"Abluft unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n    return outputs;\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1140,"y":3760,"wires":[["b7c84e5a0d6164f8","81b2a412d6022071"],["1a0ec9c685e04bdd","81b2a412d6022071"],["2456ad9015cf1db8","81b2a412d6022071"],["81b2a412d6022071"]]},{"id":"c75110310104533e","type":"http request","z":"3752d27d7587c957","g":"847594f46987e383","name":"DutyPostChange","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.234:5533/air/ctrl","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":1390,"y":3840,"wires":[[]]},{"id":"2456ad9015cf1db8","type":"function","z":"3752d27d7587c957","g":"847594f46987e383","name":"DutyChanger","func":"\nconst NewDuty = msg.payload\n\nmsg.payload = { \"newDuty\": NewDuty}\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1410,"y":3800,"wires":[["c75110310104533e"]]},{"id":"edc89824a48d595e","type":"join","z":"3752d27d7587c957","g":"847594f46987e383","name":"exhasutData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":940,"y":3840,"wires":[["4dfa24b6d8b42ff4","81b2a412d6022071"]]},{"id":"4c2f7e58d2747c89","type":"link in","z":"3752d27d7587c957","g":"847594f46987e383","name":"ExhasutData","links":["e52f426c3a45d473"],"x":885,"y":3760,"wires":[["edc89824a48d595e"]]},{"id":"b7c84e5a0d6164f8","type":"link out","z":"3752d27d7587c957","g":"847594f46987e383","name":"ExhaustVeggiON","mode":"link","links":["09f51aa364202656"],"x":1305,"y":3720,"wires":[]},{"id":"1a0ec9c685e04bdd","type":"link out","z":"3752d27d7587c957","g":"847594f46987e383","name":"ExhaustVeggiOFF","mode":"link","links":["95404f058f30b296"],"x":1345,"y":3740,"wires":[]},{"id":"81b2a412d6022071","type":"debug","z":"3752d27d7587c957","g":"847594f46987e383","name":"debug 213","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1130,"y":3700,"wires":[]},{"id":"2ee9dc2a253a61c0","type":"join","z":"3752d27d7587c957","g":"2f58abf3df089a0a","name":"LightData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":930,"y":4640,"wires":[["503fc3f9a3d0e523"]]},{"id":"fb45cd88ffcdccdb","type":"link in","z":"3752d27d7587c957","g":"2f58abf3df089a0a","name":"link in 82","links":[],"x":875,"y":4580,"wires":[["2ee9dc2a253a61c0"]]},{"id":"503fc3f9a3d0e523","type":"function","z":"3752d27d7587c957","g":"2f58abf3df089a0a","name":"LightSetup","func":"let outputs = [null, null, null];\n\nlet lightState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.light.length; i++) {\n    if (msg.payload.light[i].entity_id.includes('light')) {\n        lightState = msg.payload.light[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.lightSet.value === \"increased\" && lightState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.lightSet.value === \"reduced\" && lightState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.lightSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Befeuchter unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1130,"y":4640,"wires":[["d1959910cd73202a"],["a229da6e12603695"],["159e5b09bd1d8b0a"],[]]},{"id":"d1959910cd73202a","type":"link out","z":"3752d27d7587c957","g":"2f58abf3df089a0a","name":"link out 258","mode":"link","links":[],"x":1335,"y":4600,"wires":[]},{"id":"a229da6e12603695","type":"link out","z":"3752d27d7587c957","g":"2f58abf3df089a0a","name":"link out 259","mode":"link","links":[],"x":1395,"y":4620,"wires":[]},{"id":"159e5b09bd1d8b0a","type":"link out","z":"3752d27d7587c957","g":"2f58abf3df089a0a","name":"link out 260","mode":"link","links":[],"x":1435,"y":4660,"wires":[]},{"id":"066110f97b6727b1","type":"comment","z":"3752d27d7587c957","g":"2f58abf3df089a0a","name":"NOT IMPLEMNTED RIGHT NOW","info":"","x":1050,"y":4640,"wires":[]},{"id":"3058f5e69e108b49","type":"join","z":"3752d27d7587c957","g":"16ae38ecbbecfb3c","name":"CoolerData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":950,"y":4480,"wires":[["5527298732557b21"]]},{"id":"d6d70596698ec69d","type":"link in","z":"3752d27d7587c957","g":"16ae38ecbbecfb3c","name":"link in 83","links":[],"x":885,"y":4420,"wires":[["3058f5e69e108b49"]]},{"id":"5527298732557b21","type":"function","z":"3752d27d7587c957","g":"16ae38ecbbecfb3c","name":"CoolerSetup","func":"let outputs = [null, null, null];\n\nlet coolerState = null;\n\n// Schleife, um den Zustand des Cooler zu finden\nfor (let i = 0; i < msg.payload.cooler.length; i++) {\n    if (msg.payload.cooler[i].entity_id.includes('cooler')) {\n        coolerState = msg.payload.cooler[i].value;\n        break;\n    }\n}\n\n// Cooler starten\nif (msg.payload.coolerSet.value === \"increased\" && coolerState === \"off\") {\n    outputs[0] = { payload: \"Start Cooler\", topic: \"Start\" };\n}\n\n// Cooler stoppen\nif (msg.payload.coolerSet.value === \"reduced\" && coolerState === \"on\") {\n    outputs[1] = { payload: \"Stop Cooler\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.coolerSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Cooler unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1150,"y":4480,"wires":[["c5ab8f7e0e65487f"],["8af0c8809f8679e2"],["8dfaec90effbf6d5"],[]]},{"id":"c5ab8f7e0e65487f","type":"link out","z":"3752d27d7587c957","g":"16ae38ecbbecfb3c","name":"CoolerON","mode":"link","links":["cc608f4009e112e6"],"x":1345,"y":4440,"wires":[]},{"id":"8af0c8809f8679e2","type":"link out","z":"3752d27d7587c957","g":"16ae38ecbbecfb3c","name":"CoolerOFF","mode":"link","links":["eabb7d61eeb2383f"],"x":1405,"y":4460,"wires":[]},{"id":"8dfaec90effbf6d5","type":"link out","z":"3752d27d7587c957","g":"16ae38ecbbecfb3c","name":"link out 261","mode":"link","links":[],"x":1445,"y":4500,"wires":[]},{"id":"3ab18c9107c0b265","type":"join","z":"3752d27d7587c957","g":"d61b690a44a7b889","name":"HeaterData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":950,"y":4320,"wires":[["d06f6cf9e29a00e2"]]},{"id":"9e6805dc5aacd0eb","type":"link in","z":"3752d27d7587c957","g":"d61b690a44a7b889","name":"link in 84","links":[],"x":885,"y":4260,"wires":[["3ab18c9107c0b265"]]},{"id":"d06f6cf9e29a00e2","type":"function","z":"3752d27d7587c957","g":"d61b690a44a7b889","name":"HeaterSetup","func":"let outputs = [null, null, null];\n\nlet heaterState = null;\n\n// Schleife, um den Zustand des Heater zu finden\nfor (let i = 0; i < msg.payload.heater.length; i++) {\n    if (msg.payload.heater[i].entity_id.includes('heater')) {\n        heaterState = msg.payload.heater[i].value;\n        break;\n    }\n}\n\n// Heater starten\nif (msg.payload.heaterSet.value === \"increased\" && heaterState === \"off\") {\n    outputs[0] = { payload: \"Start Heater\", topic: \"Start\" };\n}\n\n// Heater stoppen\nif (msg.payload.heaterSet.value === \"reduced\" && heaterState === \"on\") {\n    outputs[1] = { payload: \"Stop Heater\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.heaterSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Heater unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1150,"y":4320,"wires":[["2621143cc57c267d"],["9a757849e139a788"],["81fb7a57cf621af7"],[]]},{"id":"2621143cc57c267d","type":"link out","z":"3752d27d7587c957","g":"d61b690a44a7b889","name":"HeaterON","mode":"link","links":["1be287d67694b336"],"x":1335,"y":4280,"wires":[]},{"id":"9a757849e139a788","type":"link out","z":"3752d27d7587c957","g":"d61b690a44a7b889","name":"HeaterOFF","mode":"link","links":["593f0c0e52db1610"],"x":1395,"y":4300,"wires":[]},{"id":"81fb7a57cf621af7","type":"link out","z":"3752d27d7587c957","g":"d61b690a44a7b889","name":"link out 262","mode":"link","links":[],"x":1435,"y":4340,"wires":[]},{"id":"e08625c0e15d465a","type":"join","z":"3752d27d7587c957","g":"a36ff310c44458ba","name":"DehumidifierData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":950,"y":4160,"wires":[["4357a5e8416142e6"]]},{"id":"c1ac94e9178182bd","type":"link in","z":"3752d27d7587c957","g":"a36ff310c44458ba","name":"Dehumidifier","links":[],"x":885,"y":4100,"wires":[["e08625c0e15d465a"]]},{"id":"4357a5e8416142e6","type":"function","z":"3752d27d7587c957","g":"a36ff310c44458ba","name":"DehumidifierSetup","func":"let outputs = [null, null, null];\n\nlet dehumidifierState = null;\n\n// Schleife, um den Zustand des Dehumidifier zu finden\nfor (let i = 0; i < msg.payload.dehumidifier.length; i++) {\n    if (msg.payload.dehumidifier[i].entity_id.includes('dehumidifier')) {\n        dehumidifierState = msg.payload.dehumidifier[i].value;\n        break;\n    }\n}\n\n// Dehumidifier starten\nif (msg.payload.dehumidifierSet.value === \"increased\" && dehumidifierState === \"off\") {\n    outputs[0] = { payload: \"Starte Dehumidifier\", topic: \"Start\" };\n}\n\n// Dehumidifier stoppen\nif (msg.payload.dehumidifierSet.value === \"reduced\" && dehumidifierState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Dehumidifier\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.dehumidifierSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Dehumidifier unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1150,"y":4160,"wires":[["922bd2bc6ee5806f"],["e462cbb4a6911311"],["5f47a9411d92b261"],[]]},{"id":"922bd2bc6ee5806f","type":"link out","z":"3752d27d7587c957","g":"a36ff310c44458ba","name":"DefhumidiferON","mode":"link","links":["4c88812165b09b0e"],"x":1335,"y":4120,"wires":[]},{"id":"e462cbb4a6911311","type":"link out","z":"3752d27d7587c957","g":"a36ff310c44458ba","name":"DefhumidiferOFF","mode":"link","links":["2b8233e8bb0edf47"],"x":1395,"y":4140,"wires":[]},{"id":"5f47a9411d92b261","type":"link out","z":"3752d27d7587c957","g":"a36ff310c44458ba","name":"link out 263","mode":"link","links":[],"x":1435,"y":4180,"wires":[]},{"id":"db06e129a47a81f9","type":"debug","z":"3752d27d7587c957","g":"8ecdceb2353f84e1","name":"debug 214","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1800,"y":1300,"wires":[]},{"id":"1bedaaa0414273ae","type":"link in","z":"6fcb82f207901f17","name":"GrowRoomCtrl","links":["735e34c63d920535"],"x":45,"y":40,"wires":[["c64f4b6014615ee6"]]},{"id":"c64f4b6014615ee6","type":"debug","z":"6fcb82f207901f17","name":"GrowRoomData","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":160,"y":40,"wires":[]},{"id":"a4081dac03c18d34","type":"ha-sensor","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"AVGHum-GRoom","entityConfig":"d89f8d34c695951c","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1110,"y":200,"wires":[["db1ef151562e7d39"]]},{"id":"a110f6c0c7db7eb9","type":"ha-sensor","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"AVGTemp-GRoom","entityConfig":"3cd010abab22bd94","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1110,"y":140,"wires":[["db1ef151562e7d39"]]},{"id":"3b8dcf1ddd3f0a98","type":"ha-sensor","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"currentVPD","entityConfig":"d5ba019e431db281","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1350,"y":100,"wires":[["8b1d308f861b62d2"]]},{"id":"c0967c0c3b535687","type":"function","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"Calc-AVG","func":"// Funktion zur Berechnung des Durchschnitts\nconst AvgTemp = (temps) => {\n    let sum = 0;\n    let count = 0;\n\n    temps.forEach((entry) => {\n        const temp = parseFloat(entry.value);\n        if (!isNaN(temp)) {\n            sum += temp;\n            count++;\n        }\n    });\n\n    if (count === 0) {\n        return \"unavailable\";\n    }\n\n    const avg = sum / count;\n    return avg.toFixed(2);\n};\n\n// Durchschnittstemperatur für jede Temperaturkategorie berechnen\nconst temperatureAvg = AvgTemp(msg.payload.temperature);\nconst humidityAvg = AvgTemp(msg.payload.humidity);\n\n// Objekt mit den Durchschnittswerten erstellen\nconst avgData = {\n    AvgTempData: temperatureAvg,\n    AvgHumData: humidityAvg\n};\n\n// Nachrichten erstellen und zurückgeben\nconst avgDataMsg = { payload: avgData, topic: \"AvgData\" };\nconst tempMsg = { payload: temperatureAvg, topic: \"AvgTemp\" };\nconst humMsg = { payload: humidityAvg, topic: \"AvgHum\" };\n\nreturn [avgDataMsg, tempMsg, humMsg];\n","outputs":3,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":880,"y":120,"wires":[["d343ec2789e9a24b"],["a110f6c0c7db7eb9"],["a4081dac03c18d34"]]},{"id":"412c666772359b58","type":"function","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"VPD Calc ","func":"function calculateVPD(luftTemperatur, blattTemperatur, relativeLuftfeuchtigkeit) {\n    // Stellen Sie sicher, dass alle Eingaben Zahlen sind\n    luftTemperatur = parseFloat(luftTemperatur);\n    blattTemperatur = parseFloat(blattTemperatur);\n    relativeLuftfeuchtigkeit = parseFloat(relativeLuftfeuchtigkeit);\n\n    // Überprüfen Sie, ob einer der Werte NaN ist\n    if (isNaN(luftTemperatur) || isNaN(blattTemperatur) || isNaN(relativeLuftfeuchtigkeit)) {\n        return NaN; // Geändert von \"unavailable\" zu NaN für bessere Handhabung in numerischen Berechnungen\n    }\n\n    // Berechnungen ohne Rundung\n    let sdpLuft = 0.6108 * Math.exp((17.27 * luftTemperatur) / (luftTemperatur + 237.3));\n    let sdpBlatt = 0.6108 * Math.exp((17.27 * blattTemperatur) / (blattTemperatur + 237.3));\n    let adp = (relativeLuftfeuchtigkeit / 100) * sdpLuft;\n    let vpd = sdpBlatt - adp;\n\n    // Rückgabe als number, nicht als string\n    return parseFloat(vpd.toFixed(2));\n}\n\n// Beispiel für die Verwendung der Funktion\nlet luftTemperatur = parseFloat(msg.payload.AvgData.AvgTempData); // Stellen Sie sicher, dass dies eine Zahl ist\nlet blattTemperatur = parseFloat(msg.payload.AvgData.AvgTempData) - parseFloat(msg.payload.LeafOffSet); // Keine Rundung, genaue Berechnung\nlet relativeLuftfeuchtigkeit = parseFloat(msg.payload.AvgData.AvgHumData); // Stellen Sie sicher, dass dies eine Zahl ist\n\nlet vpd = calculateVPD(luftTemperatur, blattTemperatur, relativeLuftfeuchtigkeit);\n\nmsg.payload = vpd; // Nun ist msg.payload eine Zahl\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1200,"y":100,"wires":[["3b8dcf1ddd3f0a98"]]},{"id":"e472ad4545656f1a","type":"comment","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"VPD-Creation","info":"","x":1070,"y":60,"wires":[]},{"id":"e3159b94f3c122de","type":"function","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"Calc-Dewpoint","func":"// Funktion zur Berechnung des Taupunkts\nconst calculateDewPoint = (temperature, humidity) => {\n    const temp = parseFloat(temperature);\n    const hum = parseFloat(humidity);\n\n    if (isNaN(temp) || isNaN(hum)) {\n        return \"unavailable\";\n    }\n\n    const dewPoint = temp - ((100 - hum) / 5);\n    return parseFloat(dewPoint.toFixed(3));\n};\n\n// Beispielinput\nconst inputData = msg.payload;\n\n// Taupunkt berechnen\nconst temperature = parseFloat(inputData.AvgTemp);\nconst humidity = parseFloat(inputData.AvgHum);\nconst dewPoint = calculateDewPoint(temperature, humidity);\n\n// Taupunkt als Zahl zurückgeben\nmsg.payload = dewPoint;\nreturn msg\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1460,"y":160,"wires":[["af9a83abe0545535"]]},{"id":"db1ef151562e7d39","type":"join","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1310,"y":160,"wires":[["e3159b94f3c122de"]]},{"id":"af9a83abe0545535","type":"ha-sensor","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"GRoomAVGDewpoint","entityConfig":"4d520d7d773809b5","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[{"property":"topic","propertyType":"msg","value":"DryTentDewPoint","valueType":"str"}],"x":1380,"y":200,"wires":[[]]},{"id":"d343ec2789e9a24b","type":"join","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1050,"y":100,"wires":[["412c666772359b58"]]},{"id":"5586660314d79b76","type":"link in","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"link in 10","links":["f0449f704d2f7c8a"],"x":795,"y":60,"wires":[["33cbaa818f6e4618"]]},{"id":"33cbaa818f6e4618","type":"function","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"Select","func":"let outputs = [null, null];\n\nvar leafMode = msg.payload.GlobalLeafSet;\nvar leafOffSet = msg.payload.LeafOffset;\nvar flowerLeafOffset = msg.payload.FlowerLeafOffset;\nvar veggiLeafOffset = msg.payload.VeggiLeafOffset;\nvar groomLeafOffset = msg.payload.GRoomLeafOffset;\n\n// Logic to set new offset based on leaf mode\nif (leafMode === \"Default\") {\n    outputs[0] = { payload: leafOffSet, topic: \"LeafOffSet\" };\n} else if (leafMode === \"Custom\") {\n    outputs[1] = { payload: veggiLeafOffset, topic: \"LeafOffSet\" };\n}\n\nreturn outputs;  // Return the modified outputs array\n","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":890,"y":60,"wires":[["d343ec2789e9a24b"],["d343ec2789e9a24b"]]},{"id":"56a4e455c0f9d5e2","type":"function","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"TentModesSetup","func":"// Initialisiert das Array für die Ausgänge mit Nullen\nlet outputs = [null, null, null, null, null];\n\n// Überprüft den Zustand des eingehenden Payloads und setzt den entsprechenden Ausgang\nif (msg.payload === \"VPD Perfection\") {\n    return [{ payload: msg.payload, topic: \"Perfection\" }, null, null, null, null];\n}\nelse if (msg.payload === \"IN-VPD-Range\") {\n    return [null, { payload: msg.payload, topic: \"AutoAvgVPD\" }, null, null, null];\n}\nelse if (msg.payload === \"Targeted VPD\") {\n    return [null, null, { payload: msg.payload, topic: \"TargetedVPD\" }, null, null];\n}\nelse if (msg.payload === \"CropSteering\") {\n    return [null, null, null, { payload: msg.payload, topic: \"ModeDisabeld\" }, null];\n}\nelse if (msg.payload === \"Disabled\") {\n    return [null, null, null, null, { payload: msg.payload, topic: \"ModeDisabeld\" }];\n}\n\n// Wenn keine Bedingungen zutreffen, sendet nichts\nreturn [null, null, null, null, null];\n","outputs":5,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1690,"y":180,"wires":[["ef7366de93afb4dd"],["e0b37de379e9787f"],["328db6b64b141ab6"],["abc9f2566d50ac85"],["6d93a8c98375de46"]]},{"id":"6d93a8c98375de46","type":"function","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"DISABLED AUTO","func":"msg.payload=\"DISABLED GROOM\"\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1690,"y":240,"wires":[["32ae7b662cb5c84f"]]},{"id":"32ae7b662cb5c84f","type":"debug","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"debug 159","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1670,"y":280,"wires":[]},{"id":"ef7366de93afb4dd","type":"link out","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"VPD-Perfektion","mode":"link","links":["c0feeb1b4e55e176"],"x":1885,"y":120,"wires":[]},{"id":"e0b37de379e9787f","type":"link out","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"IN-Range-VPD","mode":"link","links":["34fb69f47d7f4ffa"],"x":1885,"y":160,"wires":[]},{"id":"328db6b64b141ab6","type":"link out","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"TargetedVPD","mode":"link","links":["3b561261f0b55314"],"x":1885,"y":200,"wires":[]},{"id":"8a238a2714b7deb1","type":"comment","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"TentModes","info":"","x":1720,"y":120,"wires":[]},{"id":"8b1d308f861b62d2","type":"api-current-state","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"TentMode","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"select.groommodes","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"TentMode","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1500,"y":100,"wires":[["56a4e455c0f9d5e2"]]},{"id":"0ea9841f7c7bddfd","type":"comment","z":"6fcb82f207901f17","g":"df3a3098b236bbf8","name":"IN-RANGE-VPD","info":"","x":120,"y":1900,"wires":[]},{"id":"ca045a3ff01ce6ab","type":"comment","z":"6fcb82f207901f17","g":"66f48e845030b291","name":"Targeted-VPD","info":"","x":110,"y":2320,"wires":[]},{"id":"34fb69f47d7f4ffa","type":"link in","z":"6fcb82f207901f17","g":"df3a3098b236bbf8","name":"VPD-Perfektion","links":["e0b37de379e9787f"],"x":75,"y":1940,"wires":[["a4eb702c29bada7e"]]},{"id":"ce88b514ed8fefb4","type":"function","z":"6fcb82f207901f17","g":"df3a3098b236bbf8","name":"VPD State Values","func":"const plantStages = {\n    Germination: [0.42, 0.78], // Optimaler VPD-Bereich für Keimung bei 25-30°C\n    Clones: [0.42, 0.78],      // Optimaler VPD-Bereich für Klone bei 25-30°C\n    EarlyVeg: [0.55, 0.85],    // Optimaler VPD-Bereich für frühe Vegetation bei 20-25°C\n    MidVeg: [0.85, 1.1],      // Optimaler VPD-Bereich für mittlere Vegetation bei 20-25°C\n    LateVeg: [0.85, 1.2],     // Optimaler VPD-Bereich für späte Vegetation bei 20-25°C\n    EarlyFlower: [1, 1.25], // Optimaler VPD-Bereich für frühe Blüte bei 20-25°C\n    MidFlower: [1.1, 1.4],   // Optimaler VPD-Bereich für mittlere Blüte bei 20-25°C\n    LateFlower: [1.2, 1.6],  // Optimaler VPD-Bereich für späte Blüte bei 20-25°C\n};\n\n\n\n// Beispiel, wie msg.payload gesetzt wird\n// msg.payload = \"LateVeg\"; // Kommentieren Sie diese Zeile aus, um den tatsächlichen msg.payload zu verwenden\n\n// Prüfen, ob das Wachstumsstadium im plantStages-Objekt vorhanden ist\nif (plantStages.hasOwnProperty(msg.payload)) {\n    // Setzen des VPD-Wertes aus dem plantStages-Objekt\n    msg.payload = plantStages[msg.payload];\n} else {\n    // Fehlermeldung, wenn das Wachstumsstadium nicht gefunden wurde\n    msg.payload = \"Unbekanntes Wachstumsstadium\";\n\n}\nmsg.perfektion = \"VPDStageValue\"\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":440,"y":1940,"wires":[["f9333b43826d44bd"]]},{"id":"a4eb702c29bada7e","type":"api-current-state","z":"6fcb82f207901f17","g":"df3a3098b236bbf8","name":"ModeSelection","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"select.groommodes","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"targetVPD","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":190,"y":1940,"wires":[["ce88b514ed8fefb4"]]},{"id":"9820d12609ba97a1","type":"poll-state","z":"6fcb82f207901f17","g":"df3a3098b236bbf8","name":"currentVPD","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","updateInterval":"30","updateIntervalType":"num","updateIntervalUnits":"seconds","outputInitially":true,"outputOnChanged":true,"entityId":"sensor.vpd_groom","stateType":"num","ifState":"","ifStateType":"num","ifStateOperator":"is","outputs":1,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"vpdFlower","valueType":"str"},{"property":"perfektion","propertyType":"msg","value":"VPDFlowerState","valueType":"str"}],"x":220,"y":2060,"wires":[["f9333b43826d44bd"]]},{"id":"f9333b43826d44bd","type":"join","z":"6fcb82f207901f17","g":"df3a3098b236bbf8","name":"VPDWish","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":380,"y":2000,"wires":[["857e40ecae8bc60b"]]},{"id":"857e40ecae8bc60b","type":"function","z":"6fcb82f207901f17","g":"df3a3098b236bbf8","name":"VPD Handler Array Value","func":"const tolerance = 0.00; // Toleranzwert für die VPD-Anpassung\n\n// Der aktuelle VPD-Wert wird aus dem Payload geholt und in eine Zahl umgewandelt.\nconst currentVPD = parseFloat(msg.payload.currentVPD);\n\n// Ziel-VPD-Bereich wird aus dem Payload geholt.\nconst targetVPDRange = msg.payload.targetVPD;\n\n// Logging der aktuellen VPD und Ziel-VPD-Bereich zur Überprüfung und Debugging.\nnode.warn(`GRoom-VPD array between: ${targetVPDRange[0]} and ${targetVPDRange[1]}`);\n\n// Berechnung der prozentualen Abweichung vom Ziel-VPD und Rundung auf ganze Zahlen\nconst percentDifference = Math.round(currentVPD < targetVPDRange[0]\n    ? ((currentVPD - targetVPDRange[0]) / targetVPDRange[0]) * 100\n    : ((currentVPD - targetVPDRange[1]) / targetVPDRange[1]) * 100);\n\n// Funktion zur Berechnung der notwendigen Anpassungen basierend auf der Differenz zum VPD-Zielbereich.\nfunction calculateAdjustment(currentVPD, targetVPDRange) {\n    // Wenn der aktuelle VPD unter dem minimalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu erhöhen.\n    if (currentVPD < targetVPDRange[0] - tolerance) {\n        node.warn(`GRoom-VPD:: ${currentVPD} zu gering. Erhöhe Temp oder verringere die Feuchtigkeit`);\n        node.warn(`GRoom % VPD Target --> ${percentDifference} %`);\n        return {\n            exhaustSpeed: \"increased\",      // Erhöht die Abluftgeschwindigkeit, um feuchte Luft herauszuziehen\n            humidifier: \"reduced\",          // Schaltet den Luftbefeuchter aus, um Feuchtigkeit zu reduzieren\n            dehumidifier: \"increased\",       // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            heaterFan: \"increased\",         // Schaltet den Beheizer an, um die Feuchtigkeit zu reduzieren und Temp zu erhöhen\n            coolerFan: \"reduced\",           // Schaltet den Kühler an, um die Feuchtigkeit zu erhöhen und Temp zu verringern\n            ventsALL: \"increased\",          // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsTopSpeed: \"increased\",     // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsDownSpeed: \"increased\",    // Erhöht die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"increased\"     // Erhöht die Lichtintensität, um die Temperatur zu steigern (wenn das die Temperatur beeinflusst)\n        };\n\n    }\n    // Wenn der aktuelle VPD über dem maximalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu senken.\n    else if (currentVPD > targetVPDRange[1] + tolerance) {\n        node.warn(`GRoom-VPD: ${currentVPD} zu hoch. Verringere Temp oder erhöhe die Feuchtigkeit`);\n        node.warn(`GRoom % VPD Target --> ${percentDifference} %`);\n        return {\n            exhaustSpeed: \"reduced\",    // Reduziert die Abluftgeschwindigkeit, hält feuchte Luft im Raum\n            humidifier: \"increased\",    // Schaltet den Luftbefeuchter ein, um Feuchtigkeit zu erhöhen\n            dehumidifier: \"reduced\",    // Schaltet den Luftentfeuchter aus, um Feuchtigkeit zu erhöhen\n            heaterFan: \"reduced\",       // Schaltet den Heizer aus, um die Temperatur zu verringern\n            coolerFan: \"increased\",     // Schaltet den Kühler an, um die Temperatur zu verringern\n            ventsALL: \"reduced\",        // Reduziert die Geschwindigkeit der Belüftung, um mehr feuchte Luft zu halten\n            ventsTopSpeed: \"reduced\",   // Reduziert die Geschwindigkeit der oberen Belüftung\n            ventsDownSpeed: \"reduced\",  // Reduziert die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"reduced\"   // Verringert die Lichtintensität, um die Temperatur zu senken (wenn das die Temperatur beeinflusst)\n        };\n    }\n    // Wenn der VPD im Zielbereich liegt, sind keine Anpassungen erforderlich.\n    node.warn(`GRoom-VPD: ${currentVPD} im gewünschten Bereich`);\n    return {\n        exhaustSpeed: \"unchanged\",\n        humidifier: \"unchanged\",\n        dehumidifier: \"unchanged\",\n        heaterFan: \"unchanged\",\n        coolerFan: \"unchanged\",\n        ventsALL: \"unchanged\",\n        ventsTopSpeed: \"unchanged\",\n        ventsDownSpeed: \"unchanged\",\n        lightIntensity: \"unchanged\"\n    };\n}\n\n// Entscheidungslogik zur Steuerung der Umgebungsbedingungen, nutzt die calculateAdjustment Funktion.\nconst adjustments = calculateAdjustment(currentVPD, targetVPDRange);\n\n// Berechnung der prozentualen Abweichung und Hinzufügen zum Payload\nmsg.payload = {\n    exhaustSpeed: adjustments.exhaustSpeed,\n    humidifier: adjustments.humidifier,\n    dehumidifier: adjustments.dehumidifier,\n    heaterFan: adjustments.heaterFan,\n    coolerFan: adjustments.coolerFan,\n    ventsALL: adjustments.ventsALL,\n    ventsTopSpeed: adjustments.ventsTopSpeed,\n    ventsDownSpeed: adjustments.ventsDownSpeed,\n    lightIntensity: adjustments.lightIntensity,\n    percentDifference: percentDifference\n};\n\nmsg.perfektion = \"VPDActions\";\n\n// Rückgabe des modifizierten Payloads für weitere Verwendung im Flow.\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":580,"y":2000,"wires":[["0d260f8001de57ce"]]},{"id":"0d260f8001de57ce","type":"function","z":"6fcb82f207901f17","g":"df3a3098b236bbf8","name":"Check What Do","func":"let outputs = [null, null, null, null, null, null, null, null, null];\n\nvar percentDifference = msg.payload.percentDifference\n\n// Abluft\nif (msg.payload.exhaustSpeed === \"unchanged\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"increased\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"reduced\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n}\n\n// Humidifier\nif (msg.payload.humidifier === \"unchanged\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"increased\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"reduced\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n}\n\n// Dehumidifier\nif (msg.payload.dehumidifier === \"unchanged\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"increased\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"reduced\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n}\n\n// HeaterFan\nif (msg.payload.heaterFan === \"unchanged\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"increased\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"reduced\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n}\n\n// CoolerFan\nif (msg.payload.coolerFan === \"unchanged\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"increased\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"reduced\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n}\n\n// LightIntensity\nif (msg.payload.lightIntensity === \"unchanged\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"increased\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"reduced\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n}\n\n// VentsALL\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"increased\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"reduced\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n}\n\n// VentsTopSpeed\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"increased\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"reduced\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n}\n\n// VentsDownSpeed\nif (msg.payload.ventsDownSpeed === \"unchanged\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"increased\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"reduced\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n}\n\n\n\nreturn outputs;\n","outputs":9,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":590,"y":2100,"wires":[["4c3ef331737d72eb","150928e591bcc0f0"],["4c3ef331737d72eb","bed86d46203bcde1"],["4c3ef331737d72eb","18f1987e494bac59"],["4c3ef331737d72eb","d7a32fcc4e76a35c"],["4c3ef331737d72eb","f1661726d2ee693d"],["4c3ef331737d72eb","34d7c43fb0924feb"],["4c3ef331737d72eb","e237fd1275ec541b"],["e237fd1275ec541b"],["e237fd1275ec541b"]]},{"id":"4c3ef331737d72eb","type":"debug","z":"6fcb82f207901f17","g":"df3a3098b236bbf8","name":"debug 160","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":600,"y":2200,"wires":[]},{"id":"3b561261f0b55314","type":"link in","z":"6fcb82f207901f17","g":"66f48e845030b291","name":"VPD-Perfektion","links":["328db6b64b141ab6"],"x":85,"y":2400,"wires":[["629f1203882715e5"]]},{"id":"47f41429505da3d5","type":"function","z":"6fcb82f207901f17","g":"66f48e845030b291","name":"VPD State Values","func":"const plantStages = {\n    Germination: [0.42, 0.78], // Optimaler VPD-Bereich für Keimung bei 25-30°C\n    Clones: [0.42, 0.78],      // Optimaler VPD-Bereich für Klone bei 25-30°C\n    EarlyVeg: [0.55, 0.85],    // Optimaler VPD-Bereich für frühe Vegetation bei 20-25°C\n    MidVeg: [0.8, 1.1],      // Optimaler VPD-Bereich für mittlere Vegetation bei 20-25°C\n    LateVeg: [0.85, 1.2],     // Optimaler VPD-Bereich für späte Vegetation bei 20-25°C\n    EarlyFlower: [1, 1.25], // Optimaler VPD-Bereich für frühe Blüte bei 20-25°C\n    MidFlower: [1.25, 1.6],   // Optimaler VPD-Bereich für mittlere Blüte bei 20-25°C\n    LateFlower: [1.1, 1.6],  // Optimaler VPD-Bereich für späte Blüte bei 20-25°C\n};\n\n\n// Beispiel, wie msg.payload gesetzt wird\n// msg.payload = \"LateVeg\"; // Kommentieren Sie diese Zeile aus, um den tatsächlichen msg.payload zu verwenden\n\n// Prüfen, ob das Wachstumsstadium im plantStages-Objekt vorhanden ist\nif (plantStages.hasOwnProperty(msg.payload)) {\n    // Setzen des VPD-Wertes aus dem plantStages-Objekt\n    msg.payload = plantStages[msg.payload];\n} else {\n    // Fehlermeldung, wenn das Wachstumsstadium nicht gefunden wurde\n    msg.payload = \"Unbekanntes Wachstumsstadium\";\n\n}\nmsg.perfektion = \"VPDStageValue\"\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":450,"y":2400,"wires":[["7d7eab1986e71b30"]]},{"id":"629f1203882715e5","type":"api-current-state","z":"6fcb82f207901f17","g":"66f48e845030b291","name":"ModeSelection","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"select.groommodes","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"targetVPD","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":200,"y":2400,"wires":[["47f41429505da3d5"]]},{"id":"c883c16984ed5cee","type":"poll-state","z":"6fcb82f207901f17","g":"66f48e845030b291","name":"currentVPD","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","updateInterval":"30","updateIntervalType":"num","updateIntervalUnits":"seconds","outputInitially":true,"outputOnChanged":true,"entityId":"sensor.vpd_groom","stateType":"num","ifState":"","ifStateType":"num","ifStateOperator":"is","outputs":1,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"vpdFlower","valueType":"str"},{"property":"perfektion","propertyType":"msg","value":"VPDFlowerState","valueType":"str"}],"x":230,"y":2520,"wires":[["7d7eab1986e71b30"]]},{"id":"7d7eab1986e71b30","type":"join","z":"6fcb82f207901f17","g":"66f48e845030b291","name":"VPDWish","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":430,"y":2480,"wires":[["f4d67ceb373f6872"]]},{"id":"f4d67ceb373f6872","type":"function","z":"6fcb82f207901f17","g":"66f48e845030b291","name":"VPD Handler Array Value","func":"const tolerance = 0.00; // Toleranzwert für die VPD-Anpassung\n\n// Der aktuelle VPD-Wert wird aus dem Payload geholt und in eine Zahl umgewandelt.\nconst currentVPD = parseFloat(msg.payload.currentVPD);\n\n// Ziel-VPD-Bereich wird aus dem Payload geholt.\nconst targetVPDRange = msg.payload.targetVPD;\n\n// Logging der aktuellen VPD und Ziel-VPD-Bereich zur Überprüfung und Debugging.\nnode.warn(`GRoom-VPD-Target: ${targetVPDRange}`);\n\n// Funktion zur Berechnung der notwendigen Anpassungen basierend auf der Differenz zum VPD-Zielbereich.\nfunction calculateAdjustment(currentVPD, targetVPDRange) {\n    // Wenn der aktuelle VPD unter dem minimalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu erhöhen.\n    if (currentVPD < targetVPDRange - tolerance) {\n        node.warn(`GRoom-VPD: ${currentVPD} zu gering. Erhöhe Temp oder verringere die Feuchtigkeit.`);\n        return {\n            exhaustSpeed: \"increased\",      // Erhöht die Abluftgeschwindigkeit, um feuchte Luft herauszuziehen\n            humidifier: \"reduced\",          // Schaltet den Luftbefeuchter aus, um Feuchtigkeit zu reduzieren\n            dehumidifier: \"increased\",      // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            heaterFan: \"increased\",         // Schaltet den Beheizer an, um die Feuchtigkeit zu reduzieren und Temp zu erhöhen\n            coolerFan: \"reduced\",           // Schaltet den Beheizer an, um die Feuchtigkeit zu erhöhen und Temp zu verringern\n            ventsALL: \"increased\",          // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsTopSpeed: \"increased\",     // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsDownSpeed: \"increased\",    // Erhöht die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"increased\"     // Erhöht die Lichtintensität, um die Temperatur zu steigern (wenn das die Temperatur beeinflusst)\n        };\n    }\n    // Wenn der aktuelle VPD über dem maximalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu senken.\n    else if (currentVPD > targetVPDRange + tolerance) {\n        node.warn(`GRoom-VPD: ${currentVPD} zu hoch. Verringere Temp oder erhöhe die Feuchtigkeit.`);\n        return {\n            exhaustSpeed: \"reduced\",    // Reduziert die Abluftgeschwindigkeit, hält feuchte Luft im Raum\n            humidifier: \"increased\",    // Schaltet den Luftbefeuchter ein, um Feuchtigkeit zu erhöhen\n            dehumidifier: \"reduced\",    // Schaltet den Luftentfeuchter aus, um Feuchtigkeit zu erhöhen\n            heaterFan: \"reduced\",       // Schaltet den Beheizer aus, um die Feuchtigkeit zu erhöhen und Temp zu senken\n            coolerFan: \"increased\",     // Schaltet den Kühler an, um die Feuchtigkeit zu erhöhen und Temp zu verringern\n            ventsALL: \"reduced\",        // Reduziert die Geschwindigkeit der Belüftung, um mehr feuchte Luft zu halten\n            ventsTopSpeed: \"reduced\",   // Reduziert die Geschwindigkeit der oberen Belüftung\n            ventsDownSpeed: \"reduced\",  // Reduziert die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"reduced\"   // Verringert die Lichtintensität, um die Temperatur zu senken (wenn das die Temperatur beeinflusst)\n        };\n    }\n    // Wenn der VPD im Zielbereich liegt, sind keine Anpassungen erforderlich.\n    node.warn(`GRoom-VPD: ${currentVPD} im gewünschten Bereich.`);\n    return {\n        exhaustSpeed: \"unchanged\",\n        humidifier: \"unchanged\",\n        dehumidifier: \"unchanged\",\n        heaterFan: \"unchanged\",\n        coolerFan: \"unchanged\",\n        ventsALL: \"unchanged\",\n        ventsTopSpeed: \"unchanged\",\n        ventsDownSpeed: \"unchanged\",\n        lightIntensity: \"unchanged\"\n    };\n}\n\n// Funktion zur Berechnung der prozentualen Abweichung\nfunction calculatePercentDifference(currentVPD, targetVPD) {\n    return ((currentVPD - targetVPD) / targetVPD) * 100;\n}\n\n// Entscheidungslogik zur Steuerung der Umgebungsbedingungen, nutzt die calculateAdjustment Funktion.\nconst adjustments = calculateAdjustment(currentVPD, targetVPDRange);\nconst percentDifference = calculatePercentDifference(currentVPD, targetVPDRange);\n\nmsg.payload = {\n    exhaustSpeed: adjustments.exhaustSpeed,\n    humidifier: adjustments.humidifier,\n    dehumidifier: adjustments.dehumidifier,\n    heaterFan: adjustments.heaterFan,\n    coolerFan: adjustments.coolerFan,\n    ventsALL: adjustments.ventsALL,\n    ventsTopSpeed: adjustments.ventsTopSpeed,\n    ventsDownSpeed: adjustments.ventsDownSpeed,\n    lightIntensity: adjustments.lightIntensity,\n    percentDifference: percentDifference.toFixed(0) // Prozentuale Abweichung auf 2 Dezimalstellen gerundet\n};\n\nmsg.perfektion = \"VPDActions\";\n// Rückgabe des modifizierten Payloads für weitere Verwendung im Flow.\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":650,"y":2480,"wires":[["13c823083d5e91db"]]},{"id":"13c823083d5e91db","type":"function","z":"6fcb82f207901f17","g":"66f48e845030b291","name":"Check What Do","func":"let outputs = [null, null, null, null, null, null, null, null, null];\n\nvar percentDifference = msg.payload.percentDifference\n\n// Abluft\nif (msg.payload.exhaustSpeed === \"unchanged\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"increased\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"reduced\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n}\n\n// Humidifier\nif (msg.payload.humidifier === \"unchanged\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"increased\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"reduced\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n}\n\n// Dehumidifier\nif (msg.payload.dehumidifier === \"unchanged\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"increased\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"reduced\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n}\n\n// HeaterFan\nif (msg.payload.heaterFan === \"unchanged\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"increased\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"reduced\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n}\n\n// CoolerFan\nif (msg.payload.coolerFan === \"unchanged\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"increased\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"reduced\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n}\n\n// LightIntensity\nif (msg.payload.lightIntensity === \"unchanged\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"increased\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"reduced\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n}\n\n// VentsALL\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"increased\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"reduced\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n}\n\n// VentsTopSpeed\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"increased\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"reduced\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n}\n\n// VentsDownSpeed\nif (msg.payload.ventsDownSpeed === \"unchanged\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"increased\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"reduced\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n}\n\n\n\nreturn outputs;\n","outputs":9,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":640,"y":2580,"wires":[["f8560efe9e6d04d8","150928e591bcc0f0"],["f8560efe9e6d04d8","bed86d46203bcde1"],["f8560efe9e6d04d8","18f1987e494bac59"],["f8560efe9e6d04d8","d7a32fcc4e76a35c"],["f8560efe9e6d04d8","f1661726d2ee693d"],["f8560efe9e6d04d8","34d7c43fb0924feb"],["f8560efe9e6d04d8","e237fd1275ec541b"],["e237fd1275ec541b"],["e237fd1275ec541b"]]},{"id":"f8560efe9e6d04d8","type":"debug","z":"6fcb82f207901f17","g":"66f48e845030b291","name":"debug 161","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":630,"y":2680,"wires":[]},{"id":"385a580f200748d1","type":"comment","z":"6fcb82f207901f17","g":"77ed46dd9885c3e3","name":"VPD-Perfektion","info":"","x":220,"y":1360,"wires":[]},{"id":"c0feeb1b4e55e176","type":"link in","z":"6fcb82f207901f17","g":"77ed46dd9885c3e3","name":"VPD-Perfektion","links":["ef7366de93afb4dd"],"x":65,"y":1400,"wires":[["fe85503bb6258f2c"]]},{"id":"f7beb6910d27753a","type":"function","z":"6fcb82f207901f17","g":"77ed46dd9885c3e3","name":"VPD State Values","func":"const plantStages = {\n    Germination: [0.42, 0.78], // Optimaler VPD-Bereich für Keimung bei 25-30°C\n    Clones: [0.42, 0.78],      // Optimaler VPD-Bereich für Klone bei 25-30°C\n    EarlyVeg: [0.55, 0.85],    // Optimaler VPD-Bereich für frühe Vegetation bei 20-25°C\n    MidVeg: [0.85, 1.1],      // Optimaler VPD-Bereich für mittlere Vegetation bei 20-25°C\n    LateVeg: [0.85, 1.2],     // Optimaler VPD-Bereich für späte Vegetation bei 20-25°C\n    EarlyFlower: [1, 1.25], // Optimaler VPD-Bereich für frühe Blüte bei 20-25°C\n    MidFlower: [1.1, 1.4],   // Optimaler VPD-Bereich für mittlere Blüte bei 20-25°C\n    LateFlower: [1.2, 1.6],  // Optimaler VPD-Bereich für späte Blüte bei 20-25°C\n};\n\n\n// Beispiel, wie msg.payload gesetzt wird\n// msg.payload = \"LateVeg\"; // Kommentieren Sie diese Zeile aus, um den tatsächlichen msg.payload zu verwenden\n\n// Prüfen, ob das Wachstumsstadium im plantStages-Objekt vorhanden ist\nif (plantStages.hasOwnProperty(msg.payload)) {\n    // Setzen des VPD-Wertes aus dem plantStages-Objekt\n    msg.payload = plantStages[msg.payload];\n} else {\n    // Fehlermeldung, wenn das Wachstumsstadium nicht gefunden wurde\n    msg.payload = \"Unbekanntes Wachstumsstadium\";\n\n}\nmsg.perfektion = \"VPDStageValue\"\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":410,"y":1420,"wires":[["0d434c3ead4a2f55"]]},{"id":"fe85503bb6258f2c","type":"api-current-state","z":"6fcb82f207901f17","g":"77ed46dd9885c3e3","name":"ModeSelection","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"select.groommodes","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"targetVPD","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":180,"y":1400,"wires":[["f7beb6910d27753a"]]},{"id":"6467fcdfcecd8bd8","type":"poll-state","z":"6fcb82f207901f17","g":"77ed46dd9885c3e3","name":"currentVPD","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","updateInterval":"30","updateIntervalType":"num","updateIntervalUnits":"seconds","outputInitially":true,"outputOnChanged":true,"entityId":"sensor.vpd_groom","stateType":"num","ifState":"","ifStateType":"num","ifStateOperator":"is","outputs":1,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"currentVPD","valueType":"str"},{"property":"perfektion","propertyType":"msg","value":"currentVPD","valueType":"str"}],"x":150,"y":1560,"wires":[["0d434c3ead4a2f55"]]},{"id":"0d434c3ead4a2f55","type":"join","z":"6fcb82f207901f17","g":"77ed46dd9885c3e3","name":"VPDWish","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":330,"y":1480,"wires":[["5748df124ca12244","2c80dac8d5bb42c1"]]},{"id":"5748df124ca12244","type":"function","z":"6fcb82f207901f17","g":"77ed46dd9885c3e3","name":"VPD Handler Array Value","func":"const tolerance = 0.00; // Toleranzwert für die VPD-Anpassung\n\n// Der aktuelle VPD-Wert wird aus dem Payload geholt und in eine Zahl umgewandelt.\nconst currentVPD = parseFloat(msg.payload.currentVPD);\n\n// Ziel-VPD-Bereich wird aus dem Payload geholt.\nconst targetVPDRange = msg.payload.targetVPD;\n\n// Logging der aktuellen VPD und Ziel-VPD-Bereich zur Überprüfung und Debugging.\nnode.warn(`GRoom-VPD array between: ${targetVPDRange[0]} and ${targetVPDRange[1]}`);\n\n// Berechnung der prozentualen Abweichung vom Ziel-VPD und Rundung auf ganze Zahlen\nconst percentDifference = Math.round(currentVPD < targetVPDRange[0]\n    ? ((currentVPD - targetVPDRange[0]) / targetVPDRange[0]) * 100\n    : ((currentVPD - targetVPDRange[1]) / targetVPDRange[1]) * 100);\n\n// Funktion zur Berechnung der notwendigen Anpassungen basierend auf der Differenz zum VPD-Zielbereich.\nfunction calculateAdjustment(currentVPD, targetVPDRange) {\n    // Wenn der aktuelle VPD unter dem minimalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu erhöhen.\n    if (currentVPD < targetVPDRange[0] - tolerance) {\n        node.warn(`GRoom-VPD:: ${currentVPD} zu gering. Erhöhe Temp oder verringere die Feuchtigkeit`);\n        node.warn(`GRoom % VPD Target --> ${percentDifference} %`);\n        return {\n            exhaustSpeed: \"increased\",      // Erhöht die Abluftgeschwindigkeit, um feuchte Luft herauszuziehen\n            humidifier: \"reduced\",          // Schaltet den Luftbefeuchter aus, um Feuchtigkeit zu reduzieren\n            dehumidifier: \"increased\",       // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            heaterFan: \"increased\",         // Schaltet den Beheizer an, um die Feuchtigkeit zu reduzieren und Temp zu erhöhen\n            coolerFan: \"reduced\",           // Schaltet den Kühler an, um die Feuchtigkeit zu erhöhen und Temp zu verringern\n            ventsALL: \"increased\",          // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsTopSpeed: \"increased\",     // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsDownSpeed: \"increased\",    // Erhöht die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"increased\"     // Erhöht die Lichtintensität, um die Temperatur zu steigern (wenn das die Temperatur beeinflusst)\n        };\n\n    }\n    // Wenn der aktuelle VPD über dem maximalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu senken.\n    else if (currentVPD > targetVPDRange[1] + tolerance) {\n        node.warn(`GRoom-VPD: ${currentVPD} zu hoch. Verringere Temp oder erhöhe die Feuchtigkeit`);\n        node.warn(`GRoom % VPD Target --> ${percentDifference} %`);\n        return {\n            exhaustSpeed: \"reduced\",    // Reduziert die Abluftgeschwindigkeit, hält feuchte Luft im Raum\n            humidifier: \"increased\",    // Schaltet den Luftbefeuchter ein, um Feuchtigkeit zu erhöhen\n            dehumidifier: \"reduced\",    // Schaltet den Luftentfeuchter aus, um Feuchtigkeit zu erhöhen\n            heaterFan: \"reduced\",       // Schaltet den Heizer aus, um die Temperatur zu verringern\n            coolerFan: \"increased\",     // Schaltet den Kühler an, um die Temperatur zu verringern\n            ventsALL: \"reduced\",        // Reduziert die Geschwindigkeit der Belüftung, um mehr feuchte Luft zu halten\n            ventsTopSpeed: \"reduced\",   // Reduziert die Geschwindigkeit der oberen Belüftung\n            ventsDownSpeed: \"reduced\",  // Reduziert die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"reduced\"   // Verringert die Lichtintensität, um die Temperatur zu senken (wenn das die Temperatur beeinflusst)\n        };\n    }\n    // Wenn der VPD im Zielbereich liegt, sind keine Anpassungen erforderlich.\n    node.warn(`GRoom-VPD: ${currentVPD} im gewünschten Bereich`);\n    return {\n        exhaustSpeed: \"unchanged\",\n        humidifier: \"unchanged\",\n        dehumidifier: \"unchanged\",\n        heaterFan: \"unchanged\",\n        coolerFan: \"unchanged\",\n        ventsALL: \"unchanged\",\n        ventsTopSpeed: \"unchanged\",\n        ventsDownSpeed: \"unchanged\",\n        lightIntensity: \"unchanged\"\n    };\n}\n\n// Entscheidungslogik zur Steuerung der Umgebungsbedingungen, nutzt die calculateAdjustment Funktion.\nconst adjustments = calculateAdjustment(currentVPD, targetVPDRange);\n\n// Berechnung der prozentualen Abweichung und Hinzufügen zum Payload\nmsg.payload = {\n    exhaustSpeed: adjustments.exhaustSpeed,\n    humidifier: adjustments.humidifier,\n    dehumidifier: adjustments.dehumidifier,\n    heaterFan: adjustments.heaterFan,\n    coolerFan: adjustments.coolerFan,\n    ventsALL: adjustments.ventsALL,\n    ventsTopSpeed: adjustments.ventsTopSpeed,\n    ventsDownSpeed: adjustments.ventsDownSpeed,\n    lightIntensity: adjustments.lightIntensity,\n    percentDifference: percentDifference\n};\n\nmsg.perfektion = \"VPDActions\";\n\n// Rückgabe des modifizierten Payloads für weitere Verwendung im Flow.\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":550,"y":1480,"wires":[["628540a4c50c93c7","2c80dac8d5bb42c1"]]},{"id":"628540a4c50c93c7","type":"function","z":"6fcb82f207901f17","g":"77ed46dd9885c3e3","name":"Check What Do","func":"let outputs = [null, null, null, null, null, null, null, null, null];\n\nvar percentDifference = msg.payload.percentDifference\n\n// Abluft\nif (msg.payload.exhaustSpeed === \"unchanged\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"increased\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"reduced\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n}\n\n// Humidifier\nif (msg.payload.humidifier === \"unchanged\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"increased\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"reduced\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n}\n\n// Dehumidifier\nif (msg.payload.dehumidifier === \"unchanged\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"increased\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"reduced\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n}\n\n// HeaterFan\nif (msg.payload.heaterFan === \"unchanged\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"increased\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"reduced\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n}\n\n// CoolerFan\nif (msg.payload.coolerFan === \"unchanged\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"increased\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"reduced\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n}\n\n// LightIntensity\nif (msg.payload.lightIntensity === \"unchanged\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"increased\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"reduced\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n}\n\n// VentsALL\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"increased\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"reduced\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n}\n\n// VentsTopSpeed\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"increased\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"reduced\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n}\n\n// VentsDownSpeed\nif (msg.payload.ventsDownSpeed === \"unchanged\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"increased\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"reduced\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n}\n\n\n\nreturn outputs;\n","outputs":9,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":560,"y":1580,"wires":[["2ad21d39d70523ac","150928e591bcc0f0"],["2ad21d39d70523ac","bed86d46203bcde1"],["2ad21d39d70523ac","18f1987e494bac59"],["2ad21d39d70523ac","d7a32fcc4e76a35c"],["2ad21d39d70523ac","f1661726d2ee693d"],["2ad21d39d70523ac","34d7c43fb0924feb"],["2ad21d39d70523ac","e237fd1275ec541b"],["e237fd1275ec541b"],["e237fd1275ec541b"]]},{"id":"2c80dac8d5bb42c1","type":"join","z":"6fcb82f207901f17","g":"6480c67a52477c56","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"perfektion","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"3","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":790,"y":1580,"wires":[["15ab5b6b591292fd","49eda6a013ddc8f3"]]},{"id":"2ad21d39d70523ac","type":"debug","z":"6fcb82f207901f17","g":"77ed46dd9885c3e3","name":"debug 162","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":570,"y":1680,"wires":[]},{"id":"15ab5b6b591292fd","type":"debug","z":"6fcb82f207901f17","g":"6480c67a52477c56","name":"debug 164","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":930,"y":1580,"wires":[]},{"id":"49eda6a013ddc8f3","type":"function","z":"6fcb82f207901f17","g":"6480c67a52477c56","name":"Make Perfekt VPD","func":"const tolerance = 0.025; // Toleranzwert für die VPD-Anpassung\n\n// Berechnet den durchschnittlichen Wert aus zwei Zahlen im Array VPDStageValue und begrenzt das Ergebnis auf zwei Dezimalstellen\nconst averageVPD = (msg.payload.VPDStageValue[0] + msg.payload.VPDStageValue[1]) / 2;\nconst perfectVPD = parseFloat(averageVPD.toFixed(3));\n\nconst currentVPD = parseFloat(msg.payload.currentVPD);\n\n// Build increase base of State % diffrence from Current VPD to avarangeVPD\n// Berechnung der prozentualen Abweichung vom Ziel-VPD\nconst percentDifference = ((currentVPD - perfectVPD) / perfectVPD) * 100;\n\n\n\n// IF not in Range Do Nothing\nif (currentVPD < msg.payload.VPDStageValue[0] || currentVPD > msg.payload.VPDStageValue[1]){\n    return\n}\n// Warnung über die prozentuale Abweichung\nnode.warn(`Perfect-GRoom % : ${percentDifference.toFixed(2)}%`);\nnode.warn(`Perfect-GRoom-Current VPD: ${currentVPD}`);\nnode.warn(`Perfect-GRoom-Target-VPD: ${perfectVPD} with ${tolerance} Tolerance`);\n\n\n\n// Funktion zur Berechnung der notwendigen Anpassungen basierend auf der Differenz zum VPD-Zielbereich.\nfunction calculateAdjustment(currentVPD, perfectVPD) {\n    // Wenn der aktuelle VPD unter dem minimalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu erhöhen.\n    if (currentVPD < perfectVPD - tolerance) {\n        node.warn(`Perfect-GRoom-VPD:: ${currentVPD} zu Gering Erhöe Temp oder veringere die Feuchtikeit`);\n        return {\n            exhaustSpeed: \"increased\",      // Erhöht die Abluftgeschwindigkeit, um feuchte Luft herauszuziehen\n            humidifier: \"reduced\",          // Schaltet den Luftbefeuchter aus, um Feuchtigkeit zu reduzieren\n            dehumidifier: \"increased\",       // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            heaterFan: \"increased\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Reduzieren und Temp zu erhöhen\n            coolerFan: \"reduced\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Erhöhen und Temp zu veringern\n            ventsTopSpeed: \"increased\",     // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsDownSpeed: \"increased\",    // Erhöht die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"increased\"     // Erhöht die Lichtintensität, um die Temperatur zu steigern (wenn das die Temperatur beeinflusst)\n        };\n        \n    }\n    // Wenn der aktuelle VPD über dem maximalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu senken.\n    else if (currentVPD > perfectVPD + tolerance) {\n        node.warn(`Perfect-GRoom-VPD: ${currentVPD} zu hoch verringere Temp oder erhöe die Feuchtikeit`);\n        return {\n            exhaustSpeed: \"reduced\",    // Reduziert die Abluftgeschwindigkeit, hält feuchte Luft im Raum\n            humidifier: \"increased\",           // Schaltet den Luftbefeuchter ein, um Feuchtigkeit zu erhöhen\n            dehumidifier: \"reduced\",       // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            heaterFan: \"reduced\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Reduzieren und Temp zu erhöhen\n            coolerFan: \"increased\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Erhöhen und Temp zu veringern\n            ventsTopSpeed: \"reduced\",   // Reduziert die Geschwindigkeit der oberen Belüftung\n            ventsDownSpeed: \"reduced\",  // Reduziert die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"reduced\"      // Verringert die Lichtintensität, um die Temperatur zu senken (wenn das die Temperatur beeinflusst)\n        };\n    }\n    // Wenn der VPD im Zielbereich liegt, sind keine Anpassungen erforderlich.\n             node.warn(`Perfect-GRoom-VPD: ${currentVPD} im Gewünschten Bereich`);\n    return {\n        exhaustSpeed: \"unchanged\",\n        humidifier: \"unchanged\",\n        dehumidifier: \"unchanged\",       // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n        heaterFan: \"unchanged\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Reduzieren und Temp zu erhöhen\n        coolerFan: \"unchanged\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Erhöhen und Temp zu veringern\n        ventsTopSpeed: \"unchanged\",\n        ventsDownSpeed: \"unchanged\",\n        lightIntensity: \"unchanged\"\n    };\n}\n\n// Entscheidungslogik zur Steuerung der Umgebungsbedingungen, nutzt die calculateAdjustment Funktion.\nconst adjustments = calculateAdjustment(currentVPD, perfectVPD);\nmsg.payload = {\n    exhaustSpeed: adjustments.exhaustSpeed,\n    humidifier: adjustments.humidifier,\n    dehumidifier: adjustments.dehumidifier,\n    heaterFan: adjustments.heaterFan,\n    coolerFan: adjustments.coolerFan,\n    ventsTopSpeed: adjustments.ventsTopSpeed,\n    ventsDownSpeed: adjustments.ventsDownSpeed,\n    lightIntensity: adjustments.lightIntensity,\n    percentDifference: percentDifference.toFixed(2)\n};\nmsg.perfektion = \"VPDActions\"\n\n// Rückgabe des modifizierten Payloads für weitere Verwendung im Flow.\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":870,"y":1540,"wires":[["5f068398b3328a95"]]},{"id":"5f068398b3328a95","type":"function","z":"6fcb82f207901f17","g":"6480c67a52477c56","name":"Check What Do","func":"let outputs = [null, null, null, null, null, null, null, null, null];\n\nvar percentDifference = msg.payload.percentDifference\n\n// Abluft\nif (msg.payload.exhaustSpeed === \"unchanged\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"increased\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"reduced\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n}\n\n// Humidifier\nif (msg.payload.humidifier === \"unchanged\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"increased\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"reduced\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n}\n\n// Dehumidifier\nif (msg.payload.dehumidifier === \"unchanged\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"increased\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"reduced\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n}\n\n// HeaterFan\nif (msg.payload.heaterFan === \"unchanged\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"increased\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"reduced\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n}\n\n// CoolerFan\nif (msg.payload.coolerFan === \"unchanged\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"increased\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"reduced\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n}\n\n// LightIntensity\nif (msg.payload.lightIntensity === \"unchanged\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"increased\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"reduced\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n}\n\n// VentsALL\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"increased\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"reduced\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n}\n\n// VentsTopSpeed\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"increased\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"reduced\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n}\n\n// VentsDownSpeed\nif (msg.payload.ventsDownSpeed === \"unchanged\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"increased\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"reduced\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n}\n\n\n\nreturn outputs;\n","outputs":9,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":880,"y":1420,"wires":[["150928e591bcc0f0"],["bed86d46203bcde1"],["18f1987e494bac59"],["d7a32fcc4e76a35c"],["f1661726d2ee693d"],["34d7c43fb0924feb"],["e237fd1275ec541b"],["e237fd1275ec541b"],["e237fd1275ec541b"]]},{"id":"2a09d643d26d92ef","type":"function","z":"6fcb82f207901f17","g":"91b3041d53614fc6","name":"Exhaust Setup","func":"// Hilfsfunktion zur Überprüfung, ob ein Wert numerisch ist\nconst isNumeric = (value) => {\n    return !isNaN(parseFloat(value)) && isFinite(value);\n};\n\n// Funktion zur Bestimmung des dutyCycle-Werts\nconst findDutyCycle = (exhaustArray) => {\n    if (exhaustArray.length === 0) {\n        return null; // Keine Werte zu verarbeiten, wenn das Array leer ist\n    }\n    for (let i = 0; i < exhaustArray.length; i++) {\n        if (isNumeric(exhaustArray[i].value)) {\n            return parseInt(exhaustArray[i].value, 10);\n        }\n    }\n    return null; // Falls kein numerischer Wert gefunden wurde\n};\n\nlet outputs = [null, null, null, null]; // Array für vier Ausgänge\n\n// Zustand der Abluft und Geschwindigkeit aus der Payload extrahieren\nconst exhaustSpeed = msg.payload.exhaustSet.value; // Anpassung hier\nlet exhaustState = 'off'; // Standardwert setzen, falls kein Zustand gefunden wird\nif (msg.payload.Exhaust && msg.payload.Exhaust.length > 0) {\n    const exhaustSwitch = msg.payload.Exhaust.find(e => e.entity_id && e.entity_id.toLowerCase().includes(\"switch\"));\n    if (exhaustSwitch && exhaustSwitch.value) {\n        exhaustState = exhaustSwitch.value;\n    }\n}\n\nconst dutyCycle = findDutyCycle(msg.payload.Exhaust) || 0 ;\n\n// Prüfen, ob ein dutyCycle vorhanden ist\nif (dutyCycle === null) {\n    return outputs; // Kein dutyCycle gefunden, keine Aktion erforderlich\n}\n\nconst percentDifference = parseFloat(msg.payload.exhaustSet.percentDifference);\nlet newDutyCycle = dutyCycle;\n\n// Berechnung des neuen Duty Cycle basierend auf der prozentualen Abweichung\nif (percentDifference !== 0) {\n    if (percentDifference < 0) {\n        // Wenn der Wert negativ ist, erhöhen wir den Duty Cycle\n        newDutyCycle = dutyCycle + Math.abs(percentDifference);\n    } else {\n        // Wenn der Wert positiv ist, verringern wir den Duty Cycle\n        newDutyCycle = dutyCycle - percentDifference;\n    }\n\n    // Stellen Sie sicher, dass der neue Duty Cycle innerhalb der Grenzen liegt\n    newDutyCycle = Math.min(95, Math.max(10, Math.round(newDutyCycle)));\n}\n\n// Abluft starten auf dem ersten Ausgang, wenn sie aus ist und erhöht werden muss\nif (exhaustSpeed === \"increased\" && exhaustState === \"off\") {\n    outputs[0] = { payload: \"Starte Abluft\", topic: \"Start\" };\n    return outputs;\n}\n\n// Abluft-Geschwindigkeit erhöhen, wenn sie bereits eingeschaltet ist\nif (exhaustSpeed === \"increased\" && exhaustState === \"on\") {\n    outputs[2] = { payload: newDutyCycle.toString(), topic: \"Increase\" };\n    return outputs;\n}\n\n// Abluft stoppen auf dem zweiten Ausgang, wenn die Geschwindigkeit reduziert wird und der Duty Cycle sehr niedrig ist\nif (exhaustSpeed === \"reduced\" && exhaustState === \"on\" && newDutyCycle <= 10) {\n    outputs[1] = { payload: \"Stoppe Abluft\", topic: \"Stop\" };\n    return outputs;\n} else if (exhaustSpeed === \"reduced\" && exhaustState === \"on\") {\n    outputs[2] = { payload: newDutyCycle.toString(), topic: \"Decrease\" };\n    return outputs;\n}\n\n// Warnung ausgeben, wenn versucht wird, die Abluftgeschwindigkeit zu reduzieren, obwohl sie bereits aus ist\nif (exhaustSpeed === \"reduced\" && exhaustState === \"off\") {\n    outputs[1] = { payload: \"Abluft bereits gestoppt, kann nicht weiter reduziert werden\", topic: \"AlreadyStopped\" };\n    return outputs;\n}\n\n// Nichts tun, wenn keine Änderung erforderlich ist\nif (exhaustSpeed === \"unchanged\") {\n    outputs[3] = { payload: \"Abluft unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n    return outputs;\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1660,"y":1640,"wires":[["8bdcdb5a0269634f"],["8e5849366f8d0df3"],["923ea5a19b7306bb"],[]]},{"id":"9d05398df8ca3c2b","type":"http request","z":"6fcb82f207901f17","g":"91b3041d53614fc6","name":"DutyPostChange","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.235:5533/air/ctrl","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":2090,"y":1640,"wires":[[]]},{"id":"923ea5a19b7306bb","type":"function","z":"6fcb82f207901f17","g":"91b3041d53614fc6","name":"DutyChanger","func":"\nconst NewDuty = msg.payload\n\nmsg.payload = { \"newDuty\": NewDuty}\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1890,"y":1640,"wires":[["9d05398df8ca3c2b"]]},{"id":"150928e591bcc0f0","type":"join","z":"6fcb82f207901f17","g":"91b3041d53614fc6","name":"exhasutData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1420,"y":1660,"wires":[["2a09d643d26d92ef","1443fd263756f63a"]]},{"id":"9a660cd75e874e89","type":"link in","z":"6fcb82f207901f17","g":"91b3041d53614fc6","name":"Exhaust","links":["b3c99b56042ef1e4","25fbf2f05d2fa597"],"x":1375,"y":1600,"wires":[["150928e591bcc0f0"]]},{"id":"2ee57818f4452142","type":"function","z":"6fcb82f207901f17","g":"25f097b685bcf53c","name":"BefeuchterSetup","func":"let outputs = [null, null, null];\n\nlet humidifierState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.humidifier.length; i++) {\n    if (msg.payload.humidifier[i].entity_id.includes('humidifier')) {\n        humidifierState = msg.payload.humidifier[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.humidifierSet.value === \"increased\" && humidifierState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.humidifierSet.value === \"reduced\" && humidifierState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun oder ausschalten bei unverändertem Zustand\nif (msg.payload.humidifierSet.value === \"unchanged\") {\n    if (humidifierState === \"on\") {\n        // Wenn der Befeuchter im Zelt an ist und kein Wechsel angefordert wird, sende \"off\"\n        outputs[0] = { payload: \"off\", topic: \"Humidifier\" };\n    } else {\n        // Wenn der Befeuchter bereits aus ist oder nicht geändert werden soll\n        outputs[1] = { payload: \"Humidifier already stopped, nothing to do! Waiting for changes.\", topic: \"Humidifier\" };\n    }\n}\n\n// Nichts tun (detaillierte Information)\nif (msg.payload.humidifierSet.value === \"unchanged\" && humidifierState !== \"on\" && humidifierState !== \"off\") {\n    outputs[2] = { payload: \"Befeuchter unverändert, keine Aktion erforderlich\", data: msg.payload, topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1650,"y":1800,"wires":[["2ea63399a8be550f"],["f39174c43ccbbd26"],["e7a7450bdc84a9e5","f39174c43ccbbd26"],[]]},{"id":"bed86d46203bcde1","type":"join","z":"6fcb82f207901f17","g":"25f097b685bcf53c","name":"HumidityData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1420,"y":1800,"wires":[["2ee57818f4452142"]]},{"id":"c43c9851ea70d3a8","type":"link in","z":"6fcb82f207901f17","g":"25f097b685bcf53c","name":"Humidifier","links":["0bafe7358617460c","2a1226b0ec4c5cf6"],"x":1355,"y":1760,"wires":[["bed86d46203bcde1"]]},{"id":"1443fd263756f63a","type":"debug","z":"6fcb82f207901f17","g":"91b3041d53614fc6","name":"debug 168","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1530,"y":1580,"wires":[]},{"id":"aadc89a6315a9ee1","type":"link in","z":"6fcb82f207901f17","name":"GrowRoomCtrl","links":["1e4a05271ed20108"],"x":45,"y":80,"wires":[["b730f4ea8dde30c9","2ccfc4f97560b8c3"]]},{"id":"b730f4ea8dde30c9","type":"debug","z":"6fcb82f207901f17","name":"GrowRoomLiveData","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":180,"y":80,"wires":[]},{"id":"2ccfc4f97560b8c3","type":"function","z":"6fcb82f207901f17","name":"Sort Sensor Types","func":"let data = msg.payload;\n\n// Arrays für verschiedene Sensortypen initialisieren\nlet wish = [];\nlet temperatures = [];\nlet humidity = [];\nlet dewpoints = [];\nlet moisture = [];\nlet pressures = [];\nlet battery = [];\nlet power = [];\nlet co2 = [];\nlet lumen = [];\nlet conductivity = [];\nlet switches = [];\nlet dutyCycleExhaust = [];\nlet vents = [];\nlet humidifier = [];\nlet dehumidifier = [];\nlet root = [];\n\n// Durchlaufe alle Schlüssel im data-Objekt und sortiere sie nach bestimmten Sensortypen\nfor (let key in data) {\n    if (data.hasOwnProperty(key)) {\n        let entity_id = key.toLowerCase();\n        let entity = { entity_id: key, value: data[key] };\n\n        // Prioritize to ensure it is captured first\n        if (entity_id.includes('wish') || entity_id.includes('avg') || entity_id.includes('target')) {\n            wish.push(entity);\n        } else if (entity_id.includes('root') || entity_id.includes('wurzel') || entity_id.includes('water')) {\n            root.push(entity);\n        }\n        // ENVIORMENT\n        else if (entity_id.includes('temperature') || entity_id.includes('temp')) {\n            temperatures.push(entity);\n        } else if (entity_id.includes('humidity') || entity_id.includes('feuchtigkeit') || entity_id.includes('rh')) {\n            humidity.push(entity);\n        } else if (entity_id.includes('dewpoint') || entity_id.includes('dew')) {\n            dewpoints.push(entity);\n        } else if (entity_id.includes('moisture') || entity_id.includes('mois')) {\n            moisture.push(entity);\n        } else if (entity_id.includes('pressure') || entity_id.includes('press')) {\n            pressures.push(entity);\n        } else if (entity_id.includes('carbondioxide') || entity_id.includes('co2') || entity_id.includes('carbon')) {\n            co2.push(entity);\n        } else if (entity_id.includes('conductivity')) {\n            conductivity.push(entity);\n        } else if (entity_id.includes('illuminance') || entity_id.includes('light') || entity_id.includes('licht')) {\n            lumen.push(entity);\n        }\n        // Devices\n        else if (entity_id.includes('dehumidifier') || entity_id.includes('entfeuchter')) {\n            dehumidifier.push(entity);\n        } else if (entity_id.includes('humidifier') || entity_id.includes('befeuchter')) {\n            humidifier.push(entity);\n        } else if (entity_id.includes('ruckec') || entity_id.includes('airctr') || entity_id.includes('exhaust') || entity_id.includes('abluft')) {\n            dutyCycleExhaust.push(entity);\n        } else if (entity_id.includes('vent')) {\n            vents.push(entity);\n        } else if (entity_id.includes('switch')) {\n            switches.push(entity);\n        } else if (entity_id.includes('power') || entity_id.includes('energy')) {\n            power.push(entity);\n        }\n\n        // ADDONS\n        else if (entity_id.includes('battery') || entity_id.includes('batt')) {\n            battery.push(entity);\n        }\n    }\n}\n\n// Nachrichtenausgabe auf verschiedenen Outputs\nreturn [\n    // ENVIORMENT\n    { payload: wish, topic: 'Wish' },\n    { payload: temperatures, topic: 'temperature' },\n    { payload: humidity, topic: 'humidity' },\n    { payload: dewpoints, topic: 'dewpoint' },\n    { payload: moisture, topic: 'moisture' },\n    { payload: root, topic: 'roottemp' },\n    { payload: conductivity, topic: 'conductivity' },\n    { payload: pressures, topic: 'pressure' },\n    { payload: co2, topic: 'carbon_dioxide' },\n    { payload: lumen, topic: 'illuminance' },\n    // DEVICEINFO\n    { payload: battery, topic: 'battery' },\n    { payload: power, topic: 'power' },\n    // DEVICES\n    { payload: switches, topic: 'switch' },\n    { payload: vents, topic: 'Vents' },\n    { payload: dutyCycleExhaust, topic: 'Exhaust' },\n    { payload: humidifier, topic: 'humidifier' },\n    { payload: dehumidifier, topic: 'dehumidifier' }\n\n\n];\n","outputs":17,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":170,"y":240,"wires":[["f6a5742628a9989a"],["c75f44bec1790cd8","ce2e18cc131bf59c"],["c75f44bec1790cd8","f02c2bfe1ed03831"],["c6a1db0e41275972"],["7d52ae70ce7888dd"],["b5f79c75d71e4dcf"],["72959bd8815caca1"],["d6e6ba622cf9670e"],["c238ed6e52394ded"],["79b4d6d474534ec2"],["1ebd4f93fee4b36a"],["ba42a92d2beb8531"],["30a21cb64d63c568"],["eec02b873fa99b46"],["eae653d39366095c"],["919fb8b87429c144"],["d96c8c880ff4d858"]]},{"id":"c75f44bec1790cd8","type":"join","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"VpdNeeds","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":700,"y":100,"wires":[["c0967c0c3b535687"]]},{"id":"abc9f2566d50ac85","type":"link out","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"CropSteering","mode":"link","links":[],"x":1885,"y":240,"wires":[]},{"id":"757409ea9e951339","type":"debug","z":"6fcb82f207901f17","name":"Temperatures","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":480,"y":160,"wires":[]},{"id":"1a1e45a71b607074","type":"debug","z":"6fcb82f207901f17","name":"Humidity","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":460,"y":200,"wires":[]},{"id":"e5c222da83284c73","type":"debug","z":"6fcb82f207901f17","name":"Dewpoints","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":240,"wires":[]},{"id":"5a1c8f2a6c550715","type":"debug","z":"6fcb82f207901f17","name":"Pressures","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":460,"y":400,"wires":[]},{"id":"8ceaf85afe3bc0c0","type":"debug","z":"6fcb82f207901f17","name":"Battery","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":460,"y":540,"wires":[]},{"id":"bab83811a8461d76","type":"debug","z":"6fcb82f207901f17","name":"Power","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":450,"y":580,"wires":[]},{"id":"47c6341b7602ee1d","type":"debug","z":"6fcb82f207901f17","name":"CO2","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":450,"y":440,"wires":[]},{"id":"8306adac1e726634","type":"debug","z":"6fcb82f207901f17","name":"Light","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":480,"wires":[]},{"id":"62313aa383826fbe","type":"debug","z":"6fcb82f207901f17","name":"Switches","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":460,"y":640,"wires":[]},{"id":"32d7f9519ea64e83","type":"debug","z":"6fcb82f207901f17","name":"Conductivity","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":360,"wires":[]},{"id":"587f23aa46258134","type":"debug","z":"6fcb82f207901f17","name":"Moisture","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":460,"y":280,"wires":[]},{"id":"237a41d224fa2e28","type":"debug","z":"6fcb82f207901f17","name":"Exhasut","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":460,"y":720,"wires":[]},{"id":"117979424702b92e","type":"debug","z":"6fcb82f207901f17","name":"WISH","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":120,"wires":[]},{"id":"7c5ab19c36b42966","type":"debug","z":"6fcb82f207901f17","name":"Humidifier","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":760,"wires":[]},{"id":"25fbf2f05d2fa597","type":"link out","z":"6fcb82f207901f17","name":"Exhasut","mode":"link","links":["9a660cd75e874e89","9d47a7cd6a85d49f","9ea5133c151eda7d","d06bdab5f5c1656c"],"x":585,"y":720,"wires":[]},{"id":"2a1226b0ec4c5cf6","type":"link out","z":"6fcb82f207901f17","name":"Humidifier","mode":"link","links":["5c2ff47614252131","c22c6b1a71d16fde","c43c9851ea70d3a8","d5891ca72e417675"],"x":585,"y":760,"wires":[]},{"id":"110e9aef265dc948","type":"debug","z":"6fcb82f207901f17","name":"Vents","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":680,"wires":[]},{"id":"4c41e9c25c63cbb8","type":"debug","z":"6fcb82f207901f17","name":"RootTemp","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":320,"wires":[]},{"id":"f16efe7fe70d8549","type":"debug","z":"6fcb82f207901f17","name":"Dehumidifier","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":800,"wires":[]},{"id":"cd544d1577c3244e","type":"link out","z":"6fcb82f207901f17","name":"Dehumidifier","mode":"link","links":[],"x":585,"y":800,"wires":[]},{"id":"1e593888d3f50a3f","type":"link out","z":"6fcb82f207901f17","name":"Vents","mode":"link","links":[],"x":585,"y":680,"wires":[]},{"id":"18f1987e494bac59","type":"join","z":"6fcb82f207901f17","g":"c8e5b8e12207b789","name":"DehumidifierData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1430,"y":1960,"wires":[["3f887ab7da5b528c"]]},{"id":"cffdc6d9b0fcc5dd","type":"link in","z":"6fcb82f207901f17","g":"c8e5b8e12207b789","name":"Dehumidifier","links":[],"x":1355,"y":1920,"wires":[["18f1987e494bac59"]]},{"id":"3f887ab7da5b528c","type":"function","z":"6fcb82f207901f17","g":"c8e5b8e12207b789","name":"DehumidifierSetup","func":"let outputs = [null, null, null];\n\nlet dehumidifierState = null;\n\n// Schleife, um den Zustand des Dehumidifier zu finden\nfor (let i = 0; i < msg.payload.dehumidifier.length; i++) {\n    if (msg.payload.dehumidifier[i].entity_id.includes('dehumidifier')) {\n        dehumidifierState = msg.payload.dehumidifier[i].value;\n        break;\n    }\n}\n\n// Dehumidifier starten\nif (msg.payload.dehumidifierSet.value === \"increased\" && dehumidifierState === \"off\") {\n    outputs[0] = { payload: \"Starte Dehumidifier\", topic: \"Start\" };\n}\n\n// Dehumidifier stoppen\nif (msg.payload.dehumidifierSet.value === \"reduced\" && dehumidifierState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Dehumidifier\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.dehumidifierSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Dehumidifier unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1630,"y":1960,"wires":[["3a124366984cc1e9"],["837607e3f49e7f42"],["5ccae930ffc7cf55"],[]]},{"id":"d7a32fcc4e76a35c","type":"join","z":"6fcb82f207901f17","g":"3ef055f6ecae0521","name":"HeaterData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1430,"y":2100,"wires":[["cfbb482d671717ad"]]},{"id":"db172a7181b00153","type":"link in","z":"6fcb82f207901f17","g":"3ef055f6ecae0521","name":"link in 33","links":[],"x":1365,"y":2060,"wires":[["d7a32fcc4e76a35c"]]},{"id":"cfbb482d671717ad","type":"function","z":"6fcb82f207901f17","g":"3ef055f6ecae0521","name":"HeaterSetup","func":"let outputs = [null, null, null];\n\nlet heaterState = null;\n\n// Schleife, um den Zustand des Heater zu finden\nfor (let i = 0; i < msg.payload.heater.length; i++) {\n    if (msg.payload.heater[i].entity_id.includes('heater')) {\n        heaterState = msg.payload.heater[i].value;\n        break;\n    }\n}\n\n// Heater starten\nif (msg.payload.heaterSet.value === \"increased\" && heaterState === \"off\") {\n    outputs[0] = { payload: \"Start Heater\", topic: \"Start\" };\n}\n\n// Heater stoppen\nif (msg.payload.heaterSet.value === \"reduced\" && heaterState === \"on\") {\n    outputs[1] = { payload: \"Stop Heater\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.heaterSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Heater unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1630,"y":2100,"wires":[["abe4483090f685a3"],["5c5959aa60778b19"],["4e44711d10e0844c"],[]]},{"id":"f1661726d2ee693d","type":"join","z":"6fcb82f207901f17","g":"c57a003c2d509dd1","name":"CoolerData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1430,"y":2240,"wires":[["6787011be821c1cc"]]},{"id":"3422ccbf68aa8c0e","type":"link in","z":"6fcb82f207901f17","g":"c57a003c2d509dd1","name":"link in 34","links":[],"x":1365,"y":2200,"wires":[["f1661726d2ee693d"]]},{"id":"6787011be821c1cc","type":"function","z":"6fcb82f207901f17","g":"c57a003c2d509dd1","name":"CoolerSetup","func":"let outputs = [null, null, null];\n\nlet coolerState = null;\n\n// Schleife, um den Zustand des Cooler zu finden\nfor (let i = 0; i < msg.payload.cooler.length; i++) {\n    if (msg.payload.cooler[i].entity_id.includes('cooler')) {\n        coolerState = msg.payload.cooler[i].value;\n        break;\n    }\n}\n\n// Cooler starten\nif (msg.payload.coolerSet.value === \"increased\" && coolerState === \"off\") {\n    outputs[0] = { payload: \"Start Cooler\", topic: \"Start\" };\n}\n\n// Cooler stoppen\nif (msg.payload.coolerSet.value === \"reduced\" && coolerState === \"on\") {\n    outputs[1] = { payload: \"Stop Cooler\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.coolerSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Cooler unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1630,"y":2240,"wires":[["7e14b98351bfd86f"],["ed72a75f5413aabc"],["a6032c075c07a121"],[]]},{"id":"34d7c43fb0924feb","type":"join","z":"6fcb82f207901f17","g":"e0e84d9c3c29ed74","name":"LightData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1430,"y":2400,"wires":[["4564bb51d83a0b4f"]]},{"id":"58ad27edfca23a83","type":"link in","z":"6fcb82f207901f17","g":"e0e84d9c3c29ed74","name":"link in 35","links":[],"x":1365,"y":2360,"wires":[["34d7c43fb0924feb"]]},{"id":"4564bb51d83a0b4f","type":"function","z":"6fcb82f207901f17","g":"e0e84d9c3c29ed74","name":"LightSetup","func":"let outputs = [null, null, null];\n\nlet lightState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.light.length; i++) {\n    if (msg.payload.light[i].entity_id.includes('light')) {\n        lightState = msg.payload.light[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.lightSet.value === \"increased\" && lightState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.lightSet.value === \"reduced\" && lightState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.lightSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Befeuchter unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1630,"y":2400,"wires":[["54edc441e8a59d26"],["5177cd6f9c7f7ec3"],["b7c7a89318f8d310"],[]]},{"id":"e237fd1275ec541b","type":"join","z":"6fcb82f207901f17","g":"f3e1b95b0574fe9e","name":"VentsData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"4","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"num","reduceFixup":"","x":1430,"y":2560,"wires":[["00c51e4c238f37ae"]]},{"id":"c1ab128a5a405f74","type":"link in","z":"6fcb82f207901f17","g":"f3e1b95b0574fe9e","name":"link in 36","links":[],"x":1375,"y":2520,"wires":[["e237fd1275ec541b"]]},{"id":"00c51e4c238f37ae","type":"function","z":"6fcb82f207901f17","g":"f3e1b95b0574fe9e","name":"VentsSetup","func":"let outputs = [null, null, null];\n\nlet ventsState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.vents.length; i++) {\n    if (msg.payload.vents[i].entity_id.includes('vents')) {\n        ventsState = msg.payload.vents[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.ventsSet.value === \"increased\" && ventsState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.ventsSet.value === \"reduced\" && ventsState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.ventsSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Befeuchter unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1630,"y":2560,"wires":[["670ee9939bd6c892"],["3172c0b6cecfca61"],["3e2f50f564baa5f7"],[]]},{"id":"3a124366984cc1e9","type":"link out","z":"6fcb82f207901f17","g":"c8e5b8e12207b789","name":"DeHumidifierON","mode":"link","links":["e3a080b4cdaee4de"],"x":1805,"y":1940,"wires":[]},{"id":"837607e3f49e7f42","type":"link out","z":"6fcb82f207901f17","g":"c8e5b8e12207b789","name":"DeHumidifierOFF","mode":"link","links":["7f36b1429ae00752"],"x":1855,"y":1960,"wires":[]},{"id":"5ccae930ffc7cf55","type":"link out","z":"6fcb82f207901f17","g":"c8e5b8e12207b789","name":"link out 99","mode":"link","links":[],"x":1905,"y":1980,"wires":[]},{"id":"abe4483090f685a3","type":"link out","z":"6fcb82f207901f17","g":"3ef055f6ecae0521","name":"HeaterON","mode":"link","links":["1a1641f67f5d27d7","ee62c9e1c3bcd0be"],"x":1785,"y":2080,"wires":[]},{"id":"5c5959aa60778b19","type":"link out","z":"6fcb82f207901f17","g":"3ef055f6ecae0521","name":"HeaterOff","mode":"link","links":["e503b9867d412849"],"x":1845,"y":2100,"wires":[]},{"id":"4e44711d10e0844c","type":"link out","z":"6fcb82f207901f17","g":"3ef055f6ecae0521","name":"link out 102","mode":"link","links":[],"x":1895,"y":2120,"wires":[]},{"id":"7e14b98351bfd86f","type":"link out","z":"6fcb82f207901f17","g":"c57a003c2d509dd1","name":"CoolerON","mode":"link","links":["ee62c9e1c3bcd0be"],"x":1795,"y":2220,"wires":[]},{"id":"ed72a75f5413aabc","type":"link out","z":"6fcb82f207901f17","g":"c57a003c2d509dd1","name":"CoolerOFF","mode":"link","links":["cbc90b10bdb86123"],"x":1855,"y":2240,"wires":[]},{"id":"a6032c075c07a121","type":"link out","z":"6fcb82f207901f17","g":"c57a003c2d509dd1","name":"link out 105","mode":"link","links":[],"x":1905,"y":2260,"wires":[]},{"id":"54edc441e8a59d26","type":"link out","z":"6fcb82f207901f17","g":"e0e84d9c3c29ed74","name":"link out 106","mode":"link","links":[],"x":1765,"y":2380,"wires":[]},{"id":"5177cd6f9c7f7ec3","type":"link out","z":"6fcb82f207901f17","g":"e0e84d9c3c29ed74","name":"link out 107","mode":"link","links":[],"x":1825,"y":2400,"wires":[]},{"id":"b7c7a89318f8d310","type":"link out","z":"6fcb82f207901f17","g":"e0e84d9c3c29ed74","name":"link out 108","mode":"link","links":[],"x":1885,"y":2420,"wires":[]},{"id":"670ee9939bd6c892","type":"link out","z":"6fcb82f207901f17","g":"f3e1b95b0574fe9e","name":"link out 109","mode":"link","links":[],"x":1775,"y":2540,"wires":[]},{"id":"3172c0b6cecfca61","type":"link out","z":"6fcb82f207901f17","g":"f3e1b95b0574fe9e","name":"link out 110","mode":"link","links":[],"x":1815,"y":2560,"wires":[]},{"id":"3e2f50f564baa5f7","type":"link out","z":"6fcb82f207901f17","g":"f3e1b95b0574fe9e","name":"link out 111","mode":"link","links":[],"x":1875,"y":2580,"wires":[]},{"id":"2ea63399a8be550f","type":"link out","z":"6fcb82f207901f17","g":"25f097b685bcf53c","name":"HumidifierON","mode":"link","links":["bfd9574c91044df2"],"x":1785,"y":1760,"wires":[]},{"id":"f39174c43ccbbd26","type":"link out","z":"6fcb82f207901f17","g":"25f097b685bcf53c","name":"HumidifierOFF","mode":"link","links":["a71f5850b9a80e2b"],"x":1835,"y":1780,"wires":[]},{"id":"e7a7450bdc84a9e5","type":"link out","z":"6fcb82f207901f17","g":"25f097b685bcf53c","name":"link out 114","mode":"link","links":[],"x":1885,"y":1800,"wires":[]},{"id":"8bdcdb5a0269634f","type":"link out","z":"6fcb82f207901f17","g":"91b3041d53614fc6","name":"ExhaustON","mode":"link","links":["ec02765ca8fe00ab"],"x":1855,"y":1560,"wires":[]},{"id":"8e5849366f8d0df3","type":"link out","z":"6fcb82f207901f17","g":"91b3041d53614fc6","name":"ExhaustOFF","mode":"link","links":["7e7e0dc9a3625abd"],"x":1905,"y":1580,"wires":[]},{"id":"03e79c43e58ead4a","type":"ha-sensor","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"GRoomCO2","entityConfig":"a3d33c4f483491da","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1010,"y":620,"wires":[[]]},{"id":"1712036e5017a238","type":"function","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"CO2-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Finden des Objekts, das eine der gewünschten Teilzeichenfolgen im entity_id enthält\nconst co2Object = sensors.find(sensor => \n    sensor.entity_id.includes(\"carbon\") || \n    sensor.entity_id.includes(\"carbondioxide\")\n);\n\n// Extrahieren des Wertes, wenn das Objekt gefunden wurde, sonst null setzen\nconst co2Value = co2Object ? co2Object.value : null;\n\n// Ausgabe des CO2-Wertes zur Überprüfung\n// node.warn(`CO2-Wert: ${co2Value}`);\n\n// Optional: Speichern des CO2-Wertes in msg.co2Value oder einem anderen Feld zur weiteren Verwendung\nmsg.payload = co2Value;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":720,"y":620,"wires":[["03e79c43e58ead4a"]]},{"id":"043f3911673a92bf","type":"function","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"Pressure-Get","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Luftdruck-Wertes\nfunction findPressureValue(sensors) {\n    const pressureObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"pressure\") ||\n        sensor.entity_id.includes(\"barometer\") ||\n        sensor.entity_id.includes(\"luftdruck\")\n    );\n    return pressureObject ? pressureObject.value : null;\n}\n\n// Finden des Luftdruck-Wertes\nconst pressureValue = findPressureValue(sensors);\n\n// Ausgabe des Luftdruck-Wertes zur Überprüfung\n// node.warn(`Luftdruck-Wert: ${pressureValue}`);\n\n// Optional: Speichern des Luftdruck-Wertes in msg zur weiteren Verwendung\nmsg.payload = pressureValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":730,"y":560,"wires":[["6416a4823197d26c"]]},{"id":"20d35bed4d2e3567","type":"function","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"Moisture-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Moisture-Wertes\nfunction findMoistureValue(sensors) {\n    const moistureObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"moisture\") ||\n        sensor.entity_id.includes(\"humidity\") ||\n        sensor.entity_id.includes(\"wetness\")\n    );\n    return moistureObject ? moistureObject.value : null;\n}\n\n// Finden des Moisture-Wertes\nconst moistureValue = findMoistureValue(sensors);\n\n// Ausgabe des Moisture-Wertes zur Überprüfung\n// node.warn(`Moisture-Wert: ${moistureValue}`);\n\n// Optional: Speichern des Moisture-Wertes in msg zur weiteren Verwendung\nmsg.payload = moistureValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":740,"y":380,"wires":[["6108be97d6a6c39b"]]},{"id":"9c3e310d274fac45","type":"function","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"SOIL-EC-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des EC- oder Conductivity-Wertes\nfunction findECValue(sensors) {\n    const ecObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"ec\") ||\n        sensor.entity_id.includes(\"conductivity\")\n    );\n    return ecObject ? ecObject.value : null;\n}\n\n// Finden des EC- oder Conductivity-Wertes\nconst ecValue = findECValue(sensors);\n\n// Ausgabe des EC- oder Conductivity-Wertes zur Überprüfung\n// node.warn(`EC-Wert: ${ecValue}`);\n\n// Optional: Speichern des EC- oder Conductivity-Wertes in msg zur weiteren Verwendung\nmsg.payload = ecValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":740,"y":500,"wires":[["18722d8be97cb3ab"]]},{"id":"a847784b825367cf","type":"function","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"PowerConsum-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Stromverbrauch-Wertes\nfunction findPowerConsumptionValue(sensors) {\n    const powerConsumptionObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"energy_power\") || \n        sensor.entity_id.includes(\"consumption\") || \n        sensor.entity_id.includes(\"watt\") || \n        sensor.entity_id.includes(\"electricity\")\n    );\n    return powerConsumptionObject ? powerConsumptionObject.value : null;\n}\n\n// Finden des Stromverbrauch-Wertes\nconst powerConsumptionValue = findPowerConsumptionValue(sensors);\n\n// Ausgabe des Stromverbrauch-Wertes zur Überprüfung\n// node.warn(`Stromverbrauch-Wert: ${powerConsumptionValue}`);\n\n// Optional: Speichern des Stromverbrauch-Wertes in msg zur weiteren Verwendung\nmsg.payload = powerConsumptionValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":760,"y":800,"wires":[["e5d701464c11f1fb"]]},{"id":"efde13ce254c6d36","type":"function","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"Battery-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Batterie-Wertes\nfunction findBatteryValue(sensors) {\n    const batteryObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"battery\") || \n        sensor.entity_id.includes(\"batt\")\n    );\n    return batteryObject ? batteryObject.value : null;\n}\n\n// Finden des Batterie-Wertes\nconst batteryValue = findBatteryValue(sensors);\n\n// Ausgabe des Batterie-Wertes zur Überprüfung\n// node.warn(`Batterie-Wert: ${batteryValue}`);\n\n// Optional: Speichern des Batterie-Wertes in msg zur weiteren Verwendung\nmsg.payload = batteryValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":730,"y":740,"wires":[["f0450d663833fbd8"]]},{"id":"586d29f48805f54d","type":"function","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"Root-Temp-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Root-Temperature-Wertes\nfunction findRootTempValue(sensors) {\n    const rootTempObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"root_temp\") || \n        sensor.entity_id.includes(\"roottemperature\") || \n        sensor.entity_id.includes(\"soiltemp\") || \n        sensor.entity_id.includes(\"root_temp\")\n    );\n    return rootTempObject ? rootTempObject.value : null;\n}\n\n// Finden des Root-Temperature-Wertes\nconst rootTempValue = findRootTempValue(sensors);\n\n// Ausgabe des Root-Temperature-Wertes zur Überprüfung\n// node.warn(`Root-Temperature-Wert: ${rootTempValue}`);\n\n// Optional: Speichern des Root-Temperature-Wertes in msg zur weiteren Verwendung\nmsg.payload = rootTempValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":740,"y":440,"wires":[["e95922d0b87ed5c3"]]},{"id":"12e8a131245940fe","type":"function","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"Exhaust-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Abluft-Zustands\nfunction findExhaustState(sensors) {\n    const exhaustStateObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"exhaust\") ||\n        sensor.entity_id.includes(\"abluft\") ||\n        sensor.entity_id.includes(\"ventilation\") ||\n        sensor.entity_id.includes(\"fan\")\n    );\n    return exhaustStateObject ? exhaustStateObject.value : null;\n}\n\n// Funktion zum Finden des Dutycycle-Wertes\nfunction findDutyCycleValue(sensors) {\n    const dutyCycleObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"airctr\") ||\n        sensor.entity_id.includes(\"dutycycle\") ||\n        sensor.entity_id.includes(\"cycle\")\n    );\n    return dutyCycleObject ? dutyCycleObject.value : null;\n}\n\n// Finden des Abluft-Zustands\nconst exhaustState = findExhaustState(sensors);\n\n// Finden des Dutycycle-Wertes\nconst dutyCycleValue = findDutyCycleValue(sensors);\n\n// Ausgabe der Werte zur Überprüfung\n// node.warn(`Abluft-Zustand: ${exhaustState}`);\n// node.warn(`Dutycycle-Wert: ${dutyCycleValue}`);\n\n// Setzen der Outputs\nlet outputs = [\n    { payload: exhaustState }, // Output 1: Zustand (on/off)\n    { payload: dutyCycleValue } // Output 2: Dutycycle\n];\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn outputs;\n","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":730,"y":980,"wires":[["07350baccc2a8a48"],["ccaf01950781e533"]]},{"id":"467b462d456f1df0","type":"function","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"Humidifier-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Humidifier-Wertes\nfunction findHumidifierValue(sensors) {\n    const humidifierObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"humidifier\") || \n        sensor.entity_id.includes(\"humidity\")\n    );\n    return humidifierObject ? humidifierObject.value : null;\n}\n\n// Finden des Humidifier-Wertes\nconst humidifierValue = findHumidifierValue(sensors);\n\n// Ausgabe des Humidifier-Wertes zur Überprüfung\n// node.warn(`Humidifier-Wert: ${humidifierValue}`);\n\n// Optional: Speichern des Humidifier-Wertes in msg zur weiteren Verwendung\nmsg.payload = humidifierValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":740,"y":1040,"wires":[[]]},{"id":"6416a4823197d26c","type":"ha-sensor","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"GRoomPressure","entityConfig":"8aebeb6e0a8c4c05","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1020,"y":560,"wires":[[]]},{"id":"6108be97d6a6c39b","type":"ha-sensor","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"GRoomMoisture","entityConfig":"781aa28fe2f9c4b6","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1020,"y":380,"wires":[[]]},{"id":"f0450d663833fbd8","type":"ha-sensor","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"FlowerBatterieDevices","entityConfig":"ee906929f0b219b9","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1040,"y":740,"wires":[[]]},{"id":"e95922d0b87ed5c3","type":"ha-sensor","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"GRoomRootTemp","entityConfig":"5f006050c54ac593","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1030,"y":440,"wires":[[]]},{"id":"18722d8be97cb3ab","type":"ha-sensor","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"GRoomEC","entityConfig":"1a18d0147c3114d1","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1010,"y":500,"wires":[[]]},{"id":"9047fd449bb3fc5c","type":"function","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"LightIntense_GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Licht-Wertes (Lumen oder Lux)\nfunction findLightValue(sensors) {\n    const lightObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"lumen\") || \n        sensor.entity_id.includes(\"lux\") || \n        sensor.entity_id.includes(\"light\") ||\n        sensor.entity_id.includes(\"illuminance\")\n    );\n    return lightObject ? lightObject.value : null;\n}\n\n// Finden des Licht-Wertes\nconst lightValue = findLightValue(sensors);\n\n// Ausgabe des Licht-Wertes zur Überprüfung\n// node.warn(`Licht-Wert: ${lightValue}`);\n\n// Optional: Speichern des Licht-Wertes in msg zur weiteren Verwendung\nmsg.payload = lightValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":750,"y":680,"wires":[["4faec569ba6943d0"]]},{"id":"4faec569ba6943d0","type":"ha-sensor","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"GRoomLightIntense","entityConfig":"21defcf88bc3ab67","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1040,"y":680,"wires":[[]]},{"id":"ea9ceff937fcdf2d","type":"function","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"Switch-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Switch-Wertes\nfunction findSwitchValue(sensors) {\n    const switchObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"switch\") || \n        sensor.entity_id.includes(\"toggle\")\n    );\n    return switchObject ? switchObject.state : null;\n}\n\n// Finden des Switch-Wertes\nconst switchValue = findSwitchValue(sensors);\n\n// Ausgabe des Switch-Wertes zur Überprüfung\n// node.warn(`Switch-Wert: ${switchValue}`);\n\n// Optional: Speichern des Switch-Wertes in msg zur weiteren Verwendung\nmsg.payload = switchValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":730,"y":860,"wires":[[]]},{"id":"e5d701464c11f1fb","type":"ha-sensor","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"GRoomPowerConsume","entityConfig":"794350fd1035e5fa","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1050,"y":800,"wires":[[]]},{"id":"9f13424528e1ce4d","type":"function","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"Vents-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Ventilation-Wertes\nfunction findVentilationValue(sensors) {\n    const ventilationObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"ventilation\") ||\n        sensor.entity_id.includes(\"fan\") ||\n        sensor.entity_id.includes(\"exhaust\") ||\n        sensor.entity_id.includes(\"airflow\")\n    );\n    return ventilationObject ? ventilationObject.value : null;\n}\n\n// Finden des Ventilation-Wertes\nconst ventilationValue = findVentilationValue(sensors);\n\n// Ausgabe des Ventilation-Wertes zur Überprüfung\n// node.warn(`Ventilation-Wert: ${ventilationValue}`);\n\n// Optional: Speichern des Ventilation-Wertes in msg zur weiteren Verwendung\nmsg.payload = ventilationValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":730,"y":920,"wires":[[]]},{"id":"f747221671e2a256","type":"function","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"Dehmidifier-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Dehumidifier-Wertes\nfunction findDehumidifierValue(sensors) {\n    const dehumidifierObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"dehumidifier\") || \n        sensor.entity_id.includes(\"humidity\")\n    );\n    return dehumidifierObject ? dehumidifierObject.value : null;\n}\n\n// Finden des Dehumidifier-Wertes\nconst dehumidifierValue = findDehumidifierValue(sensors);\n\n// Ausgabe des Dehumidifier-Wertes zur Überprüfung\n// node.warn(`Dehumidifier-Wert: ${dehumidifierValue}`);\n\n// Optional: Speichern des Dehumidifier-Wertes in msg zur weiteren Verwendung\nmsg.payload = dehumidifierValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":740,"y":1100,"wires":[[]]},{"id":"ccaf01950781e533","type":"ha-sensor","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"GRoomExhaustState","entityConfig":"e0ee2037501d6d09","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1060,"y":1000,"wires":[[]]},{"id":"ad36f486222d39fa","type":"comment","z":"6fcb82f207901f17","g":"e0e84d9c3c29ed74","name":"NOT IMPLEMNTED RIGHT NOW","info":"","x":1550,"y":2400,"wires":[]},{"id":"a7039b2d22c05539","type":"comment","z":"6fcb82f207901f17","g":"f3e1b95b0574fe9e","name":"NOT READY","info":"","x":1550,"y":2560,"wires":[]},{"id":"07350baccc2a8a48","type":"ha-sensor","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"GroomExhaustState","entityConfig":"8c6dbc9fe2de061c","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1060,"y":960,"wires":[[]]},{"id":"812330f99e226222","type":"link in","z":"d28a10efe1bd691a","name":"DryingCtrl","links":["f639a305698026d1"],"x":45,"y":80,"wires":[["a2581c2f8e391949"]]},{"id":"a2581c2f8e391949","type":"debug","z":"d28a10efe1bd691a","name":"DryingTentData","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":160,"y":60,"wires":[]},{"id":"3f44a96e32f333c2","type":"link in","z":"d28a10efe1bd691a","name":"DryingTentLiveData","links":["854a899b81ae0da3"],"x":45,"y":120,"wires":[["936359eef43e5083","e9213e1d9eaa70a2"]]},{"id":"936359eef43e5083","type":"debug","z":"d28a10efe1bd691a","name":"DryingTentLiveData","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":170,"y":100,"wires":[]},{"id":"27c4409593298a63","type":"link out","z":"d28a10efe1bd691a","name":"Exhaust","mode":"link","links":[],"x":575,"y":740,"wires":[]},{"id":"2cd2917dcacf2ef2","type":"join","z":"d28a10efe1bd691a","name":"VpdNeeds","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":460,"y":100,"wires":[[]]},{"id":"0d988b7baa82e8d6","type":"debug","z":"d28a10efe1bd691a","name":"Temperatures","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":460,"y":180,"wires":[]},{"id":"d2c934d915b9fd5b","type":"debug","z":"d28a10efe1bd691a","name":"Humidity","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":440,"y":220,"wires":[]},{"id":"03095de55d04d1ea","type":"debug","z":"d28a10efe1bd691a","name":"Dewpoints","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":260,"wires":[]},{"id":"1228d1849dd6e17f","type":"debug","z":"d28a10efe1bd691a","name":"Pressures","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":440,"y":420,"wires":[]},{"id":"33da5f920111ae7b","type":"debug","z":"d28a10efe1bd691a","name":"Battery","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":440,"y":560,"wires":[]},{"id":"f65b5f035dc3938f","type":"debug","z":"d28a10efe1bd691a","name":"Power","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":430,"y":600,"wires":[]},{"id":"1cafc3cdc596a71c","type":"debug","z":"d28a10efe1bd691a","name":"CO2","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":430,"y":460,"wires":[]},{"id":"6691f30896f4957c","type":"debug","z":"d28a10efe1bd691a","name":"Light","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":430,"y":500,"wires":[]},{"id":"abb81f02ef7e7af3","type":"debug","z":"d28a10efe1bd691a","name":"Switches","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":440,"y":660,"wires":[]},{"id":"cf870d1497c1636b","type":"debug","z":"d28a10efe1bd691a","name":"Conductivity","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":380,"wires":[]},{"id":"feaab4802e8da54a","type":"debug","z":"d28a10efe1bd691a","name":"Moisture","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":440,"y":300,"wires":[]},{"id":"41b4555e8bcf365c","type":"debug","z":"d28a10efe1bd691a","name":"Exhasut","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":440,"y":740,"wires":[]},{"id":"a504aa090a9bbc61","type":"debug","z":"d28a10efe1bd691a","name":"WISH","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":430,"y":140,"wires":[]},{"id":"3d1de2da21737bbf","type":"debug","z":"d28a10efe1bd691a","name":"Humidifier","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":780,"wires":[]},{"id":"408da79490fe8f31","type":"debug","z":"d28a10efe1bd691a","name":"Vents","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":430,"y":700,"wires":[]},{"id":"c3ca25576cc164f4","type":"debug","z":"d28a10efe1bd691a","name":"RootTemp","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":340,"wires":[]},{"id":"5561d722474925a7","type":"debug","z":"d28a10efe1bd691a","name":"Dehumidifier","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":820,"wires":[]},{"id":"e9213e1d9eaa70a2","type":"function","z":"d28a10efe1bd691a","name":"Sort Sensor Types","func":"let data = msg.payload;\n\n// Arrays für verschiedene Sensortypen initialisieren\nlet wish = [];\nlet temperatures = [];\nlet humidity = [];\nlet dewpoints = [];\nlet moisture = [];\nlet pressures = [];\nlet battery = [];\nlet power = [];\nlet co2 = [];\nlet lumen = [];\nlet conductivity = [];\nlet switches = [];\nlet dutyCycleExhaust = [];\nlet vents = [];\nlet humidifier = [];\nlet dehumidifier = [];\nlet root = [];\n\n// Durchlaufe alle Schlüssel im data-Objekt und sortiere sie nach bestimmten Sensortypen\nfor (let key in data) {\n    if (data.hasOwnProperty(key)) {\n        let entity_id = key.toLowerCase();\n        let entity = { entity_id: key, value: data[key] };\n\n        // Prioritize to ensure it is captured first\n        if (entity_id.includes('wish') || entity_id.includes('avg') || entity_id.includes('target')) {\n            wish.push(entity);\n        } else if (entity_id.includes('root') || entity_id.includes('wurzel') || entity_id.includes('water')) {\n            root.push(entity);\n        }\n        // ENVIORMENT\n        else if (entity_id.includes('temperature') || entity_id.includes('temp')) {\n            temperatures.push(entity);\n        } else if (entity_id.includes('humidity') || entity_id.includes('feuchtigkeit') || entity_id.includes('rh')) {\n            humidity.push(entity);\n        } else if (entity_id.includes('dewpoint') || entity_id.includes('dew')) {\n            dewpoints.push(entity);\n        } else if (entity_id.includes('moisture') || entity_id.includes('mois')) {\n            moisture.push(entity);\n        } else if (entity_id.includes('pressure') || entity_id.includes('press')) {\n            pressures.push(entity);\n        } else if (entity_id.includes('carbondioxide') || entity_id.includes('co2') || entity_id.includes('carbon')) {\n            co2.push(entity);\n        } else if (entity_id.includes('conductivity')) {\n            conductivity.push(entity);\n        } else if (entity_id.includes('illuminance') || entity_id.includes('light') || entity_id.includes('licht')) {\n            lumen.push(entity);\n        }\n        // Devices\n        else if (entity_id.includes('dehumidifier') || entity_id.includes('entfeuchter')) {\n            dehumidifier.push(entity);\n        } else if (entity_id.includes('humidifier') || entity_id.includes('befeuchter')) {\n            humidifier.push(entity);\n        } else if (entity_id.includes('ruckec') || entity_id.includes('airctr') || entity_id.includes('exhaust') || entity_id.includes('abluft')) {\n            dutyCycleExhaust.push(entity);\n        } else if (entity_id.includes('vent')) {\n            vents.push(entity);\n        } else if (entity_id.includes('switch')) {\n            switches.push(entity);\n        } else if (entity_id.includes('power') || entity_id.includes('energy')) {\n            power.push(entity);\n        }\n\n        // ADDONS\n        else if (entity_id.includes('battery') || entity_id.includes('batt')) {\n            battery.push(entity);\n        }\n    }\n}\n\n// Nachrichtenausgabe auf verschiedenen Outputs\nreturn [\n    // ENVIORMENT\n    { payload: wish, topic: 'Wish' },\n    { payload: temperatures, topic: 'temperature' },\n    { payload: humidity, topic: 'humidity' },\n    { payload: dewpoints, topic: 'dewpoint' },\n    { payload: moisture, topic: 'moisture' },\n    { payload: root, topic: 'roottemp' },\n    { payload: conductivity, topic: 'conductivity' },\n    { payload: pressures, topic: 'pressure' },\n    { payload: co2, topic: 'carbon_dioxide' },\n    { payload: lumen, topic: 'illuminance' },\n    // DEVICEINFO\n    { payload: battery, topic: 'battery' },\n    { payload: power, topic: 'power' },\n    // DEVICES\n    { payload: switches, topic: 'switch' },\n    { payload: vents, topic: 'Vents' },\n    { payload: dutyCycleExhaust, topic: 'Exhaust' },\n    { payload: humidifier, topic: 'humidifier' },\n    { payload: dehumidifier, topic: 'dehumidifier' }\n\n\n];\n","outputs":17,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":190,"y":260,"wires":[["2d68c9a779e74e74"],["03c1cf1f055128f4"],["67543176e6275d51"],["e7dd382b1bc9a889"],["6ded9232a772672a"],["be27cdd6685e57bf"],["999e2c68e85ba1ad"],["0ed2c6313c27ba5c"],["9af98dd672d35e6f"],["d43c4fc62cb7ebdd"],["a0dc501fd13e7973"],["5c422b0437f7893a"],["daef70d5a79e39fe"],["da0338216a460080"],["ca3e91a1c3e14f9b"],["2ca002327ef036d1"],["8540a64360eeb2e3"]]},{"id":"1e9219706b3dcb52","type":"link out","z":"d28a10efe1bd691a","name":"Humidifier","mode":"link","links":[],"x":575,"y":780,"wires":[]},{"id":"c09b3a5e8f2acead","type":"link out","z":"d28a10efe1bd691a","name":"Dehumidifier","mode":"link","links":[],"x":575,"y":820,"wires":[]},{"id":"3580666ca566a1b2","type":"link out","z":"d28a10efe1bd691a","name":"Vents","mode":"link","links":[],"x":575,"y":700,"wires":[]},{"id":"35bd5fd65c9a0879","type":"http request","z":"3eced32f6afec9ad","g":"e3ae47face506c41","name":"DutyPostChange","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.253:5533/air/ctrl","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":1450,"y":120,"wires":[["f91c7f698a26dd0e"]]},{"id":"9e723e7f476ea8f8","type":"function","z":"3eced32f6afec9ad","g":"e3ae47face506c41","name":"DutyChanger","func":"\nconst NewDuty = msg.newDuty\n\nmsg.payload = { \"newDuty\": NewDuty}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1250,"y":120,"wires":[["35bd5fd65c9a0879"]]},{"id":"cb63b224171d1a61","type":"inject","z":"3eced32f6afec9ad","g":"e3ae47face506c41","name":"PWM_SETTER","props":[{"p":"newDuty","v":"5","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":1040,"y":120,"wires":[["9e723e7f476ea8f8"]]},{"id":"f91c7f698a26dd0e","type":"debug","z":"3eced32f6afec9ad","g":"e3ae47face506c41","name":"debug 7","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1640,"y":160,"wires":[]},{"id":"6f6a1483bb727dc8","type":"http request","z":"3eced32f6afec9ad","g":"e3ae47face506c41","name":"DutyPostStart","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.253:5533/air/start","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":1420,"y":180,"wires":[["f91c7f698a26dd0e"]]},{"id":"726ff0be82ad7423","type":"http request","z":"3eced32f6afec9ad","g":"e3ae47face506c41","name":"DutyPostStop","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.253:5533/air/stop","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":1420,"y":240,"wires":[["f91c7f698a26dd0e"]]},{"id":"ac45c928935c7dfb","type":"inject","z":"3eced32f6afec9ad","g":"e3ae47face506c41","name":"Start","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":1010,"y":180,"wires":[["6f6a1483bb727dc8"]]},{"id":"b5421e42b33902bc","type":"inject","z":"3eced32f6afec9ad","g":"e3ae47face506c41","name":"Stop","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":1010,"y":240,"wires":[["726ff0be82ad7423"]]},{"id":"839a471f41870830","type":"http request","z":"3eced32f6afec9ad","g":"7881c1d5756a95f9","name":"ECAbluftState","method":"GET","ret":"obj","paytoqs":"ignore","url":"http://10.1.1.253:5533/","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":320,"y":100,"wires":[["aab3cfc0c8cefa14"]]},{"id":"aab3cfc0c8cefa14","type":"function","z":"3eced32f6afec9ad","g":"7881c1d5756a95f9","name":"Check DutyCycle","func":"msg.payload = msg.payload.data.DutyCycle\nmsg.topic = \"DutyCycle\"\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":530,"y":100,"wires":[["c29833ece0d282ba"]]},{"id":"c29833ece0d282ba","type":"ha-number","z":"3eced32f6afec9ad","g":"7881c1d5756a95f9","name":"Air Controller","version":1,"debugenabled":false,"inputs":1,"outputs":1,"entityConfig":"a9a93d97bbb7b04a","mode":"set","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"},{"property":"topic","propertyType":"msg","value":"DutyCycle","valueType":"str"}],"x":710,"y":100,"wires":[["e7c6436ff95e88f6"]]},{"id":"edc6b2118761154c","type":"http request","z":"3eced32f6afec9ad","g":"7881c1d5756a95f9","name":"DutyPostChange","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.253:5533/air/ctrl","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":670,"y":260,"wires":[[]]},{"id":"b72f611d8f79f840","type":"function","z":"3eced32f6afec9ad","g":"7881c1d5756a95f9","name":"DutyChanger","func":"\nconst NewDuty = msg.payload\n\nmsg.payload = { \"newDuty\": NewDuty }\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":570,"y":220,"wires":[["edc6b2118761154c"]]},{"id":"fdf1bd6dd1070fbc","type":"inject","z":"3eced32f6afec9ad","g":"7881c1d5756a95f9","name":"Start","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"5","crontab":"","once":true,"onceDelay":"5","topic":"","payload":"","payloadType":"date","x":130,"y":100,"wires":[["839a471f41870830"]]},{"id":"cea6f508110a5b62","type":"ha-switch","z":"3eced32f6afec9ad","g":"7881c1d5756a95f9","name":"ECRuckFlower","version":0,"debugenabled":false,"inputs":1,"outputs":2,"entityConfig":"9cc6832db356ad2f","enableInput":true,"outputOnStateChange":true,"outputProperties":[{"property":"outputType","propertyType":"msg","value":"state change","valueType":"str"},{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"}],"x":140,"y":260,"wires":[["23b54df21007e20e"],["0744b0e547eb2565"]]},{"id":"23b54df21007e20e","type":"http request","z":"3eced32f6afec9ad","g":"7881c1d5756a95f9","name":"DutyPostStart","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.253:5533/air/start","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":360,"y":240,"wires":[[]]},{"id":"0744b0e547eb2565","type":"http request","z":"3eced32f6afec9ad","g":"7881c1d5756a95f9","name":"DutyPostStop","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.253:5533/air/stop","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":360,"y":300,"wires":[[]]},{"id":"e7c6436ff95e88f6","type":"join","z":"3eced32f6afec9ad","g":"7881c1d5756a95f9","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":270,"y":180,"wires":[["794c44658f6efede"]]},{"id":"794c44658f6efede","type":"function","z":"3eced32f6afec9ad","g":"7881c1d5756a95f9","name":"CompareDuty","func":"let lastState = msg.payload.DutyCycle\nlet newState = msg.payload.DutyChangedTo\n\nif(newState === lastState){\n    msg.payload = \"Abluft: Same State Nothing to Do\"\n    return [msg,null];\n}else{\n    msg.payload = newState\n    return  [null,msg];\n}","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":420,"y":180,"wires":[["e8bc2512eed39252"],["b72f611d8f79f840"]]},{"id":"a1dd8f98197e0a14","type":"ha-number","z":"3eced32f6afec9ad","g":"7881c1d5756a95f9","name":"Air Controller","version":1,"debugenabled":false,"inputs":0,"outputs":1,"entityConfig":"a9a93d97bbb7b04a","mode":"listen","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"},{"property":"topic","propertyType":"msg","value":"DutyChangedTo","valueType":"str"}],"x":110,"y":180,"wires":[["e7c6436ff95e88f6"]]},{"id":"e8bc2512eed39252","type":"debug","z":"3eced32f6afec9ad","g":"7881c1d5756a95f9","name":"debug 28","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":660,"y":160,"wires":[]},{"id":"a2de9fd6d2f557ef","type":"http request","z":"3eced32f6afec9ad","g":"cc0c7ed9ea21cf9b","name":"ECAbluftState","method":"GET","ret":"obj","paytoqs":"ignore","url":"http://10.1.1.234:5533/","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":320,"y":460,"wires":[["ec9710af1d0cd050"]]},{"id":"ec9710af1d0cd050","type":"function","z":"3eced32f6afec9ad","g":"cc0c7ed9ea21cf9b","name":"Check DutyCycle","func":"msg.payload = msg.payload.data.DutyCycle\nmsg.topic = \"DutyCycle\"\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":530,"y":460,"wires":[["04c8a1a466a2f268"]]},{"id":"04c8a1a466a2f268","type":"ha-number","z":"3eced32f6afec9ad","g":"cc0c7ed9ea21cf9b","name":"Air Controller Vegi","version":1,"debugenabled":false,"inputs":1,"outputs":1,"entityConfig":"b923911d032dc0de","mode":"set","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"},{"property":"topic","propertyType":"msg","value":"DutyCycle","valueType":"str"}],"x":730,"y":460,"wires":[["7a518a1d9ab5d941"]]},{"id":"68456ed3d9470423","type":"http request","z":"3eced32f6afec9ad","g":"cc0c7ed9ea21cf9b","name":"DutyPostChange","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.234:5533/air/ctrl","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":750,"y":620,"wires":[[]]},{"id":"90d994698db057fa","type":"function","z":"3eced32f6afec9ad","g":"cc0c7ed9ea21cf9b","name":"DutyChanger","func":"\nconst NewDuty = msg.payload\n\nmsg.payload = { \"newDuty\": NewDuty }\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":590,"y":580,"wires":[["68456ed3d9470423"]]},{"id":"35452893dd38f293","type":"inject","z":"3eced32f6afec9ad","g":"cc0c7ed9ea21cf9b","name":"Start","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"5","crontab":"","once":true,"onceDelay":"5","topic":"","payload":"","payloadType":"date","x":150,"y":460,"wires":[["a2de9fd6d2f557ef"]]},{"id":"7a518a1d9ab5d941","type":"join","z":"3eced32f6afec9ad","g":"cc0c7ed9ea21cf9b","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":310,"y":540,"wires":[["078b870bf2716503"]]},{"id":"078b870bf2716503","type":"function","z":"3eced32f6afec9ad","g":"cc0c7ed9ea21cf9b","name":"CompareDuty","func":"let lastState = msg.payload.DutyCycle\nlet newState = msg.payload.DutyChangedTo\n\nif(newState === lastState){\n    msg.payload = \"Abluft: Same State Nothing to Do\"\n    return [msg,null];\n}else{\n    msg.payload = newState\n    return  [null,msg];\n}","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":460,"y":540,"wires":[["ddab435427260de1"],["90d994698db057fa"]]},{"id":"6f4f9bdcba616abb","type":"ha-number","z":"3eced32f6afec9ad","g":"cc0c7ed9ea21cf9b","name":"Air Controller Vegi","version":1,"debugenabled":false,"inputs":0,"outputs":1,"entityConfig":"b923911d032dc0de","mode":"listen","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"},{"property":"topic","propertyType":"msg","value":"DutyChangedTo","valueType":"str"}],"x":130,"y":540,"wires":[["7a518a1d9ab5d941"]]},{"id":"ddab435427260de1","type":"debug","z":"3eced32f6afec9ad","g":"cc0c7ed9ea21cf9b","name":"debug 53","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":700,"y":520,"wires":[]},{"id":"3162e0a1ac83930b","type":"ha-switch","z":"3eced32f6afec9ad","g":"cc0c7ed9ea21cf9b","name":"ECRuckVegi","version":0,"debugenabled":false,"inputs":1,"outputs":2,"entityConfig":"9e27ae392ae6bf01","enableInput":true,"outputOnStateChange":true,"outputProperties":[{"property":"outputType","propertyType":"msg","value":"state change","valueType":"str"},{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"}],"x":130,"y":620,"wires":[["b10430d6eae75417"],["c977b318830b9344"]]},{"id":"b10430d6eae75417","type":"http request","z":"3eced32f6afec9ad","g":"cc0c7ed9ea21cf9b","name":"DutyPostStart","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.234:5533/air/start","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":380,"y":600,"wires":[[]]},{"id":"c977b318830b9344","type":"http request","z":"3eced32f6afec9ad","g":"cc0c7ed9ea21cf9b","name":"DutyPostStop","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.234:5533/air/stop","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":380,"y":660,"wires":[[]]},{"id":"d4ee50c361aa4ca9","type":"http request","z":"3eced32f6afec9ad","g":"d3018dd6637a17e7","name":"DutyPostChange","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.235:5533/air/ctrl","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":1490,"y":440,"wires":[["fd9dc73ed7f6f02c"]]},{"id":"4a009cfd840e08ec","type":"function","z":"3eced32f6afec9ad","g":"d3018dd6637a17e7","name":"DutyChanger","func":"\nconst NewDuty = msg.newDuty\n\nmsg.payload = { \"newDuty\": NewDuty}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1290,"y":440,"wires":[["d4ee50c361aa4ca9"]]},{"id":"b2c1303d977cf4c8","type":"inject","z":"3eced32f6afec9ad","g":"d3018dd6637a17e7","name":"PWM_SETTER","props":[{"p":"newDuty","v":"100","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":1080,"y":440,"wires":[["4a009cfd840e08ec"]]},{"id":"fd9dc73ed7f6f02c","type":"debug","z":"3eced32f6afec9ad","g":"d3018dd6637a17e7","name":"debug 54","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1680,"y":480,"wires":[]},{"id":"32822402a46d0257","type":"http request","z":"3eced32f6afec9ad","g":"d3018dd6637a17e7","name":"DutyPostStart","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.235:5533/air/start","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":1460,"y":500,"wires":[["fd9dc73ed7f6f02c"]]},{"id":"614ca3bfbf9e4df5","type":"http request","z":"3eced32f6afec9ad","g":"d3018dd6637a17e7","name":"DutyPostStop","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.235:5533/air/stop","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":1460,"y":560,"wires":[["fd9dc73ed7f6f02c"]]},{"id":"578c2c0a69835a12","type":"inject","z":"3eced32f6afec9ad","g":"d3018dd6637a17e7","name":"Start","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":1050,"y":500,"wires":[["32822402a46d0257"]]},{"id":"b838e1bb8d2f4a8d","type":"inject","z":"3eced32f6afec9ad","g":"d3018dd6637a17e7","name":"Stop","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":1050,"y":560,"wires":[["614ca3bfbf9e4df5"]]},{"id":"f0ff0a0fb1975a69","type":"http request","z":"3eced32f6afec9ad","g":"d0184e748701da52","name":"ECAbluftState","method":"GET","ret":"obj","paytoqs":"ignore","url":"http://10.1.1.234:5533/","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":320,"y":800,"wires":[["72f80534f0857440"]]},{"id":"72f80534f0857440","type":"function","z":"3eced32f6afec9ad","g":"d0184e748701da52","name":"Check DutyCycle","func":"msg.payload = msg.payload.data.DutyCycle\nmsg.topic = \"DutyCycle\"\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":530,"y":800,"wires":[["442464aa9abec787"]]},{"id":"442464aa9abec787","type":"ha-number","z":"3eced32f6afec9ad","g":"d0184e748701da52","name":"Air Controller Dryer","version":1,"debugenabled":false,"inputs":1,"outputs":1,"entityConfig":"51482df92d2f1f29","mode":"set","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"},{"property":"topic","propertyType":"msg","value":"DutyCycle","valueType":"str"}],"x":770,"y":800,"wires":[["61205c55b28599ab"]]},{"id":"7f83211f1adf1085","type":"http request","z":"3eced32f6afec9ad","g":"d0184e748701da52","name":"DutyPostChange","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.234:5533/air/ctrl","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":810,"y":900,"wires":[[]]},{"id":"df129d682c7098c7","type":"function","z":"3eced32f6afec9ad","g":"d0184e748701da52","name":"DutyChanger","func":"\nconst NewDuty = msg.payload\n\nmsg.payload = { \"newDuty\": NewDuty }\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":630,"y":900,"wires":[["7f83211f1adf1085"]]},{"id":"73f7f8508dfc837b","type":"inject","z":"3eced32f6afec9ad","g":"d0184e748701da52","name":"Start","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"5","crontab":"","once":true,"onceDelay":"5","topic":"","payload":"","payloadType":"date","x":110,"y":800,"wires":[["f0ff0a0fb1975a69"]]},{"id":"61205c55b28599ab","type":"join","z":"3eced32f6afec9ad","g":"d0184e748701da52","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":310,"y":880,"wires":[["1f730adffd496dc4"]]},{"id":"1f730adffd496dc4","type":"function","z":"3eced32f6afec9ad","g":"d0184e748701da52","name":"CompareDuty","func":"let lastState = msg.payload.DutyCycle\nlet newState = msg.payload.DutyChangedTo\n\nif(newState === lastState){\n    msg.payload = \"Abluft: Same State Nothing to Do\"\n    return [msg,null];\n}else{\n    msg.payload = newState\n    return  [null,msg];\n}","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":460,"y":880,"wires":[["30fde43e19631bb1"],["df129d682c7098c7"]]},{"id":"70c691cb77d35316","type":"ha-number","z":"3eced32f6afec9ad","g":"d0184e748701da52","name":"Air Controller Dryer","version":1,"debugenabled":false,"inputs":0,"outputs":1,"entityConfig":"51482df92d2f1f29","mode":"listen","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"},{"property":"topic","propertyType":"msg","value":"DutyChangedTo","valueType":"str"}],"x":130,"y":880,"wires":[["61205c55b28599ab"]]},{"id":"30fde43e19631bb1","type":"debug","z":"3eced32f6afec9ad","g":"d0184e748701da52","name":"debug 74","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":700,"y":860,"wires":[]},{"id":"7d39d0224f4376fc","type":"ha-switch","z":"3eced32f6afec9ad","g":"d0184e748701da52","name":"ECRuckDryer","version":0,"debugenabled":false,"inputs":1,"outputs":2,"entityConfig":"52b8c46d1aea9a62","enableInput":true,"outputOnStateChange":true,"outputProperties":[{"property":"outputType","propertyType":"msg","value":"state change","valueType":"str"},{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"}],"x":130,"y":960,"wires":[["c033c6d42954ef22"],["be6bba3d99543c18"]]},{"id":"c033c6d42954ef22","type":"http request","z":"3eced32f6afec9ad","g":"d0184e748701da52","name":"DutyPostStart","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.234:5533/air/start","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":380,"y":940,"wires":[[]]},{"id":"be6bba3d99543c18","type":"http request","z":"3eced32f6afec9ad","g":"d0184e748701da52","name":"DutyPostStop","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.234:5533/air/stop","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":380,"y":1000,"wires":[[]]},{"id":"89bbe2fb835eb83b","type":"http request","z":"3eced32f6afec9ad","g":"f0d791250ce3cb79","name":"DutyPostChange","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.235:5533/air/ctrl","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":1470,"y":820,"wires":[["972077a0dd65535b"]]},{"id":"93ef8584d57fe5b7","type":"function","z":"3eced32f6afec9ad","g":"f0d791250ce3cb79","name":"DutyChanger","func":"\nconst NewDuty = msg.newDuty\n\nmsg.payload = { \"newDuty\": NewDuty}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1270,"y":820,"wires":[["89bbe2fb835eb83b"]]},{"id":"8aa103c983aeac9d","type":"inject","z":"3eced32f6afec9ad","g":"f0d791250ce3cb79","name":"PWM_SETTER","props":[{"p":"newDuty","v":"5","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","x":1060,"y":820,"wires":[["93ef8584d57fe5b7"]]},{"id":"972077a0dd65535b","type":"debug","z":"3eced32f6afec9ad","g":"f0d791250ce3cb79","name":"debug 75","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1660,"y":860,"wires":[]},{"id":"ea91907ac588be23","type":"http request","z":"3eced32f6afec9ad","g":"f0d791250ce3cb79","name":"DutyPostStart","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.235:5533/air/start","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":1440,"y":880,"wires":[["972077a0dd65535b"]]},{"id":"dddac41b1a6ed6aa","type":"http request","z":"3eced32f6afec9ad","g":"f0d791250ce3cb79","name":"DutyPostStop","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.235:5533/air/stop","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":1440,"y":940,"wires":[["972077a0dd65535b"]]},{"id":"cfe2eb1863b1949c","type":"inject","z":"3eced32f6afec9ad","g":"f0d791250ce3cb79","name":"Start","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":1030,"y":880,"wires":[["ea91907ac588be23"]]},{"id":"4ac4c49a4e3014c1","type":"inject","z":"3eced32f6afec9ad","g":"f0d791250ce3cb79","name":"Stop","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":1030,"y":940,"wires":[["dddac41b1a6ed6aa"]]},{"id":"ef306e0bb8574cf7","type":"comment","z":"3eced32f6afec9ad","g":"e3ae47face506c41","name":"DEBUG ","info":"","x":970,"y":60,"wires":[]},{"id":"6d7d082f99808488","type":"comment","z":"3eced32f6afec9ad","g":"cc0c7ed9ea21cf9b","name":"Veggi Exhaust","info":"","x":130,"y":400,"wires":[]},{"id":"e6d61ecc778b733a","type":"comment","z":"3eced32f6afec9ad","g":"7881c1d5756a95f9","name":"Flower Exhaust","info":"","x":120,"y":60,"wires":[]},{"id":"227574f9468de816","type":"comment","z":"3eced32f6afec9ad","g":"d3018dd6637a17e7","name":"DEBUG ","info":"","x":1010,"y":400,"wires":[]},{"id":"de8180bd72a13fca","type":"comment","z":"3eced32f6afec9ad","g":"f0d791250ce3cb79","name":"DEBUG ","info":"","x":1010,"y":760,"wires":[]},{"id":"7102b1e4cc6e2cd2","type":"comment","z":"3eced32f6afec9ad","g":"d0184e748701da52","name":"Drying Exhaust","info":"","x":100,"y":760,"wires":[]},{"id":"06dc9b45852019fe","type":"link in","z":"837562a29cc16bf1","name":"DryingCtrl","links":["f639a305698026d1"],"x":45,"y":40,"wires":[["30ac7a0c8fcf2fb8"]]},{"id":"30ac7a0c8fcf2fb8","type":"debug","z":"837562a29cc16bf1","name":"TentData","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":140,"y":20,"wires":[]},{"id":"ebd19d5b7f79749d","type":"link in","z":"837562a29cc16bf1","name":"DryingTentLiveData","links":["854a899b81ae0da3"],"x":45,"y":80,"wires":[["168d26b6e04d5457","4bc992af7e8eeb3b"]]},{"id":"168d26b6e04d5457","type":"debug","z":"837562a29cc16bf1","name":"TentLiveData","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":150,"y":60,"wires":[]},{"id":"2e58ca36e4975292","type":"link out","z":"837562a29cc16bf1","name":"Exhaust","mode":"link","links":[],"x":575,"y":700,"wires":[]},{"id":"f10df41350b98c50","type":"join","z":"837562a29cc16bf1","name":"VpdNeeds","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":460,"y":60,"wires":[[]]},{"id":"a42167d7f369149a","type":"debug","z":"837562a29cc16bf1","name":"Temperatures","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":460,"y":140,"wires":[]},{"id":"eb74c53d01b97ace","type":"debug","z":"837562a29cc16bf1","name":"Humidity","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":440,"y":180,"wires":[]},{"id":"52fdbd67490934c4","type":"debug","z":"837562a29cc16bf1","name":"Dewpoints","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":220,"wires":[]},{"id":"022c729507aff6df","type":"debug","z":"837562a29cc16bf1","name":"Pressures","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":440,"y":380,"wires":[]},{"id":"33d2df760c249443","type":"debug","z":"837562a29cc16bf1","name":"Battery","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":440,"y":520,"wires":[]},{"id":"3011ac99935058fc","type":"debug","z":"837562a29cc16bf1","name":"Power","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":430,"y":560,"wires":[]},{"id":"f3be4872d689a0ca","type":"debug","z":"837562a29cc16bf1","name":"CO2","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":430,"y":420,"wires":[]},{"id":"7f77813b91965276","type":"debug","z":"837562a29cc16bf1","name":"Light","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":430,"y":460,"wires":[]},{"id":"0aa762f5f80712c8","type":"debug","z":"837562a29cc16bf1","name":"Switches","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":440,"y":620,"wires":[]},{"id":"afeeb2589c30fa74","type":"debug","z":"837562a29cc16bf1","name":"Conductivity","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":340,"wires":[]},{"id":"e29616dda5bc78bb","type":"debug","z":"837562a29cc16bf1","name":"Moisture","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":440,"y":260,"wires":[]},{"id":"4ff3d1707695e0f6","type":"debug","z":"837562a29cc16bf1","name":"Exhasut","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":440,"y":700,"wires":[]},{"id":"0214db4988ac22b5","type":"debug","z":"837562a29cc16bf1","name":"WISH","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":430,"y":100,"wires":[]},{"id":"d8f2fcca50f43695","type":"debug","z":"837562a29cc16bf1","name":"Humidifier","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":740,"wires":[]},{"id":"738cf6c13d34f5ac","type":"debug","z":"837562a29cc16bf1","name":"Vents","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":430,"y":660,"wires":[]},{"id":"caf859c3f933940e","type":"debug","z":"837562a29cc16bf1","name":"RootTemp","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":300,"wires":[]},{"id":"1feef4e361d6f4ab","type":"debug","z":"837562a29cc16bf1","name":"Dehumidifier","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":780,"wires":[]},{"id":"4bc992af7e8eeb3b","type":"function","z":"837562a29cc16bf1","name":"Sort Sensor Types","func":"let data = msg.payload;\n\n// Arrays für verschiedene Sensortypen initialisieren\nlet wish = [];\nlet temperatures = [];\nlet humidity = [];\nlet dewpoints = [];\nlet moisture = [];\nlet pressures = [];\nlet battery = [];\nlet power = [];\nlet co2 = [];\nlet lumen = [];\nlet conductivity = [];\nlet switches = [];\nlet dutyCycleExhaust = [];\nlet vents = [];\nlet humidifier = [];\nlet dehumidifier = [];\nlet root = [];\n\n// Durchlaufe alle Schlüssel im data-Objekt und sortiere sie nach bestimmten Sensortypen\nfor (let key in data) {\n    if (data.hasOwnProperty(key)) {\n        let entity_id = key.toLowerCase();\n        let entity = { entity_id: key, value: data[key] };\n\n        // Prioritize to ensure it is captured first\n        if (entity_id.includes('wish') || entity_id.includes('avg') || entity_id.includes('target')) {\n            wish.push(entity);\n        } else if (entity_id.includes('root') || entity_id.includes('wurzel') || entity_id.includes('water')) {\n            root.push(entity);\n        }\n        // ENVIORMENT\n        else if (entity_id.includes('temperature') || entity_id.includes('temp')) {\n            temperatures.push(entity);\n        } else if (entity_id.includes('humidity') || entity_id.includes('feuchtigkeit') || entity_id.includes('rh')) {\n            humidity.push(entity);\n        } else if (entity_id.includes('dewpoint') || entity_id.includes('dew')) {\n            dewpoints.push(entity);\n        } else if (entity_id.includes('moisture') || entity_id.includes('mois')) {\n            moisture.push(entity);\n        } else if (entity_id.includes('pressure') || entity_id.includes('press')) {\n            pressures.push(entity);\n        } else if (entity_id.includes('carbondioxide') || entity_id.includes('co2') || entity_id.includes('carbon')) {\n            co2.push(entity);\n        } else if (entity_id.includes('conductivity')) {\n            conductivity.push(entity);\n        } else if (entity_id.includes('illuminance') || entity_id.includes('light') || entity_id.includes('licht')) {\n            lumen.push(entity);\n        }\n        // Devices\n        else if (entity_id.includes('dehumidifier') || entity_id.includes('entfeuchter')) {\n            dehumidifier.push(entity);\n        } else if (entity_id.includes('humidifier') || entity_id.includes('befeuchter')) {\n            humidifier.push(entity);\n        } else if (entity_id.includes('ruckec') || entity_id.includes('airctr') || entity_id.includes('exhaust') || entity_id.includes('abluft')) {\n            dutyCycleExhaust.push(entity);\n        } else if (entity_id.includes('vent')) {\n            vents.push(entity);\n        } else if (entity_id.includes('switch')) {\n            switches.push(entity);\n        } else if (entity_id.includes('power') || entity_id.includes('energy')) {\n            power.push(entity);\n        }\n\n        // ADDONS\n        else if (entity_id.includes('battery') || entity_id.includes('batt')) {\n            battery.push(entity);\n        }\n    }\n}\n\n// Nachrichtenausgabe auf verschiedenen Outputs\nreturn [\n    // ENVIORMENT\n    { payload: wish, topic: 'Wish' },\n    { payload: temperatures, topic: 'temperature' },\n    { payload: humidity, topic: 'humidity' },\n    { payload: dewpoints, topic: 'dewpoint' },\n    { payload: moisture, topic: 'moisture' },\n    { payload: root, topic: 'roottemp' },\n    { payload: conductivity, topic: 'conductivity' },\n    { payload: pressures, topic: 'pressure' },\n    { payload: co2, topic: 'carbon_dioxide' },\n    { payload: lumen, topic: 'illuminance' },\n    // DEVICEINFO\n    { payload: battery, topic: 'battery' },\n    { payload: power, topic: 'power' },\n    // DEVICES\n    { payload: switches, topic: 'switch' },\n    { payload: vents, topic: 'Vents' },\n    { payload: dutyCycleExhaust, topic: 'Exhaust' },\n    { payload: humidifier, topic: 'humidifier' },\n    { payload: dehumidifier, topic: 'dehumidifier' }\n\n\n];\n","outputs":17,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":190,"y":220,"wires":[["e7d85836d6efff20"],["d2502e609aee86c4"],["894e3f2d417270a1"],["cd2ee8affa561b9c"],["3deecb435aa812f2"],["75f661a92ec9a9bc"],["237aa8a46cf62248"],["4babf1f954c3e57b"],["884cf8a2633214fe"],["e474bc581931075b"],["2600ce922720d165"],["d807c37c87e52fb7"],["0b97ef72d268e742"],["f2f13c248e0b8c38"],["7a29d65c56ea38ce"],["06a8234a0e50da53"],["820f24819599c56d"]]},{"id":"b08769debd37ea42","type":"link out","z":"837562a29cc16bf1","name":"Humidifier","mode":"link","links":[],"x":575,"y":740,"wires":[]},{"id":"6a53a1d5b542ad0d","type":"link out","z":"837562a29cc16bf1","name":"Dehumidifier","mode":"link","links":[],"x":575,"y":780,"wires":[]},{"id":"b29f1ccf177ca9bc","type":"link out","z":"837562a29cc16bf1","name":"Vents","mode":"link","links":[],"x":575,"y":660,"wires":[]}]