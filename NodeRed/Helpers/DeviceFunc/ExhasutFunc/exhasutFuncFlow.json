[{"id":"8ecdceb2353f84e1","type":"group","z":"3752d27d7587c957","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["2190d00a05105c37","032ae17ffae61c84","64311156e04065be","e67e4105200aba9a","418a4427dfb8d6af","d1ba22a962408cbd","068b8e7a89eef1ba","9ee872c8de807c68"],"x":2954,"y":619,"w":932,"h":222},{"id":"2190d00a05105c37","type":"function","z":"3752d27d7587c957","g":"8ecdceb2353f84e1","name":"Exhaust Setup","func":"// Hilfsfunktion zur Überprüfung, ob ein Wert numerisch ist\nconst isNumeric = (value) => {\n    return !isNaN(parseFloat(value)) && isFinite(value);\n};\n\n// Funktion zur Bestimmung des dutyCycle-Werts\nconst findDutyCycle = (exhaustArray) => {\n    if (exhaustArray.length === 0) {\n        return null; // Keine Werte zu verarbeiten, wenn das Array leer ist\n    }\n    for (let i = 0; i < exhaustArray.length; i++) {\n        if (isNumeric(exhaustArray[i].value)) {\n            return parseInt(exhaustArray[i].value, 10);\n        }\n    }\n    return null; // Falls kein numerischer Wert gefunden wurde\n};\n\nlet outputs = [null, null, null, null]; // Array für vier Ausgänge\n\n// Zustand der Abluft und Geschwindigkeit aus der Payload extrahieren\nconst exhaustSpeed = msg.payload.exhaustSpeed.value; // Anpassung hier\nlet exhaustState = 'off'; // Standardwert setzen, falls kein Zustand gefunden wird\nif (msg.payload.Exhaust && msg.payload.Exhaust.length > 0) {\n    const exhaustSwitch = msg.payload.Exhaust.find(e => e.entity_id && e.entity_id.toLowerCase().includes(\"switch\"));\n    if (exhaustSwitch && exhaustSwitch.value) {\n        exhaustState = exhaustSwitch.value;\n    }\n}\n\nconst dutyCycle = findDutyCycle(msg.payload.Exhaust);\n\n// Prüfen, ob ein dutyCycle vorhanden ist\nif (dutyCycle === null) {\n    return outputs; // Kein dutyCycle gefunden, keine Aktion erforderlich\n}\n\nconst percentDifference = parseFloat(msg.payload.exhaustSpeed.percentDifference);\nlet newDutyCycle = dutyCycle;\n\n// Berechnung des neuen Duty Cycle basierend auf der prozentualen Abweichung\nif (percentDifference !== 0) {\n    if (percentDifference < 0) {\n        // Wenn der Wert negativ ist, erhöhen wir den Duty Cycle\n        newDutyCycle = dutyCycle + Math.abs(percentDifference);\n    } else {\n        // Wenn der Wert positiv ist, verringern wir den Duty Cycle\n        newDutyCycle = dutyCycle - percentDifference;\n    }\n\n    // Stellen Sie sicher, dass der neue Duty Cycle innerhalb der Grenzen liegt\n    newDutyCycle = Math.min(95, Math.max(10, Math.round(newDutyCycle)));\n}\n\n// Abluft starten auf dem ersten Ausgang, wenn sie aus ist und erhöht werden muss\nif (exhaustSpeed === \"increased\" && exhaustState === \"off\") {\n    outputs[0] = { payload: \"Starte Abluft\", topic: \"Start\" };\n    return outputs;\n}\n\n// Abluft-Geschwindigkeit erhöhen, wenn sie bereits eingeschaltet ist\nif (exhaustSpeed === \"increased\" && exhaustState === \"on\") {\n    outputs[2] = { payload: newDutyCycle.toString(), topic: \"Increase\" };\n    return outputs;\n}\n\n// Abluft stoppen auf dem zweiten Ausgang, wenn die Geschwindigkeit reduziert wird und der Duty Cycle sehr niedrig ist\nif (exhaustSpeed === \"reduced\" && exhaustState === \"on\" && newDutyCycle <= 10) {\n    outputs[1] = { payload: \"Stoppe Abluft\", topic: \"Stop\" };\n    return outputs;\n} else if (exhaustSpeed === \"reduced\" && exhaustState === \"on\") {\n    outputs[2] = { payload: newDutyCycle.toString(), topic: \"Decrease\" };\n    return outputs;\n}\n\n// Warnung ausgeben, wenn versucht wird, die Abluftgeschwindigkeit zu reduzieren, obwohl sie bereits aus ist\nif (exhaustSpeed === \"reduced\" && exhaustState === \"off\") {\n    outputs[1] = { payload: \"Abluft bereits gestoppt, kann nicht weiter reduziert werden\", topic: \"AlreadyStopped\" };\n    return outputs;\n}\n\n// Nichts tun, wenn keine Änderung erforderlich ist\nif (exhaustSpeed === \"unchanged\") {\n    outputs[3] = { payload: \"PERFEKTION: Abluft unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n    return outputs;\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3320,"y":720,"wires":[["d1ba22a962408cbd","9ee872c8de807c68"],["068b8e7a89eef1ba","9ee872c8de807c68"],["64311156e04065be","9ee872c8de807c68"],["9ee872c8de807c68"]]},{"id":"032ae17ffae61c84","type":"http request","z":"3752d27d7587c957","g":"8ecdceb2353f84e1","name":"DutyPostChange","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.234:5533/air/ctrl","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":3770,"y":760,"wires":[[]]},{"id":"64311156e04065be","type":"function","z":"3752d27d7587c957","g":"8ecdceb2353f84e1","name":"DutyChanger","func":"\nconst NewDuty = msg.payload\n\nmsg.payload = { \"newDuty\": NewDuty}\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":3590,"y":760,"wires":[["032ae17ffae61c84"]]},{"id":"e67e4105200aba9a","type":"join","z":"3752d27d7587c957","g":"8ecdceb2353f84e1","name":"exhasutData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":3060,"y":800,"wires":[["2190d00a05105c37","9ee872c8de807c68"]]},{"id":"418a4427dfb8d6af","type":"link in","z":"3752d27d7587c957","g":"8ecdceb2353f84e1","name":"ExhasutData","links":["e52f426c3a45d473"],"x":2995,"y":740,"wires":[["e67e4105200aba9a"]]},{"id":"d1ba22a962408cbd","type":"link out","z":"3752d27d7587c957","g":"8ecdceb2353f84e1","name":"ExhaustVeggiON","mode":"link","links":["09f51aa364202656"],"x":3485,"y":680,"wires":[]},{"id":"068b8e7a89eef1ba","type":"link out","z":"3752d27d7587c957","g":"8ecdceb2353f84e1","name":"ExhaustVeggiOFF","mode":"link","links":["95404f058f30b296"],"x":3535,"y":720,"wires":[]},{"id":"9ee872c8de807c68","type":"debug","z":"3752d27d7587c957","g":"8ecdceb2353f84e1","name":"debug 182","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":3310,"y":660,"wires":[]}]