[{"id":"6fcb82f207901f17","type":"tab","label":"GrowRoomCtrl","disabled":false,"info":"","env":[]},{"id":"91b3041d53614fc6","type":"group","z":"6fcb82f207901f17","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["2a09d643d26d92ef","9d05398df8ca3c2b","923ea5a19b7306bb","150928e591bcc0f0","9a660cd75e874e89","1443fd263756f63a","8bdcdb5a0269634f","8e5849366f8d0df3"],"x":1314,"y":1519,"w":892,"h":182},{"id":"25f097b685bcf53c","type":"group","z":"6fcb82f207901f17","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["2ee57818f4452142","bed86d46203bcde1","c43c9851ea70d3a8","2ea63399a8be550f","f39174c43ccbbd26","e7a7450bdc84a9e5"],"x":1314,"y":1719,"w":612,"h":137},{"id":"6480c67a52477c56","type":"group","z":"6fcb82f207901f17","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["2c80dac8d5bb42c1","15ab5b6b591292fd","49eda6a013ddc8f3","5f068398b3328a95"],"x":714,"y":1326.5,"w":332,"h":294.5},{"id":"df3a3098b236bbf8","type":"group","z":"6fcb82f207901f17","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["0ea9841f7c7bddfd","34fb69f47d7f4ffa","ce88b514ed8fefb4","a4eb702c29bada7e","9820d12609ba97a1","f9333b43826d44bd","857e40ecae8bc60b","0d260f8001de57ce","4c3ef331737d72eb"],"x":14,"y":1859,"w":702,"h":382},{"id":"66f48e845030b291","type":"group","z":"6fcb82f207901f17","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["ca045a3ff01ce6ab","3b561261f0b55314","47f41429505da3d5","629f1203882715e5","c883c16984ed5cee","7d7eab1986e71b30","f4d67ceb373f6872","13c823083d5e91db","f8560efe9e6d04d8"],"x":14,"y":2279,"w":772,"h":442},{"id":"c8e5b8e12207b789","type":"group","z":"6fcb82f207901f17","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["18f1987e494bac59","cffdc6d9b0fcc5dd","3f887ab7da5b528c","3a124366984cc1e9","837607e3f49e7f42","5ccae930ffc7cf55"],"x":1314,"y":1879,"w":632,"h":142},{"id":"b408097abebd8fdb","type":"group","z":"6fcb82f207901f17","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["a4081dac03c18d34","a110f6c0c7db7eb9","3b8dcf1ddd3f0a98","c0967c0c3b535687","412c666772359b58","e472ad4545656f1a","e3159b94f3c122de","db1ef151562e7d39","af9a83abe0545535","d343ec2789e9a24b","5586660314d79b76","33cbaa818f6e4618","56a4e455c0f9d5e2","6d93a8c98375de46","32ae7b662cb5c84f","ef7366de93afb4dd","e0b37de379e9787f","328db6b64b141ab6","8a238a2714b7deb1","8b1d308f861b62d2","c75f44bec1790cd8","abc9f2566d50ac85"],"x":594,"y":19,"w":1332,"h":302},{"id":"77ed46dd9885c3e3","type":"group","z":"6fcb82f207901f17","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["385a580f200748d1","c0feeb1b4e55e176","f7beb6910d27753a","fe85503bb6258f2c","6467fcdfcecd8bd8","0d434c3ead4a2f55","5748df124ca12244","628540a4c50c93c7","2ad21d39d70523ac"],"x":24,"y":1319,"w":662,"h":402},{"id":"3c1909379923b44d","type":"group","z":"6fcb82f207901f17","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["03e79c43e58ead4a","1712036e5017a238","043f3911673a92bf","20d35bed4d2e3567","9c3e310d274fac45","a847784b825367cf","efde13ce254c6d36","586d29f48805f54d","12e8a131245940fe","467b462d456f1df0","6416a4823197d26c","6108be97d6a6c39b","f0450d663833fbd8","e95922d0b87ed5c3","18722d8be97cb3ab","9047fd449bb3fc5c","4faec569ba6943d0","ea9ceff937fcdf2d","e5d701464c11f1fb","9f13424528e1ce4d","f747221671e2a256","ccaf01950781e533"],"x":634,"y":339,"w":552,"h":802},{"id":"f3e1b95b0574fe9e","type":"group","z":"6fcb82f207901f17","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["00c51e4c238f37ae","e237fd1275ec541b","c1ab128a5a405f74","670ee9939bd6c892","3172c0b6cecfca61","3e2f50f564baa5f7","a7039b2d22c05539"],"x":1334,"y":2479,"w":582,"h":142},{"id":"e0e84d9c3c29ed74","type":"group","z":"6fcb82f207901f17","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["34d7c43fb0924feb","58ad27edfca23a83","4564bb51d83a0b4f","54edc441e8a59d26","5177cd6f9c7f7ec3","b7c7a89318f8d310","ad36f486222d39fa"],"x":1324,"y":2319,"w":602,"h":142},{"id":"c57a003c2d509dd1","type":"group","z":"6fcb82f207901f17","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["f1661726d2ee693d","3422ccbf68aa8c0e","6787011be821c1cc","7e14b98351bfd86f","ed72a75f5413aabc","a6032c075c07a121"],"x":1324,"y":2159,"w":622,"h":142},{"id":"3ef055f6ecae0521","type":"group","z":"6fcb82f207901f17","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["d7a32fcc4e76a35c","db172a7181b00153","cfbb482d671717ad","abe4483090f685a3","5c5959aa60778b19","4e44711d10e0844c"],"x":1324,"y":2019,"w":612,"h":142},{"id":"d96c8c880ff4d858","type":"junction","z":"6fcb82f207901f17","x":360,"y":800,"wires":[["f16efe7fe70d8549","cd544d1577c3244e"]]},{"id":"919fb8b87429c144","type":"junction","z":"6fcb82f207901f17","x":360,"y":760,"wires":[["7c5ab19c36b42966","2a1226b0ec4c5cf6"]]},{"id":"eae653d39366095c","type":"junction","z":"6fcb82f207901f17","x":360,"y":720,"wires":[["237a41d224fa2e28","25fbf2f05d2fa597","12e8a131245940fe"]]},{"id":"eec02b873fa99b46","type":"junction","z":"6fcb82f207901f17","x":360,"y":680,"wires":[["110e9aef265dc948","1e593888d3f50a3f"]]},{"id":"30a21cb64d63c568","type":"junction","z":"6fcb82f207901f17","x":360,"y":640,"wires":[["62313aa383826fbe"]]},{"id":"ba42a92d2beb8531","type":"junction","z":"6fcb82f207901f17","x":360,"y":580,"wires":[["bab83811a8461d76","a847784b825367cf"]]},{"id":"1ebd4f93fee4b36a","type":"junction","z":"6fcb82f207901f17","x":360,"y":540,"wires":[["8ceaf85afe3bc0c0","efde13ce254c6d36"]]},{"id":"79b4d6d474534ec2","type":"junction","z":"6fcb82f207901f17","x":360,"y":480,"wires":[["8306adac1e726634","9047fd449bb3fc5c"]]},{"id":"c238ed6e52394ded","type":"junction","z":"6fcb82f207901f17","x":360,"y":440,"wires":[["47c6341b7602ee1d","1712036e5017a238"]]},{"id":"d6e6ba622cf9670e","type":"junction","z":"6fcb82f207901f17","x":360,"y":400,"wires":[["5a1c8f2a6c550715","043f3911673a92bf"]]},{"id":"72959bd8815caca1","type":"junction","z":"6fcb82f207901f17","x":360,"y":360,"wires":[["32d7f9519ea64e83","9c3e310d274fac45"]]},{"id":"b5f79c75d71e4dcf","type":"junction","z":"6fcb82f207901f17","x":360,"y":320,"wires":[["4c41e9c25c63cbb8","586d29f48805f54d"]]},{"id":"7d52ae70ce7888dd","type":"junction","z":"6fcb82f207901f17","x":360,"y":280,"wires":[["587f23aa46258134","20d35bed4d2e3567"]]},{"id":"c6a1db0e41275972","type":"junction","z":"6fcb82f207901f17","x":360,"y":240,"wires":[["e5c222da83284c73"]]},{"id":"f02c2bfe1ed03831","type":"junction","z":"6fcb82f207901f17","x":360,"y":200,"wires":[["1a1e45a71b607074","c75f44bec1790cd8"]]},{"id":"ce2e18cc131bf59c","type":"junction","z":"6fcb82f207901f17","x":360,"y":160,"wires":[["757409ea9e951339","c75f44bec1790cd8"]]},{"id":"f6a5742628a9989a","type":"junction","z":"6fcb82f207901f17","x":360,"y":120,"wires":[["117979424702b92e"]]},{"id":"1bedaaa0414273ae","type":"link in","z":"6fcb82f207901f17","name":"GrowRoomCtrl","links":["735e34c63d920535"],"x":45,"y":40,"wires":[["c64f4b6014615ee6"]]},{"id":"c64f4b6014615ee6","type":"debug","z":"6fcb82f207901f17","name":"GrowRoomData","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":160,"y":40,"wires":[]},{"id":"a4081dac03c18d34","type":"ha-sensor","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"AVGHum-GRoom","entityConfig":"d89f8d34c695951c","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1110,"y":200,"wires":[["db1ef151562e7d39"]]},{"id":"a110f6c0c7db7eb9","type":"ha-sensor","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"AVGTemp-GRoom","entityConfig":"3cd010abab22bd94","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1110,"y":140,"wires":[["db1ef151562e7d39"]]},{"id":"3b8dcf1ddd3f0a98","type":"ha-sensor","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"currentVPD","entityConfig":"d5ba019e431db281","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1350,"y":100,"wires":[["8b1d308f861b62d2"]]},{"id":"c0967c0c3b535687","type":"function","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"Calc-AVG","func":"// Funktion zur Berechnung des Durchschnitts\nconst AvgTemp = (temps) => {\n    let sum = 0;\n    let count = 0;\n\n    temps.forEach((entry) => {\n        const temp = parseFloat(entry.value);\n        if (!isNaN(temp)) {\n            sum += temp;\n            count++;\n        }\n    });\n\n    if (count === 0) {\n        return \"unavailable\";\n    }\n\n    const avg = sum / count;\n    return avg.toFixed(2);\n};\n\n// Durchschnittstemperatur f√ºr jede Temperaturkategorie berechnen\nconst temperatureAvg = AvgTemp(msg.payload.temperature);\nconst humidityAvg = AvgTemp(msg.payload.humidity);\n\n// Objekt mit den Durchschnittswerten erstellen\nconst avgData = {\n    AvgTempData: temperatureAvg,\n    AvgHumData: humidityAvg\n};\n\n// Nachrichten erstellen und zur√ºckgeben\nconst avgDataMsg = { payload: avgData, topic: \"AvgData\" };\nconst tempMsg = { payload: temperatureAvg, topic: \"AvgTemp\" };\nconst humMsg = { payload: humidityAvg, topic: \"AvgHum\" };\n\nreturn [avgDataMsg, tempMsg, humMsg];\n","outputs":3,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":880,"y":120,"wires":[["d343ec2789e9a24b"],["a110f6c0c7db7eb9"],["a4081dac03c18d34"]]},{"id":"412c666772359b58","type":"function","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"VPD Calc ","func":"function calculateVPD(luftTemperatur, blattTemperatur, relativeLuftfeuchtigkeit) {\n    // Stellen Sie sicher, dass alle Eingaben Zahlen sind\n    luftTemperatur = parseFloat(luftTemperatur);\n    blattTemperatur = parseFloat(blattTemperatur);\n    relativeLuftfeuchtigkeit = parseFloat(relativeLuftfeuchtigkeit);\n\n    // √úberpr√ºfen Sie, ob einer der Werte NaN ist\n    if (isNaN(luftTemperatur) || isNaN(blattTemperatur) || isNaN(relativeLuftfeuchtigkeit)) {\n        return NaN; // Ge√§ndert von \"unavailable\" zu NaN f√ºr bessere Handhabung in numerischen Berechnungen\n    }\n\n    // Berechnungen ohne Rundung\n    let sdpLuft = 0.6108 * Math.exp((17.27 * luftTemperatur) / (luftTemperatur + 237.3));\n    let sdpBlatt = 0.6108 * Math.exp((17.27 * blattTemperatur) / (blattTemperatur + 237.3));\n    let adp = (relativeLuftfeuchtigkeit / 100) * sdpLuft;\n    let vpd = sdpBlatt - adp;\n\n    // R√ºckgabe als number, nicht als string\n    return parseFloat(vpd.toFixed(2));\n}\n\n// Beispiel f√ºr die Verwendung der Funktion\nlet luftTemperatur = parseFloat(msg.payload.AvgData.AvgTempData); // Stellen Sie sicher, dass dies eine Zahl ist\nlet blattTemperatur = parseFloat(msg.payload.AvgData.AvgTempData) - parseFloat(msg.payload.LeafOffSet); // Keine Rundung, genaue Berechnung\nlet relativeLuftfeuchtigkeit = parseFloat(msg.payload.AvgData.AvgHumData); // Stellen Sie sicher, dass dies eine Zahl ist\n\nlet vpd = calculateVPD(luftTemperatur, blattTemperatur, relativeLuftfeuchtigkeit);\n\nmsg.payload = vpd; // Nun ist msg.payload eine Zahl\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1200,"y":100,"wires":[["3b8dcf1ddd3f0a98"]]},{"id":"e472ad4545656f1a","type":"comment","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"VPD-Creation","info":"","x":1070,"y":60,"wires":[]},{"id":"e3159b94f3c122de","type":"function","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"Calc-Dewpoint","func":"// Funktion zur Berechnung des Taupunkts\nconst calculateDewPoint = (temperature, humidity) => {\n    const temp = parseFloat(temperature);\n    const hum = parseFloat(humidity);\n\n    if (isNaN(temp) || isNaN(hum)) {\n        return \"unavailable\";\n    }\n\n    const dewPoint = temp - ((100 - hum) / 5);\n    return parseFloat(dewPoint.toFixed(3));\n};\n\n// Beispielinput\nconst inputData = msg.payload;\n\n// Taupunkt berechnen\nconst temperature = parseFloat(inputData.AvgTemp);\nconst humidity = parseFloat(inputData.AvgHum);\nconst dewPoint = calculateDewPoint(temperature, humidity);\n\n// Taupunkt als Zahl zur√ºckgeben\nmsg.payload = dewPoint;\nreturn msg\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1460,"y":160,"wires":[["af9a83abe0545535"]]},{"id":"db1ef151562e7d39","type":"join","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1310,"y":160,"wires":[["e3159b94f3c122de"]]},{"id":"af9a83abe0545535","type":"ha-sensor","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"GRoomAVGDewpoint","entityConfig":"4d520d7d773809b5","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[{"property":"topic","propertyType":"msg","value":"DryTentDewPoint","valueType":"str"}],"x":1380,"y":200,"wires":[[]]},{"id":"d343ec2789e9a24b","type":"join","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1050,"y":100,"wires":[["412c666772359b58"]]},{"id":"5586660314d79b76","type":"link in","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"link in 10","links":["f0449f704d2f7c8a"],"x":795,"y":60,"wires":[["33cbaa818f6e4618"]]},{"id":"33cbaa818f6e4618","type":"function","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"Select","func":"let outputs = [null, null];\n\nvar leafMode = msg.payload.GlobalLeafSet;\nvar leafOffSet = msg.payload.LeafOffset;\nvar flowerLeafOffset = msg.payload.FlowerLeafOffset;\nvar veggiLeafOffset = msg.payload.VeggiLeafOffset;\nvar groomLeafOffset = msg.payload.GRoomLeafOffset;\n\n// Logic to set new offset based on leaf mode\nif (leafMode === \"Default\") {\n    outputs[0] = { payload: leafOffSet, topic: \"LeafOffSet\" };\n} else if (leafMode === \"Custom\") {\n    outputs[1] = { payload: veggiLeafOffset, topic: \"LeafOffSet\" };\n}\n\nreturn outputs;  // Return the modified outputs array\n","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":890,"y":60,"wires":[["d343ec2789e9a24b"],["d343ec2789e9a24b"]]},{"id":"56a4e455c0f9d5e2","type":"function","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"TentModesSetup","func":"// Initialisiert das Array f√ºr die Ausg√§nge mit Nullen\nlet outputs = [null, null, null, null, null];\n\n// √úberpr√ºft den Zustand des eingehenden Payloads und setzt den entsprechenden Ausgang\nif (msg.payload === \"VPD Perfection\") {\n    return [{ payload: msg.payload, topic: \"Perfection\" }, null, null, null, null];\n}\nelse if (msg.payload === \"IN-VPD-Range\") {\n    return [null, { payload: msg.payload, topic: \"AutoAvgVPD\" }, null, null, null];\n}\nelse if (msg.payload === \"Targeted VPD\") {\n    return [null, null, { payload: msg.payload, topic: \"TargetedVPD\" }, null, null];\n}\nelse if (msg.payload === \"CropSteering\") {\n    return [null, null, null, { payload: msg.payload, topic: \"ModeDisabeld\" }, null];\n}\nelse if (msg.payload === \"Disabled\") {\n    return [null, null, null, null, { payload: msg.payload, topic: \"ModeDisabeld\" }];\n}\n\n// Wenn keine Bedingungen zutreffen, sendet nichts\nreturn [null, null, null, null, null];\n","outputs":5,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1690,"y":180,"wires":[["ef7366de93afb4dd"],["e0b37de379e9787f"],["328db6b64b141ab6"],["abc9f2566d50ac85"],["6d93a8c98375de46"]]},{"id":"6d93a8c98375de46","type":"function","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"DISABLED AUTO","func":"msg.payload=\"DISABLED GROOM\"\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1690,"y":240,"wires":[["32ae7b662cb5c84f"]]},{"id":"32ae7b662cb5c84f","type":"debug","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"debug 159","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1670,"y":280,"wires":[]},{"id":"ef7366de93afb4dd","type":"link out","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"VPD-Perfektion","mode":"link","links":["c0feeb1b4e55e176"],"x":1885,"y":120,"wires":[]},{"id":"e0b37de379e9787f","type":"link out","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"IN-Range-VPD","mode":"link","links":["34fb69f47d7f4ffa"],"x":1885,"y":160,"wires":[]},{"id":"328db6b64b141ab6","type":"link out","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"TargetedVPD","mode":"link","links":["3b561261f0b55314"],"x":1885,"y":200,"wires":[]},{"id":"8a238a2714b7deb1","type":"comment","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"TentModes","info":"","x":1720,"y":120,"wires":[]},{"id":"8b1d308f861b62d2","type":"api-current-state","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"TentMode","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"select.groommodes","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"TentMode","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1500,"y":100,"wires":[["56a4e455c0f9d5e2"]]},{"id":"0ea9841f7c7bddfd","type":"comment","z":"6fcb82f207901f17","g":"df3a3098b236bbf8","name":"IN-RANGE-VPD","info":"","x":120,"y":1900,"wires":[]},{"id":"ca045a3ff01ce6ab","type":"comment","z":"6fcb82f207901f17","g":"66f48e845030b291","name":"Targeted-VPD","info":"","x":110,"y":2320,"wires":[]},{"id":"34fb69f47d7f4ffa","type":"link in","z":"6fcb82f207901f17","g":"df3a3098b236bbf8","name":"VPD-Perfektion","links":["e0b37de379e9787f"],"x":75,"y":1940,"wires":[["a4eb702c29bada7e"]]},{"id":"ce88b514ed8fefb4","type":"function","z":"6fcb82f207901f17","g":"df3a3098b236bbf8","name":"VPD State Values","func":"const plantStages = {\n    Germination: [0.42, 0.78], // Optimaler VPD-Bereich f√ºr Keimung bei 25-30¬∞C\n    Clones: [0.42, 0.78],      // Optimaler VPD-Bereich f√ºr Klone bei 25-30¬∞C\n    EarlyVeg: [0.55, 0.85],    // Optimaler VPD-Bereich f√ºr fr√ºhe Vegetation bei 20-25¬∞C\n    MidVeg: [0.85, 1.1],      // Optimaler VPD-Bereich f√ºr mittlere Vegetation bei 20-25¬∞C\n    LateVeg: [0.85, 1.2],     // Optimaler VPD-Bereich f√ºr sp√§te Vegetation bei 20-25¬∞C\n    EarlyFlower: [1, 1.25], // Optimaler VPD-Bereich f√ºr fr√ºhe Bl√ºte bei 20-25¬∞C\n    MidFlower: [1.1, 1.4],   // Optimaler VPD-Bereich f√ºr mittlere Bl√ºte bei 20-25¬∞C\n    LateFlower: [1.2, 1.6],  // Optimaler VPD-Bereich f√ºr sp√§te Bl√ºte bei 20-25¬∞C\n};\n\n\n\n// Beispiel, wie msg.payload gesetzt wird\n// msg.payload = \"LateVeg\"; // Kommentieren Sie diese Zeile aus, um den tats√§chlichen msg.payload zu verwenden\n\n// Pr√ºfen, ob das Wachstumsstadium im plantStages-Objekt vorhanden ist\nif (plantStages.hasOwnProperty(msg.payload)) {\n    // Setzen des VPD-Wertes aus dem plantStages-Objekt\n    msg.payload = plantStages[msg.payload];\n} else {\n    // Fehlermeldung, wenn das Wachstumsstadium nicht gefunden wurde\n    msg.payload = \"Unbekanntes Wachstumsstadium\";\n\n}\nmsg.perfektion = \"VPDStageValue\"\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":440,"y":1940,"wires":[["f9333b43826d44bd"]]},{"id":"a4eb702c29bada7e","type":"api-current-state","z":"6fcb82f207901f17","g":"df3a3098b236bbf8","name":"FlowerTentSelection","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"select.flowertent","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"targetVPD","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":210,"y":1940,"wires":[["ce88b514ed8fefb4"]]},{"id":"9820d12609ba97a1","type":"poll-state","z":"6fcb82f207901f17","g":"df3a3098b236bbf8","name":"currentVPD","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","updateInterval":"30","updateIntervalType":"num","updateIntervalUnits":"seconds","outputInitially":true,"outputOnChanged":true,"entityId":"sensor.vpd_groom","stateType":"num","ifState":"","ifStateType":"num","ifStateOperator":"is","outputs":1,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"vpdFlower","valueType":"str"},{"property":"perfektion","propertyType":"msg","value":"VPDFlowerState","valueType":"str"}],"x":220,"y":2060,"wires":[["f9333b43826d44bd"]]},{"id":"f9333b43826d44bd","type":"join","z":"6fcb82f207901f17","g":"df3a3098b236bbf8","name":"VPDWish","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":380,"y":2000,"wires":[["857e40ecae8bc60b"]]},{"id":"857e40ecae8bc60b","type":"function","z":"6fcb82f207901f17","g":"df3a3098b236bbf8","name":"VPD Handler Array Value","func":"const tolerance = 0.00; // Toleranzwert f√ºr die VPD-Anpassung\n\n// Der aktuelle VPD-Wert wird aus dem Payload geholt und in eine Zahl umgewandelt.\nconst currentVPD = parseFloat(msg.payload.currentVPD);\n\n// Ziel-VPD-Bereich wird aus dem Payload geholt.\nconst targetVPDRange = msg.payload.targetVPD;\n\n// Logging der aktuellen VPD und Ziel-VPD-Bereich zur √úberpr√ºfung und Debugging.\nnode.warn(`GRoom-VPD array between: ${targetVPDRange[0]} and ${targetVPDRange[1]}`);\n\n// Berechnung der prozentualen Abweichung vom Ziel-VPD und Rundung auf ganze Zahlen\nconst percentDifference = Math.round(currentVPD < targetVPDRange[0]\n    ? ((currentVPD - targetVPDRange[0]) / targetVPDRange[0]) * 100\n    : ((currentVPD - targetVPDRange[1]) / targetVPDRange[1]) * 100);\n\n// Funktion zur Berechnung der notwendigen Anpassungen basierend auf der Differenz zum VPD-Zielbereich.\nfunction calculateAdjustment(currentVPD, targetVPDRange) {\n    // Wenn der aktuelle VPD unter dem minimalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu erh√∂hen.\n    if (currentVPD < targetVPDRange[0] - tolerance) {\n        node.warn(`GRoom-VPD:: ${currentVPD} zu gering. Erh√∂he Temp oder verringere die Feuchtigkeit`);\n        node.warn(`GRoom % VPD Target --> ${percentDifference} %`);\n        return {\n            exhaustSpeed: \"increased\",      // Erh√∂ht die Abluftgeschwindigkeit, um feuchte Luft herauszuziehen\n            humidifier: \"reduced\",          // Schaltet den Luftbefeuchter aus, um Feuchtigkeit zu reduzieren\n            dehumidifier: \"increased\",       // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            heaterFan: \"increased\",         // Schaltet den Beheizer an, um die Feuchtigkeit zu reduzieren und Temp zu erh√∂hen\n            coolerFan: \"reduced\",           // Schaltet den K√ºhler an, um die Feuchtigkeit zu erh√∂hen und Temp zu verringern\n            ventsALL: \"increased\",          // Erh√∂ht die Geschwindigkeit der oberen Bel√ºftung, um mehr trockene Luft einzulassen\n            ventsTopSpeed: \"increased\",     // Erh√∂ht die Geschwindigkeit der oberen Bel√ºftung, um mehr trockene Luft einzulassen\n            ventsDownSpeed: \"increased\",    // Erh√∂ht die Geschwindigkeit der unteren Bel√ºftung\n            lightIntensity: \"increased\"     // Erh√∂ht die Lichtintensit√§t, um die Temperatur zu steigern (wenn das die Temperatur beeinflusst)\n        };\n\n    }\n    // Wenn der aktuelle VPD √ºber dem maximalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu senken.\n    else if (currentVPD > targetVPDRange[1] + tolerance) {\n        node.warn(`GRoom-VPD: ${currentVPD} zu hoch. Verringere Temp oder erh√∂he die Feuchtigkeit`);\n        node.warn(`GRoom % VPD Target --> ${percentDifference} %`);\n        return {\n            exhaustSpeed: \"reduced\",    // Reduziert die Abluftgeschwindigkeit, h√§lt feuchte Luft im Raum\n            humidifier: \"increased\",    // Schaltet den Luftbefeuchter ein, um Feuchtigkeit zu erh√∂hen\n            dehumidifier: \"reduced\",    // Schaltet den Luftentfeuchter aus, um Feuchtigkeit zu erh√∂hen\n            heaterFan: \"reduced\",       // Schaltet den Heizer aus, um die Temperatur zu verringern\n            coolerFan: \"increased\",     // Schaltet den K√ºhler an, um die Temperatur zu verringern\n            ventsALL: \"reduced\",        // Reduziert die Geschwindigkeit der Bel√ºftung, um mehr feuchte Luft zu halten\n            ventsTopSpeed: \"reduced\",   // Reduziert die Geschwindigkeit der oberen Bel√ºftung\n            ventsDownSpeed: \"reduced\",  // Reduziert die Geschwindigkeit der unteren Bel√ºftung\n            lightIntensity: \"reduced\"   // Verringert die Lichtintensit√§t, um die Temperatur zu senken (wenn das die Temperatur beeinflusst)\n        };\n    }\n    // Wenn der VPD im Zielbereich liegt, sind keine Anpassungen erforderlich.\n    node.warn(`GRoom-VPD: ${currentVPD} im gew√ºnschten Bereich`);\n    return {\n        exhaustSpeed: \"unchanged\",\n        humidifier: \"unchanged\",\n        dehumidifier: \"unchanged\",\n        heaterFan: \"unchanged\",\n        coolerFan: \"unchanged\",\n        ventsALL: \"unchanged\",\n        ventsTopSpeed: \"unchanged\",\n        ventsDownSpeed: \"unchanged\",\n        lightIntensity: \"unchanged\"\n    };\n}\n\n// Entscheidungslogik zur Steuerung der Umgebungsbedingungen, nutzt die calculateAdjustment Funktion.\nconst adjustments = calculateAdjustment(currentVPD, targetVPDRange);\n\n// Berechnung der prozentualen Abweichung und Hinzuf√ºgen zum Payload\nmsg.payload = {\n    exhaustSpeed: adjustments.exhaustSpeed,\n    humidifier: adjustments.humidifier,\n    dehumidifier: adjustments.dehumidifier,\n    heaterFan: adjustments.heaterFan,\n    coolerFan: adjustments.coolerFan,\n    ventsALL: adjustments.ventsALL,\n    ventsTopSpeed: adjustments.ventsTopSpeed,\n    ventsDownSpeed: adjustments.ventsDownSpeed,\n    lightIntensity: adjustments.lightIntensity,\n    percentDifference: percentDifference\n};\n\nmsg.perfektion = \"VPDActions\";\n\n// R√ºckgabe des modifizierten Payloads f√ºr weitere Verwendung im Flow.\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":580,"y":2000,"wires":[["0d260f8001de57ce"]]},{"id":"0d260f8001de57ce","type":"function","z":"6fcb82f207901f17","g":"df3a3098b236bbf8","name":"Check What Do","func":"let outputs = [null, null, null, null, null, null, null, null, null];\n\nvar percentDifference = msg.payload.percentDifference\n\n// Abluft\nif (msg.payload.exhaustSpeed === \"unchanged\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"increased\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"reduced\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n}\n\n// Humidifier\nif (msg.payload.humidifier === \"unchanged\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"increased\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"reduced\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n}\n\n// Dehumidifier\nif (msg.payload.dehumidifier === \"unchanged\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"increased\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"reduced\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n}\n\n// HeaterFan\nif (msg.payload.heaterFan === \"unchanged\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"increased\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"reduced\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n}\n\n// CoolerFan\nif (msg.payload.coolerFan === \"unchanged\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"increased\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"reduced\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n}\n\n// LightIntensity\nif (msg.payload.lightIntensity === \"unchanged\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"increased\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"reduced\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n}\n\n// VentsALL\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"increased\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"reduced\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n}\n\n// VentsTopSpeed\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"increased\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"reduced\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n}\n\n// VentsDownSpeed\nif (msg.payload.ventsDownSpeed === \"unchanged\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"increased\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"reduced\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n}\n\n\n\nreturn outputs;\n","outputs":9,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":590,"y":2100,"wires":[["4c3ef331737d72eb","150928e591bcc0f0"],["4c3ef331737d72eb","bed86d46203bcde1"],["4c3ef331737d72eb","18f1987e494bac59"],["4c3ef331737d72eb","d7a32fcc4e76a35c"],["4c3ef331737d72eb","f1661726d2ee693d"],["4c3ef331737d72eb","34d7c43fb0924feb"],["4c3ef331737d72eb","e237fd1275ec541b"],["e237fd1275ec541b"],["e237fd1275ec541b"]]},{"id":"4c3ef331737d72eb","type":"debug","z":"6fcb82f207901f17","g":"df3a3098b236bbf8","name":"debug 160","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":600,"y":2200,"wires":[]},{"id":"3b561261f0b55314","type":"link in","z":"6fcb82f207901f17","g":"66f48e845030b291","name":"VPD-Perfektion","links":["328db6b64b141ab6"],"x":85,"y":2400,"wires":[["629f1203882715e5"]]},{"id":"47f41429505da3d5","type":"function","z":"6fcb82f207901f17","g":"66f48e845030b291","name":"VPD State Values","func":"const plantStages = {\n    Germination: [0.42, 0.78], // Optimaler VPD-Bereich f√ºr Keimung bei 25-30¬∞C\n    Clones: [0.42, 0.78],      // Optimaler VPD-Bereich f√ºr Klone bei 25-30¬∞C\n    EarlyVeg: [0.55, 0.85],    // Optimaler VPD-Bereich f√ºr fr√ºhe Vegetation bei 20-25¬∞C\n    MidVeg: [0.8, 1.1],      // Optimaler VPD-Bereich f√ºr mittlere Vegetation bei 20-25¬∞C\n    LateVeg: [0.85, 1.2],     // Optimaler VPD-Bereich f√ºr sp√§te Vegetation bei 20-25¬∞C\n    EarlyFlower: [1, 1.25], // Optimaler VPD-Bereich f√ºr fr√ºhe Bl√ºte bei 20-25¬∞C\n    MidFlower: [1.25, 1.6],   // Optimaler VPD-Bereich f√ºr mittlere Bl√ºte bei 20-25¬∞C\n    LateFlower: [1.1, 1.6],  // Optimaler VPD-Bereich f√ºr sp√§te Bl√ºte bei 20-25¬∞C\n};\n\n\n// Beispiel, wie msg.payload gesetzt wird\n// msg.payload = \"LateVeg\"; // Kommentieren Sie diese Zeile aus, um den tats√§chlichen msg.payload zu verwenden\n\n// Pr√ºfen, ob das Wachstumsstadium im plantStages-Objekt vorhanden ist\nif (plantStages.hasOwnProperty(msg.payload)) {\n    // Setzen des VPD-Wertes aus dem plantStages-Objekt\n    msg.payload = plantStages[msg.payload];\n} else {\n    // Fehlermeldung, wenn das Wachstumsstadium nicht gefunden wurde\n    msg.payload = \"Unbekanntes Wachstumsstadium\";\n\n}\nmsg.perfektion = \"VPDStageValue\"\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":450,"y":2400,"wires":[["7d7eab1986e71b30"]]},{"id":"629f1203882715e5","type":"api-current-state","z":"6fcb82f207901f17","g":"66f48e845030b291","name":"FlowerTentSelection","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"select.flowertent","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"targetVPD","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":220,"y":2400,"wires":[["47f41429505da3d5"]]},{"id":"c883c16984ed5cee","type":"poll-state","z":"6fcb82f207901f17","g":"66f48e845030b291","name":"currentVPD","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","updateInterval":"30","updateIntervalType":"num","updateIntervalUnits":"seconds","outputInitially":true,"outputOnChanged":true,"entityId":"sensor.vpd_groom","stateType":"num","ifState":"","ifStateType":"num","ifStateOperator":"is","outputs":1,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"vpdFlower","valueType":"str"},{"property":"perfektion","propertyType":"msg","value":"VPDFlowerState","valueType":"str"}],"x":230,"y":2520,"wires":[["7d7eab1986e71b30"]]},{"id":"7d7eab1986e71b30","type":"join","z":"6fcb82f207901f17","g":"66f48e845030b291","name":"VPDWish","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":430,"y":2480,"wires":[["f4d67ceb373f6872"]]},{"id":"f4d67ceb373f6872","type":"function","z":"6fcb82f207901f17","g":"66f48e845030b291","name":"VPD Handler Array Value","func":"const tolerance = 0.00; // Toleranzwert f√ºr die VPD-Anpassung\n\n// Der aktuelle VPD-Wert wird aus dem Payload geholt und in eine Zahl umgewandelt.\nconst currentVPD = parseFloat(msg.payload.currentVPD);\n\n// Ziel-VPD-Bereich wird aus dem Payload geholt.\nconst targetVPDRange = msg.payload.targetVPD;\n\n// Logging der aktuellen VPD und Ziel-VPD-Bereich zur √úberpr√ºfung und Debugging.\nnode.warn(`GRoom-VPD-Target: ${targetVPDRange}`);\n\n// Funktion zur Berechnung der notwendigen Anpassungen basierend auf der Differenz zum VPD-Zielbereich.\nfunction calculateAdjustment(currentVPD, targetVPDRange) {\n    // Wenn der aktuelle VPD unter dem minimalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu erh√∂hen.\n    if (currentVPD < targetVPDRange - tolerance) {\n        node.warn(`GRoom-VPD: ${currentVPD} zu gering. Erh√∂he Temp oder verringere die Feuchtigkeit.`);\n        return {\n            exhaustSpeed: \"increased\",      // Erh√∂ht die Abluftgeschwindigkeit, um feuchte Luft herauszuziehen\n            humidifier: \"reduced\",          // Schaltet den Luftbefeuchter aus, um Feuchtigkeit zu reduzieren\n            dehumidifier: \"increased\",      // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            heaterFan: \"increased\",         // Schaltet den Beheizer an, um die Feuchtigkeit zu reduzieren und Temp zu erh√∂hen\n            coolerFan: \"reduced\",           // Schaltet den Beheizer an, um die Feuchtigkeit zu erh√∂hen und Temp zu verringern\n            ventsALL: \"increased\",          // Erh√∂ht die Geschwindigkeit der oberen Bel√ºftung, um mehr trockene Luft einzulassen\n            ventsTopSpeed: \"increased\",     // Erh√∂ht die Geschwindigkeit der oberen Bel√ºftung, um mehr trockene Luft einzulassen\n            ventsDownSpeed: \"increased\",    // Erh√∂ht die Geschwindigkeit der unteren Bel√ºftung\n            lightIntensity: \"increased\"     // Erh√∂ht die Lichtintensit√§t, um die Temperatur zu steigern (wenn das die Temperatur beeinflusst)\n        };\n    }\n    // Wenn der aktuelle VPD √ºber dem maximalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu senken.\n    else if (currentVPD > targetVPDRange + tolerance) {\n        node.warn(`GRoom-VPD: ${currentVPD} zu hoch. Verringere Temp oder erh√∂he die Feuchtigkeit.`);\n        return {\n            exhaustSpeed: \"reduced\",    // Reduziert die Abluftgeschwindigkeit, h√§lt feuchte Luft im Raum\n            humidifier: \"increased\",    // Schaltet den Luftbefeuchter ein, um Feuchtigkeit zu erh√∂hen\n            dehumidifier: \"reduced\",    // Schaltet den Luftentfeuchter aus, um Feuchtigkeit zu erh√∂hen\n            heaterFan: \"reduced\",       // Schaltet den Beheizer aus, um die Feuchtigkeit zu erh√∂hen und Temp zu senken\n            coolerFan: \"increased\",     // Schaltet den K√ºhler an, um die Feuchtigkeit zu erh√∂hen und Temp zu verringern\n            ventsALL: \"reduced\",        // Reduziert die Geschwindigkeit der Bel√ºftung, um mehr feuchte Luft zu halten\n            ventsTopSpeed: \"reduced\",   // Reduziert die Geschwindigkeit der oberen Bel√ºftung\n            ventsDownSpeed: \"reduced\",  // Reduziert die Geschwindigkeit der unteren Bel√ºftung\n            lightIntensity: \"reduced\"   // Verringert die Lichtintensit√§t, um die Temperatur zu senken (wenn das die Temperatur beeinflusst)\n        };\n    }\n    // Wenn der VPD im Zielbereich liegt, sind keine Anpassungen erforderlich.\n    node.warn(`GRoom-VPD: ${currentVPD} im gew√ºnschten Bereich.`);\n    return {\n        exhaustSpeed: \"unchanged\",\n        humidifier: \"unchanged\",\n        dehumidifier: \"unchanged\",\n        heaterFan: \"unchanged\",\n        coolerFan: \"unchanged\",\n        ventsALL: \"unchanged\",\n        ventsTopSpeed: \"unchanged\",\n        ventsDownSpeed: \"unchanged\",\n        lightIntensity: \"unchanged\"\n    };\n}\n\n// Funktion zur Berechnung der prozentualen Abweichung\nfunction calculatePercentDifference(currentVPD, targetVPD) {\n    return ((currentVPD - targetVPD) / targetVPD) * 100;\n}\n\n// Entscheidungslogik zur Steuerung der Umgebungsbedingungen, nutzt die calculateAdjustment Funktion.\nconst adjustments = calculateAdjustment(currentVPD, targetVPDRange);\nconst percentDifference = calculatePercentDifference(currentVPD, targetVPDRange);\n\nmsg.payload = {\n    exhaustSpeed: adjustments.exhaustSpeed,\n    humidifier: adjustments.humidifier,\n    dehumidifier: adjustments.dehumidifier,\n    heaterFan: adjustments.heaterFan,\n    coolerFan: adjustments.coolerFan,\n    ventsALL: adjustments.ventsALL,\n    ventsTopSpeed: adjustments.ventsTopSpeed,\n    ventsDownSpeed: adjustments.ventsDownSpeed,\n    lightIntensity: adjustments.lightIntensity,\n    percentDifference: percentDifference.toFixed(0) // Prozentuale Abweichung auf 2 Dezimalstellen gerundet\n};\n\nmsg.perfektion = \"VPDActions\";\n// R√ºckgabe des modifizierten Payloads f√ºr weitere Verwendung im Flow.\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":650,"y":2480,"wires":[["13c823083d5e91db"]]},{"id":"13c823083d5e91db","type":"function","z":"6fcb82f207901f17","g":"66f48e845030b291","name":"Check What Do","func":"let outputs = [null, null, null, null, null, null, null, null, null];\n\nvar percentDifference = msg.payload.percentDifference\n\n// Abluft\nif (msg.payload.exhaustSpeed === \"unchanged\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"increased\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"reduced\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n}\n\n// Humidifier\nif (msg.payload.humidifier === \"unchanged\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"increased\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"reduced\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n}\n\n// Dehumidifier\nif (msg.payload.dehumidifier === \"unchanged\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"increased\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"reduced\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n}\n\n// HeaterFan\nif (msg.payload.heaterFan === \"unchanged\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"increased\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"reduced\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n}\n\n// CoolerFan\nif (msg.payload.coolerFan === \"unchanged\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"increased\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"reduced\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n}\n\n// LightIntensity\nif (msg.payload.lightIntensity === \"unchanged\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"increased\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"reduced\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n}\n\n// VentsALL\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"increased\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"reduced\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n}\n\n// VentsTopSpeed\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"increased\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"reduced\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n}\n\n// VentsDownSpeed\nif (msg.payload.ventsDownSpeed === \"unchanged\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"increased\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"reduced\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n}\n\n\n\nreturn outputs;\n","outputs":9,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":640,"y":2580,"wires":[["f8560efe9e6d04d8","150928e591bcc0f0"],["f8560efe9e6d04d8","bed86d46203bcde1"],["f8560efe9e6d04d8","18f1987e494bac59"],["f8560efe9e6d04d8","d7a32fcc4e76a35c"],["f8560efe9e6d04d8","f1661726d2ee693d"],["f8560efe9e6d04d8","34d7c43fb0924feb"],["f8560efe9e6d04d8","e237fd1275ec541b"],["e237fd1275ec541b"],["e237fd1275ec541b"]]},{"id":"f8560efe9e6d04d8","type":"debug","z":"6fcb82f207901f17","g":"66f48e845030b291","name":"debug 161","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":630,"y":2680,"wires":[]},{"id":"385a580f200748d1","type":"comment","z":"6fcb82f207901f17","g":"77ed46dd9885c3e3","name":"VPD-Perfektion","info":"","x":220,"y":1360,"wires":[]},{"id":"c0feeb1b4e55e176","type":"link in","z":"6fcb82f207901f17","g":"77ed46dd9885c3e3","name":"VPD-Perfektion","links":["ef7366de93afb4dd"],"x":65,"y":1400,"wires":[["fe85503bb6258f2c"]]},{"id":"f7beb6910d27753a","type":"function","z":"6fcb82f207901f17","g":"77ed46dd9885c3e3","name":"VPD State Values","func":"const plantStages = {\n    Germination: [0.42, 0.78], // Optimaler VPD-Bereich f√ºr Keimung bei 25-30¬∞C\n    Clones: [0.42, 0.78],      // Optimaler VPD-Bereich f√ºr Klone bei 25-30¬∞C\n    EarlyVeg: [0.55, 0.85],    // Optimaler VPD-Bereich f√ºr fr√ºhe Vegetation bei 20-25¬∞C\n    MidVeg: [0.85, 1.1],      // Optimaler VPD-Bereich f√ºr mittlere Vegetation bei 20-25¬∞C\n    LateVeg: [0.85, 1.2],     // Optimaler VPD-Bereich f√ºr sp√§te Vegetation bei 20-25¬∞C\n    EarlyFlower: [1, 1.25], // Optimaler VPD-Bereich f√ºr fr√ºhe Bl√ºte bei 20-25¬∞C\n    MidFlower: [1.1, 1.4],   // Optimaler VPD-Bereich f√ºr mittlere Bl√ºte bei 20-25¬∞C\n    LateFlower: [1.2, 1.6],  // Optimaler VPD-Bereich f√ºr sp√§te Bl√ºte bei 20-25¬∞C\n};\n\n\n// Beispiel, wie msg.payload gesetzt wird\n// msg.payload = \"LateVeg\"; // Kommentieren Sie diese Zeile aus, um den tats√§chlichen msg.payload zu verwenden\n\n// Pr√ºfen, ob das Wachstumsstadium im plantStages-Objekt vorhanden ist\nif (plantStages.hasOwnProperty(msg.payload)) {\n    // Setzen des VPD-Wertes aus dem plantStages-Objekt\n    msg.payload = plantStages[msg.payload];\n} else {\n    // Fehlermeldung, wenn das Wachstumsstadium nicht gefunden wurde\n    msg.payload = \"Unbekanntes Wachstumsstadium\";\n\n}\nmsg.perfektion = \"VPDStageValue\"\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":410,"y":1420,"wires":[["0d434c3ead4a2f55"]]},{"id":"fe85503bb6258f2c","type":"api-current-state","z":"6fcb82f207901f17","g":"77ed46dd9885c3e3","name":"FlowerTentSelection","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"select.groom","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"targetVPD","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":200,"y":1420,"wires":[["f7beb6910d27753a"]]},{"id":"6467fcdfcecd8bd8","type":"poll-state","z":"6fcb82f207901f17","g":"77ed46dd9885c3e3","name":"currentVPD","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","updateInterval":"30","updateIntervalType":"num","updateIntervalUnits":"seconds","outputInitially":true,"outputOnChanged":true,"entityId":"sensor.vpd_groom","stateType":"num","ifState":"","ifStateType":"num","ifStateOperator":"is","outputs":1,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"currentVPD","valueType":"str"},{"property":"perfektion","propertyType":"msg","value":"currentVPD","valueType":"str"}],"x":150,"y":1560,"wires":[["0d434c3ead4a2f55"]]},{"id":"0d434c3ead4a2f55","type":"join","z":"6fcb82f207901f17","g":"77ed46dd9885c3e3","name":"VPDWish","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":330,"y":1480,"wires":[["5748df124ca12244","2c80dac8d5bb42c1"]]},{"id":"5748df124ca12244","type":"function","z":"6fcb82f207901f17","g":"77ed46dd9885c3e3","name":"VPD Handler Array Value","func":"const tolerance = 0.00; // Toleranzwert f√ºr die VPD-Anpassung\n\n// Der aktuelle VPD-Wert wird aus dem Payload geholt und in eine Zahl umgewandelt.\nconst currentVPD = parseFloat(msg.payload.currentVPD);\n\n// Ziel-VPD-Bereich wird aus dem Payload geholt.\nconst targetVPDRange = msg.payload.targetVPD;\n\n// Logging der aktuellen VPD und Ziel-VPD-Bereich zur √úberpr√ºfung und Debugging.\nnode.warn(`GRoom-VPD array between: ${targetVPDRange[0]} and ${targetVPDRange[1]}`);\n\n// Berechnung der prozentualen Abweichung vom Ziel-VPD und Rundung auf ganze Zahlen\nconst percentDifference = Math.round(currentVPD < targetVPDRange[0]\n    ? ((currentVPD - targetVPDRange[0]) / targetVPDRange[0]) * 100\n    : ((currentVPD - targetVPDRange[1]) / targetVPDRange[1]) * 100);\n\n// Funktion zur Berechnung der notwendigen Anpassungen basierend auf der Differenz zum VPD-Zielbereich.\nfunction calculateAdjustment(currentVPD, targetVPDRange) {\n    // Wenn der aktuelle VPD unter dem minimalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu erh√∂hen.\n    if (currentVPD < targetVPDRange[0] - tolerance) {\n        node.warn(`GRoom-VPD:: ${currentVPD} zu gering. Erh√∂he Temp oder verringere die Feuchtigkeit`);\n        node.warn(`GRoom % VPD Target --> ${percentDifference} %`);\n        return {\n            exhaustSpeed: \"increased\",      // Erh√∂ht die Abluftgeschwindigkeit, um feuchte Luft herauszuziehen\n            humidifier: \"reduced\",          // Schaltet den Luftbefeuchter aus, um Feuchtigkeit zu reduzieren\n            dehumidifier: \"increased\",       // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            heaterFan: \"increased\",         // Schaltet den Beheizer an, um die Feuchtigkeit zu reduzieren und Temp zu erh√∂hen\n            coolerFan: \"reduced\",           // Schaltet den K√ºhler an, um die Feuchtigkeit zu erh√∂hen und Temp zu verringern\n            ventsALL: \"increased\",          // Erh√∂ht die Geschwindigkeit der oberen Bel√ºftung, um mehr trockene Luft einzulassen\n            ventsTopSpeed: \"increased\",     // Erh√∂ht die Geschwindigkeit der oberen Bel√ºftung, um mehr trockene Luft einzulassen\n            ventsDownSpeed: \"increased\",    // Erh√∂ht die Geschwindigkeit der unteren Bel√ºftung\n            lightIntensity: \"increased\"     // Erh√∂ht die Lichtintensit√§t, um die Temperatur zu steigern (wenn das die Temperatur beeinflusst)\n        };\n\n    }\n    // Wenn der aktuelle VPD √ºber dem maximalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu senken.\n    else if (currentVPD > targetVPDRange[1] + tolerance) {\n        node.warn(`GRoom-VPD: ${currentVPD} zu hoch. Verringere Temp oder erh√∂he die Feuchtigkeit`);\n        node.warn(`GRoom % VPD Target --> ${percentDifference} %`);\n        return {\n            exhaustSpeed: \"reduced\",    // Reduziert die Abluftgeschwindigkeit, h√§lt feuchte Luft im Raum\n            humidifier: \"increased\",    // Schaltet den Luftbefeuchter ein, um Feuchtigkeit zu erh√∂hen\n            dehumidifier: \"reduced\",    // Schaltet den Luftentfeuchter aus, um Feuchtigkeit zu erh√∂hen\n            heaterFan: \"reduced\",       // Schaltet den Heizer aus, um die Temperatur zu verringern\n            coolerFan: \"increased\",     // Schaltet den K√ºhler an, um die Temperatur zu verringern\n            ventsALL: \"reduced\",        // Reduziert die Geschwindigkeit der Bel√ºftung, um mehr feuchte Luft zu halten\n            ventsTopSpeed: \"reduced\",   // Reduziert die Geschwindigkeit der oberen Bel√ºftung\n            ventsDownSpeed: \"reduced\",  // Reduziert die Geschwindigkeit der unteren Bel√ºftung\n            lightIntensity: \"reduced\"   // Verringert die Lichtintensit√§t, um die Temperatur zu senken (wenn das die Temperatur beeinflusst)\n        };\n    }\n    // Wenn der VPD im Zielbereich liegt, sind keine Anpassungen erforderlich.\n    node.warn(`GRoom-VPD: ${currentVPD} im gew√ºnschten Bereich`);\n    return {\n        exhaustSpeed: \"unchanged\",\n        humidifier: \"unchanged\",\n        dehumidifier: \"unchanged\",\n        heaterFan: \"unchanged\",\n        coolerFan: \"unchanged\",\n        ventsALL: \"unchanged\",\n        ventsTopSpeed: \"unchanged\",\n        ventsDownSpeed: \"unchanged\",\n        lightIntensity: \"unchanged\"\n    };\n}\n\n// Entscheidungslogik zur Steuerung der Umgebungsbedingungen, nutzt die calculateAdjustment Funktion.\nconst adjustments = calculateAdjustment(currentVPD, targetVPDRange);\n\n// Berechnung der prozentualen Abweichung und Hinzuf√ºgen zum Payload\nmsg.payload = {\n    exhaustSpeed: adjustments.exhaustSpeed,\n    humidifier: adjustments.humidifier,\n    dehumidifier: adjustments.dehumidifier,\n    heaterFan: adjustments.heaterFan,\n    coolerFan: adjustments.coolerFan,\n    ventsALL: adjustments.ventsALL,\n    ventsTopSpeed: adjustments.ventsTopSpeed,\n    ventsDownSpeed: adjustments.ventsDownSpeed,\n    lightIntensity: adjustments.lightIntensity,\n    percentDifference: percentDifference\n};\n\nmsg.perfektion = \"VPDActions\";\n\n// R√ºckgabe des modifizierten Payloads f√ºr weitere Verwendung im Flow.\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":550,"y":1480,"wires":[["628540a4c50c93c7","2c80dac8d5bb42c1"]]},{"id":"628540a4c50c93c7","type":"function","z":"6fcb82f207901f17","g":"77ed46dd9885c3e3","name":"Check What Do","func":"let outputs = [null, null, null, null, null, null, null, null, null];\n\nvar percentDifference = msg.payload.percentDifference\n\n// Abluft\nif (msg.payload.exhaustSpeed === \"unchanged\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"increased\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"reduced\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n}\n\n// Humidifier\nif (msg.payload.humidifier === \"unchanged\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"increased\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"reduced\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n}\n\n// Dehumidifier\nif (msg.payload.dehumidifier === \"unchanged\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"increased\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"reduced\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n}\n\n// HeaterFan\nif (msg.payload.heaterFan === \"unchanged\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"increased\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"reduced\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n}\n\n// CoolerFan\nif (msg.payload.coolerFan === \"unchanged\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"increased\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"reduced\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n}\n\n// LightIntensity\nif (msg.payload.lightIntensity === \"unchanged\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"increased\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"reduced\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n}\n\n// VentsALL\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"increased\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"reduced\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n}\n\n// VentsTopSpeed\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"increased\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"reduced\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n}\n\n// VentsDownSpeed\nif (msg.payload.ventsDownSpeed === \"unchanged\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"increased\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"reduced\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n}\n\n\n\nreturn outputs;\n","outputs":9,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":560,"y":1580,"wires":[["2ad21d39d70523ac","150928e591bcc0f0"],["2ad21d39d70523ac","bed86d46203bcde1"],["2ad21d39d70523ac","18f1987e494bac59"],["2ad21d39d70523ac","d7a32fcc4e76a35c"],["2ad21d39d70523ac","f1661726d2ee693d"],["2ad21d39d70523ac","34d7c43fb0924feb"],["2ad21d39d70523ac","e237fd1275ec541b"],["e237fd1275ec541b"],["e237fd1275ec541b"]]},{"id":"2c80dac8d5bb42c1","type":"join","z":"6fcb82f207901f17","g":"6480c67a52477c56","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"perfektion","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"3","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":790,"y":1580,"wires":[["15ab5b6b591292fd","49eda6a013ddc8f3"]]},{"id":"2ad21d39d70523ac","type":"debug","z":"6fcb82f207901f17","g":"77ed46dd9885c3e3","name":"debug 162","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":570,"y":1680,"wires":[]},{"id":"15ab5b6b591292fd","type":"debug","z":"6fcb82f207901f17","g":"6480c67a52477c56","name":"debug 164","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":930,"y":1580,"wires":[]},{"id":"49eda6a013ddc8f3","type":"function","z":"6fcb82f207901f17","g":"6480c67a52477c56","name":"Make Perfekt VPD","func":"const tolerance = 0.025; // Toleranzwert f√ºr die VPD-Anpassung\n\n// Berechnet den durchschnittlichen Wert aus zwei Zahlen im Array VPDStageValue und begrenzt das Ergebnis auf zwei Dezimalstellen\nconst averageVPD = (msg.payload.VPDStageValue[0] + msg.payload.VPDStageValue[1]) / 2;\nconst perfectVPD = parseFloat(averageVPD.toFixed(3));\n\nconst currentVPD = parseFloat(msg.payload.currentVPD);\n\n// Build increase base of State % diffrence from Current VPD to avarangeVPD\n// Berechnung der prozentualen Abweichung vom Ziel-VPD\nconst percentDifference = ((currentVPD - perfectVPD) / perfectVPD) * 100;\n\n\n\n// IF not in Range Do Nothing\nif (currentVPD < msg.payload.VPDStageValue[0] || currentVPD > msg.payload.VPDStageValue[1]){\n    return\n}\n// Warnung √ºber die prozentuale Abweichung\nnode.warn(`Perfect-GRoom % : ${percentDifference.toFixed(2)}%`);\nnode.warn(`Perfect-GRoom-Current VPD: ${currentVPD}`);\nnode.warn(`Perfect-GRoom-Target-VPD: ${perfectVPD} with ${tolerance} Tolerance`);\n\n\n\n// Funktion zur Berechnung der notwendigen Anpassungen basierend auf der Differenz zum VPD-Zielbereich.\nfunction calculateAdjustment(currentVPD, perfectVPD) {\n    // Wenn der aktuelle VPD unter dem minimalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu erh√∂hen.\n    if (currentVPD < perfectVPD - tolerance) {\n        node.warn(`Perfect-GRoom-VPD:: ${currentVPD} zu Gering Erh√∂e Temp oder veringere die Feuchtikeit`);\n        return {\n            exhaustSpeed: \"increased\",      // Erh√∂ht die Abluftgeschwindigkeit, um feuchte Luft herauszuziehen\n            humidifier: \"reduced\",          // Schaltet den Luftbefeuchter aus, um Feuchtigkeit zu reduzieren\n            dehumidifier: \"increased\",       // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            heaterFan: \"increased\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Reduzieren und Temp zu erh√∂hen\n            coolerFan: \"reduced\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Erh√∂hen und Temp zu veringern\n            ventsTopSpeed: \"increased\",     // Erh√∂ht die Geschwindigkeit der oberen Bel√ºftung, um mehr trockene Luft einzulassen\n            ventsDownSpeed: \"increased\",    // Erh√∂ht die Geschwindigkeit der unteren Bel√ºftung\n            lightIntensity: \"increased\"     // Erh√∂ht die Lichtintensit√§t, um die Temperatur zu steigern (wenn das die Temperatur beeinflusst)\n        };\n        \n    }\n    // Wenn der aktuelle VPD √ºber dem maximalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu senken.\n    else if (currentVPD > perfectVPD + tolerance) {\n        node.warn(`Perfect-GRoom-VPD: ${currentVPD} zu hoch verringere Temp oder erh√∂e die Feuchtikeit`);\n        return {\n            exhaustSpeed: \"reduced\",    // Reduziert die Abluftgeschwindigkeit, h√§lt feuchte Luft im Raum\n            humidifier: \"increased\",           // Schaltet den Luftbefeuchter ein, um Feuchtigkeit zu erh√∂hen\n            dehumidifier: \"reduced\",       // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            heaterFan: \"reduced\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Reduzieren und Temp zu erh√∂hen\n            coolerFan: \"increased\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Erh√∂hen und Temp zu veringern\n            ventsTopSpeed: \"reduced\",   // Reduziert die Geschwindigkeit der oberen Bel√ºftung\n            ventsDownSpeed: \"reduced\",  // Reduziert die Geschwindigkeit der unteren Bel√ºftung\n            lightIntensity: \"reduced\"      // Verringert die Lichtintensit√§t, um die Temperatur zu senken (wenn das die Temperatur beeinflusst)\n        };\n    }\n    // Wenn der VPD im Zielbereich liegt, sind keine Anpassungen erforderlich.\n             node.warn(`Perfect-GRoom-VPD: ${currentVPD} im Gew√ºnschten Bereich`);\n    return {\n        exhaustSpeed: \"unchanged\",\n        humidifier: \"unchanged\",\n        dehumidifier: \"unchanged\",       // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n        heaterFan: \"unchanged\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Reduzieren und Temp zu erh√∂hen\n        coolerFan: \"unchanged\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Erh√∂hen und Temp zu veringern\n        ventsTopSpeed: \"unchanged\",\n        ventsDownSpeed: \"unchanged\",\n        lightIntensity: \"unchanged\"\n    };\n}\n\n// Entscheidungslogik zur Steuerung der Umgebungsbedingungen, nutzt die calculateAdjustment Funktion.\nconst adjustments = calculateAdjustment(currentVPD, perfectVPD);\nmsg.payload = {\n    exhaustSpeed: adjustments.exhaustSpeed,\n    humidifier: adjustments.humidifier,\n    dehumidifier: adjustments.dehumidifier,\n    heaterFan: adjustments.heaterFan,\n    coolerFan: adjustments.coolerFan,\n    ventsTopSpeed: adjustments.ventsTopSpeed,\n    ventsDownSpeed: adjustments.ventsDownSpeed,\n    lightIntensity: adjustments.lightIntensity,\n    percentDifference: percentDifference.toFixed(2)\n};\nmsg.perfektion = \"VPDActions\"\n\n// R√ºckgabe des modifizierten Payloads f√ºr weitere Verwendung im Flow.\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":870,"y":1540,"wires":[["5f068398b3328a95"]]},{"id":"5f068398b3328a95","type":"function","z":"6fcb82f207901f17","g":"6480c67a52477c56","name":"Check What Do","func":"let outputs = [null, null, null, null, null, null, null, null, null];\n\nvar percentDifference = msg.payload.percentDifference\n\n// Abluft\nif (msg.payload.exhaustSpeed === \"unchanged\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"increased\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"reduced\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n}\n\n// Humidifier\nif (msg.payload.humidifier === \"unchanged\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"increased\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"reduced\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n}\n\n// Dehumidifier\nif (msg.payload.dehumidifier === \"unchanged\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"increased\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"reduced\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n}\n\n// HeaterFan\nif (msg.payload.heaterFan === \"unchanged\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"increased\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"reduced\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n}\n\n// CoolerFan\nif (msg.payload.coolerFan === \"unchanged\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"increased\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"reduced\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n}\n\n// LightIntensity\nif (msg.payload.lightIntensity === \"unchanged\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"increased\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"reduced\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n}\n\n// VentsALL\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"increased\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"reduced\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n}\n\n// VentsTopSpeed\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"increased\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"reduced\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n}\n\n// VentsDownSpeed\nif (msg.payload.ventsDownSpeed === \"unchanged\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"increased\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"reduced\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n}\n\n\n\nreturn outputs;\n","outputs":9,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":880,"y":1420,"wires":[["150928e591bcc0f0"],["bed86d46203bcde1"],["18f1987e494bac59"],["d7a32fcc4e76a35c"],["f1661726d2ee693d"],["34d7c43fb0924feb"],["e237fd1275ec541b"],["e237fd1275ec541b"],["e237fd1275ec541b"]]},{"id":"2a09d643d26d92ef","type":"function","z":"6fcb82f207901f17","g":"91b3041d53614fc6","name":"Exhaust Setup","func":"// Hilfsfunktion zur √úberpr√ºfung, ob ein Wert numerisch ist\nconst isNumeric = (value) => {\n    return !isNaN(parseFloat(value)) && isFinite(value);\n};\n\n// Funktion zur Bestimmung des dutyCycle-Werts\nconst findDutyCycle = (exhaustArray) => {\n    if (exhaustArray.length === 0) {\n        return null; // Keine Werte zu verarbeiten, wenn das Array leer ist\n    }\n    for (let i = 0; i < exhaustArray.length; i++) {\n        if (isNumeric(exhaustArray[i].value)) {\n            return parseInt(exhaustArray[i].value, 10);\n        }\n    }\n    return null; // Falls kein numerischer Wert gefunden wurde\n};\n\nlet outputs = [null, null, null, null]; // Array f√ºr vier Ausg√§nge\n\n// Zustand der Abluft und Geschwindigkeit aus der Payload extrahieren\nconst exhaustSpeed = msg.payload.exhaustSet.value; // Anpassung hier\nlet exhaustState = 'off'; // Standardwert setzen, falls kein Zustand gefunden wird\nif (msg.payload.Exhaust && msg.payload.Exhaust.length > 0) {\n    const exhaustSwitch = msg.payload.Exhaust.find(e => e.entity_id && e.entity_id.toLowerCase().includes(\"switch\"));\n    if (exhaustSwitch && exhaustSwitch.value) {\n        exhaustState = exhaustSwitch.value;\n    }\n}\n\nconst dutyCycle = findDutyCycle(msg.payload.Exhaust);\n\n// Pr√ºfen, ob ein dutyCycle vorhanden ist\nif (dutyCycle === null) {\n    return outputs; // Kein dutyCycle gefunden, keine Aktion erforderlich\n}\n\nconst percentDifference = parseFloat(msg.payload.exhaustSet.percentDifference);\nlet newDutyCycle = dutyCycle;\n\n// Berechnung des neuen Duty Cycle basierend auf der prozentualen Abweichung\nif (percentDifference !== 0) {\n    if (percentDifference < 0) {\n        // Wenn der Wert negativ ist, erh√∂hen wir den Duty Cycle\n        newDutyCycle = dutyCycle + Math.abs(percentDifference);\n    } else {\n        // Wenn der Wert positiv ist, verringern wir den Duty Cycle\n        newDutyCycle = dutyCycle - percentDifference;\n    }\n\n    // Stellen Sie sicher, dass der neue Duty Cycle innerhalb der Grenzen liegt\n    newDutyCycle = Math.min(95, Math.max(10, Math.round(newDutyCycle)));\n}\n\n// Abluft starten auf dem ersten Ausgang, wenn sie aus ist und erh√∂ht werden muss\nif (exhaustSpeed === \"increased\" && exhaustState === \"off\") {\n    outputs[0] = { payload: \"Starte Abluft\", topic: \"Start\" };\n    return outputs;\n}\n\n// Abluft-Geschwindigkeit erh√∂hen, wenn sie bereits eingeschaltet ist\nif (exhaustSpeed === \"increased\" && exhaustState === \"on\") {\n    outputs[2] = { payload: newDutyCycle.toString(), topic: \"Increase\" };\n    return outputs;\n}\n\n// Abluft stoppen auf dem zweiten Ausgang, wenn die Geschwindigkeit reduziert wird und der Duty Cycle sehr niedrig ist\nif (exhaustSpeed === \"reduced\" && exhaustState === \"on\" && newDutyCycle <= 10) {\n    outputs[1] = { payload: \"Stoppe Abluft\", topic: \"Stop\" };\n    return outputs;\n} else if (exhaustSpeed === \"reduced\" && exhaustState === \"on\") {\n    outputs[2] = { payload: newDutyCycle.toString(), topic: \"Decrease\" };\n    return outputs;\n}\n\n// Warnung ausgeben, wenn versucht wird, die Abluftgeschwindigkeit zu reduzieren, obwohl sie bereits aus ist\nif (exhaustSpeed === \"reduced\" && exhaustState === \"off\") {\n    outputs[1] = { payload: \"Abluft bereits gestoppt, kann nicht weiter reduziert werden\", topic: \"AlreadyStopped\" };\n    return outputs;\n}\n\n// Nichts tun, wenn keine √Ñnderung erforderlich ist\nif (exhaustSpeed === \"unchanged\") {\n    outputs[3] = { payload: \"Abluft unver√§ndert, keine Aktion erforderlich\", topic: \"Nothing\" };\n    return outputs;\n}\n\nreturn outputs; // R√ºckgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1660,"y":1640,"wires":[["8bdcdb5a0269634f"],["8e5849366f8d0df3"],["923ea5a19b7306bb"],[]]},{"id":"9d05398df8ca3c2b","type":"http request","z":"6fcb82f207901f17","g":"91b3041d53614fc6","name":"DutyPostChange","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.235:5533/air/ctrl","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":2090,"y":1640,"wires":[[]]},{"id":"923ea5a19b7306bb","type":"function","z":"6fcb82f207901f17","g":"91b3041d53614fc6","name":"DutyChanger","func":"\nconst NewDuty = msg.payload\n\nmsg.payload = { \"newDuty\": NewDuty}\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1890,"y":1640,"wires":[["9d05398df8ca3c2b"]]},{"id":"150928e591bcc0f0","type":"join","z":"6fcb82f207901f17","g":"91b3041d53614fc6","name":"exhasutData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1420,"y":1660,"wires":[["2a09d643d26d92ef","1443fd263756f63a"]]},{"id":"9a660cd75e874e89","type":"link in","z":"6fcb82f207901f17","g":"91b3041d53614fc6","name":"Exhaust","links":["b3c99b56042ef1e4","25fbf2f05d2fa597"],"x":1375,"y":1600,"wires":[["150928e591bcc0f0"]]},{"id":"2ee57818f4452142","type":"function","z":"6fcb82f207901f17","g":"25f097b685bcf53c","name":"BefeuchterSetup","func":"let outputs = [null, null, null]; // Array f√ºr drei Ausg√§nge\n\nlet humidifierState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.humidifier.length; i++) {\n    if (msg.payload.humidifier[i].entity_id.includes('humidifier')) {\n        humidifierState = msg.payload.humidifier[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.humidifierSet.value === \"increased\" && humidifierState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.humidifierSet.value === \"reduced\" && humidifierState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun oder ausschalten bei unver√§ndertem Zustand\nif (msg.payload.humidifierSet.value === \"unchanged\") {\n    if (humidifierState === \"on\") {\n        // Wenn der Befeuchter im Zelt an ist und kein Wechsel angefordert wird, sende \"off\"\n        outputs[0] = { payload: \"off\", topic: \"Humidifier\" };\n    } else {\n        // Wenn der Befeuchter bereits aus ist oder nicht ge√§ndert werden soll\n        outputs[1] = { payload: \"Humidifier already stopped, nothing to do! Waiting for changes.\", topic: \"Humidifier\" };\n    }\n}\n\n// Nichts tun (detaillierte Information)\nif (msg.payload.humidifierSet.value === \"unchanged\" && humidifierState !== \"on\" && humidifierState !== \"off\") {\n    outputs[2] = { payload: \"Befeuchter unver√§ndert, keine Aktion erforderlich\", data: msg.payload, topic: \"Nothing\" };\n}\n\nreturn outputs; // R√ºckgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1650,"y":1800,"wires":[["2ea63399a8be550f"],["f39174c43ccbbd26"],["e7a7450bdc84a9e5","f39174c43ccbbd26"],[]]},{"id":"bed86d46203bcde1","type":"join","z":"6fcb82f207901f17","g":"25f097b685bcf53c","name":"HumidityData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1420,"y":1800,"wires":[["2ee57818f4452142"]]},{"id":"c43c9851ea70d3a8","type":"link in","z":"6fcb82f207901f17","g":"25f097b685bcf53c","name":"Humidifier","links":["0bafe7358617460c","2a1226b0ec4c5cf6"],"x":1355,"y":1760,"wires":[["bed86d46203bcde1"]]},{"id":"1443fd263756f63a","type":"debug","z":"6fcb82f207901f17","g":"91b3041d53614fc6","name":"debug 168","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1530,"y":1600,"wires":[]},{"id":"aadc89a6315a9ee1","type":"link in","z":"6fcb82f207901f17","name":"GrowRoomCtrl","links":["1e4a05271ed20108"],"x":45,"y":80,"wires":[["b730f4ea8dde30c9","2ccfc4f97560b8c3"]]},{"id":"b730f4ea8dde30c9","type":"debug","z":"6fcb82f207901f17","name":"GrowRoomLiveData","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":180,"y":80,"wires":[]},{"id":"2ccfc4f97560b8c3","type":"function","z":"6fcb82f207901f17","name":"Sort Sensor Types","func":"let data = msg.payload;\n\n// Arrays f√ºr verschiedene Sensortypen initialisieren\nlet wish = [];\nlet temperatures = [];\nlet humidity = [];\nlet dewpoints = [];\nlet moisture = [];\nlet pressures = [];\nlet battery = [];\nlet power = [];\nlet co2 = [];\nlet lumen = [];\nlet conductivity = [];\nlet switches = [];\nlet dutyCycleExhaust = [];\nlet vents = [];\nlet humidifier = [];\nlet dehumidifier = [];\nlet root = [];\n\n// Durchlaufe alle Schl√ºssel im data-Objekt und sortiere sie nach bestimmten Sensortypen\nfor (let key in data) {\n    if (data.hasOwnProperty(key)) {\n        let entity_id = key.toLowerCase();\n        let entity = { entity_id: key, value: data[key] };\n\n        // Prioritize to ensure it is captured first\n        if (entity_id.includes('wish') || entity_id.includes('avg') || entity_id.includes('target')) {\n            wish.push(entity);\n        } else if (entity_id.includes('root') || entity_id.includes('wurzel') || entity_id.includes('water')) {\n            root.push(entity);\n        }\n        // ENVIORMENT\n        else if (entity_id.includes('temperature') || entity_id.includes('temp')) {\n            temperatures.push(entity);\n        } else if (entity_id.includes('humidity') || entity_id.includes('feuchtigkeit') || entity_id.includes('rh')) {\n            humidity.push(entity);\n        } else if (entity_id.includes('dewpoint') || entity_id.includes('dew')) {\n            dewpoints.push(entity);\n        } else if (entity_id.includes('moisture') || entity_id.includes('mois')) {\n            moisture.push(entity);\n        } else if (entity_id.includes('pressure') || entity_id.includes('press')) {\n            pressures.push(entity);\n        } else if (entity_id.includes('carbondioxide') || entity_id.includes('co2') || entity_id.includes('carbon')) {\n            co2.push(entity);\n        } else if (entity_id.includes('conductivity')) {\n            conductivity.push(entity);\n        } else if (entity_id.includes('illuminance') || entity_id.includes('light') || entity_id.includes('licht')) {\n            lumen.push(entity);\n        }\n        // Devices\n        else if (entity_id.includes('humidifier') || entity_id.includes('befeuchter')) {\n            humidifier.push(entity);\n        } else if (entity_id.includes('dehumidifier') || entity_id.includes('entfeuchter')) {\n            dehumidifier.push(entity);\n        } else if (entity_id.includes('ruckec') || entity_id.includes('airctr') || entity_id.includes('exhaust') || entity_id.includes('abluft')) {\n            dutyCycleExhaust.push(entity);\n        } else if (entity_id.includes('vent')) {\n            vents.push(entity);\n        } else if (entity_id.includes('switch')) {\n            switches.push(entity);\n        } else if (entity_id.includes('power') || entity_id.includes('energy')) {\n            power.push(entity);\n        }\n\n        // ADDONS\n        else if (entity_id.includes('battery') || entity_id.includes('batt')) {\n            battery.push(entity);\n        }\n    }\n}\n\n// Nachrichtenausgabe auf verschiedenen Outputs\nreturn [\n    // ENVIORMENT\n    { payload: wish, topic: 'Wish' },\n    { payload: temperatures, topic: 'temperature' },\n    { payload: humidity, topic: 'humidity' },\n    { payload: dewpoints, topic: 'dewpoint' },\n    { payload: moisture, topic: 'moisture' },\n    { payload: root, topic: 'roottemp' },\n    { payload: conductivity, topic: 'conductivity' },\n    { payload: pressures, topic: 'pressure' },\n    { payload: co2, topic: 'carbon_dioxide' },\n    { payload: lumen, topic: 'illuminance' },\n    // DEVICEINFO\n    { payload: battery, topic: 'battery' },\n    { payload: power, topic: 'power' },\n    // DEVICES\n    { payload: switches, topic: 'switch' },\n    { payload: vents, topic: 'Vents' },\n    { payload: dutyCycleExhaust, topic: 'Exhaust' },\n    { payload: humidifier, topic: 'humidifier' },\n    { payload: dehumidifier, topic: 'dehumidifier' }\n\n\n];\n","outputs":17,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":170,"y":240,"wires":[["f6a5742628a9989a"],["c75f44bec1790cd8","ce2e18cc131bf59c"],["c75f44bec1790cd8","f02c2bfe1ed03831"],["c6a1db0e41275972"],["7d52ae70ce7888dd"],["b5f79c75d71e4dcf"],["72959bd8815caca1"],["d6e6ba622cf9670e"],["c238ed6e52394ded"],["79b4d6d474534ec2"],["1ebd4f93fee4b36a"],["ba42a92d2beb8531"],["30a21cb64d63c568"],["eec02b873fa99b46"],["eae653d39366095c"],["919fb8b87429c144"],["d96c8c880ff4d858"]]},{"id":"c75f44bec1790cd8","type":"join","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"VpdNeeds","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":700,"y":100,"wires":[["c0967c0c3b535687"]]},{"id":"abc9f2566d50ac85","type":"link out","z":"6fcb82f207901f17","g":"b408097abebd8fdb","name":"CropSteering","mode":"link","links":[],"x":1885,"y":240,"wires":[]},{"id":"757409ea9e951339","type":"debug","z":"6fcb82f207901f17","name":"Temperatures","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":480,"y":160,"wires":[]},{"id":"1a1e45a71b607074","type":"debug","z":"6fcb82f207901f17","name":"Humidity","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":460,"y":200,"wires":[]},{"id":"e5c222da83284c73","type":"debug","z":"6fcb82f207901f17","name":"Dewpoints","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":240,"wires":[]},{"id":"5a1c8f2a6c550715","type":"debug","z":"6fcb82f207901f17","name":"Pressures","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":460,"y":400,"wires":[]},{"id":"8ceaf85afe3bc0c0","type":"debug","z":"6fcb82f207901f17","name":"Battery","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":460,"y":540,"wires":[]},{"id":"bab83811a8461d76","type":"debug","z":"6fcb82f207901f17","name":"Power","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":450,"y":580,"wires":[]},{"id":"47c6341b7602ee1d","type":"debug","z":"6fcb82f207901f17","name":"CO2","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":450,"y":440,"wires":[]},{"id":"8306adac1e726634","type":"debug","z":"6fcb82f207901f17","name":"Light","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":480,"wires":[]},{"id":"62313aa383826fbe","type":"debug","z":"6fcb82f207901f17","name":"Switches","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":460,"y":640,"wires":[]},{"id":"32d7f9519ea64e83","type":"debug","z":"6fcb82f207901f17","name":"Conductivity","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":360,"wires":[]},{"id":"587f23aa46258134","type":"debug","z":"6fcb82f207901f17","name":"Moisture","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":460,"y":280,"wires":[]},{"id":"237a41d224fa2e28","type":"debug","z":"6fcb82f207901f17","name":"Exhasut","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":460,"y":720,"wires":[]},{"id":"117979424702b92e","type":"debug","z":"6fcb82f207901f17","name":"WISH","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":120,"wires":[]},{"id":"7c5ab19c36b42966","type":"debug","z":"6fcb82f207901f17","name":"Humidifier","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":760,"wires":[]},{"id":"25fbf2f05d2fa597","type":"link out","z":"6fcb82f207901f17","name":"Exhasut","mode":"link","links":["9a660cd75e874e89","9d47a7cd6a85d49f","9ea5133c151eda7d","d06bdab5f5c1656c"],"x":585,"y":720,"wires":[]},{"id":"2a1226b0ec4c5cf6","type":"link out","z":"6fcb82f207901f17","name":"Humidifier","mode":"link","links":["5c2ff47614252131","c22c6b1a71d16fde","c43c9851ea70d3a8","d5891ca72e417675"],"x":585,"y":760,"wires":[]},{"id":"110e9aef265dc948","type":"debug","z":"6fcb82f207901f17","name":"Vents","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":680,"wires":[]},{"id":"4c41e9c25c63cbb8","type":"debug","z":"6fcb82f207901f17","name":"RootTemp","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":320,"wires":[]},{"id":"f16efe7fe70d8549","type":"debug","z":"6fcb82f207901f17","name":"Dehumidifier","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":800,"wires":[]},{"id":"cd544d1577c3244e","type":"link out","z":"6fcb82f207901f17","name":"Dehumidifier","mode":"link","links":[],"x":585,"y":800,"wires":[]},{"id":"1e593888d3f50a3f","type":"link out","z":"6fcb82f207901f17","name":"Vents","mode":"link","links":[],"x":585,"y":680,"wires":[]},{"id":"18f1987e494bac59","type":"join","z":"6fcb82f207901f17","g":"c8e5b8e12207b789","name":"DehumidifierData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1430,"y":1960,"wires":[["3f887ab7da5b528c"]]},{"id":"cffdc6d9b0fcc5dd","type":"link in","z":"6fcb82f207901f17","g":"c8e5b8e12207b789","name":"Dehumidifier","links":[],"x":1355,"y":1920,"wires":[["18f1987e494bac59"]]},{"id":"3f887ab7da5b528c","type":"function","z":"6fcb82f207901f17","g":"c8e5b8e12207b789","name":"DehumidifierSetup","func":"let outputs = [null, null]; // Array f√ºr zwei Ausg√§nge\n\nlet dehumidifierState = null;\n\n// Schleife, um den Zustand des Dehumidifier zu finden\nfor (let i = 0; i < msg.payload.dehumidifier.length; i++) {\n    if (msg.payload.dehumidifier[i].entity_id.includes('dehumidifier')) {\n        dehumidifierState = msg.payload.dehumidifier[i].value;\n        break;\n    }\n}\n\n// Dehumidifier starten\nif (msg.payload.dehumidifierSet.value === \"increased\" && dehumidifierState === \"off\") {\n    outputs[0] = { payload: \"Starte Dehumidifier\", topic: \"Start\" };\n}\n\n// Dehumidifier stoppen\nif (msg.payload.dehumidifierSet.value === \"reduced\" && dehumidifierState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Dehumidifier\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.dehumidifierSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Dehumidifier unver√§ndert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // R√ºckgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1630,"y":1960,"wires":[["3a124366984cc1e9"],["837607e3f49e7f42"],["5ccae930ffc7cf55"],[]]},{"id":"d7a32fcc4e76a35c","type":"join","z":"6fcb82f207901f17","g":"3ef055f6ecae0521","name":"HeaterData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1430,"y":2100,"wires":[["cfbb482d671717ad"]]},{"id":"db172a7181b00153","type":"link in","z":"6fcb82f207901f17","g":"3ef055f6ecae0521","name":"link in 33","links":[],"x":1365,"y":2060,"wires":[["d7a32fcc4e76a35c"]]},{"id":"cfbb482d671717ad","type":"function","z":"6fcb82f207901f17","g":"3ef055f6ecae0521","name":"HeaterSetup","func":"let outputs = [null, null]; // Array f√ºr zwei Ausg√§nge\n\nlet heaterState = null;\n\n// Schleife, um den Zustand des Heater zu finden\nfor (let i = 0; i < msg.payload.heater.length; i++) {\n    if (msg.payload.heater[i].entity_id.includes('heater')) {\n        heaterState = msg.payload.heater[i].value;\n        break;\n    }\n}\n\n// Heater starten\nif (msg.payload.heaterSet.value === \"increased\" && heaterState === \"off\") {\n    outputs[0] = { payload: \"Start Heater\", topic: \"Start\" };\n}\n\n// Heater stoppen\nif (msg.payload.heaterSet.value === \"reduced\" && heaterState === \"on\") {\n    outputs[1] = { payload: \"Stop Heater\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.heaterSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Heater unver√§ndert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // R√ºckgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1630,"y":2100,"wires":[["abe4483090f685a3"],["5c5959aa60778b19"],["4e44711d10e0844c"],[]]},{"id":"f1661726d2ee693d","type":"join","z":"6fcb82f207901f17","g":"c57a003c2d509dd1","name":"CoolerData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1430,"y":2240,"wires":[["6787011be821c1cc"]]},{"id":"3422ccbf68aa8c0e","type":"link in","z":"6fcb82f207901f17","g":"c57a003c2d509dd1","name":"link in 34","links":[],"x":1365,"y":2200,"wires":[["f1661726d2ee693d"]]},{"id":"6787011be821c1cc","type":"function","z":"6fcb82f207901f17","g":"c57a003c2d509dd1","name":"CoolerSetup","func":"let outputs = [null, null]; // Array f√ºr zwei Ausg√§nge\n\nlet coolerState = null;\n\n// Schleife, um den Zustand des Cooler zu finden\nfor (let i = 0; i < msg.payload.cooler.length; i++) {\n    if (msg.payload.cooler[i].entity_id.includes('cooler')) {\n        coolerState = msg.payload.cooler[i].value;\n        break;\n    }\n}\n\n// Cooler starten\nif (msg.payload.coolerSet.value === \"increased\" && coolerState === \"off\") {\n    outputs[0] = { payload: \"Start Cooler\", topic: \"Start\" };\n}\n\n// Cooler stoppen\nif (msg.payload.coolerSet.value === \"reduced\" && coolerState === \"on\") {\n    outputs[1] = { payload: \"Stop Cooler\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.coolerSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Cooler unver√§ndert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // R√ºckgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1630,"y":2240,"wires":[["7e14b98351bfd86f"],["ed72a75f5413aabc"],["a6032c075c07a121"],[]]},{"id":"34d7c43fb0924feb","type":"join","z":"6fcb82f207901f17","g":"e0e84d9c3c29ed74","name":"LightData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1430,"y":2400,"wires":[["4564bb51d83a0b4f"]]},{"id":"58ad27edfca23a83","type":"link in","z":"6fcb82f207901f17","g":"e0e84d9c3c29ed74","name":"link in 35","links":[],"x":1365,"y":2360,"wires":[["34d7c43fb0924feb"]]},{"id":"4564bb51d83a0b4f","type":"function","z":"6fcb82f207901f17","g":"e0e84d9c3c29ed74","name":"LightSetup","func":"let outputs = [null, null]; // Array f√ºr zwei Ausg√§nge\n\nlet lightState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.light.length; i++) {\n    if (msg.payload.light[i].entity_id.includes('light')) {\n        lightState = msg.payload.light[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.lightSet.value === \"increased\" && lightState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.lightSet.value === \"reduced\" && lightState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.lightSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Befeuchter unver√§ndert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // R√ºckgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1630,"y":2400,"wires":[["54edc441e8a59d26"],["5177cd6f9c7f7ec3"],["b7c7a89318f8d310"],[]]},{"id":"e237fd1275ec541b","type":"join","z":"6fcb82f207901f17","g":"f3e1b95b0574fe9e","name":"VentsData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"4","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"num","reduceFixup":"","x":1430,"y":2560,"wires":[["00c51e4c238f37ae"]]},{"id":"c1ab128a5a405f74","type":"link in","z":"6fcb82f207901f17","g":"f3e1b95b0574fe9e","name":"link in 36","links":[],"x":1375,"y":2520,"wires":[["e237fd1275ec541b"]]},{"id":"00c51e4c238f37ae","type":"function","z":"6fcb82f207901f17","g":"f3e1b95b0574fe9e","name":"VentsSetup","func":"let outputs = [null, null]; // Array f√ºr zwei Ausg√§nge\n\nlet ventsState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.vents.length; i++) {\n    if (msg.payload.vents[i].entity_id.includes('vents')) {\n        ventsState = msg.payload.vents[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.ventsSet.value === \"increased\" && ventsState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.ventsSet.value === \"reduced\" && ventsState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.ventsSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Befeuchter unver√§ndert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // R√ºckgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1630,"y":2560,"wires":[["670ee9939bd6c892"],["3172c0b6cecfca61"],["3e2f50f564baa5f7"],[]]},{"id":"3a124366984cc1e9","type":"link out","z":"6fcb82f207901f17","g":"c8e5b8e12207b789","name":"DeHumidifierON","mode":"link","links":["e3a080b4cdaee4de"],"x":1805,"y":1940,"wires":[]},{"id":"837607e3f49e7f42","type":"link out","z":"6fcb82f207901f17","g":"c8e5b8e12207b789","name":"DeHumidifierOFF","mode":"link","links":["7f36b1429ae00752"],"x":1855,"y":1960,"wires":[]},{"id":"5ccae930ffc7cf55","type":"link out","z":"6fcb82f207901f17","g":"c8e5b8e12207b789","name":"link out 99","mode":"link","links":[],"x":1905,"y":1980,"wires":[]},{"id":"abe4483090f685a3","type":"link out","z":"6fcb82f207901f17","g":"3ef055f6ecae0521","name":"HeaterON","mode":"link","links":["1a1641f67f5d27d7","ee62c9e1c3bcd0be"],"x":1785,"y":2080,"wires":[]},{"id":"5c5959aa60778b19","type":"link out","z":"6fcb82f207901f17","g":"3ef055f6ecae0521","name":"HeaterOff","mode":"link","links":["e503b9867d412849"],"x":1845,"y":2100,"wires":[]},{"id":"4e44711d10e0844c","type":"link out","z":"6fcb82f207901f17","g":"3ef055f6ecae0521","name":"link out 102","mode":"link","links":[],"x":1895,"y":2120,"wires":[]},{"id":"7e14b98351bfd86f","type":"link out","z":"6fcb82f207901f17","g":"c57a003c2d509dd1","name":"CoolerON","mode":"link","links":["ee62c9e1c3bcd0be"],"x":1795,"y":2220,"wires":[]},{"id":"ed72a75f5413aabc","type":"link out","z":"6fcb82f207901f17","g":"c57a003c2d509dd1","name":"CoolerOFF","mode":"link","links":["cbc90b10bdb86123"],"x":1855,"y":2240,"wires":[]},{"id":"a6032c075c07a121","type":"link out","z":"6fcb82f207901f17","g":"c57a003c2d509dd1","name":"link out 105","mode":"link","links":[],"x":1905,"y":2260,"wires":[]},{"id":"54edc441e8a59d26","type":"link out","z":"6fcb82f207901f17","g":"e0e84d9c3c29ed74","name":"link out 106","mode":"link","links":[],"x":1765,"y":2380,"wires":[]},{"id":"5177cd6f9c7f7ec3","type":"link out","z":"6fcb82f207901f17","g":"e0e84d9c3c29ed74","name":"link out 107","mode":"link","links":[],"x":1825,"y":2400,"wires":[]},{"id":"b7c7a89318f8d310","type":"link out","z":"6fcb82f207901f17","g":"e0e84d9c3c29ed74","name":"link out 108","mode":"link","links":[],"x":1885,"y":2420,"wires":[]},{"id":"670ee9939bd6c892","type":"link out","z":"6fcb82f207901f17","g":"f3e1b95b0574fe9e","name":"link out 109","mode":"link","links":[],"x":1775,"y":2540,"wires":[]},{"id":"3172c0b6cecfca61","type":"link out","z":"6fcb82f207901f17","g":"f3e1b95b0574fe9e","name":"link out 110","mode":"link","links":[],"x":1815,"y":2560,"wires":[]},{"id":"3e2f50f564baa5f7","type":"link out","z":"6fcb82f207901f17","g":"f3e1b95b0574fe9e","name":"link out 111","mode":"link","links":[],"x":1875,"y":2580,"wires":[]},{"id":"2ea63399a8be550f","type":"link out","z":"6fcb82f207901f17","g":"25f097b685bcf53c","name":"HumidifierON","mode":"link","links":["bfd9574c91044df2"],"x":1785,"y":1760,"wires":[]},{"id":"f39174c43ccbbd26","type":"link out","z":"6fcb82f207901f17","g":"25f097b685bcf53c","name":"HumidifierOFF","mode":"link","links":["a71f5850b9a80e2b"],"x":1835,"y":1780,"wires":[]},{"id":"e7a7450bdc84a9e5","type":"link out","z":"6fcb82f207901f17","g":"25f097b685bcf53c","name":"link out 114","mode":"link","links":[],"x":1885,"y":1800,"wires":[]},{"id":"8bdcdb5a0269634f","type":"link out","z":"6fcb82f207901f17","g":"91b3041d53614fc6","name":"ExhaustON","mode":"link","links":["ec02765ca8fe00ab"],"x":1855,"y":1560,"wires":[]},{"id":"8e5849366f8d0df3","type":"link out","z":"6fcb82f207901f17","g":"91b3041d53614fc6","name":"ExhaustOFF","mode":"link","links":["7e7e0dc9a3625abd"],"x":1905,"y":1580,"wires":[]},{"id":"03e79c43e58ead4a","type":"ha-sensor","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"GRoomCO2","entityConfig":"a3d33c4f483491da","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1010,"y":620,"wires":[[]]},{"id":"1712036e5017a238","type":"function","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"CO2-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Finden des Objekts, das eine der gew√ºnschten Teilzeichenfolgen im entity_id enth√§lt\nconst co2Object = sensors.find(sensor => \n    sensor.entity_id.includes(\"carbon\") || \n    sensor.entity_id.includes(\"carbondioxide\")\n);\n\n// Extrahieren des Wertes, wenn das Objekt gefunden wurde, sonst null setzen\nconst co2Value = co2Object ? co2Object.value : null;\n\n// Ausgabe des CO2-Wertes zur √úberpr√ºfung\n// node.warn(`CO2-Wert: ${co2Value}`);\n\n// Optional: Speichern des CO2-Wertes in msg.co2Value oder einem anderen Feld zur weiteren Verwendung\nmsg.payload = co2Value;\n\n// R√ºckgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":720,"y":620,"wires":[["03e79c43e58ead4a"]]},{"id":"043f3911673a92bf","type":"function","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"Pressure-Get","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Luftdruck-Wertes\nfunction findPressureValue(sensors) {\n    const pressureObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"pressure\") ||\n        sensor.entity_id.includes(\"barometer\") ||\n        sensor.entity_id.includes(\"luftdruck\")\n    );\n    return pressureObject ? pressureObject.value : null;\n}\n\n// Finden des Luftdruck-Wertes\nconst pressureValue = findPressureValue(sensors);\n\n// Ausgabe des Luftdruck-Wertes zur √úberpr√ºfung\n// node.warn(`Luftdruck-Wert: ${pressureValue}`);\n\n// Optional: Speichern des Luftdruck-Wertes in msg zur weiteren Verwendung\nmsg.payload = pressureValue;\n\n// R√ºckgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":730,"y":560,"wires":[["6416a4823197d26c"]]},{"id":"20d35bed4d2e3567","type":"function","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"Moisture-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Moisture-Wertes\nfunction findMoistureValue(sensors) {\n    const moistureObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"moisture\") ||\n        sensor.entity_id.includes(\"humidity\") ||\n        sensor.entity_id.includes(\"wetness\")\n    );\n    return moistureObject ? moistureObject.value : null;\n}\n\n// Finden des Moisture-Wertes\nconst moistureValue = findMoistureValue(sensors);\n\n// Ausgabe des Moisture-Wertes zur √úberpr√ºfung\n// node.warn(`Moisture-Wert: ${moistureValue}`);\n\n// Optional: Speichern des Moisture-Wertes in msg zur weiteren Verwendung\nmsg.payload = moistureValue;\n\n// R√ºckgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":740,"y":380,"wires":[["6108be97d6a6c39b"]]},{"id":"9c3e310d274fac45","type":"function","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"SOIL-EC-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des EC- oder Conductivity-Wertes\nfunction findECValue(sensors) {\n    const ecObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"ec\") ||\n        sensor.entity_id.includes(\"conductivity\")\n    );\n    return ecObject ? ecObject.value : null;\n}\n\n// Finden des EC- oder Conductivity-Wertes\nconst ecValue = findECValue(sensors);\n\n// Ausgabe des EC- oder Conductivity-Wertes zur √úberpr√ºfung\n// node.warn(`EC-Wert: ${ecValue}`);\n\n// Optional: Speichern des EC- oder Conductivity-Wertes in msg zur weiteren Verwendung\nmsg.payload = ecValue;\n\n// R√ºckgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":740,"y":500,"wires":[["18722d8be97cb3ab"]]},{"id":"a847784b825367cf","type":"function","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"PowerConsum-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Stromverbrauch-Wertes\nfunction findPowerConsumptionValue(sensors) {\n    const powerConsumptionObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"energy_power\") || \n        sensor.entity_id.includes(\"consumption\") || \n        sensor.entity_id.includes(\"watt\") || \n        sensor.entity_id.includes(\"electricity\")\n    );\n    return powerConsumptionObject ? powerConsumptionObject.value : null;\n}\n\n// Finden des Stromverbrauch-Wertes\nconst powerConsumptionValue = findPowerConsumptionValue(sensors);\n\n// Ausgabe des Stromverbrauch-Wertes zur √úberpr√ºfung\n// node.warn(`Stromverbrauch-Wert: ${powerConsumptionValue}`);\n\n// Optional: Speichern des Stromverbrauch-Wertes in msg zur weiteren Verwendung\nmsg.payload = powerConsumptionValue;\n\n// R√ºckgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":760,"y":800,"wires":[["e5d701464c11f1fb"]]},{"id":"efde13ce254c6d36","type":"function","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"Battery-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Batterie-Wertes\nfunction findBatteryValue(sensors) {\n    const batteryObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"battery\") || \n        sensor.entity_id.includes(\"batt\")\n    );\n    return batteryObject ? batteryObject.value : null;\n}\n\n// Finden des Batterie-Wertes\nconst batteryValue = findBatteryValue(sensors);\n\n// Ausgabe des Batterie-Wertes zur √úberpr√ºfung\n// node.warn(`Batterie-Wert: ${batteryValue}`);\n\n// Optional: Speichern des Batterie-Wertes in msg zur weiteren Verwendung\nmsg.payload = batteryValue;\n\n// R√ºckgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":730,"y":740,"wires":[["f0450d663833fbd8"]]},{"id":"586d29f48805f54d","type":"function","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"Root-Temp-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Root-Temperature-Wertes\nfunction findRootTempValue(sensors) {\n    const rootTempObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"root_temp\") || \n        sensor.entity_id.includes(\"roottemperature\") || \n        sensor.entity_id.includes(\"soiltemp\") || \n        sensor.entity_id.includes(\"root_temp\")\n    );\n    return rootTempObject ? rootTempObject.value : null;\n}\n\n// Finden des Root-Temperature-Wertes\nconst rootTempValue = findRootTempValue(sensors);\n\n// Ausgabe des Root-Temperature-Wertes zur √úberpr√ºfung\n// node.warn(`Root-Temperature-Wert: ${rootTempValue}`);\n\n// Optional: Speichern des Root-Temperature-Wertes in msg zur weiteren Verwendung\nmsg.payload = rootTempValue;\n\n// R√ºckgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":740,"y":440,"wires":[["e95922d0b87ed5c3"]]},{"id":"12e8a131245940fe","type":"function","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"Exhaust-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Abluft-Zustands\nfunction findExhaustState(sensors) {\n    const exhaustStateObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"exhaust\") ||\n        sensor.entity_id.includes(\"abluft\") ||\n        sensor.entity_id.includes(\"ventilation\") ||\n        sensor.entity_id.includes(\"fan\")\n    );\n    return exhaustStateObject ? exhaustStateObject.value : null;\n}\n\n// Funktion zum Finden des Dutycycle-Wertes\nfunction findDutyCycleValue(sensors) {\n    const dutyCycleObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"airctr\") ||\n        sensor.entity_id.includes(\"dutycycle\") ||\n        sensor.entity_id.includes(\"cycle\")\n    );\n    return dutyCycleObject ? dutyCycleObject.value : null;\n}\n\n// Finden des Abluft-Zustands\nconst exhaustState = findExhaustState(sensors);\n\n// Finden des Dutycycle-Wertes\nconst dutyCycleValue = findDutyCycleValue(sensors);\n\n// Ausgabe der Werte zur √úberpr√ºfung\n// node.warn(`Abluft-Zustand: ${exhaustState}`);\n// node.warn(`Dutycycle-Wert: ${dutyCycleValue}`);\n\n// Setzen der Outputs\nlet outputs = [\n    { payload: exhaustState }, // Output 1: Zustand (on/off)\n    { payload: dutyCycleValue } // Output 2: Dutycycle\n];\n\n// R√ºckgabe der msg zur Weiterverarbeitung im Flow\nreturn outputs;\n","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":730,"y":980,"wires":[[],["ccaf01950781e533"]]},{"id":"467b462d456f1df0","type":"function","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"Humidifier-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Humidifier-Wertes\nfunction findHumidifierValue(sensors) {\n    const humidifierObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"humidifier\") || \n        sensor.entity_id.includes(\"humidity\")\n    );\n    return humidifierObject ? humidifierObject.value : null;\n}\n\n// Finden des Humidifier-Wertes\nconst humidifierValue = findHumidifierValue(sensors);\n\n// Ausgabe des Humidifier-Wertes zur √úberpr√ºfung\n// node.warn(`Humidifier-Wert: ${humidifierValue}`);\n\n// Optional: Speichern des Humidifier-Wertes in msg zur weiteren Verwendung\nmsg.payload = humidifierValue;\n\n// R√ºckgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":740,"y":1040,"wires":[[]]},{"id":"6416a4823197d26c","type":"ha-sensor","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"GRoomPressure","entityConfig":"8aebeb6e0a8c4c05","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1020,"y":560,"wires":[[]]},{"id":"6108be97d6a6c39b","type":"ha-sensor","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"GRoomMoisture","entityConfig":"781aa28fe2f9c4b6","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1020,"y":380,"wires":[[]]},{"id":"f0450d663833fbd8","type":"ha-sensor","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"FlowerBatterieDevices","entityConfig":"ee906929f0b219b9","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1040,"y":740,"wires":[[]]},{"id":"e95922d0b87ed5c3","type":"ha-sensor","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"GRoomRootTemp","entityConfig":"5f006050c54ac593","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1030,"y":440,"wires":[[]]},{"id":"18722d8be97cb3ab","type":"ha-sensor","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"GRoomEC","entityConfig":"1a18d0147c3114d1","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1010,"y":500,"wires":[[]]},{"id":"9047fd449bb3fc5c","type":"function","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"LightIntense_GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Licht-Wertes (Lumen oder Lux)\nfunction findLightValue(sensors) {\n    const lightObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"lumen\") || \n        sensor.entity_id.includes(\"lux\") || \n        sensor.entity_id.includes(\"light\") ||\n        sensor.entity_id.includes(\"illuminance\")\n    );\n    return lightObject ? lightObject.value : null;\n}\n\n// Finden des Licht-Wertes\nconst lightValue = findLightValue(sensors);\n\n// Ausgabe des Licht-Wertes zur √úberpr√ºfung\n// node.warn(`Licht-Wert: ${lightValue}`);\n\n// Optional: Speichern des Licht-Wertes in msg zur weiteren Verwendung\nmsg.payload = lightValue;\n\n// R√ºckgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":750,"y":680,"wires":[["4faec569ba6943d0"]]},{"id":"4faec569ba6943d0","type":"ha-sensor","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"GRoomLightIntense","entityConfig":"21defcf88bc3ab67","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1040,"y":680,"wires":[[]]},{"id":"ea9ceff937fcdf2d","type":"function","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"Switch-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Switch-Wertes\nfunction findSwitchValue(sensors) {\n    const switchObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"switch\") || \n        sensor.entity_id.includes(\"toggle\")\n    );\n    return switchObject ? switchObject.state : null;\n}\n\n// Finden des Switch-Wertes\nconst switchValue = findSwitchValue(sensors);\n\n// Ausgabe des Switch-Wertes zur √úberpr√ºfung\n// node.warn(`Switch-Wert: ${switchValue}`);\n\n// Optional: Speichern des Switch-Wertes in msg zur weiteren Verwendung\nmsg.payload = switchValue;\n\n// R√ºckgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":730,"y":860,"wires":[[]]},{"id":"e5d701464c11f1fb","type":"ha-sensor","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"GRoomPowerConsume","entityConfig":"794350fd1035e5fa","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1050,"y":800,"wires":[[]]},{"id":"9f13424528e1ce4d","type":"function","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"Vents-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Ventilation-Wertes\nfunction findVentilationValue(sensors) {\n    const ventilationObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"ventilation\") ||\n        sensor.entity_id.includes(\"fan\") ||\n        sensor.entity_id.includes(\"exhaust\") ||\n        sensor.entity_id.includes(\"airflow\")\n    );\n    return ventilationObject ? ventilationObject.value : null;\n}\n\n// Finden des Ventilation-Wertes\nconst ventilationValue = findVentilationValue(sensors);\n\n// Ausgabe des Ventilation-Wertes zur √úberpr√ºfung\n// node.warn(`Ventilation-Wert: ${ventilationValue}`);\n\n// Optional: Speichern des Ventilation-Wertes in msg zur weiteren Verwendung\nmsg.payload = ventilationValue;\n\n// R√ºckgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":730,"y":920,"wires":[[]]},{"id":"f747221671e2a256","type":"function","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"Dehmidifier-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Dehumidifier-Wertes\nfunction findDehumidifierValue(sensors) {\n    const dehumidifierObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"dehumidifier\") || \n        sensor.entity_id.includes(\"humidity\")\n    );\n    return dehumidifierObject ? dehumidifierObject.value : null;\n}\n\n// Finden des Dehumidifier-Wertes\nconst dehumidifierValue = findDehumidifierValue(sensors);\n\n// Ausgabe des Dehumidifier-Wertes zur √úberpr√ºfung\n// node.warn(`Dehumidifier-Wert: ${dehumidifierValue}`);\n\n// Optional: Speichern des Dehumidifier-Wertes in msg zur weiteren Verwendung\nmsg.payload = dehumidifierValue;\n\n// R√ºckgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":740,"y":1100,"wires":[[]]},{"id":"ccaf01950781e533","type":"ha-sensor","z":"6fcb82f207901f17","g":"3c1909379923b44d","name":"GRoomExhaustState","entityConfig":"e0ee2037501d6d09","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1060,"y":980,"wires":[[]]},{"id":"ad36f486222d39fa","type":"comment","z":"6fcb82f207901f17","g":"e0e84d9c3c29ed74","name":"NOT IMPLEMNTED RIGHT NOW","info":"","x":1550,"y":2400,"wires":[]},{"id":"a7039b2d22c05539","type":"comment","z":"6fcb82f207901f17","g":"f3e1b95b0574fe9e","name":"NOT READY","info":"","x":1550,"y":2560,"wires":[]},{"id":"d89f8d34c695951c","type":"ha-entity-config","server":"home-assistant-server","deviceConfig":"","name":"AVGHum-GRoom","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"AVGHum-GRoom"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"humidity"},{"property":"unit_of_measurement","value":"%"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"3cd010abab22bd94","type":"ha-entity-config","server":"home-assistant-server","deviceConfig":"","name":"AVGTemp-GRoom","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"AVGTemp-GRoom"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"temperature"},{"property":"unit_of_measurement","value":"¬∞C"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"d5ba019e431db281","type":"ha-entity-config","server":"home-assistant-server","deviceConfig":"","name":"vpdgrowroom","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VPD-GRoom"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"pressure"},{"property":"unit_of_measurement","value":"kPa"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"4d520d7d773809b5","type":"ha-entity-config","server":"home-assistant-server","deviceConfig":"","name":"GRoomAVGDewpoint","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"GRoomAVGDewpoint"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"temperature"},{"property":"unit_of_measurement","value":"¬∞C"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"5772bf4c.b461d","type":"server","name":"OpenGrowBox","version":5,"addon":true,"rejectUnauthorizedCerts":true,"ha_boolean":"y|yes|true|on|home|open","connectionDelay":true,"cacheJson":true,"heartbeat":false,"heartbeatInterval":"30","areaSelector":"friendlyName","deviceSelector":"friendlyName","entitySelector":"friendlyName","statusSeparator":"at: ","statusYear":"hidden","statusMonth":"short","statusDay":"numeric","statusHourCycle":"h23","statusTimeFormat":"h:m","enableGlobalContextStore":true},{"id":"a3d33c4f483491da","type":"ha-entity-config","server":"home-assistant-server","deviceConfig":"","name":"GRoomCO2","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"GRoomCO2"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"carbon_dioxide"},{"property":"unit_of_measurement","value":"ppm"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"8aebeb6e0a8c4c05","type":"ha-entity-config","server":"home-assistant-server","deviceConfig":"","name":"GRoomPressure","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"GRoomPressure"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"pressure"},{"property":"unit_of_measurement","value":"cbar"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"781aa28fe2f9c4b6","type":"ha-entity-config","server":"home-assistant-server","deviceConfig":"","name":"GRoomMoisture","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"GRoomMoisture"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"moisture"},{"property":"unit_of_measurement","value":"%"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"ee906929f0b219b9","type":"ha-entity-config","server":"home-assistant-server","deviceConfig":"","name":"FlowerBatterieDevices","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerBatterieDevices"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"battery"},{"property":"unit_of_measurement","value":"%"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"5f006050c54ac593","type":"ha-entity-config","server":"home-assistant-server","deviceConfig":"","name":"GRoomRootTemp","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"GRoomRootTemp"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"temperature"},{"property":"unit_of_measurement","value":"¬∞C"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"1a18d0147c3114d1","type":"ha-entity-config","server":"home-assistant-server","deviceConfig":"","name":"GRoomEC","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"GRoomEC"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":""},{"property":"unit_of_measurement","value":"¬µS/cm"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"21defcf88bc3ab67","type":"ha-entity-config","server":"home-assistant-server","deviceConfig":"","name":"GRoomLightIntense","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"GRoomLightIntense"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"illuminance"},{"property":"unit_of_measurement","value":"lx"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"794350fd1035e5fa","type":"ha-entity-config","server":"home-assistant-server","deviceConfig":"","name":"GRoomPowerConsume","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"GRoomPowerConsume"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"power"},{"property":"unit_of_measurement","value":"W"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"e0ee2037501d6d09","type":"ha-entity-config","server":"home-assistant-server","deviceConfig":"","name":"GRoomExhaustState","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"GRoomExhaustState"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"battery"},{"property":"unit_of_measurement","value":"%"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"home-assistant-server","type":"server","name":"Home Assistant","addon":true}]