[{"id":"d95a2d1f80d65696","type":"tab","label":"DryingCtrl","disabled":false,"info":"","env":[]},{"id":"39650dd0d506b2d1","type":"group","z":"d95a2d1f80d65696","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["acbb671a920e1204","2db70e9c77512cd5","a3cfacc22ceb6aee","61c8e4bc0fb9f598","ea7632f875a34c08","4423ab9f0a3a7051","4355525d0b4b8c51","ed48bd245e4075d8","ee92038496ac7849","91a1ad1cbe0b7c09"],"x":1834,"y":599,"w":732,"h":242},{"id":"9f5e15c59748e483","type":"group","z":"d95a2d1f80d65696","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["a337b42e213aa3d0","85576630d2685b3e","a7442e288be67768","d24528c2638458fa","2cc85d66331ad017","1e3ba145f83bde83","be27891ec0917324","f3356508ddab7974"],"x":1834,"y":859,"w":642,"h":202},{"id":"cc8c0cb779e05053","type":"group","z":"d95a2d1f80d65696","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["6644813d9eaf280d","9e7bc6d79550445b","1136a49332e1678a","96a3a134f4100677","a2343e8d5b5a2cfe","811f01977939a2aa"],"x":1834,"y":1079,"w":652,"h":162},{"id":"6e865cec49167337","type":"group","z":"d95a2d1f80d65696","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["13dd6ae7815b011d","aad3dbd470556729","c915062c9362e93a","6f79edbf657fb486","2392fac8ee3c6abf","0a35d57f04cf3e61"],"x":1834,"y":1259,"w":637,"h":162},{"id":"e0089b76e9b07458","type":"junction","z":"d95a2d1f80d65696","x":340,"y":780,"wires":[["72ce70122a4b5a96","6619d22506855909"]]},{"id":"75e4dd66180fefe6","type":"junction","z":"d95a2d1f80d65696","x":340,"y":740,"wires":[["503692ccb4fc3cd7","7316af7c4211ddef"]]},{"id":"1b4109565dd32a64","type":"junction","z":"d95a2d1f80d65696","x":340,"y":700,"wires":[["3997e496b928bfd1","4283f043fbd1a875"]]},{"id":"f17ce61aa53f8de1","type":"junction","z":"d95a2d1f80d65696","x":340,"y":660,"wires":[["5b97a07be9780c5a","6a27dc258154d174"]]},{"id":"3592de82d318bcc3","type":"junction","z":"d95a2d1f80d65696","x":340,"y":620,"wires":[["04d9aa778913bdfb"]]},{"id":"a6ffbd85ba34d697","type":"junction","z":"d95a2d1f80d65696","x":340,"y":560,"wires":[["240a49a3805024f1"]]},{"id":"c3cb5ccd349e588a","type":"junction","z":"d95a2d1f80d65696","x":340,"y":520,"wires":[["8530a7a2c1934af3"]]},{"id":"fd5b01301f4c127b","type":"junction","z":"d95a2d1f80d65696","x":340,"y":460,"wires":[["54c53ccb105fef3e"]]},{"id":"910e0521f19bc495","type":"junction","z":"d95a2d1f80d65696","x":340,"y":420,"wires":[["4dd7ac73e73f1e4c"]]},{"id":"b3f3c8e097e9deab","type":"junction","z":"d95a2d1f80d65696","x":340,"y":380,"wires":[["6eb18246e138dc9f"]]},{"id":"dcc4f38f63e30a93","type":"junction","z":"d95a2d1f80d65696","x":340,"y":340,"wires":[["c507f6fd66cb5ace"]]},{"id":"4a7711999961f732","type":"junction","z":"d95a2d1f80d65696","x":340,"y":300,"wires":[["d12ee96a6dcfa11c"]]},{"id":"02f348d35ebc626a","type":"junction","z":"d95a2d1f80d65696","x":340,"y":260,"wires":[["8bd0deae8ad2bf46"]]},{"id":"279b0b2a0bc504ca","type":"junction","z":"d95a2d1f80d65696","x":340,"y":220,"wires":[["c107273eef1e4eb5"]]},{"id":"4ac178982831a199","type":"junction","z":"d95a2d1f80d65696","x":340,"y":180,"wires":[["db99e2b9dd4a5875","5e184e56c9a47ec2"]]},{"id":"788ff18f453cb71a","type":"junction","z":"d95a2d1f80d65696","x":340,"y":140,"wires":[["2999018347a0a92b","5e184e56c9a47ec2"]]},{"id":"fd840d8e89f4a1a9","type":"junction","z":"d95a2d1f80d65696","x":340,"y":100,"wires":[["4dc46ce5f9f3b35c"]]},{"id":"4d0555b9231bf39c","type":"junction","z":"d95a2d1f80d65696","x":340,"y":820,"wires":[["3614513fa9c5b0f7","ef8d063b02d2d6fa"]]},{"id":"2a688d0ab481b42b","type":"junction","z":"d95a2d1f80d65696","x":320,"y":860,"wires":[["aff5cab903300a7c","2c58a65cb77f695b"]]},{"id":"94739891644f4858","type":"link in","z":"d95a2d1f80d65696","name":"DryingCtrl","links":["f639a305698026d1"],"x":45,"y":40,"wires":[["3e898afb61360a99"]]},{"id":"3e898afb61360a99","type":"debug","z":"d95a2d1f80d65696","name":"DryingTentData","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":160,"y":20,"wires":[]},{"id":"57de3d43cbc5c4fa","type":"link in","z":"d95a2d1f80d65696","name":"DryingTentLiveData","links":["854a899b81ae0da3"],"x":45,"y":80,"wires":[["7e373c1b659a7560","81ae18ff2d1ba76c"]]},{"id":"7e373c1b659a7560","type":"debug","z":"d95a2d1f80d65696","name":"DryingTentLiveData","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":170,"y":60,"wires":[]},{"id":"4283f043fbd1a875","type":"link out","z":"d95a2d1f80d65696","name":"Exhaust","mode":"link","links":["829849bec6a54514","ea7632f875a34c08"],"x":605,"y":700,"wires":[]},{"id":"5e184e56c9a47ec2","type":"join","z":"d95a2d1f80d65696","name":"VpdNeeds","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":450,"y":60,"wires":[["e75e84faafeb206a"]]},{"id":"2999018347a0a92b","type":"debug","z":"d95a2d1f80d65696","name":"Temperatures","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":460,"y":140,"wires":[]},{"id":"db99e2b9dd4a5875","type":"debug","z":"d95a2d1f80d65696","name":"Humidity","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":440,"y":180,"wires":[]},{"id":"c107273eef1e4eb5","type":"debug","z":"d95a2d1f80d65696","name":"Dewpoints","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":220,"wires":[]},{"id":"6eb18246e138dc9f","type":"debug","z":"d95a2d1f80d65696","name":"Pressures","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":440,"y":380,"wires":[]},{"id":"8530a7a2c1934af3","type":"debug","z":"d95a2d1f80d65696","name":"Battery","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":440,"y":520,"wires":[]},{"id":"240a49a3805024f1","type":"debug","z":"d95a2d1f80d65696","name":"Power","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":430,"y":560,"wires":[]},{"id":"4dd7ac73e73f1e4c","type":"debug","z":"d95a2d1f80d65696","name":"CO2","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":430,"y":420,"wires":[]},{"id":"54c53ccb105fef3e","type":"debug","z":"d95a2d1f80d65696","name":"Light","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":430,"y":460,"wires":[]},{"id":"04d9aa778913bdfb","type":"debug","z":"d95a2d1f80d65696","name":"Switches","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":440,"y":620,"wires":[]},{"id":"c507f6fd66cb5ace","type":"debug","z":"d95a2d1f80d65696","name":"Conductivity","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":340,"wires":[]},{"id":"8bd0deae8ad2bf46","type":"debug","z":"d95a2d1f80d65696","name":"Moisture","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":440,"y":260,"wires":[]},{"id":"3997e496b928bfd1","type":"debug","z":"d95a2d1f80d65696","name":"Exhasut","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":440,"y":700,"wires":[]},{"id":"4dc46ce5f9f3b35c","type":"debug","z":"d95a2d1f80d65696","name":"WISH","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":430,"y":100,"wires":[]},{"id":"503692ccb4fc3cd7","type":"debug","z":"d95a2d1f80d65696","name":"Humidifier","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":740,"wires":[]},{"id":"5b97a07be9780c5a","type":"debug","z":"d95a2d1f80d65696","name":"Vents","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":430,"y":660,"wires":[]},{"id":"d12ee96a6dcfa11c","type":"debug","z":"d95a2d1f80d65696","name":"RootTemp","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":300,"wires":[]},{"id":"72ce70122a4b5a96","type":"debug","z":"d95a2d1f80d65696","name":"Dehumidifier","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":780,"wires":[]},{"id":"81ae18ff2d1ba76c","type":"function","z":"d95a2d1f80d65696","name":"Sort Sensor Types","func":"let data = msg.payload;\n\n// Arrays f√ºr verschiedene Sensortypen initialisieren\nlet wish = [];\nlet temperatures = [];\nlet humidity = [];\nlet dewpoints = [];\nlet moisture = [];\nlet pressures = [];\nlet battery = [];\nlet power = [];\nlet co2 = [];\nlet lumen = [];\nlet conductivity = [];\nlet switches = [];\nlet dutyCycleExhaust = [];\nlet vents = [];\nlet humidifier = [];\nlet dehumidifier = [];\nlet root = [];\nlet cooler = [];\nlet heater = [];\nlet pump = [];\n\n// Durchlaufe alle Schl√ºssel im data-Objekt und sortiere sie nach bestimmten Sensortypen\nfor (let key in data) {\n    if (data.hasOwnProperty(key)) {\n        let entity_id = key.toLowerCase();\n        let entity = { entity_id: key, value: data[key] };\n\n        // Prioritize to ensure it is captured first\n        if (entity_id.includes('wish') || entity_id.includes('avg') || entity_id.includes('target')) {\n            wish.push(entity);\n        } else if (entity_id.includes('root') || entity_id.includes('wurzel')) {\n            root.push(entity);\n        }\n        // ENVIORMENT\n        else if (entity_id.includes('temperature') || entity_id.includes('tempe')) {\n            temperatures.push(entity);\n        } else if (entity_id.includes('humidity') || entity_id.includes('feuchtigkeit') || entity_id.includes('rh')) {\n            humidity.push(entity);\n        } else if (entity_id.includes('dewpoint') || entity_id.includes('dew')) {\n            dewpoints.push(entity);\n        } else if (entity_id.includes('moisture') || entity_id.includes('mois')) {\n            moisture.push(entity);\n        } else if (entity_id.includes('pressure') || entity_id.includes('press')) {\n            pressures.push(entity);\n        } else if (entity_id.includes('carbondioxide') || entity_id.includes('co2') || entity_id.includes('carbon')) {\n            co2.push(entity);\n        } else if (entity_id.includes('conductivity')) {\n            conductivity.push(entity);\n        } else if (entity_id.includes('illuminance') || entity_id.includes('light') || entity_id.includes('licht')) {\n            lumen.push(entity);\n        }\n        // Devices\n        else if (entity_id.includes('dehumidifier') || entity_id.includes('entfeuchter')) {\n            dehumidifier.push(entity);\n        } else if (entity_id.includes('humidifier') || entity_id.includes('befeuchter')) {\n            humidifier.push(entity);\n        } else if (entity_id.includes('cooler') || entity_id.includes('klima')) {\n            cooler.push(entity);\n        } else if (entity_id.includes('heater') || entity_id.includes('Heizung')) {\n            heater.push(entity);\n        } else if (entity_id.includes('pump') || entity_id.includes('pumping')) {\n            pump.push(entity);\n        }else if (entity_id.includes('ruck') || entity_id.includes('airctr') || entity_id.includes('exhaust') || entity_id.includes('abluft')) {\n            dutyCycleExhaust.push(entity);\n        } else if (entity_id.includes('vent')) {\n            vents.push(entity);\n        } else if (entity_id.includes('switch')) {\n            switches.push(entity);\n        } else if (entity_id.includes('power') || entity_id.includes('energy')) {\n            power.push(entity);\n        }\n\n        // ADDONS\n        else if (entity_id.includes('battery') || entity_id.includes('batt')) {\n            battery.push(entity);\n        }\n    }\n}\n\n// Nachrichtenausgabe auf verschiedenen Outputs\nreturn [\n    // ENVIORMENT\n    { payload: wish, topic: 'Wish' },\n    { payload: temperatures, topic: 'temperature' },\n    { payload: humidity, topic: 'humidity' },\n    { payload: dewpoints, topic: 'dewpoint' },\n    { payload: moisture, topic: 'moisture' },\n    { payload: root, topic: 'roottemp' },\n    { payload: conductivity, topic: 'conductivity' },\n    { payload: pressures, topic: 'pressure' },\n    { payload: co2, topic: 'carbon_dioxide' },\n    { payload: lumen, topic: 'illuminance' },\n    // DEVICEINFO\n    { payload: battery, topic: 'battery' },\n    { payload: power, topic: 'power' },\n    // DEVICES\n    { payload: switches, topic: 'switch' },\n    { payload: vents, topic: 'Vents' },\n    { payload: dutyCycleExhaust, topic: 'Exhaust' },\n    { payload: humidifier, topic: 'humidifier' },\n    { payload: dehumidifier, topic: 'dehumidifier' },\n    { payload: cooler, topic: 'cooler' },\n    { payload: heater, topic: 'heater' },\n    { payload: pump, topic: 'pump' }\n];\n","outputs":20,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":150,"y":240,"wires":[["fd840d8e89f4a1a9"],["788ff18f453cb71a"],["4ac178982831a199"],["279b0b2a0bc504ca"],["02f348d35ebc626a"],["4a7711999961f732"],["dcc4f38f63e30a93"],["b3f3c8e097e9deab"],["910e0521f19bc495"],["fd5b01301f4c127b"],["c3cb5ccd349e588a"],["a6ffbd85ba34d697"],["3592de82d318bcc3"],["f17ce61aa53f8de1"],["1b4109565dd32a64"],["75e4dd66180fefe6"],["e0089b76e9b07458"],["4d0555b9231bf39c"],["2a688d0ab481b42b"],[]]},{"id":"7316af7c4211ddef","type":"link out","z":"d95a2d1f80d65696","name":"Humidifier","mode":"link","links":["27ad1f432dcc7dfc","a7442e288be67768"],"x":605,"y":740,"wires":[]},{"id":"6619d22506855909","type":"link out","z":"d95a2d1f80d65696","name":"Dehumidifier","mode":"link","links":["1136a49332e1678a"],"x":605,"y":780,"wires":[]},{"id":"6a27dc258154d174","type":"link out","z":"d95a2d1f80d65696","name":"Vents","mode":"link","links":[],"x":605,"y":660,"wires":[]},{"id":"38dbfc42067a545a","type":"ha-sensor","z":"d95a2d1f80d65696","name":"DryingAVGHUM","entityConfig":"21f77f51eed89bc1","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[{"property":"topic","propertyType":"msg","value":"DryTentHum","valueType":"str"}],"x":940,"y":160,"wires":[["fdca92a0aa4e6cd2","076ecef3fc67db9e","948ad699c26c15c1"]]},{"id":"a0a9554edcb2f04b","type":"ha-sensor","z":"d95a2d1f80d65696","name":"DryingAVGTemp","entityConfig":"f4caa1d3cf2afd02","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[{"property":"topic","propertyType":"msg","value":"DryTentTemp","valueType":"str"}],"x":940,"y":240,"wires":[["fdca92a0aa4e6cd2","4ec3e03005965dca","948ad699c26c15c1"]]},{"id":"e75e84faafeb206a","type":"function","z":"d95a2d1f80d65696","name":"Calc-AVG","func":"// Funktion zur Berechnung des Durchschnitts\nconst AvgTemp = (temps) => {\n    let sum = 0;\n    let count = 0;\n\n    temps.forEach((entry) => {\n        const temp = parseFloat(entry.value);\n        if (!isNaN(temp)) {\n            sum += temp;\n            count++;\n        }\n    });\n\n    if (count === 0) {\n        return \"unavailable\";\n    }\n\n    const avg = sum / count;\n    return avg.toFixed(2);\n};\n\n// Durchschnittstemperatur f√ºr jede Temperaturkategorie berechnen\nconst temperatureAvg = AvgTemp(msg.payload.temperature);\nconst humidityAvg = AvgTemp(msg.payload.humidity);\n\n// Objekt mit den Durchschnittswerten erstellen\nconst avgData = {\n    AvgTempData: temperatureAvg,\n    AvgHumData: humidityAvg\n};\n\n// Nachrichten erstellen und zur√ºckgeben\nconst avgDataMsg = { payload: avgData, topic: \"AvgData\" };\nconst tempMsg = { payload: temperatureAvg, topic: \"AvgTemp\" };\nconst humMsg = { payload: humidityAvg, topic: \"AvgHum\" };\n\nreturn [humMsg, tempMsg, avgDataMsg];\n","outputs":3,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":720,"y":200,"wires":[["38dbfc42067a545a"],["a0a9554edcb2f04b"],["53e5f7d07471afde"]]},{"id":"28c64e78ac65f78a","type":"comment","z":"d95a2d1f80d65696","name":"VPD-Creation","info":"","x":730,"y":40,"wires":[]},{"id":"e9bb83f7c17df4fb","type":"ha-sensor","z":"d95a2d1f80d65696","name":"WaterActivityTent","entityConfig":"c4dd8cf5329e0b68","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1370,"y":80,"wires":[[]]},{"id":"68e215c7fea3bbc2","type":"function","z":"d95a2d1f80d65696","name":"Drying-VPD-DewPoint","func":"function calculateVPD(luftTemperatur, dewPoint) {\n    // Stellen Sie sicher, dass alle Eingaben Zahlen sind\n    luftTemperatur = parseFloat(luftTemperatur);\n    dewPoint = parseFloat(dewPoint);\n\n    // √úberpr√ºfen Sie, ob einer der Werte NaN ist\n    if (isNaN(luftTemperatur) || isNaN(dewPoint)) {\n        return \"unavailable\";\n    }\n\n    // Berechnung des S√§ttigungsdampfdrucks (SDP) f√ºr Lufttemperatur\n    let sdpLuft = 0.6108 * Math.exp((17.27 * luftTemperatur) / (luftTemperatur + 237.3));\n    // Berechnung des tats√§chlichen Dampfdrucks (ADP) am Taupunkt\n    let adp = 0.6108 * Math.exp((17.27 * dewPoint) / (dewPoint + 237.3));\n\n    // Berechnung des VPD\n    let vpd = sdpLuft - adp;\n\n    return vpd.toFixed(2);  // Rundet den VPD-Wert auf zwei Dezimalstellen\n}\n\n// Beispiel f√ºr die Verwendung der Funktion\nlet luftTemperatur = parseFloat(msg.payload.DryTentTemp); // Stellen Sie sicher, dass dies eine Zahl ist\nlet dewPoint = parseFloat(msg.payload.DryTentDewPoint); // Stellen Sie sicher, dass dies eine Zahl ist\n\n// √úberpr√ºfen Sie, ob die Eingaben g√ºltig sind\nif (isNaN(luftTemperatur) || isNaN(dewPoint)) {\n    msg.payload = \"Invalid input values\";\n    return msg;\n}\n\nlet vpd = calculateVPD(luftTemperatur, dewPoint);\n\nmsg.payload = vpd;\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1380,"y":240,"wires":[["24ab89a5c32e70ea","bda5d878aa6e98a0"]]},{"id":"4ec3e03005965dca","type":"join","z":"d95a2d1f80d65696","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1190,"y":240,"wires":[["68e215c7fea3bbc2","8e01eedce665b25a","3e5d8f81e32292cc"]]},{"id":"9d5266f245d63e25","type":"debug","z":"d95a2d1f80d65696","name":"debug 76","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1400,"y":440,"wires":[]},{"id":"bda5d878aa6e98a0","type":"ha-sensor","z":"d95a2d1f80d65696","name":"VPD-DRYING-Tent-Dewpoint","entityConfig":"7adf25576d4cdadb","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[{"property":"topic","propertyType":"msg","value":"currentVPD","valueType":"str"}],"x":1660,"y":240,"wires":[[]]},{"id":"8e01eedce665b25a","type":"function","z":"d95a2d1f80d65696","name":"Drying-VaporPressure","func":"function calculateVaporPressure(dewPoint) {\n    // Ensure input is a number\n    dewPoint = parseFloat(dewPoint);\n\n    // Check for NaN values\n    if (isNaN(dewPoint)) {\n        return \"unavailable\";\n    }\n\n    // Calculate vapor pressure using the formula (in mb)\n    let vaporPressure_mb = 6.11 * Math.pow(10, (7.5 * dewPoint) / (237.3 + dewPoint));\n\n    return vaporPressure_mb.toFixed(2);  // Round the vapor pressure to two decimal places\n}\n\nfunction calculateSaturationVaporPressure(temperature) {\n    // Ensure input is a number\n    temperature = parseFloat(temperature);\n\n    // Check for NaN values\n    if (isNaN(temperature)) {\n        return \"unavailable\";\n    }\n\n    // Calculate saturation vapor pressure using the formula (in mb)\n    let saturationVaporPressure_mb = 6.11 * Math.pow(10, (7.5 * temperature) / (237.3 + temperature));\n\n    return saturationVaporPressure_mb.toFixed(2);  // Round the vapor pressure to two decimal places\n}\n\n// Example usage of the function with debug logging\nlet temperature = parseFloat(msg.payload.DryTentTemp); // Ensure this is a number\nlet dewPoint = parseFloat(msg.payload.DryTentDewPoint); // Ensure this is a number\n\n// Debug logging for inputs\n//node.warn(`Raw inputs - Temperature: ${temperature}, Dew Point: ${dewPoint}`);\n\n// Check if inputs are valid numbers\nif (isNaN(temperature) || isNaN(dewPoint)) {\n    //node.warn(\"Invalid input values\");\n    return [null, null]; // Return null for both outputs\n}\n\nlet saturationVaporPressure = calculateSaturationVaporPressure(temperature);\nlet actualVaporPressure = calculateVaporPressure(dewPoint);\n\n// Return the results as numeric values for each output\nreturn [\n    { payload: parseFloat(saturationVaporPressure) }, // First output: Saturation Vapor Pressure\n    { payload: parseFloat(actualVaporPressure) }      // Second output: Actual Vapor Pressure\n];\n","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1360,"y":360,"wires":[["9d5266f245d63e25","14681bef6f1cb273"],["9d5266f245d63e25","cfa627826d7cf6f8"]]},{"id":"24ab89a5c32e70ea","type":"debug","z":"d95a2d1f80d65696","name":"debug 84","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1420,"y":280,"wires":[]},{"id":"14681bef6f1cb273","type":"ha-sensor","z":"d95a2d1f80d65696","name":"VaporPressure-Saturation-mbar","entityConfig":"73b7a7323e840e31","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1670,"y":320,"wires":[[]]},{"id":"cfa627826d7cf6f8","type":"ha-sensor","z":"d95a2d1f80d65696","name":"VaporPressure-Actual-mbar","entityConfig":"c9b08ec4b93dfab7","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[{"property":"topic","propertyType":"msg","value":"currentVP","valueType":"str"}],"x":1660,"y":400,"wires":[["948ad699c26c15c1","daa2b632ad4e60ed"]]},{"id":"076ecef3fc67db9e","type":"function","z":"d95a2d1f80d65696","name":"WaterActivityWish","func":"// Input RH\nlet relativeHumidity = parseFloat(msg.payload);\n\n// Check if input is valid\nif (isNaN(relativeHumidity) || relativeHumidity < 0 || relativeHumidity > 100) {\n    msg.payload = \"Invalid RH value\";\n    return msg;\n}\n\n// Calculate water activity (aw)\nlet waterActivity = relativeHumidity / 100;\n\n// Output the result\nmsg.payload = waterActivity.toFixed(2); // Round to 2 decimal places\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1170,"y":80,"wires":[["e9bb83f7c17df4fb"]]},{"id":"161cf403a7c862c7","type":"function","z":"d95a2d1f80d65696","name":"Calc-Dewpoint","func":"// Funktion zur Berechnung des Taupunkts\nconst calculateDewPoint = (temperature, humidity) => {\n    const temp = parseFloat(temperature);\n    const hum = parseFloat(humidity);\n\n    if (isNaN(temp) || isNaN(hum)) {\n        return \"unavailable\";\n    }\n\n    const dewPoint = temp - ((100 - hum) / 5);\n    return parseFloat(dewPoint.toFixed(3));\n};\n\n// Beispielinput\nconst inputData = msg.payload;\n\n// Taupunkt berechnen\nconst temperature = parseFloat(inputData.DryTentTemp);\nconst humidity = parseFloat(inputData.DryTentHum);\nconst dewPoint = calculateDewPoint(temperature, humidity);\n\n// Taupunkt als Zahl zur√ºckgeben\nmsg.payload = dewPoint;\nmsg.topic = \"DryTentDewpoint\"\nreturn msg\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1300,"y":160,"wires":[["9d42b8567c2703bc"]]},{"id":"fdca92a0aa4e6cd2","type":"join","z":"d95a2d1f80d65696","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1130,"y":160,"wires":[["161cf403a7c862c7","dbc6c83798648f53"]]},{"id":"9d42b8567c2703bc","type":"ha-sensor","z":"d95a2d1f80d65696","name":"DryingAVGDewpoint","entityConfig":"4725cf9d34fa649f","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[{"property":"topic","propertyType":"msg","value":"DryTentDewPoint","valueType":"str"}],"x":1500,"y":160,"wires":[["948ad699c26c15c1","4ec3e03005965dca"]]},{"id":"3e5d8f81e32292cc","type":"debug","z":"d95a2d1f80d65696","name":"debug 215","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1170,"y":280,"wires":[]},{"id":"dbc6c83798648f53","type":"debug","z":"d95a2d1f80d65696","name":"debug 216","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1150,"y":120,"wires":[]},{"id":"f079f4cd774ac619","type":"function","z":"d95a2d1f80d65696","name":"TentModesSetup","func":"// Initialisiert das Array f√ºr die Ausg√§nge mit Nullen\nlet outputs = [null, null, null, null,null];\n\n// √úberpr√ºft den Zustand des eingehenden Payloads und setzt den entsprechenden Ausgang\nif (msg.payload === \"DarkRoom\") {\n    return [{ payload: msg.payload, topic: \"DarkRoomMode\" }, null, null, null, null,];\n}\nelse if (msg.payload === \"Drying\") {\n    return [null, { payload: msg.payload, topic: \"DryingMode\" }, null, null, null,];\n}\nelse if (msg.payload === \"Curing\") {\n    return [null, null, { payload: msg.payload, topic: \"CuringMode\" }, null, null];\n}\nelse if (msg.payload === \"Holding\") {\n    return [null, null, null, { payload: msg.payload, topic: \"StorageMode\" }, null];\n}\n\nelse if (msg.payload === \"Disabled\") {\n    return [null, null, null, null, { payload: msg.payload, topic: \"ModeDisabeld\" }];\n}\n\n// Wenn keine Bedingungen zutreffen, sendet nichts\nreturn [null, null, null, null];\n","outputs":5,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2370,"y":220,"wires":[["e81af5c35829308e","f3e9bf9dc57e6156"],["e81af5c35829308e","444383a46862b747"],["e81af5c35829308e","323037a57f0fe482"],["e81af5c35829308e","bcce67ceac122d4f"],["e81af5c35829308e"]]},{"id":"daa2b632ad4e60ed","type":"api-current-state","z":"d95a2d1f80d65696","name":"DreyTentType","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"select.drytentcana","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"TentMode","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":2180,"y":220,"wires":[["f079f4cd774ac619"]]},{"id":"e81af5c35829308e","type":"debug","z":"d95a2d1f80d65696","name":"debug 219","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2390,"y":280,"wires":[]},{"id":"f3e9bf9dc57e6156","type":"link out","z":"d95a2d1f80d65696","name":"DarkRoom","mode":"link","links":["b33726c812d39d0a","5b3914166f276ba3","f1e2e18a0f5ca6fd","2f979e30a72b2210"],"x":2625,"y":120,"wires":[]},{"id":"444383a46862b747","type":"link out","z":"d95a2d1f80d65696","name":"Drying","mode":"link","links":["cb2d48217c936482"],"x":2625,"y":200,"wires":[]},{"id":"323037a57f0fe482","type":"link out","z":"d95a2d1f80d65696","name":"Curing","mode":"link","links":["a172054a22685836"],"x":2625,"y":280,"wires":[]},{"id":"bcce67ceac122d4f","type":"link out","z":"d95a2d1f80d65696","name":"Hold","mode":"link","links":["7a66743a709ccc67"],"x":2625,"y":340,"wires":[]},{"id":"cb2d48217c936482","type":"link in","z":"d95a2d1f80d65696","name":" Dry","links":["444383a46862b747"],"x":845,"y":1020,"wires":[["aec9a5f0a9e9fe5b"]]},{"id":"a172054a22685836","type":"link in","z":"d95a2d1f80d65696","name":"Curing","links":["323037a57f0fe482"],"x":845,"y":1220,"wires":[["859b31d9b8bf4477"]]},{"id":"7a66743a709ccc67","type":"link in","z":"d95a2d1f80d65696","name":"Storage","links":["bcce67ceac122d4f"],"x":845,"y":820,"wires":[["6b3f75c162fa62fc"]]},{"id":"53e5f7d07471afde","type":"function","z":"d95a2d1f80d65696","name":"VPD Calc ","func":"function calculateVPD(luftTemperatur, blattTemperatur, relativeLuftfeuchtigkeit) {\n    // Stellen Sie sicher, dass alle Eingaben Zahlen sind\n    luftTemperatur = parseFloat(luftTemperatur);\n    blattTemperatur = parseFloat(blattTemperatur);\n    relativeLuftfeuchtigkeit = parseFloat(relativeLuftfeuchtigkeit);\n\n    // √úberpr√ºfen Sie, ob einer der Werte NaN ist\n    if (isNaN(luftTemperatur) || isNaN(blattTemperatur) || isNaN(relativeLuftfeuchtigkeit)) {\n        return \"unavailable\";\n    }\n\n    // Berechnungen wie zuvor\n    let sdpLuft = 0.6108 * Math.exp((17.27 * luftTemperatur) / (luftTemperatur + 237.3));\n    let sdpBlatt = 0.6108 * Math.exp((17.27 * blattTemperatur) / (blattTemperatur + 237.3));\n    let adp = (relativeLuftfeuchtigkeit / 100) * sdpLuft;\n    let vpd = sdpBlatt - adp;\n\n    return vpd.toFixed(2);\n}\n\n// Beispiel f√ºr die Verwendung der Funktion\nlet luftTemperatur = msg.payload.AvgTempData; // Stellen Sie sicher, dass dies eine Zahl ist\nlet blattTemperatur = parseFloat(luftTemperatur) - 2; // Keine Rundung, genaue Berechnung\nlet relativeLuftfeuchtigkeit = msg.payload.AvgHumData; // Stellen Sie sicher, dass dies eine Zahl ist\n\nlet vpd = calculateVPD(luftTemperatur, blattTemperatur, relativeLuftfeuchtigkeit);\n\nmsg.payload = vpd;\n\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":780,"y":100,"wires":[["d605da94668dcc2c"]]},{"id":"d605da94668dcc2c","type":"ha-sensor","z":"d95a2d1f80d65696","name":"vpdDrying","entityConfig":"4f7f25d7aed69b8a","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":930,"y":100,"wires":[[]]},{"id":"315c367123aae08a","type":"ha-select","z":"d95a2d1f80d65696","name":"DryTentMaster","version":1,"debugenabled":false,"inputs":1,"outputs":1,"entityConfig":"5e8e4b22b2382ebb","mode":"set","value":"payload","valueType":"msg","outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"value"},{"property":"previousValue","propertyType":"msg","value":"","valueType":"previousValue"},{"property":"topic","propertyType":"msg","value":"ChangePlanteState","valueType":"str"}],"x":1980,"y":220,"wires":[["daa2b632ad4e60ed"]]},{"id":"3dd759b2e74f2aac","type":"link in","z":"d95a2d1f80d65696","name":"ModeChange","links":["ae1927c618f3e107","2a50c13bb93249fb"],"x":1845,"y":220,"wires":[["315c367123aae08a"]]},{"id":"ac11b417e222aa9c","type":"link out","z":"d95a2d1f80d65696","name":"DryingTargets","mode":"link","links":["2448f2af4159d8f6","12f1c17ecdc5b413","44e030e36f215422","87bb1c1e71e1e778","2823d304d5378185","11b7b29bccc1a54c","c82eece625cfb949","de920b535cbd82f5"],"x":2115,"y":180,"wires":[]},{"id":"6b3f75c162fa62fc","type":"join","z":"d95a2d1f80d65696","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"4","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"num","reduceFixup":"","x":990,"y":880,"wires":[["9f0f129e0cacbf83","22efd312e63cf496"]]},{"id":"9f0f129e0cacbf83","type":"debug","z":"d95a2d1f80d65696","name":"debug 233","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1010,"y":800,"wires":[]},{"id":"948ad699c26c15c1","type":"join","z":"d95a2d1f80d65696","name":"TentDataDry","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"4","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1780,"y":180,"wires":[["e8de80ead07ad099","1bd0d476d1d2cebf"]]},{"id":"859b31d9b8bf4477","type":"join","z":"d95a2d1f80d65696","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"4","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"num","reduceFixup":"","x":990,"y":1280,"wires":[["559cb37a5af7cb77","1f1beb34e151ced8"]]},{"id":"aec9a5f0a9e9fe5b","type":"join","z":"d95a2d1f80d65696","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"4","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"num","reduceFixup":"","x":990,"y":1080,"wires":[["820d5d62dd712d5f","947331172e5c9d8d"]]},{"id":"820d5d62dd712d5f","type":"debug","z":"d95a2d1f80d65696","name":"debug 235","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1020,"y":1000,"wires":[]},{"id":"559cb37a5af7cb77","type":"debug","z":"d95a2d1f80d65696","name":"debug 236","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1010,"y":1220,"wires":[]},{"id":"2f979e30a72b2210","type":"link in","z":"d95a2d1f80d65696","name":"link in 85","links":["f3e9bf9dc57e6156"],"x":845,"y":600,"wires":[["4040b30dc189553d","97cb8c8b06b9d896"]]},{"id":"31de0899bee44a27","type":"link in","z":"d95a2d1f80d65696","name":"DryingTargets","links":["1128c0f84c04d183"],"x":845,"y":660,"wires":[["4040b30dc189553d","97cb8c8b06b9d896"]]},{"id":"2823d304d5378185","type":"link in","z":"d95a2d1f80d65696","name":"TentData","links":["ac11b417e222aa9c"],"x":845,"y":700,"wires":[["4040b30dc189553d","97cb8c8b06b9d896"]]},{"id":"4040b30dc189553d","type":"join","z":"d95a2d1f80d65696","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"4","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"num","reduceFixup":"","x":990,"y":660,"wires":[["d5ee610af291b3ad","43e60410d9fdd926"]]},{"id":"d5ee610af291b3ad","type":"debug","z":"d95a2d1f80d65696","name":"debug 239","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1170,"y":620,"wires":[]},{"id":"96b5d48b9bbcf78a","type":"link in","z":"d95a2d1f80d65696","name":"EnvData","links":["265fe00ebc822be2"],"x":845,"y":860,"wires":[["6b3f75c162fa62fc"]]},{"id":"d37b94da4dec65f6","type":"link in","z":"d95a2d1f80d65696","name":"DryingTargets","links":["1128c0f84c04d183"],"x":845,"y":940,"wires":[["6b3f75c162fa62fc"]]},{"id":"11b7b29bccc1a54c","type":"link in","z":"d95a2d1f80d65696","name":"TentData","links":["ac11b417e222aa9c"],"x":845,"y":900,"wires":[["6b3f75c162fa62fc"]]},{"id":"cf3d7c529e315591","type":"link in","z":"d95a2d1f80d65696","name":"EnvData","links":["265fe00ebc822be2"],"x":845,"y":1060,"wires":[["aec9a5f0a9e9fe5b"]]},{"id":"035fc7c7ac4cfd65","type":"link in","z":"d95a2d1f80d65696","name":"DryingTargets","links":["1128c0f84c04d183"],"x":845,"y":1140,"wires":[["aec9a5f0a9e9fe5b"]]},{"id":"c82eece625cfb949","type":"link in","z":"d95a2d1f80d65696","name":"TentData","links":["ac11b417e222aa9c"],"x":845,"y":1100,"wires":[["aec9a5f0a9e9fe5b"]]},{"id":"e811d0b3ccda053e","type":"link in","z":"d95a2d1f80d65696","name":"EnvData","links":["265fe00ebc822be2"],"x":845,"y":1260,"wires":[["859b31d9b8bf4477"]]},{"id":"57af34c8042aba4f","type":"link in","z":"d95a2d1f80d65696","name":"DryingTargets","links":["1128c0f84c04d183"],"x":845,"y":1340,"wires":[["859b31d9b8bf4477"]]},{"id":"de920b535cbd82f5","type":"link in","z":"d95a2d1f80d65696","name":"TentData","links":["ac11b417e222aa9c"],"x":845,"y":1300,"wires":[["859b31d9b8bf4477"]]},{"id":"e8de80ead07ad099","type":"function","z":"d95a2d1f80d65696","name":"CollectData","func":"// Define the target variables\nconst dryTemp = parseFloat(msg.payload.DryTentTemp);\nconst dryHum = parseFloat(msg.payload.DryTentHum);\nconst dryDewPoint = parseFloat(msg.payload.DryTentDewPoint);\nconst dryVP = parseFloat(msg.payload.currentVP);\n\n// Create an object to store the collected values\nconst collectedData = {\n    dryTemp: dryTemp,\n    dryHum: dryHum,\n    dryDewPoint: dryDewPoint,\n    dryVP: dryVP\n};\n\n// Check if any of the collected data is undefined or NaN\nif (\n    isNaN(collectedData.dryTemp) || collectedData.dryTemp === undefined ||\n    isNaN(collectedData.dryHum) || collectedData.dryHum === undefined ||\n    isNaN(collectedData.dryDewPoint) || collectedData.dryDewPoint === undefined ||\n    isNaN(collectedData.dryVP) || collectedData.dryVP === undefined\n) {\n    return msg;\n}\n\n// Set the collected data as the payload\nmsg.payload = collectedData;\nmsg.topic = \"dryData\";\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1970,"y":180,"wires":[["ac11b417e222aa9c","e3f2fb970a98653f"]]},{"id":"e3f2fb970a98653f","type":"debug","z":"d95a2d1f80d65696","name":"debug 240","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1990,"y":140,"wires":[]},{"id":"1bd0d476d1d2cebf","type":"debug","z":"d95a2d1f80d65696","name":"debug 241","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1770,"y":140,"wires":[]},{"id":"43e60410d9fdd926","type":"function","z":"d95a2d1f80d65696","name":"DryingHandler","func":"const outputs = [null, null, null, null];\n\nconst tolerance = 0.3\nconst dewpointTolerance = 2.0; // Toleranzwert f√ºr Taupunkt in Grad Celsius\n\nconst outdoortemp = msg.payload[\"sensor.tempoutdoor\"];\n\nconst targetHum = msg.payload.TargetDryData.TargetDryHum;\nconst targetTemp = msg.payload.TargetDryData.TargetDryTemp;\nconst targetDewpoint = msg.payload.TargetDryData.TargetDryDew;\nconst targetVP = msg.payload.TargetDryData.targetVP;\n\nconst currentHum = msg.payload.dryData.dryHum;\nconst currentTemp = msg.payload.dryData.dryTemp;\nconst currentDewpoint = msg.payload.dryData.dryDewPoint;\nconst currentVP = msg.payload.dryData.dryVP;\n\n// Logging der aktuellen VP und Ziel-VP-Bereich zur √úberpr√ºfung und Debugging.\nnode.warn(`Drying-VP target: ${targetVP}`);\n\nfunction calculateAdjustmentBasedOnConditions() {\n    const adjustments = {\n        exhaustSpeed: \"unchanged\",\n        humidifier: \"unchanged\",\n        dehumidifier: \"unchanged\",\n        heaterFan: \"unchanged\",\n        coolerFan: \"unchanged\",\n        ventsALL: \"unchanged\",\n    };\n\n    // Taupunkt Anpassung\n    if (currentVP > targetVP + tolerance) {\n        node.warn(`Drying-VP: ${currentVP} zu hoch an Target: ${targetVP}.`);\n        return {\n            exhaustSpeed: \"increased\",      // Erh√∂ht die Abluftgeschwindigkeit, um feuchte Luft herauszuziehen\n            humidifier: \"reduced\",          // Schaltet den Luftbefeuchter aus, um Feuchtigkeit zu reduzieren\n            dehumidifier: \"increased\",      // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            coolerFan: \"reduced\",           // Verringert die K√ºhlleistung, um die Temperatur zu erh√∂hen\n        };\n    } else if (currentVP < targetVP - tolerance) {\n        node.warn(`Drying-VP: ${currentVP} zu gering an Target:${targetVP}. `);\n        return {\n            exhaustSpeed: \"reduced\",    // Reduziert die Abluftgeschwindigkeit, h√§lt feuchte Luft im Raum\n            humidifier: \"increased\",    // Schaltet den Luftbefeuchter ein, um Feuchtigkeit zu erh√∂hen\n            dehumidifier: \"reduced\",    // Schaltet den Luftentfeuchter aus, um Feuchtigkeit zu erh√∂hen\n            coolerFan: \"increased\",     // Erh√∂ht die K√ºhlleistung, um die Temperatur zu verringern\n        };\n    } else {\n        node.warn(`Drying-VP: ${currentVP} im gew√ºnschten Bereich`);\n        return {\n            exhaustSpeed: \"unchanged\",\n            humidifier: \"unchanged\",\n            dehumidifier: \"unchanged\",\n            coolerFan: \"unchanged\",\n        };\n    }\n}\n\n// Entscheidungslogik zur Steuerung der Umgebungsbedingungen, nutzt die calculateAdjustmentBasedOnConditions Funktion.\nconst adjustments = calculateAdjustmentBasedOnConditions();\n\n// Hinzuf√ºgen der Anpassungen zum Payload\nmsg.payload = {\n    exhaustSpeed: adjustments.exhaustSpeed,\n    humidifier: adjustments.humidifier,\n    dehumidifier: adjustments.dehumidifier,\n    heaterFan: adjustments.heaterFan,\n    coolerFan: adjustments.coolerFan,\n};\n\n\n// R√ºckgabe des modifizierten Payloads f√ºr weitere Verwendung im Flow.\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1160,"y":680,"wires":[["48c586de4b0046b1","0724818ae0171d24"]]},{"id":"97cb8c8b06b9d896","type":"debug","z":"d95a2d1f80d65696","name":"debug 251","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":990,"y":580,"wires":[]},{"id":"48c586de4b0046b1","type":"function","z":"d95a2d1f80d65696","name":"Check What Do","func":"let outputs = [null, null, null, null, null, null, null, null, null];\n\nvar percentDifference = msg.payload.percentDifference\n\n// Abluft\nif (msg.payload.exhaustSpeed === \"unchanged\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"increased\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"reduced\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n}\n\n// Humidifier\nif (msg.payload.humidifier === \"unchanged\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"increased\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"reduced\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n}\n\n// Dehumidifier\nif (msg.payload.dehumidifier === \"unchanged\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"increased\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"reduced\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n}\n\n// HeaterFan\nif (msg.payload.heaterFan === \"unchanged\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"increased\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"reduced\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n}\n\n// CoolerFan\nif (msg.payload.coolerFan === \"unchanged\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"increased\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"reduced\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n}\n\n// LightIntensity\nif (msg.payload.lightIntensity === \"unchanged\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"increased\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"reduced\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n}\n\n// VentsALL\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"increased\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"reduced\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n}\n\n// VentsTopSpeed\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"increased\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"reduced\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n}\n\n// VentsDownSpeed\nif (msg.payload.ventsDownSpeed === \"unchanged\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"increased\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"reduced\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n}\n\n\n\nreturn outputs;\n","outputs":9,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1520,"y":940,"wires":[["61c8e4bc0fb9f598"],["85576630d2685b3e"],["9e7bc6d79550445b"],[],["13dd6ae7815b011d"],[],[],[],[]]},{"id":"acbb671a920e1204","type":"function","z":"d95a2d1f80d65696","g":"39650dd0d506b2d1","name":"Exhaust Setup","func":"// Hilfsfunktion zur √úberpr√ºfung, ob ein Wert numerisch ist\nconst isNumeric = (value) => {\n    return !isNaN(parseFloat(value)) && isFinite(value);\n};\n\n// Funktion zur Bestimmung des dutyCycle-Werts\nconst findDutyCycle = (exhaustArray) => {\n    if (exhaustArray.length === 0) {\n        return null; // Keine Werte zu verarbeiten, wenn das Array leer ist\n    }\n    for (let i = 0; i < exhaustArray.length; i++) {\n        if (isNumeric(exhaustArray[i].value)) {\n            return parseInt(exhaustArray[i].value, 10);\n        }\n    }\n    return null; // Falls kein numerischer Wert gefunden wurde\n};\n\nlet outputs = [null, null, null, null]; // Array f√ºr vier Ausg√§nge\n\n// Zustand der Abluft und Geschwindigkeit aus der Payload extrahieren\nconst exhaustSpeed = msg.payload.exhaustSet.value || 'unchanged'; // Anpassung hier: falls kein Wert vorhanden ist, setze auf 'unchanged'\nlet exhaustState = 'off'; // Standardwert setzen, falls kein Zustand gefunden wird\nif (msg.payload.Exhaust && msg.payload.Exhaust.length > 0) {\n    const exhaustSwitch = msg.payload.Exhaust.find(e => e.entity_id && e.entity_id.toLowerCase().includes(\"switch\"));\n    if (exhaustSwitch && exhaustSwitch.value) {\n        exhaustState = exhaustSwitch.value;\n    }\n}\n\nconst dutyCycle = findDutyCycle(msg.payload.Exhaust) || 10; // Anpassung hier: falls kein Wert vorhanden ist, setze auf 10\n\nlet newDutyCycle = dutyCycle;\n\n// Berechnung des neuen Duty Cycle basierend auf festen Schritten\nif (exhaustSpeed === 'increased') {\n    newDutyCycle = dutyCycle + 5;\n} else if (exhaustSpeed === 'reduced') {\n    newDutyCycle = dutyCycle - 5;\n}\n\n// Stellen Sie sicher, dass der neue Duty Cycle innerhalb der Grenzen liegt\nnewDutyCycle = Math.min(95, Math.max(10, newDutyCycle));\n\n// Abluft starten auf dem ersten Ausgang, wenn sie aus ist und erh√∂ht werden muss\nif (exhaustSpeed === \"increased\" && exhaustState === \"off\") {\n    outputs[0] = { payload: \"Starte Abluft\", topic: \"Start\" };\n    return outputs;\n}\n\n// Abluft-Geschwindigkeit erh√∂hen, wenn sie bereits eingeschaltet ist\nif (exhaustSpeed === \"increased\" && exhaustState === \"on\") {\n    outputs[2] = { payload: newDutyCycle.toString(), topic: \"Increase\" };\n    return outputs;\n}\n\n// Abluft stoppen auf dem zweiten Ausgang, wenn die Geschwindigkeit reduziert wird und der Duty Cycle sehr niedrig ist\nif (exhaustSpeed === \"reduced\" && exhaustState === \"on\" && newDutyCycle <= 10) {\n    outputs[1] = { payload: \"Stoppe Abluft\", topic: \"Stop\" };\n    return outputs;\n} else if (exhaustSpeed === \"reduced\" && exhaustState === \"on\") {\n    outputs[2] = { payload: newDutyCycle.toString(), topic: \"Decrease\" };\n    return outputs;\n}\n\n// Warnung ausgeben, wenn versucht wird, die Abluftgeschwindigkeit zu reduzieren, obwohl sie bereits aus ist\nif (exhaustSpeed === \"reduced\" && exhaustState === \"off\") {\n    outputs[1] = { payload: \"Abluft bereits gestoppt, kann nicht weiter reduziert werden\", topic: \"AlreadyStopped\" };\n    return outputs;\n}\n\n// Nichts tun, wenn keine √Ñnderung erforderlich ist\nif (exhaustSpeed === \"unchanged\") {\n    outputs[3] = { payload: \"Abluft unver√§ndert, keine Aktion erforderlich\", topic: \"Nothing\" };\n    return outputs;\n}\n\nreturn outputs; // R√ºckgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2140,"y":700,"wires":[["ed48bd245e4075d8"],["ed48bd245e4075d8"],["a3cfacc22ceb6aee","ed48bd245e4075d8"],["ed48bd245e4075d8"]]},{"id":"2db70e9c77512cd5","type":"http request","z":"d95a2d1f80d65696","g":"39650dd0d506b2d1","name":"DutyPostChange","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.235:5544/air/ctrl","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":2430,"y":760,"wires":[["91a1ad1cbe0b7c09"]]},{"id":"a3cfacc22ceb6aee","type":"function","z":"d95a2d1f80d65696","g":"39650dd0d506b2d1","name":"DutyChanger","func":"\nconst NewDuty = msg.payload\n\nmsg.payload = { \"newDuty\": NewDuty}\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":2270,"y":800,"wires":[["2db70e9c77512cd5","91a1ad1cbe0b7c09"]]},{"id":"61c8e4bc0fb9f598","type":"join","z":"d95a2d1f80d65696","g":"39650dd0d506b2d1","name":"exhasutData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1940,"y":680,"wires":[["acbb671a920e1204","ee92038496ac7849"]]},{"id":"ea7632f875a34c08","type":"link in","z":"d95a2d1f80d65696","g":"39650dd0d506b2d1","name":"ExhaustData","links":["4283f043fbd1a875"],"x":1885,"y":640,"wires":[["61c8e4bc0fb9f598"]]},{"id":"4423ab9f0a3a7051","type":"link out","z":"d95a2d1f80d65696","g":"39650dd0d506b2d1","name":"ExhaustFlowerON","mode":"link","links":["450d50f88a446fed"],"x":2325,"y":640,"wires":[]},{"id":"4355525d0b4b8c51","type":"link out","z":"d95a2d1f80d65696","g":"39650dd0d506b2d1","name":"ExhaustDryerOFF","mode":"link","links":["3508a307ab2b868f"],"x":2325,"y":680,"wires":[]},{"id":"ed48bd245e4075d8","type":"debug","z":"d95a2d1f80d65696","g":"39650dd0d506b2d1","name":"debug 252","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2090,"y":760,"wires":[]},{"id":"ee92038496ac7849","type":"debug","z":"d95a2d1f80d65696","g":"39650dd0d506b2d1","name":"debug 253","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2110,"y":640,"wires":[]},{"id":"91a1ad1cbe0b7c09","type":"debug","z":"d95a2d1f80d65696","g":"39650dd0d506b2d1","name":"debug 254","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2450,"y":800,"wires":[]},{"id":"a337b42e213aa3d0","type":"function","z":"d95a2d1f80d65696","g":"9f5e15c59748e483","name":"BefeuchterSetup","func":"let outputs = [null, null, null];\n\nlet humidifierState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.humidifier.length; i++) {\n    if (msg.payload.humidifier[i].entity_id.includes('humidifier')) {\n        humidifierState = msg.payload.humidifier[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.humidifierSet.value === \"increased\" && humidifierState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.humidifierSet.value === \"reduced\" && humidifierState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.humidifierSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Befeuchter unver√§ndert, keine Aktion erforderlich\",data:msg.payload, topic: \"Nothing\" };\n}\n\nreturn outputs; // R√ºckgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2190,"y":960,"wires":[["1e3ba145f83bde83"],["be27891ec0917324"],["2cc85d66331ad017","f3356508ddab7974"],[]]},{"id":"85576630d2685b3e","type":"join","z":"d95a2d1f80d65696","g":"9f5e15c59748e483","name":"HumidityData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1940,"y":960,"wires":[["a337b42e213aa3d0","d24528c2638458fa"]]},{"id":"a7442e288be67768","type":"link in","z":"d95a2d1f80d65696","g":"9f5e15c59748e483","name":"HumidifierData","links":["7316af7c4211ddef"],"x":1875,"y":920,"wires":[["85576630d2685b3e"]]},{"id":"d24528c2638458fa","type":"debug","z":"d95a2d1f80d65696","g":"9f5e15c59748e483","name":"debug 255","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2100,"y":900,"wires":[]},{"id":"2cc85d66331ad017","type":"debug","z":"d95a2d1f80d65696","g":"9f5e15c59748e483","name":"debug 256","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2090,"y":1020,"wires":[]},{"id":"1e3ba145f83bde83","type":"link out","z":"d95a2d1f80d65696","g":"9f5e15c59748e483","name":"DryingHumidifierON","mode":"link","links":["acb0f5addd129adf","f101e0061d61ac8d"],"x":2345,"y":920,"wires":[]},{"id":"be27891ec0917324","type":"link out","z":"d95a2d1f80d65696","g":"9f5e15c59748e483","name":"DryingHumidifierOFF","mode":"link","links":["711d5e9407680562"],"x":2405,"y":940,"wires":[]},{"id":"f3356508ddab7974","type":"link out","z":"d95a2d1f80d65696","g":"9f5e15c59748e483","name":"HumidifierMode","mode":"link","links":[],"x":2435,"y":980,"wires":[]},{"id":"0724818ae0171d24","type":"debug","z":"d95a2d1f80d65696","name":"debug 257","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1170,"y":740,"wires":[]},{"id":"6644813d9eaf280d","type":"function","z":"d95a2d1f80d65696","g":"cc8c0cb779e05053","name":"DehumidifierSetup","func":"let outputs = [null, null, null];\n\nlet dehumidifierState = null;\n\n// Schleife, um den Zustand des Dehumidifier zu finden\nfor (let i = 0; i < msg.payload.dehumidifier.length; i++) {\n    if (msg.payload.dehumidifier[i].entity_id.includes('dehumidifier')) {\n        dehumidifierState = msg.payload.dehumidifier[i].value;\n        break;\n    }\n}\n\n// Dehumidifier starten\nif (msg.payload.dehumidifierSet.value === \"increased\" && dehumidifierState === \"off\") {\n    outputs[0] = { payload: \"Starte Dehumidifier\", topic: \"Start\" };\n}\n\n// Dehumidifier stoppen\nif (msg.payload.dehumidifierSet.value === \"reduced\" && dehumidifierState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Dehumidifier\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.dehumidifierSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Dehumidifier unver√§ndert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // R√ºckgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2190,"y":1180,"wires":[["96a3a134f4100677"],["a2343e8d5b5a2cfe"],["811f01977939a2aa"],[]]},{"id":"9e7bc6d79550445b","type":"join","z":"d95a2d1f80d65696","g":"cc8c0cb779e05053","name":"DehumidifierData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1970,"y":1180,"wires":[["6644813d9eaf280d"]]},{"id":"1136a49332e1678a","type":"link in","z":"d95a2d1f80d65696","g":"cc8c0cb779e05053","name":"Dehumidifier","links":["6619d22506855909"],"x":1875,"y":1120,"wires":[["9e7bc6d79550445b"]]},{"id":"96a3a134f4100677","type":"link out","z":"d95a2d1f80d65696","g":"cc8c0cb779e05053","name":"DryDehumidiferON","mode":"link","links":["99832bcde6aaec0d"],"x":2345,"y":1140,"wires":[]},{"id":"a2343e8d5b5a2cfe","type":"link out","z":"d95a2d1f80d65696","g":"cc8c0cb779e05053","name":"DryDehumidiferOFF","mode":"link","links":["b576fb3aef39185a"],"x":2395,"y":1160,"wires":[]},{"id":"811f01977939a2aa","type":"link out","z":"d95a2d1f80d65696","g":"cc8c0cb779e05053","name":"link out 264","mode":"link","links":[],"x":2445,"y":1200,"wires":[]},{"id":"13dd6ae7815b011d","type":"join","z":"d95a2d1f80d65696","g":"6e865cec49167337","name":"CoolerData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","useparts":true,"accumulate":false,"timeout":"","count":"1","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1950,"y":1360,"wires":[["c915062c9362e93a"]]},{"id":"aad3dbd470556729","type":"link in","z":"d95a2d1f80d65696","g":"6e865cec49167337","name":"link in 86","links":["ef8d063b02d2d6fa"],"x":1875,"y":1300,"wires":[["13dd6ae7815b011d"]]},{"id":"c915062c9362e93a","type":"function","z":"d95a2d1f80d65696","g":"6e865cec49167337","name":"CoolerSetup","func":"let outputs = [null, null, null];\n\nlet coolerState = null;\n\n// Schleife, um den Zustand des Cooler zu finden\nfor (let i = 0; i < msg.payload.cooler.length; i++) {\n    if (msg.payload.cooler[i].entity_id.includes('cooler')) {\n        coolerState = msg.payload.cooler[i].value;\n        break;\n    }\n}\n\n// Cooler starten\nif (msg.payload.coolerSet.value === \"increased\" && coolerState === \"off\") {\n    outputs[0] = { payload: \"Start Cooler\", topic: \"Start\" };\n}\n\n// Cooler stoppen\nif (msg.payload.coolerSet.value === \"reduced\" && coolerState === \"on\") {\n    outputs[1] = { payload: \"Stop Cooler\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.coolerSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Cooler unver√§ndert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // R√ºckgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2210,"y":1360,"wires":[["6f79edbf657fb486"],["2392fac8ee3c6abf"],["0a35d57f04cf3e61"],[]]},{"id":"6f79edbf657fb486","type":"link out","z":"d95a2d1f80d65696","g":"6e865cec49167337","name":"DryCoolerON","mode":"link","links":["5a5614359d863721"],"x":2325,"y":1320,"wires":[]},{"id":"2392fac8ee3c6abf","type":"link out","z":"d95a2d1f80d65696","g":"6e865cec49167337","name":"DryCoolerOFF","mode":"link","links":["54ac3c52a83ae28a"],"x":2375,"y":1340,"wires":[]},{"id":"0a35d57f04cf3e61","type":"link out","z":"d95a2d1f80d65696","g":"6e865cec49167337","name":"link out 265","mode":"link","links":[],"x":2430,"y":1380,"wires":[]},{"id":"35de4279c266e8c0","type":"link in","z":"d95a2d1f80d65696","name":"Env","links":["265fe00ebc822be2"],"x":75,"y":420,"wires":[[]]},{"id":"a55a43734b865a7c","type":"comment","z":"d95a2d1f80d65696","name":"FIX THIS !!!!","info":"","x":1030,"y":540,"wires":[]},{"id":"22efd312e63cf496","type":"function","z":"d95a2d1f80d65696","name":"DryingHandler","func":"const outputs = [null, null, null, null];\n\nconst tolerance = 0.3\nconst dewpointTolerance = 2.0; // Toleranzwert f√ºr Taupunkt in Grad Celsius\n\nconst outdoortemp = msg.payload[\"sensor.tempoutdoor\"];\n\nconst targetHum = msg.payload.TargetDryData.TargetDryHum;\nconst targetTemp = msg.payload.TargetDryData.TargetDryTemp;\nconst targetDewpoint = msg.payload.TargetDryData.TargetDryDew;\nconst targetVP = msg.payload.TargetDryData.targetVP;\n\nconst currentHum = msg.payload.dryData.dryHum;\nconst currentTemp = msg.payload.dryData.dryTemp;\nconst currentDewpoint = msg.payload.dryData.dryDewPoint;\nconst currentVP = msg.payload.dryData.dryVP;\n\n// Logging der aktuellen VP und Ziel-VP-Bereich zur √úberpr√ºfung und Debugging.\nnode.warn(`Drying-VP target: ${targetVP}`);\n\nfunction calculateAdjustmentBasedOnConditions() {\n    const adjustments = {\n        exhaustSpeed: \"unchanged\",\n        humidifier: \"unchanged\",\n        dehumidifier: \"unchanged\",\n        heaterFan: \"unchanged\",\n        coolerFan: \"unchanged\",\n        ventsALL: \"unchanged\",\n    };\n\n    // Taupunkt Anpassung\n    if (currentVP > targetVP + tolerance) {\n        node.warn(`Drying-VP: ${currentVP} zu hoch an Target: ${targetVP}.`);\n        return {\n            exhaustSpeed: \"increased\",      // Erh√∂ht die Abluftgeschwindigkeit, um feuchte Luft herauszuziehen\n            humidifier: \"reduced\",          // Schaltet den Luftbefeuchter aus, um Feuchtigkeit zu reduzieren\n            dehumidifier: \"increased\",      // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            coolerFan: \"reduced\",           // Verringert die K√ºhlleistung, um die Temperatur zu erh√∂hen\n        };\n    } else if (currentVP < targetVP - tolerance) {\n        node.warn(`Drying-VP: ${currentVP} zu gering an Target:${targetVP}. `);\n        return {\n            exhaustSpeed: \"reduced\",    // Reduziert die Abluftgeschwindigkeit, h√§lt feuchte Luft im Raum\n            humidifier: \"increased\",    // Schaltet den Luftbefeuchter ein, um Feuchtigkeit zu erh√∂hen\n            dehumidifier: \"reduced\",    // Schaltet den Luftentfeuchter aus, um Feuchtigkeit zu erh√∂hen\n            coolerFan: \"increased\",     // Erh√∂ht die K√ºhlleistung, um die Temperatur zu verringern\n        };\n    } else {\n        node.warn(`Drying-VP: ${currentVP} im gew√ºnschten Bereich`);\n        return {\n            exhaustSpeed: \"unchanged\",\n            humidifier: \"unchanged\",\n            dehumidifier: \"unchanged\",\n            coolerFan: \"unchanged\",\n        };\n    }\n}\n\n// Entscheidungslogik zur Steuerung der Umgebungsbedingungen, nutzt die calculateAdjustmentBasedOnConditions Funktion.\nconst adjustments = calculateAdjustmentBasedOnConditions();\n\n// Hinzuf√ºgen der Anpassungen zum Payload\nmsg.payload = {\n    exhaustSpeed: adjustments.exhaustSpeed,\n    humidifier: adjustments.humidifier,\n    dehumidifier: adjustments.dehumidifier,\n    heaterFan: adjustments.heaterFan,\n    coolerFan: adjustments.coolerFan,\n};\n\n\n// R√ºckgabe des modifizierten Payloads f√ºr weitere Verwendung im Flow.\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1180,"y":880,"wires":[["48c586de4b0046b1"]]},{"id":"947331172e5c9d8d","type":"function","z":"d95a2d1f80d65696","name":"DryingHandler","func":"const outputs = [null, null, null, null];\n\nconst tolerance = 0.3\nconst dewpointTolerance = 2.0; // Toleranzwert f√ºr Taupunkt in Grad Celsius\n\nconst outdoortemp = msg.payload[\"sensor.tempoutdoor\"];\n\nconst targetHum = msg.payload.TargetDryData.TargetDryHum;\nconst targetTemp = msg.payload.TargetDryData.TargetDryTemp;\nconst targetDewpoint = msg.payload.TargetDryData.TargetDryDew;\nconst targetVP = msg.payload.TargetDryData.targetVP;\n\nconst currentHum = msg.payload.dryData.dryHum;\nconst currentTemp = msg.payload.dryData.dryTemp;\nconst currentDewpoint = msg.payload.dryData.dryDewPoint;\nconst currentVP = msg.payload.dryData.dryVP;\n\n// Logging der aktuellen VP und Ziel-VP-Bereich zur √úberpr√ºfung und Debugging.\nnode.warn(`Drying-VP target: ${targetVP}`);\n\nfunction calculateAdjustmentBasedOnConditions() {\n    const adjustments = {\n        exhaustSpeed: \"unchanged\",\n        humidifier: \"unchanged\",\n        dehumidifier: \"unchanged\",\n        heaterFan: \"unchanged\",\n        coolerFan: \"unchanged\",\n        ventsALL: \"unchanged\",\n    };\n\n    // Taupunkt Anpassung\n    if (currentVP > targetVP + tolerance) {\n        node.warn(`Drying-VP: ${currentVP} zu hoch an Target: ${targetVP}.`);\n        return {\n            exhaustSpeed: \"increased\",      // Erh√∂ht die Abluftgeschwindigkeit, um feuchte Luft herauszuziehen\n            humidifier: \"reduced\",          // Schaltet den Luftbefeuchter aus, um Feuchtigkeit zu reduzieren\n            dehumidifier: \"increased\",      // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            coolerFan: \"reduced\",           // Verringert die K√ºhlleistung, um die Temperatur zu erh√∂hen\n        };\n    } else if (currentVP < targetVP - tolerance) {\n        node.warn(`Drying-VP: ${currentVP} zu gering an Target:${targetVP}. `);\n        return {\n            exhaustSpeed: \"reduced\",    // Reduziert die Abluftgeschwindigkeit, h√§lt feuchte Luft im Raum\n            humidifier: \"increased\",    // Schaltet den Luftbefeuchter ein, um Feuchtigkeit zu erh√∂hen\n            dehumidifier: \"reduced\",    // Schaltet den Luftentfeuchter aus, um Feuchtigkeit zu erh√∂hen\n            coolerFan: \"increased\",     // Erh√∂ht die K√ºhlleistung, um die Temperatur zu verringern\n        };\n    } else {\n        node.warn(`Drying-VP: ${currentVP} im gew√ºnschten Bereich`);\n        return {\n            exhaustSpeed: \"unchanged\",\n            humidifier: \"unchanged\",\n            dehumidifier: \"unchanged\",\n            coolerFan: \"unchanged\",\n        };\n    }\n}\n\n// Entscheidungslogik zur Steuerung der Umgebungsbedingungen, nutzt die calculateAdjustmentBasedOnConditions Funktion.\nconst adjustments = calculateAdjustmentBasedOnConditions();\n\n// Hinzuf√ºgen der Anpassungen zum Payload\nmsg.payload = {\n    exhaustSpeed: adjustments.exhaustSpeed,\n    humidifier: adjustments.humidifier,\n    dehumidifier: adjustments.dehumidifier,\n    heaterFan: adjustments.heaterFan,\n    coolerFan: adjustments.coolerFan,\n};\n\n\n// R√ºckgabe des modifizierten Payloads f√ºr weitere Verwendung im Flow.\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1200,"y":1080,"wires":[["48c586de4b0046b1"]]},{"id":"1f1beb34e151ced8","type":"function","z":"d95a2d1f80d65696","name":"DryingHandler","func":"const outputs = [null, null, null, null];\n\nconst tolerance = 0.3\nconst dewpointTolerance = 2.0; // Toleranzwert f√ºr Taupunkt in Grad Celsius\n\nconst outdoortemp = msg.payload[\"sensor.tempoutdoor\"];\n\nconst targetHum = msg.payload.TargetDryData.TargetDryHum;\nconst targetTemp = msg.payload.TargetDryData.TargetDryTemp;\nconst targetDewpoint = msg.payload.TargetDryData.TargetDryDew;\nconst targetVP = msg.payload.TargetDryData.targetVP;\n\nconst currentHum = msg.payload.dryData.dryHum;\nconst currentTemp = msg.payload.dryData.dryTemp;\nconst currentDewpoint = msg.payload.dryData.dryDewPoint;\nconst currentVP = msg.payload.dryData.dryVP;\n\n// Logging der aktuellen VP und Ziel-VP-Bereich zur √úberpr√ºfung und Debugging.\nnode.warn(`Drying-VP target: ${targetVP}`);\n\nfunction calculateAdjustmentBasedOnConditions() {\n    const adjustments = {\n        exhaustSpeed: \"unchanged\",\n        humidifier: \"unchanged\",\n        dehumidifier: \"unchanged\",\n        heaterFan: \"unchanged\",\n        coolerFan: \"unchanged\",\n        ventsALL: \"unchanged\",\n    };\n\n    // Taupunkt Anpassung\n    if (currentVP > targetVP + tolerance) {\n        node.warn(`Drying-VP: ${currentVP} zu hoch an Target: ${targetVP}.`);\n        return {\n            exhaustSpeed: \"increased\",      // Erh√∂ht die Abluftgeschwindigkeit, um feuchte Luft herauszuziehen\n            humidifier: \"reduced\",          // Schaltet den Luftbefeuchter aus, um Feuchtigkeit zu reduzieren\n            dehumidifier: \"increased\",      // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            coolerFan: \"reduced\",           // Verringert die K√ºhlleistung, um die Temperatur zu erh√∂hen\n        };\n    } else if (currentVP < targetVP - tolerance) {\n        node.warn(`Drying-VP: ${currentVP} zu gering an Target:${targetVP}. `);\n        return {\n            exhaustSpeed: \"reduced\",    // Reduziert die Abluftgeschwindigkeit, h√§lt feuchte Luft im Raum\n            humidifier: \"increased\",    // Schaltet den Luftbefeuchter ein, um Feuchtigkeit zu erh√∂hen\n            dehumidifier: \"reduced\",    // Schaltet den Luftentfeuchter aus, um Feuchtigkeit zu erh√∂hen\n            coolerFan: \"increased\",     // Erh√∂ht die K√ºhlleistung, um die Temperatur zu verringern\n        };\n    } else {\n        node.warn(`Drying-VP: ${currentVP} im gew√ºnschten Bereich`);\n        return {\n            exhaustSpeed: \"unchanged\",\n            humidifier: \"unchanged\",\n            dehumidifier: \"unchanged\",\n            coolerFan: \"unchanged\",\n        };\n    }\n}\n\n// Entscheidungslogik zur Steuerung der Umgebungsbedingungen, nutzt die calculateAdjustmentBasedOnConditions Funktion.\nconst adjustments = calculateAdjustmentBasedOnConditions();\n\n// Hinzuf√ºgen der Anpassungen zum Payload\nmsg.payload = {\n    exhaustSpeed: adjustments.exhaustSpeed,\n    humidifier: adjustments.humidifier,\n    dehumidifier: adjustments.dehumidifier,\n    heaterFan: adjustments.heaterFan,\n    coolerFan: adjustments.coolerFan,\n};\n\n\n// R√ºckgabe des modifizierten Payloads f√ºr weitere Verwendung im Flow.\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1200,"y":1280,"wires":[["48c586de4b0046b1"]]},{"id":"3614513fa9c5b0f7","type":"debug","z":"d95a2d1f80d65696","name":"Cooler","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":430,"y":820,"wires":[]},{"id":"aff5cab903300a7c","type":"debug","z":"d95a2d1f80d65696","name":"Heater","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":430,"y":860,"wires":[]},{"id":"ef8d063b02d2d6fa","type":"link out","z":"d95a2d1f80d65696","name":"Cooler","mode":"link","links":["aad3dbd470556729"],"x":605,"y":820,"wires":[]},{"id":"2c58a65cb77f695b","type":"link out","z":"d95a2d1f80d65696","name":"Heater","mode":"link","links":[],"x":605,"y":860,"wires":[]},{"id":"21f77f51eed89bc1","type":"ha-entity-config","server":"9e444506086606d5","deviceConfig":"","name":"DryingAVGHUM","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"DryingAVGHUM"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"humidity"},{"property":"unit_of_measurement","value":"%"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"f4caa1d3cf2afd02","type":"ha-entity-config","server":"9e444506086606d5","deviceConfig":"","name":"DryingAVGTemp","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"DryingAVGTemp"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"temperature"},{"property":"unit_of_measurement","value":"¬∞C"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"c4dd8cf5329e0b68","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"WaterActivityTent","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"WaterActivityTent"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":""},{"property":"unit_of_measurement","value":""},{"property":"state_class","value":""}],"resend":false,"debugEnabled":false},{"id":"7adf25576d4cdadb","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VPD-DRYING-Tent-Dewpoint","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VPD-DRYING-Tent-Dewpoint"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"pressure"},{"property":"unit_of_measurement","value":"kPa"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"73b7a7323e840e31","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VaporPressure-Saturation","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VaporPressure-Saturation"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"pressure"},{"property":"unit_of_measurement","value":"mbar"},{"property":"state_class","value":""}],"resend":false,"debugEnabled":false},{"id":"c9b08ec4b93dfab7","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"VaporPressure-Actual","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VaporPressure-Actual"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"pressure"},{"property":"unit_of_measurement","value":"mbar"},{"property":"state_class","value":""}],"resend":false,"debugEnabled":false},{"id":"4725cf9d34fa649f","type":"ha-entity-config","server":"9e444506086606d5","deviceConfig":"","name":"DryingAVGDewpoint","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"DryingAVGDewpoint"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"temperature"},{"property":"unit_of_measurement","value":"¬∞C"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"5772bf4c.b461d","type":"server","name":"OpenGrowBox","version":5,"addon":true,"rejectUnauthorizedCerts":true,"ha_boolean":"y|yes|true|on|home|open","connectionDelay":true,"cacheJson":true,"heartbeat":false,"heartbeatInterval":"30","areaSelector":"friendlyName","deviceSelector":"friendlyName","entitySelector":"friendlyName","statusSeparator":"at: ","statusYear":"hidden","statusMonth":"short","statusDay":"numeric","statusHourCycle":"h23","statusTimeFormat":"h:m","enableGlobalContextStore":true},{"id":"4f7f25d7aed69b8a","type":"ha-entity-config","server":"9e444506086606d5","deviceConfig":"","name":"vpdDrying","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"vpdDrying"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"pressure"},{"property":"unit_of_measurement","value":"kPa"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"5e8e4b22b2382ebb","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"DryTentCana","version":"6","entityType":"select","haConfig":[{"property":"name","value":"DryTentCana"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"config"},{"property":"options","value":["Drying","Curing","Holding","DarkRoom","Disabled"]}],"resend":false,"debugEnabled":false},{"id":"9e444506086606d5","type":"server","name":"Home Assistant","addon":true}]