[{"id":"87bab898757000a2","type":"tab","label":"FlowerCtrl","disabled":false,"info":"","env":[]},{"id":"0963c29ce537e39b","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["180eab0539ef4f5b","1e5ab4d1f342f560","78de53c8bb55e403","d37ecd3c5f82cdbc","c1e70d8332a5d4e4","da916caa4c612842","a2491093273ea707","11736a563bfcb495","b81d8ddcfd887066","84809bfb26038acc","2cab4ff46bb255d1","fa452f0146e78478","24030fcfc3c0c570","17ce802afe4871e3","8bb02e174a322903"],"x":1324,"y":439,"w":942,"h":482},{"id":"570df94b7b8fd3db","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["afeb5423a6f3b5db","bab58a1e055f1530","fb64d5b83ef0f886","718bc098c204f567","1fc52b3283aabd93","cf64ead2f0f9c53f","7856db1b9077bca0","5e2b8fb494e4ebfe","7e8b342e3753e452","808f10a848fd1bbc","8478947630a71dd8","60320ccde9c6bb77","90926a27b0c54411","5cfa060f5b8332cf","e85f06938d85911a"],"x":1334,"y":979,"w":792,"h":382},{"id":"6abebfeb172743b0","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["f1b0b6e3183aaeab","2e49f2a877dc0908","e878287b07f180fd","78d116b1f17e53a9","cb901688be6c0de1","546819f8bcf743d9","7b3614a53b99b56b","e6b2c630db705db7","a7faaa78e3ab3a02","e3900c6fcb1518f1","76500f9124621519","10c052baa77914bd","c8950634986ed39f","6b7c54b84d733581","b5790a0ccc6a2965","464ace433af602f5"],"x":1334,"y":1419,"w":792,"h":402},{"id":"2a37f65b72394049","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["33ec8a5f3c05962b","86b2ec1b10c4c0f3","7365db5b05b0cdad","5621782b9ee9ac2e","55da67fef2acad51","356ce5b53838cd67","6b389a8ca3ee7f49","cee90b8566452ac8","037948bc84926efa","e1a942ad8a536ef3","39099da8915e29b7","27e01016801fc664"],"x":2354,"y":319,"w":542,"h":342},{"id":"1a459c099aab5c42","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["6cabaff09a9fa85a","8ba8b97980f98d4e","24cec488a394f147","cdabbf668a463011","7b1434a24c5c2d0a","6dc8f908895b8048","24a35980a67b1b86","b5fcb9fc8354bcab","ce4696697eb9cc47","fc7309bac2a5580d","3dbeae382f71f092","ea181fad67e4609d","330a5b405ad89acf","4071ade6426af61b","6077fa1071b64972","a057a5f182e73de8","de57249fcd512509","c4d9642cd60ee3b5","34b3481968acc628","5f10e37424012087","7b33e1fa9654de02","194edf344188f8d1","f1ea259d4cd1ad73"],"x":674,"y":379,"w":552,"h":802},{"id":"684260cd34e37219","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["4675a31b7d62a521","e352eb9ec5f51329","fc63cad79428afc6","1d43ba5bea872eea","650d94e8238e269e","b343362282198e73","e26a880fb2d24667","464b23e70cf844c8","fae02ab1f3ce0e63","e9088dc392b5024f","01d5f2b84873c638","eb72ffdb8d671839","da4a10ce600a3a02","97fb7c5e5e3f9dee","c6f9196bc280b4e5","b5a693bcd77d4f80","8a884fe39e4f1e3c","54b1d8a63e1902a7","47249219e55b6920","3d4627f3225a086b","d51dc8176bf8690e","a96ccda7addd1614"],"x":634,"y":19,"w":1252,"h":342},{"id":"952a4bc7dff3f66a","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["90e7d66de4e646ed","dcc4f2b4266ce2c9","75cd81ac71068cbe","f2d5e7c61c28de89","34e2ea1867e751f9","ea836fad7734354a","1f21fdc068ba4fdd"],"x":1914,"y":59,"w":992,"h":162},{"id":"e571ea1d17733f37","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["2998d9a1245dddc9","f902a5ba1e7c93b5","99eed7784fee4257","00bda2dbce1f7cc7","e84f5a714316bb95","b99a15275082032e","85c3440005e758b3"],"x":2964,"y":919,"w":772,"h":142},{"id":"9b20a372abab7583","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["1a5f158673e007b2","73a743c68faf5f1e","909f9b28f49204e5","f0b5ee67a8063949","21e006a3e8bc99c8","4810fb25535f84fe","7233a2912b7504c9","327c5de2023af8c2","033d8f63407adc30","90d00cec7854934c","cb4f634c782f0c95","b86eac9a31fb568d"],"x":2954,"y":619,"w":1032,"h":222},{"id":"7ffeaeb39befbd13","type":"group","z":"87bab898757000a2","g":"b758b53640d466a4","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["ba01f54da92cb494","6e54d03748788ac3","a5e76ce616ccd09b","73c9321033ae54ac","5c5b756c6fed2199","40cd9e275785f068","45acfdd0b6e88579","bddb396981a46ba6"],"x":2994,"y":2079,"w":762,"h":162},{"id":"09296d5bd2225e88","type":"group","z":"87bab898757000a2","g":"b758b53640d466a4","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["9dbb816d3dd0bfa8","32d42160c20106c8","f22e390bd2f006e9","6ed3e5d973b389c5","0a6c31cfdc8d2520","8a2ad5076a271f6e","db41548602716d21","42b00b5b259da75d"],"x":2994,"y":1879,"w":742,"h":162},{"id":"5d46755c395cc634","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["a0e539be6495156a","49c9a1e109c2af12","01417a0b06b01a47","3081bbc3923d74d6","145ff0f6e90930a9","ce08bd17130ae3da","a8f4aa363971a87e"],"x":2964,"y":1339,"w":782,"h":142},{"id":"1f1393384d8b6026","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["9930181e9729f506","c7d049bd4613032b","1e4955e3e9e67ced","24cc65d018bd1921","d0cc247c71edd2bd","c3dcc7c02b588f54","f8c71d23e8b2d7d4"],"x":2964,"y":1539,"w":782,"h":162},{"id":"6b79b465bd6d66fa","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["f6801c858c320ca9","b29b71f5b5f8f403","ef1e7f1156daa588","d0914064742b75a7","15a20f16124069a7","76fcaf89b2120d63","211a33b6ee23cb2a"],"x":2964,"y":1099,"w":782,"h":162},{"id":"13fe4471abdc9eb6","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["09eb94f26d493e8b","df48cf3d2f7eba94","dd0baa65bd4228de","4e6d8c2f1c6a02f4","c7678607425efafe","62497009f7293fbd","f13854017a1084f1","96276016bab2e1aa","46b63c5a93a0813a","5369d1e3838faa76","b9fb8641ac981f23","7f00e431b1de7652"],"x":2974,"y":319,"w":1152,"h":242},{"id":"b758b53640d466a4","type":"group","z":"87bab898757000a2","style":{"stroke":"#999999","stroke-opacity":"1","fill":"none","fill-opacity":"1","label":true,"label-position":"nw","color":"#a4a4a4"},"nodes":["7ffeaeb39befbd13","09296d5bd2225e88","2402aa0c07cdcf6c"],"x":2968,"y":1759,"w":814,"h":508},{"id":"709f15e79c3e231e","type":"junction","z":"87bab898757000a2","x":360,"y":800,"wires":[["6f852176198d67b8","0d648d1a287b160d","7b33e1fa9654de02"]]},{"id":"006d6dc52bbe29da","type":"junction","z":"87bab898757000a2","x":360,"y":760,"wires":[["f400654d457ab0af","79bde8bec83cb56a","fc7309bac2a5580d"]]},{"id":"ad366fe75322e5d3","type":"junction","z":"87bab898757000a2","x":360,"y":720,"wires":[["349dcfebcd7877da","9d125ce221658824","ce4696697eb9cc47"]]},{"id":"e6c1ccc1e8bf4243","type":"junction","z":"87bab898757000a2","x":360,"y":680,"wires":[["8d95d41fedb12bda","f76573c680abe051","5f10e37424012087"]]},{"id":"95cfd8479db6cdb6","type":"junction","z":"87bab898757000a2","x":360,"y":640,"wires":[["0a1295920208c384","c4d9642cd60ee3b5"]]},{"id":"72f71ec5f3b106d5","type":"junction","z":"87bab898757000a2","x":360,"y":580,"wires":[["e4b5460d3febe1a2","6dc8f908895b8048"]]},{"id":"dd5b4ad7e458c3f6","type":"junction","z":"87bab898757000a2","x":360,"y":540,"wires":[["18c34d8b20c39f73","24a35980a67b1b86"]]},{"id":"b8d42bdbb97224c9","type":"junction","z":"87bab898757000a2","x":360,"y":480,"wires":[["cee884061f3f2261","a057a5f182e73de8"]]},{"id":"310608ec1d45fcb2","type":"junction","z":"87bab898757000a2","x":360,"y":440,"wires":[["0d29d605591497f4","8ba8b97980f98d4e"]]},{"id":"ae7ddd31bbfb2985","type":"junction","z":"87bab898757000a2","x":360,"y":400,"wires":[["9865254487956201","24cec488a394f147"]]},{"id":"a0aeced795617438","type":"junction","z":"87bab898757000a2","x":360,"y":360,"wires":[["1d22f5d38d2f029b","7b1434a24c5c2d0a"]]},{"id":"7b717655bc69afdc","type":"junction","z":"87bab898757000a2","x":360,"y":320,"wires":[["a46594e2514f068e","b5fcb9fc8354bcab"]]},{"id":"802c582eb02146c9","type":"junction","z":"87bab898757000a2","x":360,"y":280,"wires":[["79fa901ba76691b8","cdabbf668a463011"]]},{"id":"8b78835f54a976ce","type":"junction","z":"87bab898757000a2","x":360,"y":240,"wires":[["9f322326faf32502"]]},{"id":"b769596a4bbc4607","type":"junction","z":"87bab898757000a2","x":360,"y":200,"wires":[["5974b167ebb2f9e4","4675a31b7d62a521"]]},{"id":"ad196bb7c36068ab","type":"junction","z":"87bab898757000a2","x":360,"y":160,"wires":[["4302d5e5f0144f64","4675a31b7d62a521"]]},{"id":"1ded9b8984de496a","type":"junction","z":"87bab898757000a2","x":360,"y":120,"wires":[["dfe1f213a50dabe8"]]},{"id":"8f454b2610cab17e","type":"junction","z":"87bab898757000a2","x":330,"y":840,"wires":[["c06f47080f347a58","fc12515c1658f1b9"]]},{"id":"eab7247edeede781","type":"junction","z":"87bab898757000a2","x":320,"y":880,"wires":[["2ca4f310b0d6f11e","0109c4d9ec4db16e"]]},{"id":"69d2bbbaa57da104","type":"link in","z":"87bab898757000a2","name":"FlowerCtrl","links":["43ca19d80e63515d"],"x":55,"y":40,"wires":[["1bb8e9448a5f14de"]]},{"id":"1bb8e9448a5f14de","type":"debug","z":"87bab898757000a2","name":"FlowerTentData","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":180,"y":40,"wires":[]},{"id":"b9dfb243cc1af1b4","type":"link in","z":"87bab898757000a2","name":"FlowerLive","links":["e0e6fce7027c2e26"],"x":55,"y":80,"wires":[["bf6cdb0a0d2077a0","56aa552840d3803d"]]},{"id":"bf6cdb0a0d2077a0","type":"debug","z":"87bab898757000a2","name":"FlowerTentLiveData","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":190,"y":80,"wires":[]},{"id":"4675a31b7d62a521","type":"join","z":"87bab898757000a2","g":"684260cd34e37219","name":"VpdNeeds","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":740,"y":100,"wires":[["da4a10ce600a3a02"]]},{"id":"e352eb9ec5f51329","type":"function","z":"87bab898757000a2","g":"684260cd34e37219","name":"TentModesSetup","func":"// Initialisiert das Array für die Ausgänge mit Nullen\nlet outputs = [null, null, null, null, null ];\n\n// Überprüft den Zustand des eingehenden Payloads und setzt den entsprechenden Ausgang\nif (msg.payload === \"VPD Perfection\") {\n    return [{ payload: msg.payload, topic: \"Perfection\" }, null, null, null,null];\n}\nelse if (msg.payload === \"IN-VPD-Range\") {\n    return [null, { payload: msg.payload, topic: \"IN-VPD-Range\" }, null, null, null];\n}\nelse if (msg.payload === \"Targeted VPD\") {\n    return [null, null, { payload: msg.payload, topic: \"TargetedVPD\" }, null, null];\n}\nelse if (msg.payload === \"CropSteering\") {\n    return [null, null, null, { payload: msg.payload, topic: \"ModeDisabeld\" }, null ];\n}\nelse if (msg.payload === \"Disabled\") {\n    return [null, null, null, null, { payload: msg.payload, topic: \"ModeDisabeld\" }];\n}\n\n// Wenn keine Bedingungen zutreffen, sendet nichts\nreturn [null, null, null, null,null];\n","outputs":5,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1650,"y":220,"wires":[["b343362282198e73"],["e26a880fb2d24667"],["464b23e70cf844c8"],["a96ccda7addd1614"],["fc63cad79428afc6"]]},{"id":"fc63cad79428afc6","type":"function","z":"87bab898757000a2","g":"684260cd34e37219","name":"DISABLED AUTO","func":"msg.payload=\"DISABLED FLOWER\"\nreturn msg;","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1650,"y":280,"wires":[["1d43ba5bea872eea"]]},{"id":"1d43ba5bea872eea","type":"debug","z":"87bab898757000a2","g":"684260cd34e37219","name":"debug 118","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1630,"y":320,"wires":[]},{"id":"650d94e8238e269e","type":"api-current-state","z":"87bab898757000a2","g":"684260cd34e37219","name":"TentMode","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"select.flowertentmodes","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"TentMode","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1520,"y":120,"wires":[["e352eb9ec5f51329"]]},{"id":"b343362282198e73","type":"link out","z":"87bab898757000a2","g":"684260cd34e37219","name":"VPD-Perfektion","mode":"link","links":["1e5ab4d1f342f560"],"x":1845,"y":140,"wires":[]},{"id":"e26a880fb2d24667","type":"link out","z":"87bab898757000a2","g":"684260cd34e37219","name":"IN-Range-VPD","mode":"link","links":["f904b999069f9166","bab58a1e055f1530"],"x":1845,"y":180,"wires":[]},{"id":"180eab0539ef4f5b","type":"comment","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"VPD-Perfektion","info":"","x":1440,"y":480,"wires":[]},{"id":"1e5ab4d1f342f560","type":"link in","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"VPD-Perfektion","links":["b343362282198e73"],"x":1365,"y":540,"wires":[["d37ecd3c5f82cdbc"]]},{"id":"78de53c8bb55e403","type":"function","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"VPD State Values","func":"const plantStages = {\n    Germination: [0.42, 0.78], // Optimaler VPD-Bereich für Keimung bei 25-30°C\n    Clones: [0.42, 0.78],      // Optimaler VPD-Bereich für Klone bei 25-30°C\n    EarlyVeg: [0.55, 0.85],    // Optimaler VPD-Bereich für frühe Vegetation bei 20-25°C\n    MidVeg: [0.85, 1.1],      // Optimaler VPD-Bereich für mittlere Vegetation bei 20-25°C\n    LateVeg: [0.85, 1.2],     // Optimaler VPD-Bereich für späte Vegetation bei 20-25°C\n    EarlyFlower: [1, 1.25], // Optimaler VPD-Bereich für frühe Blüte bei 20-25°C\n    MidFlower: [1.1, 1.4],   // Optimaler VPD-Bereich für mittlere Blüte bei 20-25°C\n    LateFlower: [1.2, 1.6],  // Optimaler VPD-Bereich für späte Blüte bei 20-25°C\n};\n\n\n// Beispiel, wie msg.payload gesetzt wird\n// msg.payload = \"LateVeg\"; // Kommentieren Sie diese Zeile aus, um den tatsächlichen msg.payload zu verwenden\n\n// Prüfen, ob das Wachstumsstadium im plantStages-Objekt vorhanden ist\nif (plantStages.hasOwnProperty(msg.payload)) {\n    // Setzen des VPD-Wertes aus dem plantStages-Objekt\n    msg.payload = plantStages[msg.payload];\n} else {\n    // Fehlermeldung, wenn das Wachstumsstadium nicht gefunden wurde\n    msg.payload = \"Unbekanntes Wachstumsstadium\";\n\n}\nmsg.perfection = \"VPDStageValue\"\ndelete msg.data;\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1770,"y":540,"wires":[["c1e70d8332a5d4e4","33ec8a5f3c05962b"]]},{"id":"d37ecd3c5f82cdbc","type":"api-current-state","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"ModeSelection","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"select.flowertentmodes","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"targetVPD","valueType":"str"},{"property":"perfection","propertyType":"msg","value":"targetVPD","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1520,"y":540,"wires":[["78de53c8bb55e403"]]},{"id":"afeb5423a6f3b5db","type":"comment","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"IN-RANGE-VPD","info":"","x":1440,"y":1020,"wires":[]},{"id":"f1b0b6e3183aaeab","type":"comment","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"Targeted-VPD","info":"","x":1430,"y":1460,"wires":[]},{"id":"464b23e70cf844c8","type":"link out","z":"87bab898757000a2","g":"684260cd34e37219","name":"TargetedVPD","mode":"link","links":["500730d0af5e7cbf","78d116b1f17e53a9"],"x":1845,"y":220,"wires":[]},{"id":"fae02ab1f3ce0e63","type":"comment","z":"87bab898757000a2","g":"684260cd34e37219","name":"TentModes","info":"","x":1700,"y":160,"wires":[]},{"id":"e9088dc392b5024f","type":"ha-sensor","z":"87bab898757000a2","g":"684260cd34e37219","name":"FlowerAVGHum","entityConfig":"532f3d1e489722da","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1080,"y":240,"wires":[["8a884fe39e4f1e3c"]]},{"id":"01d5f2b84873c638","type":"ha-sensor","z":"87bab898757000a2","g":"684260cd34e37219","name":"FlowerAVGTemp","entityConfig":"edc405a70462ce85","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1090,"y":180,"wires":[["8a884fe39e4f1e3c"]]},{"id":"eb72ffdb8d671839","type":"ha-sensor","z":"87bab898757000a2","g":"684260cd34e37219","name":"currentVPD","entityConfig":"1a9ed93138063774","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1350,"y":140,"wires":[["650d94e8238e269e"]]},{"id":"da4a10ce600a3a02","type":"function","z":"87bab898757000a2","g":"684260cd34e37219","name":"Calc-AVG","func":"// Funktion zur Berechnung des Durchschnitts\nconst AvgTemp = (temps) => {\n    let sum = 0;\n    let count = 0;\n\n    temps.forEach((entry) => {\n        const temp = parseFloat(entry.value);\n        if (!isNaN(temp)) {\n            sum += temp;\n            count++;\n        }\n    });\n\n    if (count === 0) {\n        return \"unavailable\";\n    }\n\n    const avg = sum / count;\n    return avg.toFixed(2);\n};\n\n// Durchschnittstemperatur für jede Temperaturkategorie berechnen\nconst temperatureAvg = AvgTemp(msg.payload.temperature);\nconst humidityAvg = AvgTemp(msg.payload.humidity);\n\n// Objekt mit den Durchschnittswerten erstellen\nconst avgData = {\n    AvgTempData: temperatureAvg,\n    AvgHumData: humidityAvg\n};\n\n// Nachrichten erstellen und zurückgeben\nconst avgDataMsg = { payload: avgData, topic: \"AvgData\" };\nconst tempMsg = { payload: temperatureAvg, topic: \"AvgTemp\" };\nconst humMsg = { payload: humidityAvg, topic: \"AvgHum\" };\n\nreturn [avgDataMsg, tempMsg, humMsg];\n","outputs":3,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":780,"y":180,"wires":[["47249219e55b6920"],["01d5f2b84873c638"],["e9088dc392b5024f"]]},{"id":"97fb7c5e5e3f9dee","type":"function","z":"87bab898757000a2","g":"684260cd34e37219","name":"VPD Calc ","func":"function calculateVPD(luftTemperatur, blattTemperatur, relativeLuftfeuchtigkeit) {\n    // Stellen Sie sicher, dass alle Eingaben Zahlen sind\n    luftTemperatur = parseFloat(luftTemperatur);\n    blattTemperatur = parseFloat(blattTemperatur);\n    relativeLuftfeuchtigkeit = parseFloat(relativeLuftfeuchtigkeit);\n\n    // Überprüfen Sie, ob einer der Werte NaN ist\n    if (isNaN(luftTemperatur) || isNaN(blattTemperatur) || isNaN(relativeLuftfeuchtigkeit)) {\n        return NaN; // Geändert von \"unavailable\" zu NaN für bessere Handhabung in numerischen Berechnungen\n    }\n\n    // Berechnungen ohne Rundung\n    let sdpLuft = 0.6108 * Math.exp((17.27 * luftTemperatur) / (luftTemperatur + 237.3));\n    let sdpBlatt = 0.6108 * Math.exp((17.27 * blattTemperatur) / (blattTemperatur + 237.3));\n    let adp = (relativeLuftfeuchtigkeit / 100) * sdpLuft;\n    let vpd = sdpBlatt - adp;\n\n    // Rückgabe als number, nicht als string\n    return parseFloat(vpd.toFixed(2));\n}\n\n// Beispiel für die Verwendung der Funktion\nlet luftTemperatur = parseFloat(msg.payload.AvgData.AvgTempData); // Stellen Sie sicher, dass dies eine Zahl ist\nlet blattTemperatur = parseFloat(msg.payload.AvgData.AvgTempData) - parseFloat(msg.payload.LeafOffSet); // Keine Rundung, genaue Berechnung\nlet relativeLuftfeuchtigkeit = parseFloat(msg.payload.AvgData.AvgHumData); // Stellen Sie sicher, dass dies eine Zahl ist\n\nlet vpd = calculateVPD(luftTemperatur, blattTemperatur, relativeLuftfeuchtigkeit);\n\nmsg.payload = vpd; // Nun ist msg.payload eine Zahl\nmsg.topic = \"currentVPD\"\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1180,"y":120,"wires":[["eb72ffdb8d671839"]]},{"id":"c6f9196bc280b4e5","type":"comment","z":"87bab898757000a2","g":"684260cd34e37219","name":"VPD-Creation","info":"","x":750,"y":60,"wires":[]},{"id":"c1e70d8332a5d4e4","type":"join","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"VPDWish","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1710,"y":620,"wires":[["da916caa4c612842"]]},{"id":"da916caa4c612842","type":"function","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"VPD Handler Array Value","func":"const tolerance = 0.00; // Toleranzwert für die VPD-Anpassung\n\n// Der aktuelle VPD-Wert wird aus dem Payload geholt und in eine Zahl umgewandelt.\nconst currentVPD = parseFloat(msg.payload.currentVPD);\n\n// Ziel-VPD-Bereich wird aus dem Payload geholt.\nconst targetVPDRange = msg.payload.targetVPD;\n\n// Logging der aktuellen VPD und Ziel-VPD-Bereich zur Überprüfung und Debugging.\nnode.warn(`Flower-VPD array between: ${targetVPDRange[0]} and ${targetVPDRange[1]}`);\n\n// Berechnung der prozentualen Abweichung vom Ziel-VPD und Rundung auf ganze Zahlen\nconst percentDifference = Math.round(currentVPD < targetVPDRange[0] \n    ? ((currentVPD - targetVPDRange[0]) / targetVPDRange[0]) * 100 \n    : ((currentVPD - targetVPDRange[1]) / targetVPDRange[1]) * 100);\n\n// Funktion zur Berechnung der notwendigen Anpassungen basierend auf der Differenz zum VPD-Zielbereich.\nfunction calculateAdjustment(currentVPD, targetVPDRange) {\n    // Wenn der aktuelle VPD unter dem minimalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu erhöhen.\n    if (currentVPD < targetVPDRange[0] - tolerance) {\n        node.warn(`Flower-VPD:: ${currentVPD} zu gering. Erhöhe Temp oder verringere die Feuchtigkeit`);\n        node.warn(`Flower % VPD Target: ${percentDifference} %`);\n        return {\n            exhaustSpeed: \"increased\",      // Erhöht die Abluftgeschwindigkeit, um feuchte Luft herauszuziehen\n            humidifier: \"reduced\",          // Schaltet den Luftbefeuchter aus, um Feuchtigkeit zu reduzieren\n            dehumidifier: \"increased\",       // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            heaterFan: \"increased\",         // Schaltet den Beheizer an, um die Feuchtigkeit zu reduzieren und Temp zu erhöhen\n            coolerFan: \"reduced\",           // Schaltet den Kühler an, um die Feuchtigkeit zu erhöhen und Temp zu verringern\n            ventsALL: \"increased\",          // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsTopSpeed: \"increased\",     // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsDownSpeed: \"increased\",    // Erhöht die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"increased\"     // Erhöht die Lichtintensität, um die Temperatur zu steigern (wenn das die Temperatur beeinflusst)\n        };\n        \n    }\n    // Wenn der aktuelle VPD über dem maximalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu senken.\n    else if (currentVPD > targetVPDRange[1] + tolerance) {\n        node.warn(`Flower-VPD: ${currentVPD} zu hoch. Verringere Temp oder erhöhe die Feuchtigkeit`);\n        node.warn(`Flower % VPD Target: ${percentDifference} %`);\n        return {\n            exhaustSpeed: \"reduced\",    // Reduziert die Abluftgeschwindigkeit, hält feuchte Luft im Raum\n            humidifier: \"increased\",    // Schaltet den Luftbefeuchter ein, um Feuchtigkeit zu erhöhen\n            dehumidifier: \"reduced\",    // Schaltet den Luftentfeuchter aus, um Feuchtigkeit zu erhöhen\n            heaterFan: \"reduced\",       // Schaltet den Heizer aus, um die Temperatur zu verringern\n            coolerFan: \"increased\",     // Schaltet den Kühler an, um die Temperatur zu verringern\n            ventsALL: \"reduced\",        // Reduziert die Geschwindigkeit der Belüftung, um mehr feuchte Luft zu halten\n            ventsTopSpeed: \"reduced\",   // Reduziert die Geschwindigkeit der oberen Belüftung\n            ventsDownSpeed: \"reduced\",  // Reduziert die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"reduced\"   // Verringert die Lichtintensität, um die Temperatur zu senken (wenn das die Temperatur beeinflusst)\n        };\n    }\n    // Wenn der VPD im Zielbereich liegt, sind keine Anpassungen erforderlich.\n    node.warn(`Flower-VPD: ${currentVPD} im gewünschten Bereich`);\n    return {\n        exhaustSpeed: \"unchanged\",\n        humidifier: \"unchanged\",\n        dehumidifier: \"unchanged\",    \n        heaterFan: \"unchanged\",        \n        coolerFan: \"unchanged\",        \n        ventsALL: \"unchanged\",       \n        ventsTopSpeed: \"unchanged\",\n        ventsDownSpeed: \"unchanged\",\n        lightIntensity: \"unchanged\"\n    };\n}\n\n// Entscheidungslogik zur Steuerung der Umgebungsbedingungen, nutzt die calculateAdjustment Funktion.\nconst adjustments = calculateAdjustment(currentVPD, targetVPDRange);\n\n// Berechnung der prozentualen Abweichung und Hinzufügen zum Payload\nmsg.payload = {\n    exhaustSpeed: adjustments.exhaustSpeed,\n    humidifier: adjustments.humidifier,\n    dehumidifier: adjustments.dehumidifier,\n    heaterFan: adjustments.heaterFan,\n    coolerFan: adjustments.coolerFan,\n    ventsALL: adjustments.ventsALL,\n    ventsTopSpeed: adjustments.ventsTopSpeed,\n    ventsDownSpeed: adjustments.ventsDownSpeed,\n    lightIntensity: adjustments.lightIntensity,\n    percentDifference: percentDifference\n};\n\nmsg.perfektion = \"VPDActions\";\n\n// Rückgabe des modifizierten Payloads für weitere Verwendung im Flow.\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1970,"y":620,"wires":[["a2491093273ea707","33ec8a5f3c05962b"]]},{"id":"a2491093273ea707","type":"function","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"Check What Do","func":"let outputs = [null, null, null, null, null, null, null, null, null];\n\nvar percentDifference = msg.payload.percentDifference\n\n// Abluft\nif (msg.payload.exhaustSpeed === \"unchanged\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"increased\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"reduced\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n}\n\n// Humidifier\nif (msg.payload.humidifier === \"unchanged\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"increased\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"reduced\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n}\n\n// Dehumidifier\nif (msg.payload.dehumidifier === \"unchanged\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"increased\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"reduced\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n}\n\n// HeaterFan\nif (msg.payload.heaterFan === \"unchanged\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"increased\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"reduced\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n}\n\n// CoolerFan\nif (msg.payload.coolerFan === \"unchanged\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"increased\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"reduced\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n}\n\n// LightIntensity\nif (msg.payload.lightIntensity === \"unchanged\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"increased\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"reduced\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n}\n\n// VentsALL\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"increased\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"reduced\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n}\n\n// VentsTopSpeed\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"increased\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"reduced\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n}\n\n// VentsDownSpeed\nif (msg.payload.ventsDownSpeed === \"unchanged\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"increased\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"reduced\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n}\n\n\n\nreturn outputs;\n","outputs":9,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2000,"y":720,"wires":[["b81d8ddcfd887066"],["84809bfb26038acc"],["2cab4ff46bb255d1"],["fa452f0146e78478"],["24030fcfc3c0c570"],["17ce802afe4871e3"],["8bb02e174a322903"],["8bb02e174a322903"],["8bb02e174a322903"]]},{"id":"33ec8a5f3c05962b","type":"join","z":"87bab898757000a2","g":"2a37f65b72394049","name":"perfection","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"perfection","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"3","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":2450,"y":360,"wires":[["5621782b9ee9ac2e","86b2ec1b10c4c0f3"]]},{"id":"86b2ec1b10c4c0f3","type":"function","z":"87bab898757000a2","g":"2a37f65b72394049","name":"Make Perfekt VPD","func":"const tolerance = 0.025; // Toleranzwert für die VPD-Anpassung\nnode.warn(msg.payload.currentVPD);\n// Berechnet den durchschnittlichen Wert aus zwei Zahlen im Array VPDStageValue und begrenzt das Ergebnis auf zwei Dezimalstellen\nconst averageVPD = (msg.payload.VPDStageValue[0] + msg.payload.VPDStageValue[1]) / 2;\nconst perfectVPD = parseFloat(averageVPD.toFixed(3));\n\nconst currentVPD = parseFloat(msg.payload.currentVPD);\n\n// Build increase base of State % diffrence from Current VPD to avarangeVPD\n// Berechnung der prozentualen Abweichung vom Ziel-VPD\nconst percentDifference = ((currentVPD - perfectVPD) / perfectVPD) * 100;\n\n\n\n// IF not in Range Do Nothing\nif (currentVPD < msg.payload.VPDStageValue[0] || currentVPD > msg.payload.VPDStageValue[1]){\n    return\n}\n// Warnung über die prozentuale Abweichung\nnode.warn(`Perfect-VEGGI %  ${percentDifference.toFixed(2)}%`);\nnode.warn(`Perfect-Veggi-Current VPD: ${currentVPD}`);\nnode.warn(`Perfect-Veggi-Target-VPD: ${perfectVPD} with ${tolerance} Tolerance`);\n\n\n\n// Funktion zur Berechnung der notwendigen Anpassungen basierend auf der Differenz zum VPD-Zielbereich.\nfunction calculateAdjustment(currentVPD, perfectVPD) {\n    // Wenn der aktuelle VPD unter dem minimalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu erhöhen.\n    if (currentVPD < perfectVPD - tolerance) {\n        node.warn(`Perfect-Veggi-VPD:: ${currentVPD} zu Gering Erhöe Temp oder veringere die Feuchtikeit`);\n        return {\n            exhaustSpeed: \"increased\",      // Erhöht die Abluftgeschwindigkeit, um feuchte Luft herauszuziehen\n            humidifier: \"reduced\",          // Schaltet den Luftbefeuchter aus, um Feuchtigkeit zu reduzieren\n            dehumidifier: \"increased\",       // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            heaterFan: \"increased\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Reduzieren und Temp zu erhöhen\n            coolerFan: \"reduced\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Erhöhen und Temp zu veringern\n            ventsTopSpeed: \"increased\",     // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsDownSpeed: \"increased\",    // Erhöht die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"increased\"     // Erhöht die Lichtintensität, um die Temperatur zu steigern (wenn das die Temperatur beeinflusst)\n        };\n        \n    }\n    // Wenn der aktuelle VPD über dem maximalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu senken.\n    else if (currentVPD > perfectVPD + tolerance) {\n        node.warn(`Perfect-Veggi-VPD: ${currentVPD} zu hoch verringere Temp oder erhöe die Feuchtikeit`);\n        return {\n            exhaustSpeed: \"reduced\",    // Reduziert die Abluftgeschwindigkeit, hält feuchte Luft im Raum\n            humidifier: \"increased\",           // Schaltet den Luftbefeuchter ein, um Feuchtigkeit zu erhöhen\n            dehumidifier: \"reduced\",       // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            heaterFan: \"reduced\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Reduzieren und Temp zu erhöhen\n            coolerFan: \"increased\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Erhöhen und Temp zu veringern\n            ventsTopSpeed: \"reduced\",   // Reduziert die Geschwindigkeit der oberen Belüftung\n            ventsDownSpeed: \"reduced\",  // Reduziert die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"reduced\"      // Verringert die Lichtintensität, um die Temperatur zu senken (wenn das die Temperatur beeinflusst)\n        };\n    }\n    // Wenn der VPD im Zielbereich liegt, sind keine Anpassungen erforderlich.\n             node.warn(`Perfect-Veggi-VPD: ${currentVPD} im Gewünschten Bereich`);\n    return {\n        exhaustSpeed: \"unchanged\",\n        humidifier: \"unchanged\",\n        dehumidifier: \"unchanged\",       // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n        heaterFan: \"unchanged\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Reduzieren und Temp zu erhöhen\n        coolerFan: \"unchanged\",            // Schaltet den Beheizer an um, um die feuchtigkeit zu Erhöhen und Temp zu veringern\n        ventsTopSpeed: \"unchanged\",\n        ventsDownSpeed: \"unchanged\",\n        lightIntensity: \"unchanged\"\n    };\n}\n\n// Entscheidungslogik zur Steuerung der Umgebungsbedingungen, nutzt die calculateAdjustment Funktion.\nconst adjustments = calculateAdjustment(currentVPD, perfectVPD);\nmsg.payload = {\n    exhaustSpeed: adjustments.exhaustSpeed,\n    humidifier: adjustments.humidifier,\n    dehumidifier: adjustments.dehumidifier,\n    heaterFan: adjustments.heaterFan,\n    coolerFan: adjustments.coolerFan,\n    ventsTopSpeed: adjustments.ventsTopSpeed,\n    ventsDownSpeed: adjustments.ventsDownSpeed,\n    lightIntensity: adjustments.lightIntensity,\n    percentDifference: percentDifference.toFixed(2)\n};\nmsg.perfektion = \"VPDActions\"\n\n// Rückgabe des modifizierten Payloads für weitere Verwendung im Flow.\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2650,"y":440,"wires":[["7365db5b05b0cdad","55da67fef2acad51"]]},{"id":"7365db5b05b0cdad","type":"function","z":"87bab898757000a2","g":"2a37f65b72394049","name":"Check What Do","func":"let outputs = [null, null, null, null, null, null, null, null, null];\n\nvar percentDifference = msg.payload.percentDifference\n\n// Abluft\nif (msg.payload.exhaustSpeed === \"unchanged\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"increased\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"reduced\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n}\n\n// Humidifier\nif (msg.payload.humidifier === \"unchanged\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"increased\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"reduced\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n}\n\n// Dehumidifier\nif (msg.payload.dehumidifier === \"unchanged\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"increased\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"reduced\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n}\n\n// HeaterFan\nif (msg.payload.heaterFan === \"unchanged\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"increased\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"reduced\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n}\n\n// CoolerFan\nif (msg.payload.coolerFan === \"unchanged\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"increased\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"reduced\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n}\n\n// LightIntensity\nif (msg.payload.lightIntensity === \"unchanged\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"increased\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"reduced\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n}\n\n// VentsALL\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"increased\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"reduced\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n}\n\n// VentsTopSpeed\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"increased\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"reduced\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n}\n\n// VentsDownSpeed\nif (msg.payload.ventsDownSpeed === \"unchanged\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"increased\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"reduced\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n}\n\n\n\nreturn outputs;\n","outputs":9,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2660,"y":540,"wires":[["356ce5b53838cd67"],["6b389a8ca3ee7f49"],["cee90b8566452ac8"],["037948bc84926efa"],["e1a942ad8a536ef3"],["39099da8915e29b7"],["27e01016801fc664"],["27e01016801fc664"],["27e01016801fc664"]]},{"id":"9d125ce221658824","type":"link out","z":"87bab898757000a2","name":"ExhaustData","mode":"link","links":["1aeeeda08043bd54","22de82672fafd826","7c5a646f225f4ab1","eb2c9d58dd38f1d2","4ad596727315ba0c","e705047b1a410ff1","033d8f63407adc30"],"x":635,"y":720,"wires":[]},{"id":"79bde8bec83cb56a","type":"link out","z":"87bab898757000a2","name":"HumidifierData","mode":"link","links":["9c7dd5cc1ab3a56f","cd9a328a814e5484","e3b89882bbab368d","f37287fdb9a1391c","c6952828beed3687","5250abb0abece036","b99a15275082032e"],"x":635,"y":760,"wires":[]},{"id":"bab58a1e055f1530","type":"link in","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"VPD-Perfektion","links":["e26a880fb2d24667"],"x":1385,"y":1080,"wires":[["718bc098c204f567"]]},{"id":"fb64d5b83ef0f886","type":"function","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"VPD State Values","func":"const plantStages = {\n    Germination: [0.42, 0.78], // Optimaler VPD-Bereich für Keimung bei 25-30°C\n    Clones: [0.42, 0.78],      // Optimaler VPD-Bereich für Klone bei 25-30°C\n    EarlyVeg: [0.55, 0.85],    // Optimaler VPD-Bereich für frühe Vegetation bei 20-25°C\n    MidVeg: [0.85, 1.1],      // Optimaler VPD-Bereich für mittlere Vegetation bei 20-25°C\n    LateVeg: [0.85, 1.2],     // Optimaler VPD-Bereich für späte Vegetation bei 20-25°C\n    EarlyFlower: [1, 1.25], // Optimaler VPD-Bereich für frühe Blüte bei 20-25°C\n    MidFlower: [1.1, 1.4],   // Optimaler VPD-Bereich für mittlere Blüte bei 20-25°C\n    LateFlower: [1.2, 1.6],  // Optimaler VPD-Bereich für späte Blüte bei 20-25°C\n};\n\n\n// Beispiel, wie msg.payload gesetzt wird\n// msg.payload = \"LateVeg\"; // Kommentieren Sie diese Zeile aus, um den tatsächlichen msg.payload zu verwenden\n\n// Prüfen, ob das Wachstumsstadium im plantStages-Objekt vorhanden ist\nif (plantStages.hasOwnProperty(msg.payload)) {\n    // Setzen des VPD-Wertes aus dem plantStages-Objekt\n    msg.payload = plantStages[msg.payload];\n} else {\n    // Fehlermeldung, wenn das Wachstumsstadium nicht gefunden wurde\n    msg.payload = \"Unbekanntes Wachstumsstadium\";\n\n}\nmsg.perfektion = \"VPDStageValue\"\ndelete msg.data;\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1750,"y":1080,"wires":[["cf64ead2f0f9c53f"]]},{"id":"718bc098c204f567","type":"api-current-state","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"ModeSelection","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"select.flowertentmodes","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"targetVPD","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1500,"y":1080,"wires":[["fb64d5b83ef0f886"]]},{"id":"1fc52b3283aabd93","type":"poll-state","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"currentVPD","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","updateInterval":"30","updateIntervalType":"num","updateIntervalUnits":"seconds","outputInitially":true,"outputOnChanged":true,"entityId":"sensor.vpd_flower","stateType":"num","ifState":"","ifStateType":"num","ifStateOperator":"is","outputs":1,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"currentVPD","valueType":"str"}],"x":1530,"y":1220,"wires":[["cf64ead2f0f9c53f"]]},{"id":"cf64ead2f0f9c53f","type":"join","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"VPDWish","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1710,"y":1160,"wires":[["7856db1b9077bca0"]]},{"id":"7856db1b9077bca0","type":"function","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"VPD Handler Array Value","func":"const tolerance = 0.00; // Toleranzwert für die VPD-Anpassung\n\n// Der aktuelle VPD-Wert wird aus dem Payload geholt und in eine Zahl umgewandelt.\nconst currentVPD = parseFloat(msg.payload.currentVPD);\n\n// Ziel-VPD-Bereich wird aus dem Payload geholt.\nconst targetVPDRange = msg.payload.targetVPD;\n\n// Logging der aktuellen VPD und Ziel-VPD-Bereich zur Überprüfung und Debugging.\nnode.warn(`Flower-VPD array between: ${targetVPDRange[0]} and ${targetVPDRange[1]}`);\n\n// Berechnung der prozentualen Abweichung vom Ziel-VPD und Rundung auf ganze Zahlen\nconst percentDifference = Math.round(currentVPD < targetVPDRange[0] \n    ? ((currentVPD - targetVPDRange[0]) / targetVPDRange[0]) * 100 \n    : ((currentVPD - targetVPDRange[1]) / targetVPDRange[1]) * 100);\n\n// Funktion zur Berechnung der notwendigen Anpassungen basierend auf der Differenz zum VPD-Zielbereich.\nfunction calculateAdjustment(currentVPD, targetVPDRange) {\n    // Wenn der aktuelle VPD unter dem minimalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu erhöhen.\n    if (currentVPD < targetVPDRange[0] - tolerance) {\n        node.warn(`Flower-VPD:: ${currentVPD} zu gering. Erhöhe Temp oder verringere die Feuchtigkeit`);\n        node.warn(`Flower % VPD Target: ${percentDifference} %`);\n        return {\n            exhaustSpeed: \"increased\",      // Erhöht die Abluftgeschwindigkeit, um feuchte Luft herauszuziehen\n            humidifier: \"reduced\",          // Schaltet den Luftbefeuchter aus, um Feuchtigkeit zu reduzieren\n            dehumidifier: \"increased\",       // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            heaterFan: \"increased\",         // Schaltet den Beheizer an, um die Feuchtigkeit zu reduzieren und Temp zu erhöhen\n            coolerFan: \"reduced\",           // Schaltet den Kühler an, um die Feuchtigkeit zu erhöhen und Temp zu verringern\n            ventsALL: \"increased\",          // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsTopSpeed: \"increased\",     // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsDownSpeed: \"increased\",    // Erhöht die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"increased\"     // Erhöht die Lichtintensität, um die Temperatur zu steigern (wenn das die Temperatur beeinflusst)\n        };\n        \n    }\n    // Wenn der aktuelle VPD über dem maximalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu senken.\n    else if (currentVPD > targetVPDRange[1] + tolerance) {\n        node.warn(`Flower-VPD: ${currentVPD} zu hoch. Verringere Temp oder erhöhe die Feuchtigkeit`);\n        node.warn(`Flower % VPD Target: ${percentDifference} %`);\n        return {\n            exhaustSpeed: \"reduced\",    // Reduziert die Abluftgeschwindigkeit, hält feuchte Luft im Raum\n            humidifier: \"increased\",    // Schaltet den Luftbefeuchter ein, um Feuchtigkeit zu erhöhen\n            dehumidifier: \"reduced\",    // Schaltet den Luftentfeuchter aus, um Feuchtigkeit zu erhöhen\n            heaterFan: \"reduced\",       // Schaltet den Heizer aus, um die Temperatur zu verringern\n            coolerFan: \"increased\",     // Schaltet den Kühler an, um die Temperatur zu verringern\n            ventsALL: \"reduced\",        // Reduziert die Geschwindigkeit der Belüftung, um mehr feuchte Luft zu halten\n            ventsTopSpeed: \"reduced\",   // Reduziert die Geschwindigkeit der oberen Belüftung\n            ventsDownSpeed: \"reduced\",  // Reduziert die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"reduced\"   // Verringert die Lichtintensität, um die Temperatur zu senken (wenn das die Temperatur beeinflusst)\n        };\n    }\n    // Wenn der VPD im Zielbereich liegt, sind keine Anpassungen erforderlich.\n    node.warn(`Flower-VPD: ${currentVPD} im gewünschten Bereich`);\n    return {\n        exhaustSpeed: \"unchanged\",\n        humidifier: \"unchanged\",\n        dehumidifier: \"unchanged\",    \n        heaterFan: \"unchanged\",        \n        coolerFan: \"unchanged\",        \n        ventsALL: \"unchanged\",       \n        ventsTopSpeed: \"unchanged\",\n        ventsDownSpeed: \"unchanged\",\n        lightIntensity: \"unchanged\"\n    };\n}\n\n// Entscheidungslogik zur Steuerung der Umgebungsbedingungen, nutzt die calculateAdjustment Funktion.\nconst adjustments = calculateAdjustment(currentVPD, targetVPDRange);\n\n// Berechnung der prozentualen Abweichung und Hinzufügen zum Payload\nmsg.payload = {\n    exhaustSpeed: adjustments.exhaustSpeed,\n    humidifier: adjustments.humidifier,\n    dehumidifier: adjustments.dehumidifier,\n    heaterFan: adjustments.heaterFan,\n    coolerFan: adjustments.coolerFan,\n    ventsALL: adjustments.ventsALL,\n    ventsTopSpeed: adjustments.ventsTopSpeed,\n    ventsDownSpeed: adjustments.ventsDownSpeed,\n    lightIntensity: adjustments.lightIntensity,\n    percentDifference: percentDifference\n};\n\nmsg.perfektion = \"VPDActions\";\n\n// Rückgabe des modifizierten Payloads für weitere Verwendung im Flow.\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1910,"y":1120,"wires":[["5e2b8fb494e4ebfe"]]},{"id":"5e2b8fb494e4ebfe","type":"function","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"Check What Do","func":"let outputs = [null, null, null, null, null, null, null, null, null];\n\nvar percentDifference = msg.payload.percentDifference\n\n// Abluft\nif (msg.payload.exhaustSpeed === \"unchanged\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"increased\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"reduced\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n}\n\n// Humidifier\nif (msg.payload.humidifier === \"unchanged\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"increased\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"reduced\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n}\n\n// Dehumidifier\nif (msg.payload.dehumidifier === \"unchanged\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"increased\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"reduced\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n}\n\n// HeaterFan\nif (msg.payload.heaterFan === \"unchanged\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"increased\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"reduced\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n}\n\n// CoolerFan\nif (msg.payload.coolerFan === \"unchanged\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"increased\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"reduced\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n}\n\n// LightIntensity\nif (msg.payload.lightIntensity === \"unchanged\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"increased\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"reduced\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n}\n\n// VentsALL\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"increased\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"reduced\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n}\n\n// VentsTopSpeed\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"increased\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"reduced\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n}\n\n// VentsDownSpeed\nif (msg.payload.ventsDownSpeed === \"unchanged\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"increased\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"reduced\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n}\n\n\n\nreturn outputs;\n","outputs":9,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1880,"y":1220,"wires":[["7e8b342e3753e452"],["808f10a848fd1bbc"],["8478947630a71dd8"],["60320ccde9c6bb77"],["90926a27b0c54411"],["5cfa060f5b8332cf"],["e85f06938d85911a"],["e85f06938d85911a"],["e85f06938d85911a"]]},{"id":"2e49f2a877dc0908","type":"function","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"Check What Do","func":"let outputs = [null, null, null, null, null, null, null, null, null];\n\nvar percentDifference = msg.payload.percentDifference\n\n// Abluft\nif (msg.payload.exhaustSpeed === \"unchanged\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"increased\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n} else if (msg.payload.exhaustSpeed === \"reduced\") {\n    outputs[0] = { payload: { value: msg.payload.exhaustSpeed, percentDifference: percentDifference }, topic: \"exhaustSet\" };\n}\n\n// Humidifier\nif (msg.payload.humidifier === \"unchanged\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"increased\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n} else if (msg.payload.humidifier === \"reduced\") {\n    outputs[1] = { payload: { value: msg.payload.humidifier, percentDifference: percentDifference }, topic: \"humidifierSet\" };\n}\n\n// Dehumidifier\nif (msg.payload.dehumidifier === \"unchanged\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"increased\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n} else if (msg.payload.dehumidifier === \"reduced\") {\n    outputs[2] = { payload: { value: msg.payload.dehumidifier, percentDifference: percentDifference }, topic: \"dehumidifierSet\" };\n}\n\n// HeaterFan\nif (msg.payload.heaterFan === \"unchanged\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"increased\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n} else if (msg.payload.heaterFan === \"reduced\") {\n    outputs[3] = { payload: { value: msg.payload.heaterFan, percentDifference: percentDifference }, topic: \"heaterSet\" };\n}\n\n// CoolerFan\nif (msg.payload.coolerFan === \"unchanged\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"increased\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n} else if (msg.payload.coolerFan === \"reduced\") {\n    outputs[4] = { payload: { value: msg.payload.coolerFan, percentDifference: percentDifference }, topic: \"coolerSet\" };\n}\n\n// LightIntensity\nif (msg.payload.lightIntensity === \"unchanged\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"increased\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n} else if (msg.payload.lightIntensity === \"reduced\") {\n    outputs[5] = { payload: { value: msg.payload.lightIntensity, percentDifference: percentDifference }, topic: \"lightIntensitySet\" };\n}\n\n// VentsALL\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"increased\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n} else if (msg.payload.ventsALL === \"reduced\") {\n    outputs[6] = { payload: { value: msg.payload.ventsALL, percentDifference: percentDifference }, topic: \"ventsALLSet\" };\n}\n\n// VentsTopSpeed\nif (msg.payload.ventsTopSpeed === \"unchanged\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"increased\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n} else if (msg.payload.ventsTopSpeed === \"reduced\") {\n    outputs[7] = { payload: { value: msg.payload.ventsTopSpeed, percentDifference: percentDifference }, topic: \"ventsTopSpeedSet\" };\n}\n\n// VentsDownSpeed\nif (msg.payload.ventsDownSpeed === \"unchanged\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"increased\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n} else if (msg.payload.ventsDownSpeed === \"reduced\") {\n    outputs[8] = { payload: { value: msg.payload.ventsDownSpeed, percentDifference: percentDifference }, topic: \"ventsDownSpeedSet\" };\n}\n\n\n\nreturn outputs;\n","outputs":9,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1720,"y":1700,"wires":[["e3900c6fcb1518f1"],["76500f9124621519"],["10c052baa77914bd"],["c8950634986ed39f"],["6b7c54b84d733581"],["b5790a0ccc6a2965"],["464ace433af602f5"],["464ace433af602f5"],["464ace433af602f5"]]},{"id":"5621782b9ee9ac2e","type":"debug","z":"87bab898757000a2","g":"2a37f65b72394049","name":"debug 148","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2450,"y":400,"wires":[]},{"id":"b5a693bcd77d4f80","type":"function","z":"87bab898757000a2","g":"684260cd34e37219","name":"Calc-Dewpoint","func":"// Funktion zur Berechnung des Taupunkts\nconst calculateDewPoint = (temperature, humidity) => {\n    const temp = parseFloat(temperature);\n    const hum = parseFloat(humidity);\n\n    if (isNaN(temp) || isNaN(hum)) {\n        return \"unavailable\";\n    }\n\n    const dewPoint = temp - ((100 - hum) / 5);\n    return parseFloat(dewPoint.toFixed(3));\n};\n\n// Beispielinput\nconst inputData = msg.payload;\n\n// Taupunkt berechnen\nconst temperature = parseFloat(inputData.AvgTemp);\nconst humidity = parseFloat(inputData.AvgHum);\nconst dewPoint = calculateDewPoint(temperature, humidity);\n\n// Taupunkt als Zahl zurückgeben\nmsg.payload = dewPoint;\nreturn msg\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1440,"y":200,"wires":[["54b1d8a63e1902a7"]]},{"id":"8a884fe39e4f1e3c","type":"join","z":"87bab898757000a2","g":"684260cd34e37219","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1290,"y":200,"wires":[["b5a693bcd77d4f80"]]},{"id":"54b1d8a63e1902a7","type":"ha-sensor","z":"87bab898757000a2","g":"684260cd34e37219","name":"FlowerAVGDewPoint","entityConfig":"0741c8a3236b491c","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[{"property":"topic","propertyType":"msg","value":"DryTentDewPoint","valueType":"str"}],"x":1380,"y":240,"wires":[[]]},{"id":"47249219e55b6920","type":"join","z":"87bab898757000a2","g":"684260cd34e37219","name":"","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":true,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1030,"y":140,"wires":[["97fb7c5e5e3f9dee"]]},{"id":"3d4627f3225a086b","type":"link in","z":"87bab898757000a2","g":"684260cd34e37219","name":"link in 9","links":["f0449f704d2f7c8a"],"x":875,"y":60,"wires":[["d51dc8176bf8690e"]]},{"id":"d51dc8176bf8690e","type":"function","z":"87bab898757000a2","g":"684260cd34e37219","name":"Select","func":"let outputs = [null, null];\n\nvar leafMode = msg.payload.GlobalLeafSet;\nvar leafOffSet = msg.payload.LeafOffset;\nvar flowerLeafOffset = msg.payload.FlowerLeafOffset;\nvar veggiLeafOffset = msg.payload.VeggiLeafOffset;\nvar groomLeafOffset = msg.payload.GRoomLeafOffset;\n\n// Logic to set new offset based on leaf mode\nif (leafMode === \"Default\") {\n    outputs[0] = { payload: leafOffSet, topic: \"LeafOffSet\" };\n} else if (leafMode === \"Custom\") {\n    outputs[1] = { payload: veggiLeafOffset, topic: \"LeafOffSet\" };\n}\n\nreturn outputs;  // Return the modified outputs array\n","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":910,"y":120,"wires":[["47249219e55b6920"],["47249219e55b6920"]]},{"id":"a96ccda7addd1614","type":"link out","z":"87bab898757000a2","g":"684260cd34e37219","name":"CropSteering","mode":"link","links":["96ad7357a215e3d7"],"x":1845,"y":260,"wires":[]},{"id":"e878287b07f180fd","type":"debug","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"debug 177","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1910,"y":1560,"wires":[]},{"id":"11736a563bfcb495","type":"poll-state","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"currentVPD","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","updateInterval":"30","updateIntervalType":"num","updateIntervalUnits":"seconds","outputInitially":true,"outputOnChanged":true,"entityId":"sensor.vpd_flower","stateType":"num","ifState":"","ifStateType":"num","ifStateOperator":"is","outputs":1,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"currentVPD","valueType":"str"},{"property":"perfection","propertyType":"msg","value":"currentVPD","valueType":"str"}],"x":1550,"y":740,"wires":[["c1e70d8332a5d4e4","33ec8a5f3c05962b"]]},{"id":"78d116b1f17e53a9","type":"link in","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"VPD-Perfektion","links":["464b23e70cf844c8"],"x":1385,"y":1520,"wires":[["e6b2c630db705db7"]]},{"id":"cb901688be6c0de1","type":"poll-state","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"currentVPD","server":"5772bf4c.b461d","version":3,"exposeAsEntityConfig":"","updateInterval":"30","updateIntervalType":"num","updateIntervalUnits":"seconds","outputInitially":true,"outputOnChanged":true,"entityId":"sensor.vpd_flower","stateType":"num","ifState":"","ifStateType":"num","ifStateOperator":"is","outputs":1,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"currentVPD","valueType":"str"}],"x":1470,"y":1660,"wires":[["546819f8bcf743d9"]]},{"id":"546819f8bcf743d9","type":"join","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"VPDWish","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":1680,"y":1600,"wires":[["7b3614a53b99b56b","a7faaa78e3ab3a02"]]},{"id":"7b3614a53b99b56b","type":"function","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"VPD Handler Array Value","func":"const tolerance = 0.00; // Toleranzwert für die VPD-Anpassung\n\n// Der aktuelle VPD-Wert wird aus dem Payload geholt und in eine Zahl umgewandelt.\nconst currentVPD = parseFloat(msg.payload.currentVPD);\n\n// Ziel-VPD-Bereich wird aus dem Payload geholt.\nconst targetVPDRange = msg.payload.targetVPD;\n\n// Logging der aktuellen VPD und Ziel-VPD-Bereich zur Überprüfung und Debugging.\nnode.warn(`Flower-VPD-Target: ${targetVPDRange}`);\n\n// Funktion zur Berechnung der notwendigen Anpassungen basierend auf der Differenz zum VPD-Zielbereich.\nfunction calculateAdjustment(currentVPD, targetVPDRange) {\n    // Wenn der aktuelle VPD unter dem minimalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu erhöhen.\n    if (currentVPD < targetVPDRange - tolerance) {\n        node.warn(`Flower-VPD: ${currentVPD} zu gering. Erhöhe Temp oder verringere die Feuchtigkeit.`);\n        return {\n            exhaustSpeed: \"increased\",      // Erhöht die Abluftgeschwindigkeit, um feuchte Luft herauszuziehen\n            humidifier: \"reduced\",          // Schaltet den Luftbefeuchter aus, um Feuchtigkeit zu reduzieren\n            dehumidifier: \"increased\",      // Schaltet den Luftentfeuchter an, um Feuchtigkeit zu reduzieren\n            heaterFan: \"increased\",         // Schaltet den Beheizer an, um die Feuchtigkeit zu reduzieren und Temp zu erhöhen\n            coolerFan: \"reduced\",           // Schaltet den Beheizer an, um die Feuchtigkeit zu erhöhen und Temp zu verringern\n            ventsALL: \"increased\",          // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsTopSpeed: \"increased\",     // Erhöht die Geschwindigkeit der oberen Belüftung, um mehr trockene Luft einzulassen\n            ventsDownSpeed: \"increased\",    // Erhöht die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"increased\"     // Erhöht die Lichtintensität, um die Temperatur zu steigern (wenn das die Temperatur beeinflusst)\n        };\n    }\n    // Wenn der aktuelle VPD über dem maximalen Zielbereich liegt, Anpassungen vornehmen, um VPD zu senken.\n    else if (currentVPD > targetVPDRange + tolerance) {\n        node.warn(`Flower-VPD: ${currentVPD} zu hoch. Verringere Temp oder erhöhe die Feuchtigkeit.`);\n        return {\n            exhaustSpeed: \"reduced\",    // Reduziert die Abluftgeschwindigkeit, hält feuchte Luft im Raum\n            humidifier: \"increased\",    // Schaltet den Luftbefeuchter ein, um Feuchtigkeit zu erhöhen\n            dehumidifier: \"reduced\",    // Schaltet den Luftentfeuchter aus, um Feuchtigkeit zu erhöhen\n            heaterFan: \"reduced\",       // Schaltet den Beheizer aus, um die Feuchtigkeit zu erhöhen und Temp zu senken\n            coolerFan: \"increased\",     // Schaltet den Kühler an, um die Feuchtigkeit zu erhöhen und Temp zu verringern\n            ventsALL: \"reduced\",        // Reduziert die Geschwindigkeit der Belüftung, um mehr feuchte Luft zu halten\n            ventsTopSpeed: \"reduced\",   // Reduziert die Geschwindigkeit der oberen Belüftung\n            ventsDownSpeed: \"reduced\",  // Reduziert die Geschwindigkeit der unteren Belüftung\n            lightIntensity: \"reduced\"   // Verringert die Lichtintensität, um die Temperatur zu senken (wenn das die Temperatur beeinflusst)\n        };\n    }\n    // Wenn der VPD im Zielbereich liegt, sind keine Anpassungen erforderlich.\n    node.warn(`Flower-VPD: ${currentVPD} im gewünschten Bereich.`);\n    return {\n        exhaustSpeed: \"unchanged\",\n        humidifier: \"unchanged\",\n        dehumidifier: \"unchanged\",\n        heaterFan: \"unchanged\",\n        coolerFan: \"unchanged\",\n        ventsALL: \"unchanged\",\n        ventsTopSpeed: \"unchanged\",\n        ventsDownSpeed: \"unchanged\",\n        lightIntensity: \"unchanged\"\n    };\n}\n\n// Funktion zur Berechnung der prozentualen Abweichung\nfunction calculatePercentDifference(currentVPD, targetVPD) {\n    return ((currentVPD - targetVPD) / targetVPD) * 100;\n}\n\n// Entscheidungslogik zur Steuerung der Umgebungsbedingungen, nutzt die calculateAdjustment Funktion.\nconst adjustments = calculateAdjustment(currentVPD, targetVPDRange);\nconst percentDifference = calculatePercentDifference(currentVPD, targetVPDRange);\n\nmsg.payload = {\n    exhaustSpeed: adjustments.exhaustSpeed,\n    humidifier: adjustments.humidifier,\n    dehumidifier: adjustments.dehumidifier,\n    heaterFan: adjustments.heaterFan,\n    coolerFan: adjustments.coolerFan,\n    ventsALL: adjustments.ventsALL,\n    ventsTopSpeed: adjustments.ventsTopSpeed,\n    ventsDownSpeed: adjustments.ventsDownSpeed,\n    lightIntensity: adjustments.lightIntensity,\n    percentDifference: percentDifference.toFixed(2) // Prozentuale Abweichung auf 2 Dezimalstellen gerundet\n};\n\nmsg.perfektion = \"VPDActions\";\n// Rückgabe des modifizierten Payloads für weitere Verwendung im Flow.\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1900,"y":1600,"wires":[["2e49f2a877dc0908","e878287b07f180fd"]]},{"id":"e6b2c630db705db7","type":"api-current-state","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"ModeSelection","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"number.flowertarget_vpd","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"},{"property":"topic","propertyType":"msg","value":"targetVPD","valueType":"str"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":1520,"y":1520,"wires":[["546819f8bcf743d9"]]},{"id":"a7faaa78e3ab3a02","type":"debug","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"debug 176","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":1760,"y":1520,"wires":[]},{"id":"6cabaff09a9fa85a","type":"ha-sensor","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerCO2","entityConfig":"4c5909d829f0f2cf","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1050,"y":660,"wires":[[]]},{"id":"8ba8b97980f98d4e","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"CO2-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Finden des Objekts, das eine der gewünschten Teilzeichenfolgen im entity_id enthält\nconst co2Object = sensors.find(sensor => \n    sensor.entity_id.includes(\"carbon\") || \n    sensor.entity_id.includes(\"carbondioxide\")\n);\n\n// Extrahieren des Wertes, wenn das Objekt gefunden wurde, sonst null setzen\nconst co2Value = co2Object ? co2Object.value : null;\n\n// Ausgabe des CO2-Wertes zur Überprüfung\n// node.warn(`CO2-Wert: ${co2Value}`);\n\n// Optional: Speichern des CO2-Wertes in msg.co2Value oder einem anderen Feld zur weiteren Verwendung\nmsg.payload = co2Value;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":760,"y":660,"wires":[["6cabaff09a9fa85a"]]},{"id":"24cec488a394f147","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"Pressure-Get","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Luftdruck-Wertes\nfunction findPressureValue(sensors) {\n    const pressureObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"pressure\") ||\n        sensor.entity_id.includes(\"barometer\") ||\n        sensor.entity_id.includes(\"luftdruck\")\n    );\n    return pressureObject ? pressureObject.value : null;\n}\n\n// Finden des Luftdruck-Wertes\nconst pressureValue = findPressureValue(sensors);\n\n// Ausgabe des Luftdruck-Wertes zur Überprüfung\n// node.warn(`Luftdruck-Wert: ${pressureValue}`);\n\n// Optional: Speichern des Luftdruck-Wertes in msg zur weiteren Verwendung\nmsg.payload = pressureValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":770,"y":600,"wires":[["3dbeae382f71f092"]]},{"id":"cdabbf668a463011","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"Moisture-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Moisture-Wertes\nfunction findMoistureValue(sensors) {\n    const moistureObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"moisture\") ||\n        sensor.entity_id.includes(\"humidity\") ||\n        sensor.entity_id.includes(\"wetness\")\n    );\n    return moistureObject ? moistureObject.value : null;\n}\n\n// Finden des Moisture-Wertes\nconst moistureValue = findMoistureValue(sensors);\n\n// Ausgabe des Moisture-Wertes zur Überprüfung\n// node.warn(`Moisture-Wert: ${moistureValue}`);\n\n// Optional: Speichern des Moisture-Wertes in msg zur weiteren Verwendung\nmsg.payload = moistureValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":780,"y":420,"wires":[["ea181fad67e4609d"]]},{"id":"7b1434a24c5c2d0a","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"SOIL-EC-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des EC- oder Conductivity-Wertes\nfunction findECValue(sensors) {\n    const ecObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"ec\") ||\n        sensor.entity_id.includes(\"conductivity\")\n    );\n    return ecObject ? ecObject.value : null;\n}\n\n// Finden des EC- oder Conductivity-Wertes\nconst ecValue = findECValue(sensors);\n\n// Ausgabe des EC- oder Conductivity-Wertes zur Überprüfung\n// node.warn(`EC-Wert: ${ecValue}`);\n\n// Optional: Speichern des EC- oder Conductivity-Wertes in msg zur weiteren Verwendung\nmsg.payload = ecValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":780,"y":540,"wires":[["6077fa1071b64972"]]},{"id":"6dc8f908895b8048","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"PowerConsum-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Stromverbrauch-Wertes\nfunction findPowerConsumptionValue(sensors) {\n    const powerConsumptionObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"energy_power\") || \n        sensor.entity_id.includes(\"consumption\") || \n        sensor.entity_id.includes(\"watt\") || \n        sensor.entity_id.includes(\"electricity\")\n    );\n    return powerConsumptionObject ? powerConsumptionObject.value : null;\n}\n\n// Finden des Stromverbrauch-Wertes\nconst powerConsumptionValue = findPowerConsumptionValue(sensors);\n\n// Ausgabe des Stromverbrauch-Wertes zur Überprüfung\n// node.warn(`Stromverbrauch-Wert: ${powerConsumptionValue}`);\n\n// Optional: Speichern des Stromverbrauch-Wertes in msg zur weiteren Verwendung\nmsg.payload = powerConsumptionValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":800,"y":840,"wires":[["34b3481968acc628"]]},{"id":"24a35980a67b1b86","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"Battery-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Batterie-Wertes\nfunction findBatteryValue(sensors) {\n    const batteryObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"battery\") || \n        sensor.entity_id.includes(\"batt\")\n    );\n    return batteryObject ? batteryObject.value : null;\n}\n\n// Finden des Batterie-Wertes\nconst batteryValue = findBatteryValue(sensors);\n\n// Ausgabe des Batterie-Wertes zur Überprüfung\n// node.warn(`Batterie-Wert: ${batteryValue}`);\n\n// Optional: Speichern des Batterie-Wertes in msg zur weiteren Verwendung\nmsg.payload = batteryValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":770,"y":780,"wires":[["330a5b405ad89acf"]]},{"id":"b5fcb9fc8354bcab","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"Root-Temp-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Root-Temperature-Wertes\nfunction findRootTempValue(sensors) {\n    const rootTempObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"root_temp\") || \n        sensor.entity_id.includes(\"roottemperature\") || \n        sensor.entity_id.includes(\"soiltemp\") || \n        sensor.entity_id.includes(\"root_temp\")\n    );\n    return rootTempObject ? rootTempObject.value : null;\n}\n\n// Finden des Root-Temperature-Wertes\nconst rootTempValue = findRootTempValue(sensors);\n\n// Ausgabe des Root-Temperature-Wertes zur Überprüfung\n// node.warn(`Root-Temperature-Wert: ${rootTempValue}`);\n\n// Optional: Speichern des Root-Temperature-Wertes in msg zur weiteren Verwendung\nmsg.payload = rootTempValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":780,"y":480,"wires":[["4071ade6426af61b"]]},{"id":"ce4696697eb9cc47","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"Exhaust-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Abluft-Zustands\nfunction findExhaustState(sensors) {\n    const exhaustStateObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"exhaust\") ||\n        sensor.entity_id.includes(\"abluft\") ||\n        sensor.entity_id.includes(\"ventilation\") ||\n        sensor.entity_id.includes(\"fan\")\n    );\n    return exhaustStateObject ? exhaustStateObject.value : null;\n}\n\n// Funktion zum Finden des Dutycycle-Wertes\nfunction findDutyCycleValue(sensors) {\n    const dutyCycleObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"airctr\") ||\n        sensor.entity_id.includes(\"dutycycle\") ||\n        sensor.entity_id.includes(\"cycle\")\n    );\n    return dutyCycleObject ? dutyCycleObject.value : null;\n}\n\n// Finden des Abluft-Zustands\nconst exhaustState = findExhaustState(sensors);\n\n// Finden des Dutycycle-Wertes\nconst dutyCycleValue = findDutyCycleValue(sensors);\n\n// Ausgabe der Werte zur Überprüfung\n// node.warn(`Abluft-Zustand: ${exhaustState}`);\n// node.warn(`Dutycycle-Wert: ${dutyCycleValue}`);\n\n// Setzen der Outputs\nlet outputs = [\n    { payload: exhaustState }, // Output 1: Zustand (on/off)\n    { payload: dutyCycleValue } // Output 2: Dutycycle\n];\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn outputs;\n","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":770,"y":1020,"wires":[["194edf344188f8d1"],["f1ea259d4cd1ad73"]]},{"id":"fc7309bac2a5580d","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"Humidifier-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Humidifier-Wertes\nfunction findHumidifierValue(sensors) {\n    const humidifierObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"humidifier\") || \n        sensor.entity_id.includes(\"humidity\")\n    );\n    return humidifierObject ? humidifierObject.value : null;\n}\n\n// Finden des Humidifier-Wertes\nconst humidifierValue = findHumidifierValue(sensors);\n\n// Ausgabe des Humidifier-Wertes zur Überprüfung\n// node.warn(`Humidifier-Wert: ${humidifierValue}`);\n\n// Optional: Speichern des Humidifier-Wertes in msg zur weiteren Verwendung\nmsg.payload = humidifierValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":780,"y":1080,"wires":[[]]},{"id":"56aa552840d3803d","type":"function","z":"87bab898757000a2","name":"Sort Sensor Types","func":"let data = msg.payload;\n\n// Arrays für verschiedene Sensortypen initialisieren\nlet wish = [];\nlet temperatures = [];\nlet humidity = [];\nlet dewpoints = [];\nlet moisture = [];\nlet pressures = [];\nlet battery = [];\nlet power = [];\nlet co2 = [];\nlet lumen = [];\nlet conductivity = [];\nlet switches = [];\nlet dutyCycleExhaust = [];\nlet vents = [];\nlet humidifier = [];\nlet dehumidifier = [];\nlet root = [];\nlet cooler = [];\nlet heater = [];\n\n\n// Durchlaufe alle Schlüssel im data-Objekt und sortiere sie nach bestimmten Sensortypen\nfor (let key in data) {\n    if (data.hasOwnProperty(key)) {\n        let entity_id = key.toLowerCase();\n        let entity = { entity_id: key, value: data[key] };\n\n        // Prioritize to ensure it is captured first\n        if (entity_id.includes('wish') || entity_id.includes('avg') || entity_id.includes('target')) {\n            wish.push(entity);\n        } else if (entity_id.includes('root') || entity_id.includes('wurzel') || entity_id.includes('water')) {\n            root.push(entity);\n        }\n        // ENVIORMENT\n        else if (entity_id.includes('temperature') || entity_id.includes('tempe')) {\n            temperatures.push(entity);\n        } else if (entity_id.includes('humidity') || entity_id.includes('feuchtigkeit') || entity_id.includes('rh')) {\n            humidity.push(entity);\n        } else if (entity_id.includes('dewpoint') || entity_id.includes('dew')) {\n            dewpoints.push(entity);\n        } else if (entity_id.includes('moisture') || entity_id.includes('mois')) {\n            moisture.push(entity);\n        } else if (entity_id.includes('pressure') || entity_id.includes('press')) {\n            pressures.push(entity);\n        } else if (entity_id.includes('carbondioxide') || entity_id.includes('co2') || entity_id.includes('carbon')) {\n            co2.push(entity);\n        } else if (entity_id.includes('conductivity')) {\n            conductivity.push(entity);\n        } else if (entity_id.includes('illuminance') || entity_id.includes('light') || entity_id.includes('licht')) {\n            lumen.push(entity);\n        }\n        // Devices\n        else if (entity_id.includes('dehumidifier') || entity_id.includes('entfeuchter')) {\n            dehumidifier.push(entity);\n        } else if (entity_id.includes('humidifier') || entity_id.includes('befeuchter')) {\n            humidifier.push(entity);\n        } else if (entity_id.includes('cooler') || entity_id.includes('klima')) {\n            dehumidifier.push(entity);\n        } else if (entity_id.includes('heater') || entity_id.includes('Heizung')) {\n            dehumidifier.push(entity);\n        } else if (entity_id.includes('ruck') || entity_id.includes('airctr') || entity_id.includes('exhaust') || entity_id.includes('abluft')) {\n            dutyCycleExhaust.push(entity);\n        } else if (entity_id.includes('vent')) {\n            vents.push(entity);\n        } else if (entity_id.includes('switch')) {\n            switches.push(entity);\n        } else if (entity_id.includes('power') || entity_id.includes('energy')) {\n            power.push(entity);\n        }\n\n        // ADDONS\n        else if (entity_id.includes('battery') || entity_id.includes('batt')) {\n            battery.push(entity);\n        }\n    }\n}\n\n// Nachrichtenausgabe auf verschiedenen Outputs\nreturn [\n    // ENVIORMENT\n    { payload: wish, topic: 'Wish' },\n    { payload: temperatures, topic: 'temperature' },\n    { payload: humidity, topic: 'humidity' },\n    { payload: dewpoints, topic: 'dewpoint' },\n    { payload: moisture, topic: 'moisture' },\n    { payload: root, topic: 'roottemp' },\n    { payload: conductivity, topic: 'conductivity' },\n    { payload: pressures, topic: 'pressure' },\n    { payload: co2, topic: 'carbon_dioxide' },\n    { payload: lumen, topic: 'illuminance' },\n    // DEVICEINFO\n    { payload: battery, topic: 'battery' },\n    { payload: power, topic: 'power' },\n    // DEVICES\n    { payload: switches, topic: 'switch' },\n    { payload: vents, topic: 'Vents' },\n    { payload: dutyCycleExhaust, topic: 'Exhaust' },\n    { payload: humidifier, topic: 'humidifier' },\n    { payload: dehumidifier, topic: 'dehumidifier' },\n    { payload: cooler, topic: 'cooler' },\n    { payload: heater, topic: 'heater' }\n];\n","outputs":19,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":210,"y":260,"wires":[["1ded9b8984de496a"],["ad196bb7c36068ab"],["b769596a4bbc4607"],["8b78835f54a976ce"],["802c582eb02146c9"],["7b717655bc69afdc"],["a0aeced795617438"],["ae7ddd31bbfb2985"],["310608ec1d45fcb2"],["b8d42bdbb97224c9"],["dd5b4ad7e458c3f6"],["72f71ec5f3b106d5"],["95cfd8479db6cdb6"],["e6c1ccc1e8bf4243"],["ad366fe75322e5d3"],["006d6dc52bbe29da"],["709f15e79c3e231e"],["8f454b2610cab17e"],["eab7247edeede781"]]},{"id":"4302d5e5f0144f64","type":"debug","z":"87bab898757000a2","name":"Temperatures","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":480,"y":160,"wires":[]},{"id":"5974b167ebb2f9e4","type":"debug","z":"87bab898757000a2","name":"Humidity","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":460,"y":200,"wires":[]},{"id":"9f322326faf32502","type":"debug","z":"87bab898757000a2","name":"Dewpoints","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":240,"wires":[]},{"id":"9865254487956201","type":"debug","z":"87bab898757000a2","name":"Pressures","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":460,"y":400,"wires":[]},{"id":"18c34d8b20c39f73","type":"debug","z":"87bab898757000a2","name":"Battery","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":460,"y":540,"wires":[]},{"id":"e4b5460d3febe1a2","type":"debug","z":"87bab898757000a2","name":"Power","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":450,"y":580,"wires":[]},{"id":"0d29d605591497f4","type":"debug","z":"87bab898757000a2","name":"CO2","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":450,"y":440,"wires":[]},{"id":"cee884061f3f2261","type":"debug","z":"87bab898757000a2","name":"Light","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":480,"wires":[]},{"id":"0a1295920208c384","type":"debug","z":"87bab898757000a2","name":"Switches","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":460,"y":640,"wires":[]},{"id":"1d22f5d38d2f029b","type":"debug","z":"87bab898757000a2","name":"Conductivity","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":360,"wires":[]},{"id":"79fa901ba76691b8","type":"debug","z":"87bab898757000a2","name":"Moisture","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":460,"y":280,"wires":[]},{"id":"349dcfebcd7877da","type":"debug","z":"87bab898757000a2","name":"Exhasut","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":460,"y":720,"wires":[]},{"id":"dfe1f213a50dabe8","type":"debug","z":"87bab898757000a2","name":"WISH","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":120,"wires":[]},{"id":"f400654d457ab0af","type":"debug","z":"87bab898757000a2","name":"Humidifier","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":760,"wires":[]},{"id":"8d95d41fedb12bda","type":"debug","z":"87bab898757000a2","name":"Vents","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":680,"wires":[]},{"id":"a46594e2514f068e","type":"debug","z":"87bab898757000a2","name":"RootTemp","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":320,"wires":[]},{"id":"6f852176198d67b8","type":"debug","z":"87bab898757000a2","name":"Dehumidifier","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":470,"y":800,"wires":[]},{"id":"3dbeae382f71f092","type":"ha-sensor","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerPressure","entityConfig":"ee6603a7841f90d7","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1060,"y":600,"wires":[[]]},{"id":"ea181fad67e4609d","type":"ha-sensor","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerMoisture","entityConfig":"b48068e2b6382f35","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1060,"y":420,"wires":[[]]},{"id":"330a5b405ad89acf","type":"ha-sensor","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerBatterieDevices","entityConfig":"2150742022321ba4","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1080,"y":780,"wires":[[]]},{"id":"4071ade6426af61b","type":"ha-sensor","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerRootTemp","entityConfig":"6938113c94cc6c5d","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1070,"y":480,"wires":[[]]},{"id":"6077fa1071b64972","type":"ha-sensor","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerEC","entityConfig":"2acab65eb8c7d7db","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1040,"y":540,"wires":[[]]},{"id":"a057a5f182e73de8","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"LightIntense_GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Licht-Wertes (Lumen oder Lux)\nfunction findLightValue(sensors) {\n    const lightObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"lumen\") || \n        sensor.entity_id.includes(\"lux\") || \n        sensor.entity_id.includes(\"light\") ||\n        sensor.entity_id.includes(\"illuminance\")\n    );\n    return lightObject ? lightObject.value : null;\n}\n\n// Finden des Licht-Wertes\nconst lightValue = findLightValue(sensors);\n\n// Ausgabe des Licht-Wertes zur Überprüfung\n// node.warn(`Licht-Wert: ${lightValue}`);\n\n// Optional: Speichern des Licht-Wertes in msg zur weiteren Verwendung\nmsg.payload = lightValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":790,"y":720,"wires":[["de57249fcd512509"]]},{"id":"de57249fcd512509","type":"ha-sensor","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FLowerLightIntense","entityConfig":"6584d61dadd6110e","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1070,"y":720,"wires":[[]]},{"id":"c4d9642cd60ee3b5","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"Switch-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Switch-Wertes\nfunction findSwitchValue(sensors) {\n    const switchObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"switch\") || \n        sensor.entity_id.includes(\"toggle\")\n    );\n    return switchObject ? switchObject.state : null;\n}\n\n// Finden des Switch-Wertes\nconst switchValue = findSwitchValue(sensors);\n\n// Ausgabe des Switch-Wertes zur Überprüfung\n// node.warn(`Switch-Wert: ${switchValue}`);\n\n// Optional: Speichern des Switch-Wertes in msg zur weiteren Verwendung\nmsg.payload = switchValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":770,"y":900,"wires":[[]]},{"id":"34b3481968acc628","type":"ha-sensor","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerPowerConsume","entityConfig":"0628161aa905c63c","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1080,"y":840,"wires":[[]]},{"id":"f76573c680abe051","type":"link out","z":"87bab898757000a2","name":"Vents","mode":"link","links":[],"x":635,"y":680,"wires":[]},{"id":"0d648d1a287b160d","type":"link out","z":"87bab898757000a2","name":"Dehumidifier","mode":"link","links":["76fcaf89b2120d63"],"x":635,"y":800,"wires":[]},{"id":"55da67fef2acad51","type":"debug","z":"87bab898757000a2","g":"2a37f65b72394049","name":"debug 193","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2690,"y":400,"wires":[]},{"id":"5f10e37424012087","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"Vents-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Ventilation-Wertes\nfunction findVentilationValue(sensors) {\n    const ventilationObject = sensors.find(sensor =>\n        sensor.entity_id.includes(\"ventilation\") ||\n        sensor.entity_id.includes(\"fan\") ||\n        sensor.entity_id.includes(\"exhaust\") ||\n        sensor.entity_id.includes(\"airflow\")\n    );\n    return ventilationObject ? ventilationObject.value : null;\n}\n\n// Finden des Ventilation-Wertes\nconst ventilationValue = findVentilationValue(sensors);\n\n// Ausgabe des Ventilation-Wertes zur Überprüfung\n// node.warn(`Ventilation-Wert: ${ventilationValue}`);\n\n// Optional: Speichern des Ventilation-Wertes in msg zur weiteren Verwendung\nmsg.payload = ventilationValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":770,"y":960,"wires":[[]]},{"id":"7b33e1fa9654de02","type":"function","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"Dehmidifier-GET","func":"// Zugriff auf das Array im msg.payload\nconst sensors = msg.payload;\n\n// Funktion zum Finden des Dehumidifier-Wertes\nfunction findDehumidifierValue(sensors) {\n    const dehumidifierObject = sensors.find(sensor => \n        sensor.entity_id.includes(\"dehumidifier\") || \n        sensor.entity_id.includes(\"humidity\")\n    );\n    return dehumidifierObject ? dehumidifierObject.value : null;\n}\n\n// Finden des Dehumidifier-Wertes\nconst dehumidifierValue = findDehumidifierValue(sensors);\n\n// Ausgabe des Dehumidifier-Wertes zur Überprüfung\n// node.warn(`Dehumidifier-Wert: ${dehumidifierValue}`);\n\n// Optional: Speichern des Dehumidifier-Wertes in msg zur weiteren Verwendung\nmsg.payload = dehumidifierValue;\n\n// Rückgabe der msg zur Weiterverarbeitung im Flow\nreturn msg;\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":780,"y":1140,"wires":[[]]},{"id":"194edf344188f8d1","type":"ha-sensor","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerExhaustState","entityConfig":"87469d8744ed20ba","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1080,"y":980,"wires":[[]]},{"id":"f1ea259d4cd1ad73","type":"ha-sensor","z":"87bab898757000a2","g":"1a459c099aab5c42","name":"FlowerExhaustDutyCycle","entityConfig":"96027b4729ff7383","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":1090,"y":1040,"wires":[[]]},{"id":"90e7d66de4e646ed","type":"inject","z":"87bab898757000a2","g":"952a4bc7dff3f66a","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"300","crontab":"","once":true,"onceDelay":"15","topic":"","payload":"","payloadType":"date","x":2030,"y":140,"wires":[["ea836fad7734354a"]]},{"id":"dcc4f2b4266ce2c9","type":"ha-sensor","z":"87bab898757000a2","g":"952a4bc7dff3f66a","name":"DLI","entityConfig":"10a55acc5911459b","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":2670,"y":180,"wires":[["f2d5e7c61c28de89"]]},{"id":"75cd81ac71068cbe","type":"ha-sensor","z":"87bab898757000a2","g":"952a4bc7dff3f66a","name":"PPFDFLower","entityConfig":"c58623d735fb8295","version":0,"state":"payload","stateType":"msg","attributes":[],"inputOverride":"allow","outputProperties":[],"x":2670,"y":100,"wires":[["f2d5e7c61c28de89"]]},{"id":"f2d5e7c61c28de89","type":"debug","z":"87bab898757000a2","g":"952a4bc7dff3f66a","name":"debug 39","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2800,"y":140,"wires":[]},{"id":"34e2ea1867e751f9","type":"function","z":"87bab898757000a2","g":"952a4bc7dff3f66a","name":"Calculate PPFD / DLI Sanlight","func":"// Beispiel für die Eingangsnachricht: { payload: 250 }\n\nconst maxPower = 380;            // Maximale Leistung in Watt\nconst maxPPFD = 1000;            // Maximaler PPFD bei 380 Watt\n\n// PPFD berechnen basierend auf dem aktuellen Wattwert\nconst ppfd = (msg.payload / maxPower) * maxPPFD;\n\n// PPFD auf zwei Nachkommastellen runden\nconst roundedPPFD = parseFloat(ppfd.toFixed(2));\n\n// Berechnung von DLI\nconst secondsPerHour = 3600;\nconst hoursPerDay = 12; // Anzahl der Stunden pro Tag, die das Licht an ist\nlet dli = roundedPPFD * secondsPerHour * hoursPerDay / 1e6;\n\n// DLI auf zwei Nachkommastellen runden\ndli = parseFloat(dli.toFixed(2));\n\n// Erstellen Sie zwei separate Nachrichtenobjekte für die Ausgänge\nconst msg1 = { payload: roundedPPFD }; // für den ersten Output (PPFD), gerundet auf zwei Nachkommastellen\nconst msg2 = { payload: dli };         // für den zweiten Output (DLI), gerundet auf zwei Nachkommastellen\n\n// Rückgabe der Nachrichten in einem Array, wobei jeder Index dem entsprechenden Output entspricht\nreturn [msg1, msg2];","outputs":2,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":2430,"y":160,"wires":[["1f21fdc068ba4fdd","75cd81ac71068cbe"],["1f21fdc068ba4fdd","dcc4f2b4266ce2c9"]]},{"id":"ea836fad7734354a","type":"api-current-state","z":"87bab898757000a2","g":"952a4bc7dff3f66a","name":"Flower-LX","server":"5772bf4c.b461d","version":3,"outputs":1,"halt_if":"","halt_if_type":"str","halt_if_compare":"is","entity_id":"sensor.flowerlightintense","state_type":"str","blockInputOverrides":false,"outputProperties":[{"property":"payload","propertyType":"msg","value":"","valueType":"entityState"},{"property":"data","propertyType":"msg","value":"","valueType":"entity"}],"for":"0","forType":"num","forUnits":"minutes","override_topic":false,"state_location":"payload","override_payload":"msg","entity_location":"data","override_data":"msg","x":2180,"y":140,"wires":[["34e2ea1867e751f9","1f21fdc068ba4fdd"]]},{"id":"1f21fdc068ba4fdd","type":"debug","z":"87bab898757000a2","g":"952a4bc7dff3f66a","name":"debug 57","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":2380,"y":100,"wires":[]},{"id":"61afd7503e71f62c","type":"link in","z":"87bab898757000a2","name":"Env","links":["265fe00ebc822be2"],"x":75,"y":480,"wires":[[]]},{"id":"169da9767a08464e","type":"comment","z":"87bab898757000a2","name":"Cropsteering","info":"","x":190,"y":4760,"wires":[]},{"id":"96ad7357a215e3d7","type":"link in","z":"87bab898757000a2","name":"link in 11","links":["a96ccda7addd1614"],"x":155,"y":4820,"wires":[[]]},{"id":"b81d8ddcfd887066","type":"link out","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"ExhaustCtrlFlower","mode":"link","links":["90d00cec7854934c","b9fb8641ac981f23"],"x":2225,"y":640,"wires":[]},{"id":"84809bfb26038acc","type":"link out","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"HumidifierCtrlFlower","mode":"link","links":["85c3440005e758b3"],"x":2225,"y":680,"wires":[]},{"id":"2cab4ff46bb255d1","type":"link out","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"DeHumidifierCtrlFlower","mode":"link","links":["211a33b6ee23cb2a"],"x":2225,"y":720,"wires":[]},{"id":"fa452f0146e78478","type":"link out","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"HeaterCtrlFlower","mode":"link","links":["f8c71d23e8b2d7d4"],"x":2225,"y":760,"wires":[]},{"id":"24030fcfc3c0c570","type":"link out","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"CoolerCtrlFlower","mode":"link","links":["a8f4aa363971a87e"],"x":2225,"y":800,"wires":[]},{"id":"17ce802afe4871e3","type":"link out","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"LightsCtrlFlower","mode":"link","links":["42b00b5b259da75d"],"x":2225,"y":840,"wires":[]},{"id":"8bb02e174a322903","type":"link out","z":"87bab898757000a2","g":"0963c29ce537e39b","name":"VentsCtrlFlower","mode":"link","links":["bddb396981a46ba6"],"x":2225,"y":880,"wires":[]},{"id":"2998d9a1245dddc9","type":"function","z":"87bab898757000a2","g":"e571ea1d17733f37","name":"BefeuchterSetup","func":"let outputs = [null, null, null];\n\nlet humidifierState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.humidifier.length; i++) {\n    if (msg.payload.humidifier[i].entity_id.includes('humidifier')) {\n        humidifierState = msg.payload.humidifier[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.humidifierSet.value === \"increased\" && humidifierState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.humidifierSet.value === \"reduced\" && humidifierState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun oder ausschalten bei unverändertem Zustand\nif (msg.payload.humidifierSet.value === \"unchanged\") {\n    if (humidifierState === \"on\") {\n        // Wenn der Befeuchter im Zelt an ist und kein Wechsel angefordert wird, sende \"off\"\n        outputs[0] = { payload: \"off\", topic: \"Humidifier\" };\n    } else {\n        // Wenn der Befeuchter bereits aus ist oder nicht geändert werden soll\n        outputs[1] = { payload: \"Humidifier already stopped, nothing to do! Waiting for changes.\", topic: \"Humidifier\" };\n    }\n}\n\n// Nichts tun (detaillierte Information)\nif (msg.payload.humidifierSet.value === \"unchanged\" && humidifierState !== \"on\" && humidifierState !== \"off\") {\n    outputs[2] = { payload: \"Befeuchter unverändert, keine Aktion erforderlich\", data: msg.payload, topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3410,"y":1000,"wires":[["00bda2dbce1f7cc7"],["e84f5a714316bb95"],["99eed7784fee4257"],[]]},{"id":"f902a5ba1e7c93b5","type":"join","z":"87bab898757000a2","g":"e571ea1d17733f37","name":"HumidityData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":3180,"y":1020,"wires":[["2998d9a1245dddc9"]]},{"id":"99eed7784fee4257","type":"link out","z":"87bab898757000a2","g":"e571ea1d17733f37","name":"HumidityMode","mode":"link","links":[],"x":3695,"y":1020,"wires":[]},{"id":"00bda2dbce1f7cc7","type":"link out","z":"87bab898757000a2","g":"e571ea1d17733f37","name":"FlowerHumidifierON","mode":"link","links":["acb0f5addd129adf"],"x":3625,"y":960,"wires":[]},{"id":"e84f5a714316bb95","type":"link out","z":"87bab898757000a2","g":"e571ea1d17733f37","name":"FlowerHumidifierOFF","mode":"link","links":["38a12a509a13d715"],"x":3685,"y":980,"wires":[]},{"id":"1a5f158673e007b2","type":"function","z":"87bab898757000a2","g":"9b20a372abab7583","name":"Exhaust Setup","func":"// Hilfsfunktion zur Überprüfung, ob ein Wert numerisch ist\nconst isNumeric = (value) => {\n    return !isNaN(parseFloat(value)) && isFinite(value);\n};\n\n// Funktion zur Bestimmung des dutyCycle-Werts\nconst findDutyCycle = (exhaustArray) => {\n    if (exhaustArray.length === 0) {\n        return null; // Keine Werte zu verarbeiten, wenn das Array leer ist\n    }\n    for (let i = 0; i < exhaustArray.length; i++) {\n        if (isNumeric(exhaustArray[i].value)) {\n            return parseInt(exhaustArray[i].value, 10);\n        }\n    }\n    return null; // Falls kein numerischer Wert gefunden wurde\n};\n\nlet outputs = [null, null, null, null]; // Array für vier Ausgänge\n\n// Zustand der Abluft und Geschwindigkeit aus der Payload extrahieren\nconst exhaustSpeed = msg.payload.exhaustSet.value; // Anpassung hier\nlet exhaustState = 'off'; // Standardwert setzen, falls kein Zustand gefunden wird\nif (msg.payload.Exhaust && msg.payload.Exhaust.length > 0) {\n    const exhaustSwitch = msg.payload.Exhaust.find(e => e.entity_id && e.entity_id.toLowerCase().includes(\"switch\"));\n    if (exhaustSwitch && exhaustSwitch.value) {\n        exhaustState = exhaustSwitch.value;\n    }\n}\n\nconst dutyCycle = findDutyCycle(msg.payload.Exhaust) || 0 ;\n\n// Prüfen, ob ein dutyCycle vorhanden ist\nif (dutyCycle === null) {\n    return outputs; // Kein dutyCycle gefunden, keine Aktion erforderlich\n}\n\nconst percentDifference = parseFloat(msg.payload.exhaustSet.percentDifference);\nlet newDutyCycle = dutyCycle;\n\n// Berechnung des neuen Duty Cycle basierend auf der prozentualen Abweichung\nif (percentDifference !== 0) {\n    if (percentDifference < 0) {\n        // Wenn der Wert negativ ist, erhöhen wir den Duty Cycle\n        newDutyCycle = dutyCycle + Math.abs(percentDifference);\n    } else {\n        // Wenn der Wert positiv ist, verringern wir den Duty Cycle\n        newDutyCycle = dutyCycle - percentDifference;\n    }\n\n    // Stellen Sie sicher, dass der neue Duty Cycle innerhalb der Grenzen liegt\n    newDutyCycle = Math.min(95, Math.max(10, Math.round(newDutyCycle)));\n}\n\n// Abluft starten auf dem ersten Ausgang, wenn sie aus ist und erhöht werden muss\nif (exhaustSpeed === \"increased\" && exhaustState === \"off\") {\n    outputs[0] = { payload: \"Starte Abluft\", topic: \"Start\" };\n    return outputs;\n}\n\n// Abluft-Geschwindigkeit erhöhen, wenn sie bereits eingeschaltet ist\nif (exhaustSpeed === \"increased\" && exhaustState === \"on\") {\n    outputs[2] = { payload: newDutyCycle.toString(), topic: \"Increase\" };\n    return outputs;\n}\n\n// Abluft stoppen auf dem zweiten Ausgang, wenn die Geschwindigkeit reduziert wird und der Duty Cycle sehr niedrig ist\nif (exhaustSpeed === \"reduced\" && exhaustState === \"on\" && newDutyCycle <= 10) {\n    outputs[1] = { payload: \"Stoppe Abluft\", topic: \"Stop\" };\n    return outputs;\n} else if (exhaustSpeed === \"reduced\" && exhaustState === \"on\") {\n    outputs[2] = { payload: newDutyCycle.toString(), topic: \"Decrease\" };\n    return outputs;\n}\n\n// Warnung ausgeben, wenn versucht wird, die Abluftgeschwindigkeit zu reduzieren, obwohl sie bereits aus ist\nif (exhaustSpeed === \"reduced\" && exhaustState === \"off\") {\n    outputs[1] = { payload: \"Abluft bereits gestoppt, kann nicht weiter reduziert werden\", topic: \"AlreadyStopped\" };\n    return outputs;\n}\n\n// Nichts tun, wenn keine Änderung erforderlich ist\nif (exhaustSpeed === \"unchanged\") {\n    outputs[3] = { payload: \"Abluft unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n    return outputs;\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3620,"y":720,"wires":[["7233a2912b7504c9","21e006a3e8bc99c8"],["7233a2912b7504c9","4810fb25535f84fe"],["909f9b28f49204e5","7233a2912b7504c9"],["7233a2912b7504c9"]]},{"id":"73a743c68faf5f1e","type":"http request","z":"87bab898757000a2","g":"9b20a372abab7583","name":"DutyPostChange","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.234:5533/air/ctrl","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":3870,"y":800,"wires":[[]]},{"id":"909f9b28f49204e5","type":"function","z":"87bab898757000a2","g":"9b20a372abab7583","name":"DutyChanger","func":"\nconst NewDuty = msg.payload\n\nmsg.payload = { \"newDuty\": NewDuty}\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":3890,"y":760,"wires":[["73a743c68faf5f1e"]]},{"id":"f0b5ee67a8063949","type":"join","z":"87bab898757000a2","g":"9b20a372abab7583","name":"exhasutData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":3420,"y":800,"wires":[["1a5f158673e007b2","7233a2912b7504c9","327c5de2023af8c2"]]},{"id":"21e006a3e8bc99c8","type":"link out","z":"87bab898757000a2","g":"9b20a372abab7583","name":"ExhaustVeggiON","mode":"link","links":["55acda8e6f953bc1"],"x":3785,"y":680,"wires":[]},{"id":"4810fb25535f84fe","type":"link out","z":"87bab898757000a2","g":"9b20a372abab7583","name":"ExhaustVeggiOFF","mode":"link","links":["23d01364d3856db1"],"x":3835,"y":700,"wires":[]},{"id":"7233a2912b7504c9","type":"debug","z":"87bab898757000a2","g":"9b20a372abab7583","name":"debug 270","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":3610,"y":660,"wires":[]},{"id":"327c5de2023af8c2","type":"debug","z":"87bab898757000a2","g":"9b20a372abab7583","name":"debug 271","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":3620,"y":800,"wires":[]},{"id":"ba01f54da92cb494","type":"join","z":"87bab898757000a2","g":"7ffeaeb39befbd13","name":"VentsData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"4","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"num","reduceFixup":"","x":3230,"y":2180,"wires":[["a5e76ce616ccd09b"]]},{"id":"6e54d03748788ac3","type":"link in","z":"87bab898757000a2","g":"7ffeaeb39befbd13","name":"link in 87","links":[],"x":3185,"y":2120,"wires":[["ba01f54da92cb494"]]},{"id":"a5e76ce616ccd09b","type":"function","z":"87bab898757000a2","g":"7ffeaeb39befbd13","name":"VentsSetup","func":"let outputs = [null, null, null];\n\nlet ventsState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.vents.length; i++) {\n    if (msg.payload.vents[i].entity_id.includes('vents')) {\n        ventsState = msg.payload.vents[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.ventsSet.value === \"increased\" && ventsState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.ventsSet.value === \"reduced\" && ventsState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.ventsSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Befeuchter unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3430,"y":2180,"wires":[["73c9321033ae54ac"],["5c5b756c6fed2199"],["40cd9e275785f068"],[]]},{"id":"73c9321033ae54ac","type":"link out","z":"87bab898757000a2","g":"7ffeaeb39befbd13","name":"link out 267","mode":"link","links":[],"x":3615,"y":2140,"wires":[]},{"id":"5c5b756c6fed2199","type":"link out","z":"87bab898757000a2","g":"7ffeaeb39befbd13","name":"link out 268","mode":"link","links":[],"x":3675,"y":2160,"wires":[]},{"id":"40cd9e275785f068","type":"link out","z":"87bab898757000a2","g":"7ffeaeb39befbd13","name":"link out 269","mode":"link","links":[],"x":3715,"y":2200,"wires":[]},{"id":"45acfdd0b6e88579","type":"comment","z":"87bab898757000a2","g":"7ffeaeb39befbd13","name":"NOT READY","info":"","x":3350,"y":2180,"wires":[]},{"id":"9dbb816d3dd0bfa8","type":"join","z":"87bab898757000a2","g":"09296d5bd2225e88","name":"LightData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":3190,"y":1980,"wires":[["f22e390bd2f006e9"]]},{"id":"32d42160c20106c8","type":"link in","z":"87bab898757000a2","g":"09296d5bd2225e88","name":"CoolerFlower","links":["fc12515c1658f1b9"],"x":3125,"y":1920,"wires":[["9dbb816d3dd0bfa8"]]},{"id":"f22e390bd2f006e9","type":"function","z":"87bab898757000a2","g":"09296d5bd2225e88","name":"LightSetup","func":"let outputs = [null, null, null];\n\nlet lightState = null;\n\n// Schleife, um den Zustand des Befeuchters zu finden\nfor (let i = 0; i < msg.payload.light.length; i++) {\n    if (msg.payload.light[i].entity_id.includes('light')) {\n        lightState = msg.payload.light[i].value;\n        break;\n    }\n}\n\n// Befeuchter starten\nif (msg.payload.lightSet.value === \"increased\" && lightState === \"off\") {\n    outputs[0] = { payload: \"Starte Befeuchter\", topic: \"Start\" };\n}\n\n// Befeuchter stoppen\nif (msg.payload.lightSet.value === \"reduced\" && lightState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Befeuchter\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.lightSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Befeuchter unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3390,"y":1980,"wires":[["6ed3e5d973b389c5"],["0a6c31cfdc8d2520"],["8a2ad5076a271f6e"],[]]},{"id":"6ed3e5d973b389c5","type":"link out","z":"87bab898757000a2","g":"09296d5bd2225e88","name":"link out 270","mode":"link","links":[],"x":3595,"y":1940,"wires":[]},{"id":"0a6c31cfdc8d2520","type":"link out","z":"87bab898757000a2","g":"09296d5bd2225e88","name":"link out 271","mode":"link","links":[],"x":3655,"y":1960,"wires":[]},{"id":"8a2ad5076a271f6e","type":"link out","z":"87bab898757000a2","g":"09296d5bd2225e88","name":"link out 272","mode":"link","links":[],"x":3695,"y":2000,"wires":[]},{"id":"db41548602716d21","type":"comment","z":"87bab898757000a2","g":"09296d5bd2225e88","name":"NOT IMPLEMNTED RIGHT NOW","info":"","x":3270,"y":1980,"wires":[]},{"id":"a0e539be6495156a","type":"join","z":"87bab898757000a2","g":"5d46755c395cc634","name":"CoolerData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":3210,"y":1420,"wires":[["01417a0b06b01a47"]]},{"id":"49c9a1e109c2af12","type":"link in","z":"87bab898757000a2","g":"5d46755c395cc634","name":"link in 89","links":["fc12515c1658f1b9"],"x":3105,"y":1380,"wires":[["a0e539be6495156a"]]},{"id":"01417a0b06b01a47","type":"function","z":"87bab898757000a2","g":"5d46755c395cc634","name":"CoolerSetup","func":"let outputs = [null, null, null];\n\nlet coolerState = null;\n\n// Schleife, um den Zustand des Cooler zu finden\nfor (let i = 0; i < msg.payload.cooler.length; i++) {\n    if (msg.payload.cooler[i].entity_id.includes('cooler')) {\n        coolerState = msg.payload.cooler[i].value;\n        break;\n    }\n}\n\n// Cooler starten\nif (msg.payload.coolerSet.value === \"increased\" && coolerState === \"off\") {\n    outputs[0] = { payload: \"Start Cooler\", topic: \"Start\" };\n}\n\n// Cooler stoppen\nif (msg.payload.coolerSet.value === \"reduced\" && coolerState === \"on\") {\n    outputs[1] = { payload: \"Stop Cooler\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.coolerSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Cooler unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3410,"y":1420,"wires":[["3081bbc3923d74d6"],["145ff0f6e90930a9"],["ce08bd17130ae3da"],[]]},{"id":"3081bbc3923d74d6","type":"link out","z":"87bab898757000a2","g":"5d46755c395cc634","name":"FlowerCoolerON","mode":"link","links":["5a5614359d863721"],"x":3605,"y":1380,"wires":[]},{"id":"145ff0f6e90930a9","type":"link out","z":"87bab898757000a2","g":"5d46755c395cc634","name":"FlowerCoolerOFF","mode":"link","links":["54ac3c52a83ae28a"],"x":3665,"y":1400,"wires":[]},{"id":"ce08bd17130ae3da","type":"link out","z":"87bab898757000a2","g":"5d46755c395cc634","name":"link out 273","mode":"link","links":[],"x":3705,"y":1440,"wires":[]},{"id":"9930181e9729f506","type":"join","z":"87bab898757000a2","g":"1f1393384d8b6026","name":"HeaterData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":3150,"y":1640,"wires":[["1e4955e3e9e67ced"]]},{"id":"c7d049bd4613032b","type":"link in","z":"87bab898757000a2","g":"1f1393384d8b6026","name":"HeaterFlower","links":["0109c4d9ec4db16e"],"x":3085,"y":1580,"wires":[["9930181e9729f506"]]},{"id":"1e4955e3e9e67ced","type":"function","z":"87bab898757000a2","g":"1f1393384d8b6026","name":"HeaterSetup","func":"let outputs = [null, null, null];\n\nlet heaterState = null;\n\n// Schleife, um den Zustand des Heater zu finden\nfor (let i = 0; i < msg.payload.heater.length; i++) {\n    if (msg.payload.heater[i].entity_id.includes('heater')) {\n        heaterState = msg.payload.heater[i].value;\n        break;\n    }\n}\n\n// Heater starten\nif (msg.payload.heaterSet.value === \"increased\" && heaterState === \"off\") {\n    outputs[0] = { payload: \"Start Heater\", topic: \"Start\" };\n}\n\n// Heater stoppen\nif (msg.payload.heaterSet.value === \"reduced\" && heaterState === \"on\") {\n    outputs[1] = { payload: \"Stop Heater\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.heaterSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Heater unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3390,"y":1640,"wires":[["24cc65d018bd1921"],["d0cc247c71edd2bd"],["c3dcc7c02b588f54"],[]]},{"id":"24cc65d018bd1921","type":"link out","z":"87bab898757000a2","g":"1f1393384d8b6026","name":"FlowerHeaterON","mode":"link","links":["958127653d74be3f"],"x":3605,"y":1600,"wires":[]},{"id":"d0cc247c71edd2bd","type":"link out","z":"87bab898757000a2","g":"1f1393384d8b6026","name":"FlowerHeaterOFF","mode":"link","links":["4cbea83396a0f0ac"],"x":3665,"y":1620,"wires":[]},{"id":"c3dcc7c02b588f54","type":"link out","z":"87bab898757000a2","g":"1f1393384d8b6026","name":"link out 274","mode":"link","links":[],"x":3705,"y":1660,"wires":[]},{"id":"f6801c858c320ca9","type":"join","z":"87bab898757000a2","g":"6b79b465bd6d66fa","name":"DehumidifierData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":3170,"y":1200,"wires":[["b29b71f5b5f8f403"]]},{"id":"b29b71f5b5f8f403","type":"function","z":"87bab898757000a2","g":"6b79b465bd6d66fa","name":"DehumidifierSetup","func":"let outputs = [null, null, null];\n\nlet dehumidifierState = null;\n\n// Schleife, um den Zustand des Dehumidifier zu finden\nfor (let i = 0; i < msg.payload.dehumidifier.length; i++) {\n    if (msg.payload.dehumidifier[i].entity_id.includes('dehumidifier')) {\n        dehumidifierState = msg.payload.dehumidifier[i].value;\n        break;\n    }\n}\n\n// Dehumidifier starten\nif (msg.payload.dehumidifierSet.value === \"increased\" && dehumidifierState === \"off\") {\n    outputs[0] = { payload: \"Starte Dehumidifier\", topic: \"Start\" };\n}\n\n// Dehumidifier stoppen\nif (msg.payload.dehumidifierSet.value === \"reduced\" && dehumidifierState === \"on\") {\n    outputs[1] = { payload: \"Stoppe Dehumidifier\", topic: \"Stop\" };\n}\n\n// Nichts tun\nif (msg.payload.dehumidifierSet.value === \"unchanged\") {\n    outputs[2] = { payload: \"Dehumidifier unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3390,"y":1200,"wires":[["ef1e7f1156daa588"],["d0914064742b75a7"],["15a20f16124069a7"],[]]},{"id":"ef1e7f1156daa588","type":"link out","z":"87bab898757000a2","g":"6b79b465bd6d66fa","name":"FlowerDefhumidiferON","mode":"link","links":["99832bcde6aaec0d"],"x":3605,"y":1160,"wires":[]},{"id":"d0914064742b75a7","type":"link out","z":"87bab898757000a2","g":"6b79b465bd6d66fa","name":"FlowerDefhumidiferOFF","mode":"link","links":["b576fb3aef39185a"],"x":3665,"y":1180,"wires":[]},{"id":"15a20f16124069a7","type":"link out","z":"87bab898757000a2","g":"6b79b465bd6d66fa","name":"link out 275","mode":"link","links":[],"x":3705,"y":1220,"wires":[]},{"id":"42b00b5b259da75d","type":"link in","z":"87bab898757000a2","g":"09296d5bd2225e88","name":"LightsCtrlFlower","links":["17ce802afe4871e3","39099da8915e29b7","5cfa060f5b8332cf","b5790a0ccc6a2965","19a1901c9f0a5068"],"x":3035,"y":1980,"wires":[["9dbb816d3dd0bfa8"]]},{"id":"bddb396981a46ba6","type":"link in","z":"87bab898757000a2","g":"7ffeaeb39befbd13","name":"VentsCtrlFlower","links":["8bb02e174a322903","27e01016801fc664","e85f06938d85911a","464ace433af602f5","826202dc11bee1f5"],"x":3035,"y":2180,"wires":[["ba01f54da92cb494"]]},{"id":"76fcaf89b2120d63","type":"link in","z":"87bab898757000a2","g":"6b79b465bd6d66fa","name":"DehumidifierFlower","links":["0d648d1a287b160d"],"x":3105,"y":1140,"wires":[["f6801c858c320ca9"]]},{"id":"b99a15275082032e","type":"link in","z":"87bab898757000a2","g":"e571ea1d17733f37","name":"HumidifierFlower","links":["79bde8bec83cb56a"],"x":3115,"y":960,"wires":[["f902a5ba1e7c93b5"]]},{"id":"033d8f63407adc30","type":"link in","z":"87bab898757000a2","g":"9b20a372abab7583","name":"ExhaustFlower","links":["9d125ce221658824"],"x":3365,"y":720,"wires":[["f0b5ee67a8063949"]]},{"id":"a8f4aa363971a87e","type":"link in","z":"87bab898757000a2","g":"5d46755c395cc634","name":"CoolerCtrlFlower","links":["24030fcfc3c0c570","e1a942ad8a536ef3","90926a27b0c54411","6b7c54b84d733581","19041c3acf996191"],"x":3005,"y":1420,"wires":[["a0e539be6495156a"]]},{"id":"f8c71d23e8b2d7d4","type":"link in","z":"87bab898757000a2","g":"1f1393384d8b6026","name":"HeaterCtrlFlower","links":["fa452f0146e78478","037948bc84926efa","60320ccde9c6bb77","c8950634986ed39f","0c8fd16eaa00dc9d"],"x":3005,"y":1640,"wires":[["9930181e9729f506"]]},{"id":"85c3440005e758b3","type":"link in","z":"87bab898757000a2","g":"e571ea1d17733f37","name":"HumidifierCtrlFlower","links":["84809bfb26038acc","6b389a8ca3ee7f49","808f10a848fd1bbc","76500f9124621519","5f0a4677256d0755"],"x":3005,"y":1020,"wires":[["f902a5ba1e7c93b5"]]},{"id":"90d00cec7854934c","type":"link in","z":"87bab898757000a2","g":"9b20a372abab7583","name":"ExhaustCtrlFlower","links":["b81d8ddcfd887066","356ce5b53838cd67","7e8b342e3753e452","e3900c6fcb1518f1","9419716a0fc2ef01"],"x":3245,"y":800,"wires":[["f0b5ee67a8063949"]]},{"id":"211a33b6ee23cb2a","type":"link in","z":"87bab898757000a2","g":"6b79b465bd6d66fa","name":"DeHumidifierCtrlFlower","links":["2cab4ff46bb255d1","cee90b8566452ac8","8478947630a71dd8","10c052baa77914bd","39c090597c2e675a"],"x":3005,"y":1200,"wires":[["f6801c858c320ca9"]]},{"id":"356ce5b53838cd67","type":"link out","z":"87bab898757000a2","g":"2a37f65b72394049","name":"ExhaustCtrlFlower","mode":"link","links":["90d00cec7854934c","b9fb8641ac981f23"],"x":2855,"y":380,"wires":[]},{"id":"6b389a8ca3ee7f49","type":"link out","z":"87bab898757000a2","g":"2a37f65b72394049","name":"HumidifierCtrlFlower","mode":"link","links":["85c3440005e758b3"],"x":2855,"y":420,"wires":[]},{"id":"cee90b8566452ac8","type":"link out","z":"87bab898757000a2","g":"2a37f65b72394049","name":"DeHumidifierCtrlFlower","mode":"link","links":["211a33b6ee23cb2a"],"x":2855,"y":460,"wires":[]},{"id":"037948bc84926efa","type":"link out","z":"87bab898757000a2","g":"2a37f65b72394049","name":"HeaterCtrlFlower","mode":"link","links":["f8c71d23e8b2d7d4"],"x":2855,"y":500,"wires":[]},{"id":"e1a942ad8a536ef3","type":"link out","z":"87bab898757000a2","g":"2a37f65b72394049","name":"CoolerCtrlFlower","mode":"link","links":["a8f4aa363971a87e"],"x":2855,"y":540,"wires":[]},{"id":"39099da8915e29b7","type":"link out","z":"87bab898757000a2","g":"2a37f65b72394049","name":"LightsCtrlFlower","mode":"link","links":["42b00b5b259da75d"],"x":2855,"y":580,"wires":[]},{"id":"27e01016801fc664","type":"link out","z":"87bab898757000a2","g":"2a37f65b72394049","name":"VentsCtrlFlower","mode":"link","links":["bddb396981a46ba6"],"x":2855,"y":620,"wires":[]},{"id":"7e8b342e3753e452","type":"link out","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"ExhaustCtrlFlower","mode":"link","links":["90d00cec7854934c","b9fb8641ac981f23"],"x":2085,"y":1080,"wires":[]},{"id":"808f10a848fd1bbc","type":"link out","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"HumidifierCtrlFlower","mode":"link","links":["85c3440005e758b3"],"x":2085,"y":1120,"wires":[]},{"id":"8478947630a71dd8","type":"link out","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"DeHumidifierCtrlFlower","mode":"link","links":["211a33b6ee23cb2a"],"x":2085,"y":1160,"wires":[]},{"id":"60320ccde9c6bb77","type":"link out","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"HeaterCtrlFlower","mode":"link","links":["f8c71d23e8b2d7d4"],"x":2085,"y":1200,"wires":[]},{"id":"90926a27b0c54411","type":"link out","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"CoolerCtrlFlower","mode":"link","links":["a8f4aa363971a87e"],"x":2085,"y":1240,"wires":[]},{"id":"5cfa060f5b8332cf","type":"link out","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"LightsCtrlFlower","mode":"link","links":["42b00b5b259da75d"],"x":2085,"y":1280,"wires":[]},{"id":"e85f06938d85911a","type":"link out","z":"87bab898757000a2","g":"570df94b7b8fd3db","name":"VentsCtrlFlower","mode":"link","links":["bddb396981a46ba6"],"x":2085,"y":1320,"wires":[]},{"id":"e3900c6fcb1518f1","type":"link out","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"ExhaustCtrlFlower","mode":"link","links":["90d00cec7854934c","b9fb8641ac981f23"],"x":2085,"y":1540,"wires":[]},{"id":"76500f9124621519","type":"link out","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"HumidifierCtrlFlower","mode":"link","links":["85c3440005e758b3"],"x":2085,"y":1580,"wires":[]},{"id":"10c052baa77914bd","type":"link out","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"DeHumidifierCtrlFlower","mode":"link","links":["211a33b6ee23cb2a"],"x":2085,"y":1620,"wires":[]},{"id":"c8950634986ed39f","type":"link out","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"HeaterCtrlFlower","mode":"link","links":["f8c71d23e8b2d7d4"],"x":2085,"y":1660,"wires":[]},{"id":"6b7c54b84d733581","type":"link out","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"CoolerCtrlFlower","mode":"link","links":["a8f4aa363971a87e"],"x":2085,"y":1700,"wires":[]},{"id":"b5790a0ccc6a2965","type":"link out","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"LightsCtrlFlower","mode":"link","links":["42b00b5b259da75d"],"x":2085,"y":1740,"wires":[]},{"id":"464ace433af602f5","type":"link out","z":"87bab898757000a2","g":"6abebfeb172743b0","name":"VentsCtrlFlower","mode":"link","links":["bddb396981a46ba6"],"x":2085,"y":1780,"wires":[]},{"id":"09eb94f26d493e8b","type":"function","z":"87bab898757000a2","g":"13fe4471abdc9eb6","name":"Exhaust Setup","func":"// Hilfsfunktion zur Überprüfung, ob ein Wert numerisch ist\nconst isNumeric = (value) => {\n    return !isNaN(parseFloat(value)) && isFinite(value);\n};\n\n// Funktion zur Bestimmung des dutyCycle-Werts\nconst findDutyCycle = (exhaustArray) => {\n    if (exhaustArray.length === 0) {\n        return null; // Keine Werte zu verarbeiten, wenn das Array leer ist\n    }\n    for (let i = 0; i < exhaustArray.length; i++) {\n        if (isNumeric(exhaustArray[i].value)) {\n            return parseInt(exhaustArray[i].value, 10);\n        }\n    }\n    return null; // Falls kein numerischer Wert gefunden wurde\n};\n\nlet outputs = [null, null, null, null]; // Array für vier Ausgänge\n\n// Zustand der Abluft und Geschwindigkeit aus der Payload extrahieren\nconst exhaustSpeed = msg.payload.exhaustSet.value || 'unchanged'; // Anpassung hier: falls kein Wert vorhanden ist, setze auf 'unchanged'\nlet exhaustState = 'off'; // Standardwert setzen, falls kein Zustand gefunden wird\nif (msg.payload.Exhaust && msg.payload.Exhaust.length > 0) {\n    const exhaustSwitch = msg.payload.Exhaust.find(e => e.entity_id && e.entity_id.toLowerCase().includes(\"switch\"));\n    if (exhaustSwitch && exhaustSwitch.value) {\n        exhaustState = exhaustSwitch.value;\n    }\n}\n\nconst dutyCycle = findDutyCycle(msg.payload.Exhaust) || 10; // Anpassung hier: falls kein Wert vorhanden ist, setze auf 10\n\nlet newDutyCycle = dutyCycle;\n\n// Berechnung des neuen Duty Cycle basierend auf festen Schritten\nif (exhaustSpeed === 'increased') {\n    newDutyCycle = dutyCycle + 5;\n} else if (exhaustSpeed === 'reduced') {\n    newDutyCycle = dutyCycle - 5;\n}\n\n// Stellen Sie sicher, dass der neue Duty Cycle innerhalb der Grenzen liegt\nnewDutyCycle = Math.min(95, Math.max(10, newDutyCycle));\n\n// Abluft starten auf dem ersten Ausgang, wenn sie aus ist und erhöht werden muss\nif (exhaustSpeed === \"increased\" && exhaustState === \"off\") {\n    outputs[0] = { payload: \"Starte Abluft\", topic: \"Start\" };\n    return outputs;\n}\n\n// Abluft-Geschwindigkeit erhöhen, wenn sie bereits eingeschaltet ist\nif (exhaustSpeed === \"increased\" && exhaustState === \"on\") {\n    outputs[2] = { payload: newDutyCycle.toString(), topic: \"Increase\" };\n    return outputs;\n}\n\n// Abluft stoppen auf dem zweiten Ausgang, wenn die Geschwindigkeit reduziert wird und der Duty Cycle sehr niedrig ist\nif (exhaustSpeed === \"reduced\" && exhaustState === \"on\" && newDutyCycle <= 10) {\n    outputs[1] = { payload: \"Stoppe Abluft\", topic: \"Stop\" };\n    return outputs;\n} else if (exhaustSpeed === \"reduced\" && exhaustState === \"on\") {\n    outputs[2] = { payload: newDutyCycle.toString(), topic: \"Decrease\" };\n    return outputs;\n}\n\n// Warnung ausgeben, wenn versucht wird, die Abluftgeschwindigkeit zu reduzieren, obwohl sie bereits aus ist\nif (exhaustSpeed === \"reduced\" && exhaustState === \"off\") {\n    outputs[1] = { payload: \"Abluft bereits gestoppt, kann nicht weiter reduziert werden\", topic: \"AlreadyStopped\" };\n    return outputs;\n}\n\n// Nichts tun, wenn keine Änderung erforderlich ist\nif (exhaustSpeed === \"unchanged\") {\n    outputs[3] = { payload: \"Abluft unverändert, keine Aktion erforderlich\", topic: \"Nothing\" };\n    return outputs;\n}\n\nreturn outputs; // Rückgabe des Ausgangsarrays\n","outputs":4,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":3620,"y":440,"wires":[["96276016bab2e1aa","62497009f7293fbd"],["96276016bab2e1aa","f13854017a1084f1"],["dd0baa65bd4228de","96276016bab2e1aa"],["96276016bab2e1aa"]]},{"id":"df48cf3d2f7eba94","type":"http request","z":"87bab898757000a2","g":"13fe4471abdc9eb6","name":"DutyPostChange","method":"POST","ret":"txt","paytoqs":"ignore","url":"http://10.1.1.235:5533/air/ctrl","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[{"keyType":"other","keyValue":"Content-Type","valueType":"other","valueValue":"application/json"}],"x":4010,"y":460,"wires":[[]]},{"id":"dd0baa65bd4228de","type":"function","z":"87bab898757000a2","g":"13fe4471abdc9eb6","name":"DutyChanger","func":"\nconst NewDuty = msg.payload\n\nmsg.payload = { \"newDuty\": NewDuty}\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":3830,"y":460,"wires":[["df48cf3d2f7eba94"]]},{"id":"4e6d8c2f1c6a02f4","type":"join","z":"87bab898757000a2","g":"13fe4471abdc9eb6","name":"exhasutData","mode":"custom","build":"object","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"","count":"2","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"","reduceFixup":"","x":3420,"y":520,"wires":[["09eb94f26d493e8b","96276016bab2e1aa","46b63c5a93a0813a"]]},{"id":"c7678607425efafe","type":"link in","z":"87bab898757000a2","g":"13fe4471abdc9eb6","name":"ExhasutFlower","links":[],"x":3365,"y":440,"wires":[["4e6d8c2f1c6a02f4"]]},{"id":"62497009f7293fbd","type":"link out","z":"87bab898757000a2","g":"13fe4471abdc9eb6","name":"ExhaustVeggiON","mode":"link","links":["55acda8e6f953bc1"],"x":3785,"y":400,"wires":[]},{"id":"f13854017a1084f1","type":"link out","z":"87bab898757000a2","g":"13fe4471abdc9eb6","name":"ExhaustVeggiOFF","mode":"link","links":["23d01364d3856db1"],"x":3835,"y":420,"wires":[]},{"id":"96276016bab2e1aa","type":"debug","z":"87bab898757000a2","g":"13fe4471abdc9eb6","name":"debug 182","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":3610,"y":380,"wires":[]},{"id":"46b63c5a93a0813a","type":"debug","z":"87bab898757000a2","g":"13fe4471abdc9eb6","name":"debug 214","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"false","statusVal":"","statusType":"auto","x":3620,"y":520,"wires":[]},{"id":"5369d1e3838faa76","type":"comment","z":"87bab898757000a2","g":"13fe4471abdc9eb6","name":"Steped Increase Disabled BY default ","info":"\nSteps by 5% increase on any input  - & + ","x":3180,"y":360,"wires":[]},{"id":"b9fb8641ac981f23","type":"link in","z":"87bab898757000a2","g":"13fe4471abdc9eb6","name":"ExhaustCtrlFlower","links":["b81d8ddcfd887066","356ce5b53838cd67","7e8b342e3753e452","e3900c6fcb1518f1","9419716a0fc2ef01"],"x":3275,"y":520,"wires":[["4e6d8c2f1c6a02f4"]]},{"id":"7f00e431b1de7652","type":"comment","z":"87bab898757000a2","g":"13fe4471abdc9eb6","name":"change this to the other if you want stepped","info":"","x":3170,"y":440,"wires":[]},{"id":"cb4f634c782f0c95","type":"comment","z":"87bab898757000a2","g":"9b20a372abab7583","name":"change this to the other if you want stepped","info":"","x":3150,"y":720,"wires":[]},{"id":"b86eac9a31fb568d","type":"comment","z":"87bab898757000a2","g":"9b20a372abab7583","name":"Percent Increase","info":"\nIncrease by calculated % Difference to target","x":3280,"y":660,"wires":[]},{"id":"2402aa0c07cdcf6c","type":"comment","z":"87bab898757000a2","g":"b758b53640d466a4","name":"Next work on This","info":"","x":3090,"y":1800,"wires":[]},{"id":"c06f47080f347a58","type":"debug","z":"87bab898757000a2","name":"Cooler","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":840,"wires":[]},{"id":"2ca4f310b0d6f11e","type":"debug","z":"87bab898757000a2","name":"Heater","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":450,"y":880,"wires":[]},{"id":"fc12515c1658f1b9","type":"link out","z":"87bab898757000a2","name":"CoolerVeggi","mode":"link","links":["32d42160c20106c8","49c9a1e109c2af12"],"x":635,"y":840,"wires":[]},{"id":"0109c4d9ec4db16e","type":"link out","z":"87bab898757000a2","name":"HeaterVeggi","mode":"link","links":["c7d049bd4613032b"],"x":635,"y":880,"wires":[]},{"id":"5772bf4c.b461d","type":"server","name":"OpenGrowBox","version":5,"addon":true,"rejectUnauthorizedCerts":true,"ha_boolean":"y|yes|true|on|home|open","connectionDelay":true,"cacheJson":true,"heartbeat":false,"heartbeatInterval":"30","areaSelector":"friendlyName","deviceSelector":"friendlyName","entitySelector":"friendlyName","statusSeparator":"at: ","statusYear":"hidden","statusMonth":"short","statusDay":"numeric","statusHourCycle":"h23","statusTimeFormat":"h:m","enableGlobalContextStore":true},{"id":"532f3d1e489722da","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerAVGHum","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerAVGHum"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"humidity"},{"property":"unit_of_measurement","value":"%"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"edc405a70462ce85","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerAVGTemp","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerAVGTemp"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"temperature"},{"property":"unit_of_measurement","value":"°C"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"1a9ed93138063774","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"vpdflower","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"VPD-Flower"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"pressure"},{"property":"unit_of_measurement","value":"kPa"},{"property":"state_class","value":"measurement"}],"resend":true,"debugEnabled":false},{"id":"0741c8a3236b491c","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerAVGDewPoint","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerAVGDewPoint"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"temperature"},{"property":"unit_of_measurement","value":"°C"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"4c5909d829f0f2cf","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerCO2","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerCO2"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"carbon_dioxide"},{"property":"unit_of_measurement","value":"ppm"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"ee6603a7841f90d7","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerPressure","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerPressure"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"pressure"},{"property":"unit_of_measurement","value":"kPa"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"b48068e2b6382f35","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerMoisture","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerMoisture"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"moisture"},{"property":"unit_of_measurement","value":"%"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"2150742022321ba4","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerBatterieDevices","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerBatterieDevices"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"battery"},{"property":"unit_of_measurement","value":"%"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"6938113c94cc6c5d","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerRootTemp","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerRootTemp"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"temperature"},{"property":"unit_of_measurement","value":"°C"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"2acab65eb8c7d7db","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerEC","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerEC"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":""},{"property":"unit_of_measurement","value":"µS/cm"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"6584d61dadd6110e","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FLowerLightIntense","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FLowerLightIntense"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":""},{"property":"device_class","value":"illuminance"},{"property":"unit_of_measurement","value":"lx"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"0628161aa905c63c","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerPowerConsume","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerPowerConsume"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"power"},{"property":"unit_of_measurement","value":"W"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"87469d8744ed20ba","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerExhaustState","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerExhaustState"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":""},{"property":"unit_of_measurement","value":""},{"property":"state_class","value":""}],"resend":false,"debugEnabled":false},{"id":"96027b4729ff7383","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"FlowerExhaustDutyCycle","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"FlowerExhaustDutyCycle"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":"battery"},{"property":"unit_of_measurement","value":"%"},{"property":"state_class","value":"measurement"}],"resend":false,"debugEnabled":false},{"id":"10a55acc5911459b","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"DLI","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"DLI"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":""},{"property":"unit_of_measurement","value":"mol/m²/d"},{"property":"state_class","value":""}],"resend":false,"debugEnabled":false},{"id":"c58623d735fb8295","type":"ha-entity-config","server":"5772bf4c.b461d","deviceConfig":"","name":"PPFD","version":"6","entityType":"sensor","haConfig":[{"property":"name","value":"PPFD"},{"property":"icon","value":""},{"property":"entity_picture","value":""},{"property":"entity_category","value":"diagnostic"},{"property":"device_class","value":""},{"property":"unit_of_measurement","value":"µmol/m²s"},{"property":"state_class","value":""}],"resend":false,"debugEnabled":false}]